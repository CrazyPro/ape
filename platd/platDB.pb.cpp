// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "platDB.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace {

const ::google::protobuf::Descriptor* DB_PlatGiftFrdInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_PlatGiftFrdInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_PlatGiftGainRecord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_PlatGiftGainRecord_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_PlatGift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_PlatGift_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_PlatRegion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_PlatRegion_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_WebGiftFlag_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_WebGiftFlag_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_TotalLimitWebGift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_TotalLimitWebGift_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_InviteFriends_Record_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_InviteFriends_Record_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_InviteFriends_Unit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_InviteFriends_Unit_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_InviteFriends_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_InviteFriends_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_PTXMissionData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_PTXMissionData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_PlatCrossPromotionData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_PlatCrossPromotionData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_PlatCrossPromotion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_PlatCrossPromotion_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_Plat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_Plat_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_DailyYellowRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_DailyYellowRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_InviteFriendGift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_InviteFriendGift_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_InviteGiftMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_InviteGiftMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_InviteFriendMsgByLogon_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_InviteFriendMsgByLogon_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_InvitedFriendLvMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_InvitedFriendLvMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* DB_TaskMark_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DB_TaskMark_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_platDB_2eproto() {
  protobuf_AddDesc_platDB_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "platDB.proto");
  GOOGLE_CHECK(file != NULL);
  DB_PlatGiftFrdInfo_descriptor_ = file->message_type(0);
  static const int DB_PlatGiftFrdInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGiftFrdInfo, friendid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGiftFrdInfo, frdopenid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGiftFrdInfo, messageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGiftFrdInfo, giftid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGiftFrdInfo, gettime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGiftFrdInfo, gifttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGiftFrdInfo, frdname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGiftFrdInfo, frdurl_),
  };
  DB_PlatGiftFrdInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_PlatGiftFrdInfo_descriptor_,
      DB_PlatGiftFrdInfo::default_instance_,
      DB_PlatGiftFrdInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGiftFrdInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGiftFrdInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_PlatGiftFrdInfo));
  DB_PlatGiftGainRecord_descriptor_ = file->message_type(1);
  static const int DB_PlatGiftGainRecord_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGiftGainRecord, ngiftid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGiftGainRecord, ngiftgain_),
  };
  DB_PlatGiftGainRecord_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_PlatGiftGainRecord_descriptor_,
      DB_PlatGiftGainRecord::default_instance_,
      DB_PlatGiftGainRecord_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGiftGainRecord, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGiftGainRecord, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_PlatGiftGainRecord));
  DB_PlatGift_descriptor_ = file->message_type(2);
  static const int DB_PlatGift_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGift, daysendfrdidlst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGift, dayaskfrdidlst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGift, daygetgift2bagcnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGift, dayaskgift2bagcnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGift, daygetgiftcnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGift, dayresendgiftcnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGift, getgiftinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGift, finishgiftinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGift, msgidx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGift, lastlogintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGift, daysendgiftcnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGift, daygaingiftrecord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGift, bsendgiftgain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGift, baskgiftgain_),
  };
  DB_PlatGift_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_PlatGift_descriptor_,
      DB_PlatGift::default_instance_,
      DB_PlatGift_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGift, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatGift, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_PlatGift));
  DB_PlatRegion_descriptor_ = file->message_type(3);
  static const int DB_PlatRegion_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatRegion, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatRegion, srvregion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatRegion, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatRegion, plattype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatRegion, finishcapturetm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatRegion, lastlogontime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatRegion, viplevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatRegion, viptype_),
  };
  DB_PlatRegion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_PlatRegion_descriptor_,
      DB_PlatRegion::default_instance_,
      DB_PlatRegion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatRegion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatRegion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_PlatRegion));
  DB_WebGiftFlag_descriptor_ = file->message_type(4);
  static const int DB_WebGiftFlag_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_WebGiftFlag, lastcacutime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_WebGiftFlag, webgiftlst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_WebGiftFlag, webonceflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_WebGiftFlag, webgiftmonthlst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_WebGiftFlag, webtotallimitlst_),
  };
  DB_WebGiftFlag_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_WebGiftFlag_descriptor_,
      DB_WebGiftFlag::default_instance_,
      DB_WebGiftFlag_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_WebGiftFlag, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_WebGiftFlag, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_WebGiftFlag));
  DB_TotalLimitWebGift_descriptor_ = file->message_type(5);
  static const int DB_TotalLimitWebGift_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_TotalLimitWebGift, tactendtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_TotalLimitWebGift, ngiftid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_TotalLimitWebGift, ngiftcnt_),
  };
  DB_TotalLimitWebGift_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_TotalLimitWebGift_descriptor_,
      DB_TotalLimitWebGift::default_instance_,
      DB_TotalLimitWebGift_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_TotalLimitWebGift, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_TotalLimitWebGift, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_TotalLimitWebGift));
  DB_InviteFriends_Record_descriptor_ = file->message_type(6);
  static const int DB_InviteFriends_Record_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends_Record, ntype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends_Record, nlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends_Record, ncredit_),
  };
  DB_InviteFriends_Record_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_InviteFriends_Record_descriptor_,
      DB_InviteFriends_Record::default_instance_,
      DB_InviteFriends_Record_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends_Record, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends_Record, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_InviteFriends_Record));
  DB_InviteFriends_Unit_descriptor_ = file->message_type(7);
  static const int DB_InviteFriends_Unit_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends_Unit, friendid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends_Unit, friendname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends_Unit, friendlvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends_Unit, friendcredit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends_Unit, invitegain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends_Unit, lvlgain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends_Unit, record_),
  };
  DB_InviteFriends_Unit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_InviteFriends_Unit_descriptor_,
      DB_InviteFriends_Unit::default_instance_,
      DB_InviteFriends_Unit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends_Unit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends_Unit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_InviteFriends_Unit));
  DB_InviteFriends_descriptor_ = file->message_type(8);
  static const int DB_InviteFriends_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends, invitefriendid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends, invitegaincredit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends, lvlgaincredit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends, topupgaincredit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends, gaincreditall_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends, lastgaintimemark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends, invitefriends_),
  };
  DB_InviteFriends_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_InviteFriends_descriptor_,
      DB_InviteFriends::default_instance_,
      DB_InviteFriends_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriends, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_InviteFriends));
  DB_PTXMissionData_descriptor_ = file->message_type(9);
  static const int DB_PTXMissionData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PTXMissionData, missionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PTXMissionData, missionstate_),
  };
  DB_PTXMissionData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_PTXMissionData_descriptor_,
      DB_PTXMissionData::default_instance_,
      DB_PTXMissionData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PTXMissionData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PTXMissionData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_PTXMissionData));
  DB_PlatCrossPromotionData_descriptor_ = file->message_type(10);
  static const int DB_PlatCrossPromotionData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatCrossPromotionData, chanle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatCrossPromotionData, date_),
  };
  DB_PlatCrossPromotionData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_PlatCrossPromotionData_descriptor_,
      DB_PlatCrossPromotionData::default_instance_,
      DB_PlatCrossPromotionData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatCrossPromotionData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatCrossPromotionData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_PlatCrossPromotionData));
  DB_PlatCrossPromotion_descriptor_ = file->message_type(11);
  static const int DB_PlatCrossPromotion_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatCrossPromotion, data_),
  };
  DB_PlatCrossPromotion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_PlatCrossPromotion_descriptor_,
      DB_PlatCrossPromotion::default_instance_,
      DB_PlatCrossPromotion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatCrossPromotion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_PlatCrossPromotion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_PlatCrossPromotion));
  DB_Plat_descriptor_ = file->message_type(12);
  static const int DB_Plat_offsets_[49] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, platform_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, profile_link_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, gender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, yellowdmdlvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, isyellowdmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, isyellowdmdyear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, qqdmdlvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, isqqdmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, isqqdmdyear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, platregion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, lastregion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, giftinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, webflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, getcbgifttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, invitefrdcnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, invitefriends_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, yellowdmdtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, txmissiondata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, dailyyellowres_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, invitefrdcntday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, gaininvitefrdday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, lastlogintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, cancallback_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, invitefriendgift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, invitefriendmsgbylogon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, ltrevision_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, ltsaverevision_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, ltmemrevision_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, invitefrdcntdaybylimit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, ishighyellowdmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, daygetcostgift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, callbackfrduid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, dayinvitefrdbackcnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, daygetcoupon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, taskmark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, promotion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, invitegiftrecord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, idenflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, qqtenyearbackflowflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, nadultflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, qhalldmdlvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, isqhalldmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, isqhalldmdyear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, ishighqhalldmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, ishighqhalldmdyear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, bluedmdtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, siteid_),
  };
  DB_Plat_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_Plat_descriptor_,
      DB_Plat::default_instance_,
      DB_Plat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_Plat, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_Plat));
  DB_DailyYellowRes_descriptor_ = file->message_type(13);
  static const int DB_DailyYellowRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_DailyYellowRes, lastgettime_),
  };
  DB_DailyYellowRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_DailyYellowRes_descriptor_,
      DB_DailyYellowRes::default_instance_,
      DB_DailyYellowRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_DailyYellowRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_DailyYellowRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_DailyYellowRes));
  DB_InviteFriendGift_descriptor_ = file->message_type(14);
  static const int DB_InviteFriendGift_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriendGift, invitefrdcntfornew_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriendGift, invitegiftmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriendGift, invitedfriendlvmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriendGift, ungetcoupon_),
  };
  DB_InviteFriendGift_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_InviteFriendGift_descriptor_,
      DB_InviteFriendGift::default_instance_,
      DB_InviteFriendGift_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriendGift, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriendGift, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_InviteFriendGift));
  DB_InviteGiftMsg_descriptor_ = file->message_type(15);
  static const int DB_InviteGiftMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteGiftMsg, invitefrdcntday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteGiftMsg, hasgettimes_),
  };
  DB_InviteGiftMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_InviteGiftMsg_descriptor_,
      DB_InviteGiftMsg::default_instance_,
      DB_InviteGiftMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteGiftMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteGiftMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_InviteGiftMsg));
  DB_InviteFriendMsgByLogon_descriptor_ = file->message_type(16);
  static const int DB_InviteFriendMsgByLogon_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriendMsgByLogon, platid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriendMsgByLogon, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriendMsgByLogon, url_),
  };
  DB_InviteFriendMsgByLogon_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_InviteFriendMsgByLogon_descriptor_,
      DB_InviteFriendMsgByLogon::default_instance_,
      DB_InviteFriendMsgByLogon_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriendMsgByLogon, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InviteFriendMsgByLogon, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_InviteFriendMsgByLogon));
  DB_InvitedFriendLvMsg_descriptor_ = file->message_type(17);
  static const int DB_InvitedFriendLvMsg_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InvitedFriendLvMsg, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InvitedFriendLvMsg, uids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InvitedFriendLvMsg, openids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InvitedFriendLvMsg, urls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InvitedFriendLvMsg, names_),
  };
  DB_InvitedFriendLvMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_InvitedFriendLvMsg_descriptor_,
      DB_InvitedFriendLvMsg::default_instance_,
      DB_InvitedFriendLvMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InvitedFriendLvMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_InvitedFriendLvMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_InvitedFriendLvMsg));
  DB_TaskMark_descriptor_ = file->message_type(18);
  static const int DB_TaskMark_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_TaskMark, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_TaskMark, step_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_TaskMark, getstep_),
  };
  DB_TaskMark_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DB_TaskMark_descriptor_,
      DB_TaskMark::default_instance_,
      DB_TaskMark_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_TaskMark, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DB_TaskMark, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DB_TaskMark));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_platDB_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_PlatGiftFrdInfo_descriptor_, &DB_PlatGiftFrdInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_PlatGiftGainRecord_descriptor_, &DB_PlatGiftGainRecord::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_PlatGift_descriptor_, &DB_PlatGift::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_PlatRegion_descriptor_, &DB_PlatRegion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_WebGiftFlag_descriptor_, &DB_WebGiftFlag::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_TotalLimitWebGift_descriptor_, &DB_TotalLimitWebGift::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_InviteFriends_Record_descriptor_, &DB_InviteFriends_Record::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_InviteFriends_Unit_descriptor_, &DB_InviteFriends_Unit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_InviteFriends_descriptor_, &DB_InviteFriends::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_PTXMissionData_descriptor_, &DB_PTXMissionData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_PlatCrossPromotionData_descriptor_, &DB_PlatCrossPromotionData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_PlatCrossPromotion_descriptor_, &DB_PlatCrossPromotion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_Plat_descriptor_, &DB_Plat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_DailyYellowRes_descriptor_, &DB_DailyYellowRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_InviteFriendGift_descriptor_, &DB_InviteFriendGift::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_InviteGiftMsg_descriptor_, &DB_InviteGiftMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_InviteFriendMsgByLogon_descriptor_, &DB_InviteFriendMsgByLogon::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_InvitedFriendLvMsg_descriptor_, &DB_InvitedFriendLvMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DB_TaskMark_descriptor_, &DB_TaskMark::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_platDB_2eproto() {
  delete DB_PlatGiftFrdInfo::default_instance_;
  delete DB_PlatGiftFrdInfo_reflection_;
  delete DB_PlatGiftGainRecord::default_instance_;
  delete DB_PlatGiftGainRecord_reflection_;
  delete DB_PlatGift::default_instance_;
  delete DB_PlatGift_reflection_;
  delete DB_PlatRegion::default_instance_;
  delete DB_PlatRegion_reflection_;
  delete DB_WebGiftFlag::default_instance_;
  delete DB_WebGiftFlag_reflection_;
  delete DB_TotalLimitWebGift::default_instance_;
  delete DB_TotalLimitWebGift_reflection_;
  delete DB_InviteFriends_Record::default_instance_;
  delete DB_InviteFriends_Record_reflection_;
  delete DB_InviteFriends_Unit::default_instance_;
  delete DB_InviteFriends_Unit_reflection_;
  delete DB_InviteFriends::default_instance_;
  delete DB_InviteFriends_reflection_;
  delete DB_PTXMissionData::default_instance_;
  delete DB_PTXMissionData_reflection_;
  delete DB_PlatCrossPromotionData::default_instance_;
  delete DB_PlatCrossPromotionData_reflection_;
  delete DB_PlatCrossPromotion::default_instance_;
  delete DB_PlatCrossPromotion_reflection_;
  delete DB_Plat::default_instance_;
  delete DB_Plat_reflection_;
  delete DB_DailyYellowRes::default_instance_;
  delete DB_DailyYellowRes_reflection_;
  delete DB_InviteFriendGift::default_instance_;
  delete DB_InviteFriendGift_reflection_;
  delete DB_InviteGiftMsg::default_instance_;
  delete DB_InviteGiftMsg_reflection_;
  delete DB_InviteFriendMsgByLogon::default_instance_;
  delete DB_InviteFriendMsgByLogon_reflection_;
  delete DB_InvitedFriendLvMsg::default_instance_;
  delete DB_InvitedFriendLvMsg_reflection_;
  delete DB_TaskMark::default_instance_;
  delete DB_TaskMark_reflection_;
}

void protobuf_AddDesc_platDB_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014platDB.proto\"\251\001\n\022DB_PlatGiftFrdInfo\022\020\n"
    "\010friendID\030\001 \001(\003\022\021\n\tfrdOpenID\030\002 \001(\t\022\021\n\tme"
    "ssageID\030\003 \001(\005\022\021\n\006giftID\030\004 \001(\005:\0010\022\022\n\007getT"
    "ime\030\005 \001(\003:\0010\022\023\n\010giftType\030\006 \001(\005:\0010\022\017\n\007frd"
    "Name\030\007 \001(\t\022\016\n\006frdUrl\030\010 \001(\t\"A\n\025DB_PlatGif"
    "tGainRecord\022\022\n\007ngiftID\030\001 \001(\005:\0010\022\024\n\tngift"
    "Gain\030\002 \001(\005:\0010\"\241\003\n\013DB_PlatGift\022\027\n\017daySend"
    "FrdIDLst\030\001 \003(\t\022\026\n\016dayAskFrdIDLst\030\002 \003(\t\022\031"
    "\n\021dayGetGift2BagCnt\030\003 \001(\005\022\031\n\021dayAskGift2"
    "BagCnt\030\004 \001(\005\022\025\n\rdayGetGiftCnt\030\005 \001(\005\022\030\n\020d"
    "ayResendGiftCnt\030\006 \001(\005\022(\n\013getGiftInfo\030\007 \003"
    "(\0132\023.DB_PlatGiftFrdInfo\022+\n\016finishGiftInf"
    "o\030\010 \003(\0132\023.DB_PlatGiftFrdInfo\022\021\n\006msgIdx\030\t"
    " \001(\005:\0010\022\030\n\rlastLoginTime\030\n \001(\003:\0010\022\026\n\016day"
    "SendGiftCnt\030\013 \001(\005\0221\n\021dayGainGiftRecord\030\014"
    " \003(\0132\026.DB_PlatGiftGainRecord\022\025\n\rbSendGif"
    "tGain\030\r \001(\010\022\024\n\014baskGiftGain\030\016 \001(\010\"\270\001\n\rDB"
    "_PlatRegion\022\013\n\003uid\030\001 \002(\003\022\024\n\tsrvRegion\030\002 "
    "\001(\005:\0010\022\020\n\005level\030\003 \001(\005:\0010\022\023\n\010platType\030\004 \001"
    "(\005:\0010\022\032\n\017finishCaptureTm\030\005 \001(\005:\0010\022\030\n\rlas"
    "tLogonTime\030\006 \001(\005:\0010\022\023\n\010viplevel\030\007 \001(\005:\0010"
    "\022\022\n\007viptype\030\010 \001(\005:\0010\"\237\001\n\016DB_WebGiftFlag\022"
    "\027\n\014lastCacuTime\030\001 \001(\003:\0010\022\022\n\nwebGiftLst\030\002"
    " \003(\005\022\026\n\013webOnceFlag\030\003 \001(\003:\0010\022\027\n\017webGiftM"
    "onthLst\030\004 \003(\005\022/\n\020webTotalLimitLst\030\005 \003(\0132"
    "\025.DB_TotalLimitWebGift\"W\n\024DB_TotalLimitW"
    "ebGift\022\026\n\013tActEndTime\030\001 \001(\003:\0010\022\022\n\007nGiftI"
    "D\030\002 \001(\005:\0010\022\023\n\010nGiftCnt\030\003 \001(\005:\0010\"I\n\027DB_In"
    "viteFriends_Record\022\r\n\005ntype\030\001 \001(\005\022\016\n\006nle"
    "vel\030\002 \001(\005\022\017\n\007ncredit\030\003 \001(\005\"\305\001\n\025DB_Invite"
    "Friends_Unit\022\023\n\010friendid\030\001 \001(\003:\0010\022\022\n\nfri"
    "endName\030\002 \003(\t\022\024\n\tfriendlvl\030\003 \001(\005:\0010\022\027\n\014f"
    "riendcredit\030\004 \001(\005:\0010\022\031\n\ninvitegain\030\005 \001(\010"
    ":\005false\022\017\n\007lvlgain\030\006 \001(\005\022(\n\006record\030\007 \003(\013"
    "2\030.DB_InviteFriends_Record\"\345\001\n\020DB_Invite"
    "Friends\022\030\n\016invitefriendid\030\001 \001(\t:\000\022\033\n\020inv"
    "itegaincredit\030\002 \001(\005:\0010\022\030\n\rlvlgaincredit\030"
    "\003 \001(\005:\0010\022\032\n\017topupgaincredit\030\004 \001(\005:\0010\022\030\n\r"
    "gaincreditall\030\005 \001(\005:\0010\022\033\n\020lastgaintimema"
    "rk\030\006 \001(\003:\0010\022-\n\rinvitefriends\030\007 \003(\0132\026.DB_"
    "InviteFriends_Unit\"B\n\021DB_PTXMissionData\022"
    "\023\n\tmissionid\030\001 \001(\t:\000\022\030\n\014missionstate\030\002 \001"
    "(\005:\002-1\"9\n\031DB_PlatCrossPromotionData\022\016\n\006c"
    "hanle\030\001 \001(\t\022\014\n\004date\030\002 \001(\t\"A\n\025DB_PlatCros"
    "sPromotion\022(\n\004data\030\001 \003(\0132\032.DB_PlatCrossP"
    "romotionData\"\226\013\n\007DB_Plat\022\025\n\013platform_id\030"
    "\001 \002(\t:\000\022\014\n\004name\030\002 \003(\t\022\024\n\014profile_link\030\003 "
    "\003(\t\022\016\n\006gender\030\004 \001(\005\022\027\n\014yellowDmdLvl\030\005 \001("
    "\005:\0010\022\032\n\013isYellowDmd\030\006 \001(\010:\005false\022\036\n\017isYe"
    "llowDmdYear\030\007 \001(\010:\005false\022\023\n\010QQDmdLvl\030\010 \001"
    "(\005:\0010\022\026\n\007isQQDmd\030\t \001(\010:\005false\022\032\n\013isQQDmd"
    "Year\030\n \001(\010:\005false\022\"\n\nplatRegion\030\013 \003(\0132\016."
    "DB_PlatRegion\022\026\n\nlastRegion\030\014 \001(\005:\002-1\022\036\n"
    "\010giftInfo\030\r \001(\0132\014.DB_PlatGift\022 \n\007webFlag"
    "\030\016 \001(\0132\017.DB_WebGiftFlag\022\030\n\rgetCBGiftTime"
    "\030\017 \001(\003:\0010\022\027\n\014inviteFrdCnt\030\020 \001(\005:\0010\022(\n\rin"
    "vitefriends\030\021 \001(\0132\021.DB_InviteFriends\022\030\n\r"
    "yellowDmdtime\030\022 \001(\r:\0010\022)\n\rtxmissiondata\030"
    "\023 \003(\0132\022.DB_PTXMissionData\022*\n\016dailyyellow"
    "res\030\024 \001(\0132\022.DB_DailyYellowRes\022\032\n\017inviteF"
    "rdCntDay\030\025 \001(\005:\0010\022\037\n\020gaininviteFrdDay\030\026 "
    "\001(\010:\005false\022\030\n\rlastLoginTime\030\027 \001(\003:\0010\022\031\n\013"
    "cancallback\030\030 \001(\010:\004true\022.\n\020inviteFriendG"
    "ift\030\031 \001(\0132\024.DB_InviteFriendGift\022:\n\026invit"
    "eFriendMsgByLogon\030\032 \003(\0132\032.DB_InviteFrien"
    "dMsgByLogon\022\025\n\nltRevision\030\033 \001(\003:\0010\022\031\n\016lt"
    "SaveRevision\030\034 \001(\003:\0010\022\030\n\rltMemRevision\030\035"
    " \001(\003:\0010\022\036\n\026inviteFrdCntDayByLimit\030\036 \001(\005\022"
    "\036\n\017isHighYellowDmd\030\037 \001(\010:\005false\022\026\n\016dayGe"
    "tCostGift\030  \003(\005\022\026\n\016callBackFrdUid\030! \001(\003\022"
    "\036\n\023dayInviteFrdBackCnt\030\" \001(\005:\0010\022\027\n\014dayGe"
    "tCoupon\030# \001(\005:\0010\022\036\n\010taskmark\030$ \001(\0132\014.DB_"
    "TaskMark\022\021\n\007channel\030% \001(\t:\000\022)\n\tpromotion"
    "\030& \001(\0132\026.DB_PlatCrossPromotion\022\030\n\020invite"
    "GiftRecord\030\' \003(\005\022\023\n\010idenflag\030( \001(\005:\0010\022\035\n"
    "\025qqTenyearBackFlowFlag\030) \001(\005\022\027\n\nnAdultFl"
    "ag\030* \001(\005:\003100\022\026\n\013QHallDmdLvl\030+ \001(\005:\0010\022\031\n"
    "\nIsQHallDmd\030, \001(\010:\005false\022\035\n\016IsQHallDmdYe"
    "ar\030- \001(\010:\005false\022\035\n\016IsHighQHallDmd\030. \001(\010:"
    "\005false\022!\n\022IsHighQHallDmdYear\030/ \001(\010:\005fals"
    "e\022\026\n\013bluedmdtime\0300 \001(\r:\0010\022\022\n\006siteid\0301 \001("
    "\005:\002-1\"(\n\021DB_DailyYellowRes\022\023\n\013lastGetTim"
    "e\030\001 \001(\003\"\252\001\n\023DB_InviteFriendGift\022\035\n\022invit"
    "eFrdCntForNew\030\001 \001(\005:\0010\022(\n\rinvitegiftmsg\030"
    "\002 \003(\0132\021.DB_InviteGiftMsg\0222\n\022invitedfrien"
    "dlvmsg\030\003 \003(\0132\026.DB_InvitedFriendLvMsg\022\026\n\013"
    "unGetCoupon\030\004 \001(\005:\0010\"F\n\020DB_InviteGiftMsg"
    "\022\032\n\017inviteFrdCntDay\030\001 \001(\005:\0010\022\026\n\013hasGetTi"
    "mes\030\002 \001(\005:\0010\"F\n\031DB_InviteFriendMsgByLogo"
    "n\022\016\n\006platid\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\013\n\003url\030\003"
    " \001(\t\"b\n\025DB_InvitedFriendLvMsg\022\r\n\002id\030\001 \001("
    "\005:\0010\022\014\n\004uids\030\002 \003(\003\022\017\n\007openids\030\003 \003(\t\022\014\n\004u"
    "rls\030\004 \003(\t\022\r\n\005names\030\005 \003(\t\"8\n\013DB_TaskMark\022"
    "\n\n\002id\030\001 \001(\t\022\014\n\004step\030\002 \001(\005\022\017\n\007getStep\030\003 \003"
    "(\005", 3762);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "platDB.proto", &protobuf_RegisterTypes);
  DB_PlatGiftFrdInfo::default_instance_ = new DB_PlatGiftFrdInfo();
  DB_PlatGiftGainRecord::default_instance_ = new DB_PlatGiftGainRecord();
  DB_PlatGift::default_instance_ = new DB_PlatGift();
  DB_PlatRegion::default_instance_ = new DB_PlatRegion();
  DB_WebGiftFlag::default_instance_ = new DB_WebGiftFlag();
  DB_TotalLimitWebGift::default_instance_ = new DB_TotalLimitWebGift();
  DB_InviteFriends_Record::default_instance_ = new DB_InviteFriends_Record();
  DB_InviteFriends_Unit::default_instance_ = new DB_InviteFriends_Unit();
  DB_InviteFriends::default_instance_ = new DB_InviteFriends();
  DB_PTXMissionData::default_instance_ = new DB_PTXMissionData();
  DB_PlatCrossPromotionData::default_instance_ = new DB_PlatCrossPromotionData();
  DB_PlatCrossPromotion::default_instance_ = new DB_PlatCrossPromotion();
  DB_Plat::default_instance_ = new DB_Plat();
  DB_DailyYellowRes::default_instance_ = new DB_DailyYellowRes();
  DB_InviteFriendGift::default_instance_ = new DB_InviteFriendGift();
  DB_InviteGiftMsg::default_instance_ = new DB_InviteGiftMsg();
  DB_InviteFriendMsgByLogon::default_instance_ = new DB_InviteFriendMsgByLogon();
  DB_InvitedFriendLvMsg::default_instance_ = new DB_InvitedFriendLvMsg();
  DB_TaskMark::default_instance_ = new DB_TaskMark();
  DB_PlatGiftFrdInfo::default_instance_->InitAsDefaultInstance();
  DB_PlatGiftGainRecord::default_instance_->InitAsDefaultInstance();
  DB_PlatGift::default_instance_->InitAsDefaultInstance();
  DB_PlatRegion::default_instance_->InitAsDefaultInstance();
  DB_WebGiftFlag::default_instance_->InitAsDefaultInstance();
  DB_TotalLimitWebGift::default_instance_->InitAsDefaultInstance();
  DB_InviteFriends_Record::default_instance_->InitAsDefaultInstance();
  DB_InviteFriends_Unit::default_instance_->InitAsDefaultInstance();
  DB_InviteFriends::default_instance_->InitAsDefaultInstance();
  DB_PTXMissionData::default_instance_->InitAsDefaultInstance();
  DB_PlatCrossPromotionData::default_instance_->InitAsDefaultInstance();
  DB_PlatCrossPromotion::default_instance_->InitAsDefaultInstance();
  DB_Plat::default_instance_->InitAsDefaultInstance();
  DB_DailyYellowRes::default_instance_->InitAsDefaultInstance();
  DB_InviteFriendGift::default_instance_->InitAsDefaultInstance();
  DB_InviteGiftMsg::default_instance_->InitAsDefaultInstance();
  DB_InviteFriendMsgByLogon::default_instance_->InitAsDefaultInstance();
  DB_InvitedFriendLvMsg::default_instance_->InitAsDefaultInstance();
  DB_TaskMark::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_platDB_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_platDB_2eproto {
  StaticDescriptorInitializer_platDB_2eproto() {
    protobuf_AddDesc_platDB_2eproto();
  }
} static_descriptor_initializer_platDB_2eproto_;


// ===================================================================

const ::std::string DB_PlatGiftFrdInfo::_default_frdopenid_;
const ::std::string DB_PlatGiftFrdInfo::_default_frdname_;
const ::std::string DB_PlatGiftFrdInfo::_default_frdurl_;
#ifndef _MSC_VER
const int DB_PlatGiftFrdInfo::kFriendIDFieldNumber;
const int DB_PlatGiftFrdInfo::kFrdOpenIDFieldNumber;
const int DB_PlatGiftFrdInfo::kMessageIDFieldNumber;
const int DB_PlatGiftFrdInfo::kGiftIDFieldNumber;
const int DB_PlatGiftFrdInfo::kGetTimeFieldNumber;
const int DB_PlatGiftFrdInfo::kGiftTypeFieldNumber;
const int DB_PlatGiftFrdInfo::kFrdNameFieldNumber;
const int DB_PlatGiftFrdInfo::kFrdUrlFieldNumber;
#endif  // !_MSC_VER

DB_PlatGiftFrdInfo::DB_PlatGiftFrdInfo() {
  SharedCtor();
}

void DB_PlatGiftFrdInfo::InitAsDefaultInstance() {
}

DB_PlatGiftFrdInfo::DB_PlatGiftFrdInfo(const DB_PlatGiftFrdInfo& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_PlatGiftFrdInfo::SharedCtor() {
  _cached_size_ = 0;
  friendid_ = GOOGLE_LONGLONG(0);
  frdopenid_ = const_cast< ::std::string*>(&_default_frdopenid_);
  messageid_ = 0;
  giftid_ = 0;
  gettime_ = GOOGLE_LONGLONG(0);
  gifttype_ = 0;
  frdname_ = const_cast< ::std::string*>(&_default_frdname_);
  frdurl_ = const_cast< ::std::string*>(&_default_frdurl_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_PlatGiftFrdInfo::~DB_PlatGiftFrdInfo() {
  SharedDtor();
}

void DB_PlatGiftFrdInfo::SharedDtor() {
  if (frdopenid_ != &_default_frdopenid_) {
    delete frdopenid_;
  }
  if (frdname_ != &_default_frdname_) {
    delete frdname_;
  }
  if (frdurl_ != &_default_frdurl_) {
    delete frdurl_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_PlatGiftFrdInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_PlatGiftFrdInfo_descriptor_;
}

const DB_PlatGiftFrdInfo& DB_PlatGiftFrdInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_PlatGiftFrdInfo* DB_PlatGiftFrdInfo::default_instance_ = NULL;

DB_PlatGiftFrdInfo* DB_PlatGiftFrdInfo::New() const {
  return new DB_PlatGiftFrdInfo;
}

void DB_PlatGiftFrdInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    friendid_ = GOOGLE_LONGLONG(0);
    if (_has_bit(1)) {
      if (frdopenid_ != &_default_frdopenid_) {
        frdopenid_->clear();
      }
    }
    messageid_ = 0;
    giftid_ = 0;
    gettime_ = GOOGLE_LONGLONG(0);
    gifttype_ = 0;
    if (_has_bit(6)) {
      if (frdname_ != &_default_frdname_) {
        frdname_->clear();
      }
    }
    if (_has_bit(7)) {
      if (frdurl_ != &_default_frdurl_) {
        frdurl_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_PlatGiftFrdInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 friendID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &friendid_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_frdOpenID;
        break;
      }
      
      // optional string frdOpenID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_frdOpenID:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_frdopenid()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->frdopenid().data(), this->frdopenid().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(24)) goto parse_messageID;
        break;
      }
      
      // optional int32 messageID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_messageID:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &messageid_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_giftID;
        break;
      }
      
      // optional int32 giftID = 4 [default = 0];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_giftID:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &giftid_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_getTime;
        break;
      }
      
      // optional int64 getTime = 5 [default = 0];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_getTime:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &gettime_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_giftType;
        break;
      }
      
      // optional int32 giftType = 6 [default = 0];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_giftType:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &gifttype_));
        _set_bit(5);
        if (input->ExpectTag(58)) goto parse_frdName;
        break;
      }
      
      // optional string frdName = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_frdName:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_frdname()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->frdname().data(), this->frdname().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(66)) goto parse_frdUrl;
        break;
      }
      
      // optional string frdUrl = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_frdUrl:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_frdurl()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->frdurl().data(), this->frdurl().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_PlatGiftFrdInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_PlatGiftFrdInfo::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 friendID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->friendid(), output);
  }
  
  // optional string frdOpenID = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->frdopenid().data(), this->frdopenid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->frdopenid(), output);
  }
  
  // optional int32 messageID = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->messageid(), output);
  }
  
  // optional int32 giftID = 4 [default = 0];
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->giftid(), output);
  }
  
  // optional int64 getTime = 5 [default = 0];
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->gettime(), output);
  }
  
  // optional int32 giftType = 6 [default = 0];
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->gifttype(), output);
  }
  
  // optional string frdName = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->frdname().data(), this->frdname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->frdname(), output);
  }
  
  // optional string frdUrl = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->frdurl().data(), this->frdurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->frdurl(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_PlatGiftFrdInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 friendID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->friendid(), target);
  }
  
  // optional string frdOpenID = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->frdopenid().data(), this->frdopenid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->frdopenid(), target);
  }
  
  // optional int32 messageID = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->messageid(), target);
  }
  
  // optional int32 giftID = 4 [default = 0];
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->giftid(), target);
  }
  
  // optional int64 getTime = 5 [default = 0];
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->gettime(), target);
  }
  
  // optional int32 giftType = 6 [default = 0];
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->gifttype(), target);
  }
  
  // optional string frdName = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->frdname().data(), this->frdname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->frdname(), target);
  }
  
  // optional string frdUrl = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->frdurl().data(), this->frdurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->frdurl(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_PlatGiftFrdInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 friendID = 1;
    if (has_friendid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->friendid());
    }
    
    // optional string frdOpenID = 2;
    if (has_frdopenid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->frdopenid());
    }
    
    // optional int32 messageID = 3;
    if (has_messageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->messageid());
    }
    
    // optional int32 giftID = 4 [default = 0];
    if (has_giftid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->giftid());
    }
    
    // optional int64 getTime = 5 [default = 0];
    if (has_gettime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gettime());
    }
    
    // optional int32 giftType = 6 [default = 0];
    if (has_gifttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gifttype());
    }
    
    // optional string frdName = 7;
    if (has_frdname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->frdname());
    }
    
    // optional string frdUrl = 8;
    if (has_frdurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->frdurl());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_PlatGiftFrdInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_PlatGiftFrdInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_PlatGiftFrdInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_PlatGiftFrdInfo::MergeFrom(const DB_PlatGiftFrdInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_friendid(from.friendid());
    }
    if (from._has_bit(1)) {
      set_frdopenid(from.frdopenid());
    }
    if (from._has_bit(2)) {
      set_messageid(from.messageid());
    }
    if (from._has_bit(3)) {
      set_giftid(from.giftid());
    }
    if (from._has_bit(4)) {
      set_gettime(from.gettime());
    }
    if (from._has_bit(5)) {
      set_gifttype(from.gifttype());
    }
    if (from._has_bit(6)) {
      set_frdname(from.frdname());
    }
    if (from._has_bit(7)) {
      set_frdurl(from.frdurl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_PlatGiftFrdInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_PlatGiftFrdInfo::CopyFrom(const DB_PlatGiftFrdInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_PlatGiftFrdInfo::IsInitialized() const {
  
  return true;
}

void DB_PlatGiftFrdInfo::Swap(DB_PlatGiftFrdInfo* other) {
  if (other != this) {
    std::swap(friendid_, other->friendid_);
    std::swap(frdopenid_, other->frdopenid_);
    std::swap(messageid_, other->messageid_);
    std::swap(giftid_, other->giftid_);
    std::swap(gettime_, other->gettime_);
    std::swap(gifttype_, other->gifttype_);
    std::swap(frdname_, other->frdname_);
    std::swap(frdurl_, other->frdurl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_PlatGiftFrdInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_PlatGiftFrdInfo_descriptor_;
  metadata.reflection = DB_PlatGiftFrdInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_PlatGiftGainRecord::kNgiftIDFieldNumber;
const int DB_PlatGiftGainRecord::kNgiftGainFieldNumber;
#endif  // !_MSC_VER

DB_PlatGiftGainRecord::DB_PlatGiftGainRecord() {
  SharedCtor();
}

void DB_PlatGiftGainRecord::InitAsDefaultInstance() {
}

DB_PlatGiftGainRecord::DB_PlatGiftGainRecord(const DB_PlatGiftGainRecord& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_PlatGiftGainRecord::SharedCtor() {
  _cached_size_ = 0;
  ngiftid_ = 0;
  ngiftgain_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_PlatGiftGainRecord::~DB_PlatGiftGainRecord() {
  SharedDtor();
}

void DB_PlatGiftGainRecord::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_PlatGiftGainRecord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_PlatGiftGainRecord_descriptor_;
}

const DB_PlatGiftGainRecord& DB_PlatGiftGainRecord::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_PlatGiftGainRecord* DB_PlatGiftGainRecord::default_instance_ = NULL;

DB_PlatGiftGainRecord* DB_PlatGiftGainRecord::New() const {
  return new DB_PlatGiftGainRecord;
}

void DB_PlatGiftGainRecord::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ngiftid_ = 0;
    ngiftgain_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_PlatGiftGainRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ngiftID = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &ngiftid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_ngiftGain;
        break;
      }
      
      // optional int32 ngiftGain = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ngiftGain:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &ngiftgain_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_PlatGiftGainRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_PlatGiftGainRecord::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 ngiftID = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ngiftid(), output);
  }
  
  // optional int32 ngiftGain = 2 [default = 0];
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ngiftgain(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_PlatGiftGainRecord::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ngiftID = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ngiftid(), target);
  }
  
  // optional int32 ngiftGain = 2 [default = 0];
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ngiftgain(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_PlatGiftGainRecord::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ngiftID = 1 [default = 0];
    if (has_ngiftid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ngiftid());
    }
    
    // optional int32 ngiftGain = 2 [default = 0];
    if (has_ngiftgain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ngiftgain());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_PlatGiftGainRecord::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_PlatGiftGainRecord* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_PlatGiftGainRecord*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_PlatGiftGainRecord::MergeFrom(const DB_PlatGiftGainRecord& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_ngiftid(from.ngiftid());
    }
    if (from._has_bit(1)) {
      set_ngiftgain(from.ngiftgain());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_PlatGiftGainRecord::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_PlatGiftGainRecord::CopyFrom(const DB_PlatGiftGainRecord& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_PlatGiftGainRecord::IsInitialized() const {
  
  return true;
}

void DB_PlatGiftGainRecord::Swap(DB_PlatGiftGainRecord* other) {
  if (other != this) {
    std::swap(ngiftid_, other->ngiftid_);
    std::swap(ngiftgain_, other->ngiftgain_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_PlatGiftGainRecord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_PlatGiftGainRecord_descriptor_;
  metadata.reflection = DB_PlatGiftGainRecord_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_PlatGift::kDaySendFrdIDLstFieldNumber;
const int DB_PlatGift::kDayAskFrdIDLstFieldNumber;
const int DB_PlatGift::kDayGetGift2BagCntFieldNumber;
const int DB_PlatGift::kDayAskGift2BagCntFieldNumber;
const int DB_PlatGift::kDayGetGiftCntFieldNumber;
const int DB_PlatGift::kDayResendGiftCntFieldNumber;
const int DB_PlatGift::kGetGiftInfoFieldNumber;
const int DB_PlatGift::kFinishGiftInfoFieldNumber;
const int DB_PlatGift::kMsgIdxFieldNumber;
const int DB_PlatGift::kLastLoginTimeFieldNumber;
const int DB_PlatGift::kDaySendGiftCntFieldNumber;
const int DB_PlatGift::kDayGainGiftRecordFieldNumber;
const int DB_PlatGift::kBSendGiftGainFieldNumber;
const int DB_PlatGift::kBaskGiftGainFieldNumber;
#endif  // !_MSC_VER

DB_PlatGift::DB_PlatGift() {
  SharedCtor();
}

void DB_PlatGift::InitAsDefaultInstance() {
}

DB_PlatGift::DB_PlatGift(const DB_PlatGift& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_PlatGift::SharedCtor() {
  _cached_size_ = 0;
  daygetgift2bagcnt_ = 0;
  dayaskgift2bagcnt_ = 0;
  daygetgiftcnt_ = 0;
  dayresendgiftcnt_ = 0;
  msgidx_ = 0;
  lastlogintime_ = GOOGLE_LONGLONG(0);
  daysendgiftcnt_ = 0;
  bsendgiftgain_ = false;
  baskgiftgain_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_PlatGift::~DB_PlatGift() {
  SharedDtor();
}

void DB_PlatGift::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_PlatGift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_PlatGift_descriptor_;
}

const DB_PlatGift& DB_PlatGift::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_PlatGift* DB_PlatGift::default_instance_ = NULL;

DB_PlatGift* DB_PlatGift::New() const {
  return new DB_PlatGift;
}

void DB_PlatGift::Clear() {
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    daygetgift2bagcnt_ = 0;
    dayaskgift2bagcnt_ = 0;
    daygetgiftcnt_ = 0;
    dayresendgiftcnt_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    msgidx_ = 0;
    lastlogintime_ = GOOGLE_LONGLONG(0);
    daysendgiftcnt_ = 0;
    bsendgiftgain_ = false;
    baskgiftgain_ = false;
  }
  daysendfrdidlst_.Clear();
  dayaskfrdidlst_.Clear();
  getgiftinfo_.Clear();
  finishgiftinfo_.Clear();
  daygaingiftrecord_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_PlatGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string daySendFrdIDLst = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_daySendFrdIDLst:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_daysendfrdidlst()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->daysendfrdidlst(0).data(), this->daysendfrdidlst(0).length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(10)) goto parse_daySendFrdIDLst;
        if (input->ExpectTag(18)) goto parse_dayAskFrdIDLst;
        break;
      }
      
      // repeated string dayAskFrdIDLst = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_dayAskFrdIDLst:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_dayaskfrdidlst()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->dayaskfrdidlst(0).data(), this->dayaskfrdidlst(0).length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_dayAskFrdIDLst;
        if (input->ExpectTag(24)) goto parse_dayGetGift2BagCnt;
        break;
      }
      
      // optional int32 dayGetGift2BagCnt = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_dayGetGift2BagCnt:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &daygetgift2bagcnt_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_dayAskGift2BagCnt;
        break;
      }
      
      // optional int32 dayAskGift2BagCnt = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_dayAskGift2BagCnt:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &dayaskgift2bagcnt_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_dayGetGiftCnt;
        break;
      }
      
      // optional int32 dayGetGiftCnt = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_dayGetGiftCnt:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &daygetgiftcnt_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_dayResendGiftCnt;
        break;
      }
      
      // optional int32 dayResendGiftCnt = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_dayResendGiftCnt:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &dayresendgiftcnt_));
        _set_bit(5);
        if (input->ExpectTag(58)) goto parse_getGiftInfo;
        break;
      }
      
      // repeated .DB_PlatGiftFrdInfo getGiftInfo = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_getGiftInfo:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_getgiftinfo()));
        if (input->ExpectTag(58)) goto parse_getGiftInfo;
        if (input->ExpectTag(66)) goto parse_finishGiftInfo;
        break;
      }
      
      // repeated .DB_PlatGiftFrdInfo finishGiftInfo = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_finishGiftInfo:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_finishgiftinfo()));
        if (input->ExpectTag(66)) goto parse_finishGiftInfo;
        if (input->ExpectTag(72)) goto parse_msgIdx;
        break;
      }
      
      // optional int32 msgIdx = 9 [default = 0];
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_msgIdx:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &msgidx_));
        _set_bit(8);
        if (input->ExpectTag(80)) goto parse_lastLoginTime;
        break;
      }
      
      // optional int64 lastLoginTime = 10 [default = 0];
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_lastLoginTime:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &lastlogintime_));
        _set_bit(9);
        if (input->ExpectTag(88)) goto parse_daySendGiftCnt;
        break;
      }
      
      // optional int32 daySendGiftCnt = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_daySendGiftCnt:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &daysendgiftcnt_));
        _set_bit(10);
        if (input->ExpectTag(98)) goto parse_dayGainGiftRecord;
        break;
      }
      
      // repeated .DB_PlatGiftGainRecord dayGainGiftRecord = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_dayGainGiftRecord:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_daygaingiftrecord()));
        if (input->ExpectTag(98)) goto parse_dayGainGiftRecord;
        if (input->ExpectTag(104)) goto parse_bSendGiftGain;
        break;
      }
      
      // optional bool bSendGiftGain = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_bSendGiftGain:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &bsendgiftgain_));
        _set_bit(12);
        if (input->ExpectTag(112)) goto parse_baskGiftGain;
        break;
      }
      
      // optional bool baskGiftGain = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_baskGiftGain:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &baskgiftgain_));
        _set_bit(13);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_PlatGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_PlatGift::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated string daySendFrdIDLst = 1;
  for (int i = 0; i < this->daysendfrdidlst_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->daysendfrdidlst(i).data(), this->daysendfrdidlst(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->daysendfrdidlst(i), output);
  }
  
  // repeated string dayAskFrdIDLst = 2;
  for (int i = 0; i < this->dayaskfrdidlst_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->dayaskfrdidlst(i).data(), this->dayaskfrdidlst(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->dayaskfrdidlst(i), output);
  }
  
  // optional int32 dayGetGift2BagCnt = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->daygetgift2bagcnt(), output);
  }
  
  // optional int32 dayAskGift2BagCnt = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->dayaskgift2bagcnt(), output);
  }
  
  // optional int32 dayGetGiftCnt = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->daygetgiftcnt(), output);
  }
  
  // optional int32 dayResendGiftCnt = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->dayresendgiftcnt(), output);
  }
  
  // repeated .DB_PlatGiftFrdInfo getGiftInfo = 7;
  for (int i = 0; i < this->getgiftinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      7, this->getgiftinfo(i), output);
  }
  
  // repeated .DB_PlatGiftFrdInfo finishGiftInfo = 8;
  for (int i = 0; i < this->finishgiftinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      8, this->finishgiftinfo(i), output);
  }
  
  // optional int32 msgIdx = 9 [default = 0];
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->msgidx(), output);
  }
  
  // optional int64 lastLoginTime = 10 [default = 0];
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->lastlogintime(), output);
  }
  
  // optional int32 daySendGiftCnt = 11;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->daysendgiftcnt(), output);
  }
  
  // repeated .DB_PlatGiftGainRecord dayGainGiftRecord = 12;
  for (int i = 0; i < this->daygaingiftrecord_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      12, this->daygaingiftrecord(i), output);
  }
  
  // optional bool bSendGiftGain = 13;
  if (_has_bit(12)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->bsendgiftgain(), output);
  }
  
  // optional bool baskGiftGain = 14;
  if (_has_bit(13)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->baskgiftgain(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_PlatGift::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string daySendFrdIDLst = 1;
  for (int i = 0; i < this->daysendfrdidlst_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->daysendfrdidlst(i).data(), this->daysendfrdidlst(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->daysendfrdidlst(i), target);
  }
  
  // repeated string dayAskFrdIDLst = 2;
  for (int i = 0; i < this->dayaskfrdidlst_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dayaskfrdidlst(i).data(), this->dayaskfrdidlst(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->dayaskfrdidlst(i), target);
  }
  
  // optional int32 dayGetGift2BagCnt = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->daygetgift2bagcnt(), target);
  }
  
  // optional int32 dayAskGift2BagCnt = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->dayaskgift2bagcnt(), target);
  }
  
  // optional int32 dayGetGiftCnt = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->daygetgiftcnt(), target);
  }
  
  // optional int32 dayResendGiftCnt = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->dayresendgiftcnt(), target);
  }
  
  // repeated .DB_PlatGiftFrdInfo getGiftInfo = 7;
  for (int i = 0; i < this->getgiftinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->getgiftinfo(i), target);
  }
  
  // repeated .DB_PlatGiftFrdInfo finishGiftInfo = 8;
  for (int i = 0; i < this->finishgiftinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->finishgiftinfo(i), target);
  }
  
  // optional int32 msgIdx = 9 [default = 0];
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->msgidx(), target);
  }
  
  // optional int64 lastLoginTime = 10 [default = 0];
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->lastlogintime(), target);
  }
  
  // optional int32 daySendGiftCnt = 11;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->daysendgiftcnt(), target);
  }
  
  // repeated .DB_PlatGiftGainRecord dayGainGiftRecord = 12;
  for (int i = 0; i < this->daygaingiftrecord_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->daygaingiftrecord(i), target);
  }
  
  // optional bool bSendGiftGain = 13;
  if (_has_bit(12)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->bsendgiftgain(), target);
  }
  
  // optional bool baskGiftGain = 14;
  if (_has_bit(13)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->baskgiftgain(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_PlatGift::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional int32 dayGetGift2BagCnt = 3;
    if (has_daygetgift2bagcnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->daygetgift2bagcnt());
    }
    
    // optional int32 dayAskGift2BagCnt = 4;
    if (has_dayaskgift2bagcnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dayaskgift2bagcnt());
    }
    
    // optional int32 dayGetGiftCnt = 5;
    if (has_daygetgiftcnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->daygetgiftcnt());
    }
    
    // optional int32 dayResendGiftCnt = 6;
    if (has_dayresendgiftcnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dayresendgiftcnt());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 msgIdx = 9 [default = 0];
    if (has_msgidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msgidx());
    }
    
    // optional int64 lastLoginTime = 10 [default = 0];
    if (has_lastlogintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lastlogintime());
    }
    
    // optional int32 daySendGiftCnt = 11;
    if (has_daysendgiftcnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->daysendgiftcnt());
    }
    
    // optional bool bSendGiftGain = 13;
    if (has_bsendgiftgain()) {
      total_size += 1 + 1;
    }
    
    // optional bool baskGiftGain = 14;
    if (has_baskgiftgain()) {
      total_size += 1 + 1;
    }
    
  }
  // repeated string daySendFrdIDLst = 1;
  total_size += 1 * this->daysendfrdidlst_size();
  for (int i = 0; i < this->daysendfrdidlst_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->daysendfrdidlst(i));
  }
  
  // repeated string dayAskFrdIDLst = 2;
  total_size += 1 * this->dayaskfrdidlst_size();
  for (int i = 0; i < this->dayaskfrdidlst_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->dayaskfrdidlst(i));
  }
  
  // repeated .DB_PlatGiftFrdInfo getGiftInfo = 7;
  total_size += 1 * this->getgiftinfo_size();
  for (int i = 0; i < this->getgiftinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->getgiftinfo(i));
  }
  
  // repeated .DB_PlatGiftFrdInfo finishGiftInfo = 8;
  total_size += 1 * this->finishgiftinfo_size();
  for (int i = 0; i < this->finishgiftinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->finishgiftinfo(i));
  }
  
  // repeated .DB_PlatGiftGainRecord dayGainGiftRecord = 12;
  total_size += 1 * this->daygaingiftrecord_size();
  for (int i = 0; i < this->daygaingiftrecord_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->daygaingiftrecord(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_PlatGift::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_PlatGift* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_PlatGift*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_PlatGift::MergeFrom(const DB_PlatGift& from) {
  GOOGLE_CHECK_NE(&from, this);
  daysendfrdidlst_.MergeFrom(from.daysendfrdidlst_);
  dayaskfrdidlst_.MergeFrom(from.dayaskfrdidlst_);
  getgiftinfo_.MergeFrom(from.getgiftinfo_);
  finishgiftinfo_.MergeFrom(from.finishgiftinfo_);
  daygaingiftrecord_.MergeFrom(from.daygaingiftrecord_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from._has_bit(2)) {
      set_daygetgift2bagcnt(from.daygetgift2bagcnt());
    }
    if (from._has_bit(3)) {
      set_dayaskgift2bagcnt(from.dayaskgift2bagcnt());
    }
    if (from._has_bit(4)) {
      set_daygetgiftcnt(from.daygetgiftcnt());
    }
    if (from._has_bit(5)) {
      set_dayresendgiftcnt(from.dayresendgiftcnt());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      set_msgidx(from.msgidx());
    }
    if (from._has_bit(9)) {
      set_lastlogintime(from.lastlogintime());
    }
    if (from._has_bit(10)) {
      set_daysendgiftcnt(from.daysendgiftcnt());
    }
    if (from._has_bit(12)) {
      set_bsendgiftgain(from.bsendgiftgain());
    }
    if (from._has_bit(13)) {
      set_baskgiftgain(from.baskgiftgain());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_PlatGift::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_PlatGift::CopyFrom(const DB_PlatGift& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_PlatGift::IsInitialized() const {
  
  return true;
}

void DB_PlatGift::Swap(DB_PlatGift* other) {
  if (other != this) {
    daysendfrdidlst_.Swap(&other->daysendfrdidlst_);
    dayaskfrdidlst_.Swap(&other->dayaskfrdidlst_);
    std::swap(daygetgift2bagcnt_, other->daygetgift2bagcnt_);
    std::swap(dayaskgift2bagcnt_, other->dayaskgift2bagcnt_);
    std::swap(daygetgiftcnt_, other->daygetgiftcnt_);
    std::swap(dayresendgiftcnt_, other->dayresendgiftcnt_);
    getgiftinfo_.Swap(&other->getgiftinfo_);
    finishgiftinfo_.Swap(&other->finishgiftinfo_);
    std::swap(msgidx_, other->msgidx_);
    std::swap(lastlogintime_, other->lastlogintime_);
    std::swap(daysendgiftcnt_, other->daysendgiftcnt_);
    daygaingiftrecord_.Swap(&other->daygaingiftrecord_);
    std::swap(bsendgiftgain_, other->bsendgiftgain_);
    std::swap(baskgiftgain_, other->baskgiftgain_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_PlatGift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_PlatGift_descriptor_;
  metadata.reflection = DB_PlatGift_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_PlatRegion::kUidFieldNumber;
const int DB_PlatRegion::kSrvRegionFieldNumber;
const int DB_PlatRegion::kLevelFieldNumber;
const int DB_PlatRegion::kPlatTypeFieldNumber;
const int DB_PlatRegion::kFinishCaptureTmFieldNumber;
const int DB_PlatRegion::kLastLogonTimeFieldNumber;
const int DB_PlatRegion::kViplevelFieldNumber;
const int DB_PlatRegion::kViptypeFieldNumber;
#endif  // !_MSC_VER

DB_PlatRegion::DB_PlatRegion() {
  SharedCtor();
}

void DB_PlatRegion::InitAsDefaultInstance() {
}

DB_PlatRegion::DB_PlatRegion(const DB_PlatRegion& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_PlatRegion::SharedCtor() {
  _cached_size_ = 0;
  uid_ = GOOGLE_LONGLONG(0);
  srvregion_ = 0;
  level_ = 0;
  plattype_ = 0;
  finishcapturetm_ = 0;
  lastlogontime_ = 0;
  viplevel_ = 0;
  viptype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_PlatRegion::~DB_PlatRegion() {
  SharedDtor();
}

void DB_PlatRegion::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_PlatRegion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_PlatRegion_descriptor_;
}

const DB_PlatRegion& DB_PlatRegion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_PlatRegion* DB_PlatRegion::default_instance_ = NULL;

DB_PlatRegion* DB_PlatRegion::New() const {
  return new DB_PlatRegion;
}

void DB_PlatRegion::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    uid_ = GOOGLE_LONGLONG(0);
    srvregion_ = 0;
    level_ = 0;
    plattype_ = 0;
    finishcapturetm_ = 0;
    lastlogontime_ = 0;
    viplevel_ = 0;
    viptype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_PlatRegion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &uid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_srvRegion;
        break;
      }
      
      // optional int32 srvRegion = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_srvRegion:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &srvregion_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }
      
      // optional int32 level = 3 [default = 0];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_level:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &level_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_platType;
        break;
      }
      
      // optional int32 platType = 4 [default = 0];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_platType:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &plattype_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_finishCaptureTm;
        break;
      }
      
      // optional int32 finishCaptureTm = 5 [default = 0];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_finishCaptureTm:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &finishcapturetm_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_lastLogonTime;
        break;
      }
      
      // optional int32 lastLogonTime = 6 [default = 0];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_lastLogonTime:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &lastlogontime_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_viplevel;
        break;
      }
      
      // optional int32 viplevel = 7 [default = 0];
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_viplevel:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &viplevel_));
        _set_bit(6);
        if (input->ExpectTag(64)) goto parse_viptype;
        break;
      }
      
      // optional int32 viptype = 8 [default = 0];
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_viptype:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &viptype_));
        _set_bit(7);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_PlatRegion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_PlatRegion::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int64 uid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uid(), output);
  }
  
  // optional int32 srvRegion = 2 [default = 0];
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->srvregion(), output);
  }
  
  // optional int32 level = 3 [default = 0];
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }
  
  // optional int32 platType = 4 [default = 0];
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->plattype(), output);
  }
  
  // optional int32 finishCaptureTm = 5 [default = 0];
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->finishcapturetm(), output);
  }
  
  // optional int32 lastLogonTime = 6 [default = 0];
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->lastlogontime(), output);
  }
  
  // optional int32 viplevel = 7 [default = 0];
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->viplevel(), output);
  }
  
  // optional int32 viptype = 8 [default = 0];
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->viptype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_PlatRegion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 uid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uid(), target);
  }
  
  // optional int32 srvRegion = 2 [default = 0];
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->srvregion(), target);
  }
  
  // optional int32 level = 3 [default = 0];
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }
  
  // optional int32 platType = 4 [default = 0];
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->plattype(), target);
  }
  
  // optional int32 finishCaptureTm = 5 [default = 0];
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->finishcapturetm(), target);
  }
  
  // optional int32 lastLogonTime = 6 [default = 0];
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->lastlogontime(), target);
  }
  
  // optional int32 viplevel = 7 [default = 0];
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->viplevel(), target);
  }
  
  // optional int32 viptype = 8 [default = 0];
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->viptype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_PlatRegion::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uid());
    }
    
    // optional int32 srvRegion = 2 [default = 0];
    if (has_srvregion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->srvregion());
    }
    
    // optional int32 level = 3 [default = 0];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 platType = 4 [default = 0];
    if (has_plattype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->plattype());
    }
    
    // optional int32 finishCaptureTm = 5 [default = 0];
    if (has_finishcapturetm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->finishcapturetm());
    }
    
    // optional int32 lastLogonTime = 6 [default = 0];
    if (has_lastlogontime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lastlogontime());
    }
    
    // optional int32 viplevel = 7 [default = 0];
    if (has_viplevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viplevel());
    }
    
    // optional int32 viptype = 8 [default = 0];
    if (has_viptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viptype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_PlatRegion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_PlatRegion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_PlatRegion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_PlatRegion::MergeFrom(const DB_PlatRegion& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_uid(from.uid());
    }
    if (from._has_bit(1)) {
      set_srvregion(from.srvregion());
    }
    if (from._has_bit(2)) {
      set_level(from.level());
    }
    if (from._has_bit(3)) {
      set_plattype(from.plattype());
    }
    if (from._has_bit(4)) {
      set_finishcapturetm(from.finishcapturetm());
    }
    if (from._has_bit(5)) {
      set_lastlogontime(from.lastlogontime());
    }
    if (from._has_bit(6)) {
      set_viplevel(from.viplevel());
    }
    if (from._has_bit(7)) {
      set_viptype(from.viptype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_PlatRegion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_PlatRegion::CopyFrom(const DB_PlatRegion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_PlatRegion::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void DB_PlatRegion::Swap(DB_PlatRegion* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(srvregion_, other->srvregion_);
    std::swap(level_, other->level_);
    std::swap(plattype_, other->plattype_);
    std::swap(finishcapturetm_, other->finishcapturetm_);
    std::swap(lastlogontime_, other->lastlogontime_);
    std::swap(viplevel_, other->viplevel_);
    std::swap(viptype_, other->viptype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_PlatRegion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_PlatRegion_descriptor_;
  metadata.reflection = DB_PlatRegion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_WebGiftFlag::kLastCacuTimeFieldNumber;
const int DB_WebGiftFlag::kWebGiftLstFieldNumber;
const int DB_WebGiftFlag::kWebOnceFlagFieldNumber;
const int DB_WebGiftFlag::kWebGiftMonthLstFieldNumber;
const int DB_WebGiftFlag::kWebTotalLimitLstFieldNumber;
#endif  // !_MSC_VER

DB_WebGiftFlag::DB_WebGiftFlag() {
  SharedCtor();
}

void DB_WebGiftFlag::InitAsDefaultInstance() {
}

DB_WebGiftFlag::DB_WebGiftFlag(const DB_WebGiftFlag& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_WebGiftFlag::SharedCtor() {
  _cached_size_ = 0;
  lastcacutime_ = GOOGLE_LONGLONG(0);
  webonceflag_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_WebGiftFlag::~DB_WebGiftFlag() {
  SharedDtor();
}

void DB_WebGiftFlag::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_WebGiftFlag::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_WebGiftFlag_descriptor_;
}

const DB_WebGiftFlag& DB_WebGiftFlag::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_WebGiftFlag* DB_WebGiftFlag::default_instance_ = NULL;

DB_WebGiftFlag* DB_WebGiftFlag::New() const {
  return new DB_WebGiftFlag;
}

void DB_WebGiftFlag::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    lastcacutime_ = GOOGLE_LONGLONG(0);
    webonceflag_ = GOOGLE_LONGLONG(0);
  }
  webgiftlst_.Clear();
  webgiftmonthlst_.Clear();
  webtotallimitlst_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_WebGiftFlag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 lastCacuTime = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &lastcacutime_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_webGiftLst;
        break;
      }
      
      // repeated int32 webGiftLst = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_webGiftLst:
        ::google::protobuf::int32 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &value));
        add_webgiftlst(value);
        if (input->ExpectTag(16)) goto parse_webGiftLst;
        if (input->ExpectTag(24)) goto parse_webOnceFlag;
        break;
      }
      
      // optional int64 webOnceFlag = 3 [default = 0];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_webOnceFlag:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &webonceflag_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_webGiftMonthLst;
        break;
      }
      
      // repeated int32 webGiftMonthLst = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_webGiftMonthLst:
        ::google::protobuf::int32 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &value));
        add_webgiftmonthlst(value);
        if (input->ExpectTag(32)) goto parse_webGiftMonthLst;
        if (input->ExpectTag(42)) goto parse_webTotalLimitLst;
        break;
      }
      
      // repeated .DB_TotalLimitWebGift webTotalLimitLst = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_webTotalLimitLst:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_webtotallimitlst()));
        if (input->ExpectTag(42)) goto parse_webTotalLimitLst;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_WebGiftFlag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_WebGiftFlag::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 lastCacuTime = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->lastcacutime(), output);
  }
  
  // repeated int32 webGiftLst = 2;
  for (int i = 0; i < this->webgiftlst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->webgiftlst(i), output);
  }
  
  // optional int64 webOnceFlag = 3 [default = 0];
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->webonceflag(), output);
  }
  
  // repeated int32 webGiftMonthLst = 4;
  for (int i = 0; i < this->webgiftmonthlst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->webgiftmonthlst(i), output);
  }
  
  // repeated .DB_TotalLimitWebGift webTotalLimitLst = 5;
  for (int i = 0; i < this->webtotallimitlst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->webtotallimitlst(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_WebGiftFlag::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 lastCacuTime = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->lastcacutime(), target);
  }
  
  // repeated int32 webGiftLst = 2;
  for (int i = 0; i < this->webgiftlst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->webgiftlst(i), target);
  }
  
  // optional int64 webOnceFlag = 3 [default = 0];
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->webonceflag(), target);
  }
  
  // repeated int32 webGiftMonthLst = 4;
  for (int i = 0; i < this->webgiftmonthlst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->webgiftmonthlst(i), target);
  }
  
  // repeated .DB_TotalLimitWebGift webTotalLimitLst = 5;
  for (int i = 0; i < this->webtotallimitlst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->webtotallimitlst(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_WebGiftFlag::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 lastCacuTime = 1 [default = 0];
    if (has_lastcacutime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lastcacutime());
    }
    
    // optional int64 webOnceFlag = 3 [default = 0];
    if (has_webonceflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->webonceflag());
    }
    
  }
  // repeated int32 webGiftLst = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->webgiftlst_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->webgiftlst(i));
    }
    total_size += 1 * this->webgiftlst_size() + data_size;
  }
  
  // repeated int32 webGiftMonthLst = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->webgiftmonthlst_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->webgiftmonthlst(i));
    }
    total_size += 1 * this->webgiftmonthlst_size() + data_size;
  }
  
  // repeated .DB_TotalLimitWebGift webTotalLimitLst = 5;
  total_size += 1 * this->webtotallimitlst_size();
  for (int i = 0; i < this->webtotallimitlst_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->webtotallimitlst(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_WebGiftFlag::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_WebGiftFlag* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_WebGiftFlag*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_WebGiftFlag::MergeFrom(const DB_WebGiftFlag& from) {
  GOOGLE_CHECK_NE(&from, this);
  webgiftlst_.MergeFrom(from.webgiftlst_);
  webgiftmonthlst_.MergeFrom(from.webgiftmonthlst_);
  webtotallimitlst_.MergeFrom(from.webtotallimitlst_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_lastcacutime(from.lastcacutime());
    }
    if (from._has_bit(2)) {
      set_webonceflag(from.webonceflag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_WebGiftFlag::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_WebGiftFlag::CopyFrom(const DB_WebGiftFlag& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_WebGiftFlag::IsInitialized() const {
  
  return true;
}

void DB_WebGiftFlag::Swap(DB_WebGiftFlag* other) {
  if (other != this) {
    std::swap(lastcacutime_, other->lastcacutime_);
    webgiftlst_.Swap(&other->webgiftlst_);
    std::swap(webonceflag_, other->webonceflag_);
    webgiftmonthlst_.Swap(&other->webgiftmonthlst_);
    webtotallimitlst_.Swap(&other->webtotallimitlst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_WebGiftFlag::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_WebGiftFlag_descriptor_;
  metadata.reflection = DB_WebGiftFlag_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_TotalLimitWebGift::kTActEndTimeFieldNumber;
const int DB_TotalLimitWebGift::kNGiftIDFieldNumber;
const int DB_TotalLimitWebGift::kNGiftCntFieldNumber;
#endif  // !_MSC_VER

DB_TotalLimitWebGift::DB_TotalLimitWebGift() {
  SharedCtor();
}

void DB_TotalLimitWebGift::InitAsDefaultInstance() {
}

DB_TotalLimitWebGift::DB_TotalLimitWebGift(const DB_TotalLimitWebGift& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_TotalLimitWebGift::SharedCtor() {
  _cached_size_ = 0;
  tactendtime_ = GOOGLE_LONGLONG(0);
  ngiftid_ = 0;
  ngiftcnt_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_TotalLimitWebGift::~DB_TotalLimitWebGift() {
  SharedDtor();
}

void DB_TotalLimitWebGift::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_TotalLimitWebGift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_TotalLimitWebGift_descriptor_;
}

const DB_TotalLimitWebGift& DB_TotalLimitWebGift::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_TotalLimitWebGift* DB_TotalLimitWebGift::default_instance_ = NULL;

DB_TotalLimitWebGift* DB_TotalLimitWebGift::New() const {
  return new DB_TotalLimitWebGift;
}

void DB_TotalLimitWebGift::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tactendtime_ = GOOGLE_LONGLONG(0);
    ngiftid_ = 0;
    ngiftcnt_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_TotalLimitWebGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 tActEndTime = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &tactendtime_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_nGiftID;
        break;
      }
      
      // optional int32 nGiftID = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_nGiftID:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &ngiftid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_nGiftCnt;
        break;
      }
      
      // optional int32 nGiftCnt = 3 [default = 0];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_nGiftCnt:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &ngiftcnt_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_TotalLimitWebGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_TotalLimitWebGift::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 tActEndTime = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->tactendtime(), output);
  }
  
  // optional int32 nGiftID = 2 [default = 0];
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ngiftid(), output);
  }
  
  // optional int32 nGiftCnt = 3 [default = 0];
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ngiftcnt(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_TotalLimitWebGift::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 tActEndTime = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->tactendtime(), target);
  }
  
  // optional int32 nGiftID = 2 [default = 0];
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ngiftid(), target);
  }
  
  // optional int32 nGiftCnt = 3 [default = 0];
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ngiftcnt(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_TotalLimitWebGift::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 tActEndTime = 1 [default = 0];
    if (has_tactendtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tactendtime());
    }
    
    // optional int32 nGiftID = 2 [default = 0];
    if (has_ngiftid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ngiftid());
    }
    
    // optional int32 nGiftCnt = 3 [default = 0];
    if (has_ngiftcnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ngiftcnt());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_TotalLimitWebGift::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_TotalLimitWebGift* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_TotalLimitWebGift*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_TotalLimitWebGift::MergeFrom(const DB_TotalLimitWebGift& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_tactendtime(from.tactendtime());
    }
    if (from._has_bit(1)) {
      set_ngiftid(from.ngiftid());
    }
    if (from._has_bit(2)) {
      set_ngiftcnt(from.ngiftcnt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_TotalLimitWebGift::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_TotalLimitWebGift::CopyFrom(const DB_TotalLimitWebGift& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_TotalLimitWebGift::IsInitialized() const {
  
  return true;
}

void DB_TotalLimitWebGift::Swap(DB_TotalLimitWebGift* other) {
  if (other != this) {
    std::swap(tactendtime_, other->tactendtime_);
    std::swap(ngiftid_, other->ngiftid_);
    std::swap(ngiftcnt_, other->ngiftcnt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_TotalLimitWebGift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_TotalLimitWebGift_descriptor_;
  metadata.reflection = DB_TotalLimitWebGift_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_InviteFriends_Record::kNtypeFieldNumber;
const int DB_InviteFriends_Record::kNlevelFieldNumber;
const int DB_InviteFriends_Record::kNcreditFieldNumber;
#endif  // !_MSC_VER

DB_InviteFriends_Record::DB_InviteFriends_Record() {
  SharedCtor();
}

void DB_InviteFriends_Record::InitAsDefaultInstance() {
}

DB_InviteFriends_Record::DB_InviteFriends_Record(const DB_InviteFriends_Record& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_InviteFriends_Record::SharedCtor() {
  _cached_size_ = 0;
  ntype_ = 0;
  nlevel_ = 0;
  ncredit_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_InviteFriends_Record::~DB_InviteFriends_Record() {
  SharedDtor();
}

void DB_InviteFriends_Record::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_InviteFriends_Record::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_InviteFriends_Record_descriptor_;
}

const DB_InviteFriends_Record& DB_InviteFriends_Record::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_InviteFriends_Record* DB_InviteFriends_Record::default_instance_ = NULL;

DB_InviteFriends_Record* DB_InviteFriends_Record::New() const {
  return new DB_InviteFriends_Record;
}

void DB_InviteFriends_Record::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ntype_ = 0;
    nlevel_ = 0;
    ncredit_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_InviteFriends_Record::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ntype = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &ntype_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_nlevel;
        break;
      }
      
      // optional int32 nlevel = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_nlevel:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &nlevel_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_ncredit;
        break;
      }
      
      // optional int32 ncredit = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ncredit:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &ncredit_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_InviteFriends_Record::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_InviteFriends_Record::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 ntype = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ntype(), output);
  }
  
  // optional int32 nlevel = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nlevel(), output);
  }
  
  // optional int32 ncredit = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ncredit(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_InviteFriends_Record::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ntype = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ntype(), target);
  }
  
  // optional int32 nlevel = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nlevel(), target);
  }
  
  // optional int32 ncredit = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ncredit(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_InviteFriends_Record::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ntype = 1;
    if (has_ntype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ntype());
    }
    
    // optional int32 nlevel = 2;
    if (has_nlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nlevel());
    }
    
    // optional int32 ncredit = 3;
    if (has_ncredit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ncredit());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_InviteFriends_Record::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_InviteFriends_Record* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_InviteFriends_Record*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_InviteFriends_Record::MergeFrom(const DB_InviteFriends_Record& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_ntype(from.ntype());
    }
    if (from._has_bit(1)) {
      set_nlevel(from.nlevel());
    }
    if (from._has_bit(2)) {
      set_ncredit(from.ncredit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_InviteFriends_Record::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_InviteFriends_Record::CopyFrom(const DB_InviteFriends_Record& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_InviteFriends_Record::IsInitialized() const {
  
  return true;
}

void DB_InviteFriends_Record::Swap(DB_InviteFriends_Record* other) {
  if (other != this) {
    std::swap(ntype_, other->ntype_);
    std::swap(nlevel_, other->nlevel_);
    std::swap(ncredit_, other->ncredit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_InviteFriends_Record::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_InviteFriends_Record_descriptor_;
  metadata.reflection = DB_InviteFriends_Record_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_InviteFriends_Unit::kFriendidFieldNumber;
const int DB_InviteFriends_Unit::kFriendNameFieldNumber;
const int DB_InviteFriends_Unit::kFriendlvlFieldNumber;
const int DB_InviteFriends_Unit::kFriendcreditFieldNumber;
const int DB_InviteFriends_Unit::kInvitegainFieldNumber;
const int DB_InviteFriends_Unit::kLvlgainFieldNumber;
const int DB_InviteFriends_Unit::kRecordFieldNumber;
#endif  // !_MSC_VER

DB_InviteFriends_Unit::DB_InviteFriends_Unit() {
  SharedCtor();
}

void DB_InviteFriends_Unit::InitAsDefaultInstance() {
}

DB_InviteFriends_Unit::DB_InviteFriends_Unit(const DB_InviteFriends_Unit& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_InviteFriends_Unit::SharedCtor() {
  _cached_size_ = 0;
  friendid_ = GOOGLE_LONGLONG(0);
  friendlvl_ = 0;
  friendcredit_ = 0;
  invitegain_ = false;
  lvlgain_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_InviteFriends_Unit::~DB_InviteFriends_Unit() {
  SharedDtor();
}

void DB_InviteFriends_Unit::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_InviteFriends_Unit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_InviteFriends_Unit_descriptor_;
}

const DB_InviteFriends_Unit& DB_InviteFriends_Unit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_InviteFriends_Unit* DB_InviteFriends_Unit::default_instance_ = NULL;

DB_InviteFriends_Unit* DB_InviteFriends_Unit::New() const {
  return new DB_InviteFriends_Unit;
}

void DB_InviteFriends_Unit::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    friendid_ = GOOGLE_LONGLONG(0);
    friendlvl_ = 0;
    friendcredit_ = 0;
    invitegain_ = false;
    lvlgain_ = 0;
  }
  friendname_.Clear();
  record_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_InviteFriends_Unit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 friendid = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &friendid_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_friendName;
        break;
      }
      
      // repeated string friendName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_friendName:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_friendname()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->friendname(0).data(), this->friendname(0).length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_friendName;
        if (input->ExpectTag(24)) goto parse_friendlvl;
        break;
      }
      
      // optional int32 friendlvl = 3 [default = 0];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_friendlvl:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &friendlvl_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_friendcredit;
        break;
      }
      
      // optional int32 friendcredit = 4 [default = 0];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_friendcredit:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &friendcredit_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_invitegain;
        break;
      }
      
      // optional bool invitegain = 5 [default = false];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_invitegain:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &invitegain_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_lvlgain;
        break;
      }
      
      // optional int32 lvlgain = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_lvlgain:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &lvlgain_));
        _set_bit(5);
        if (input->ExpectTag(58)) goto parse_record;
        break;
      }
      
      // repeated .DB_InviteFriends_Record record = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_record:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_record()));
        if (input->ExpectTag(58)) goto parse_record;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_InviteFriends_Unit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_InviteFriends_Unit::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 friendid = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->friendid(), output);
  }
  
  // repeated string friendName = 2;
  for (int i = 0; i < this->friendname_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->friendname(i).data(), this->friendname(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->friendname(i), output);
  }
  
  // optional int32 friendlvl = 3 [default = 0];
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->friendlvl(), output);
  }
  
  // optional int32 friendcredit = 4 [default = 0];
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->friendcredit(), output);
  }
  
  // optional bool invitegain = 5 [default = false];
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->invitegain(), output);
  }
  
  // optional int32 lvlgain = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->lvlgain(), output);
  }
  
  // repeated .DB_InviteFriends_Record record = 7;
  for (int i = 0; i < this->record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      7, this->record(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_InviteFriends_Unit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 friendid = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->friendid(), target);
  }
  
  // repeated string friendName = 2;
  for (int i = 0; i < this->friendname_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->friendname(i).data(), this->friendname(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->friendname(i), target);
  }
  
  // optional int32 friendlvl = 3 [default = 0];
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->friendlvl(), target);
  }
  
  // optional int32 friendcredit = 4 [default = 0];
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->friendcredit(), target);
  }
  
  // optional bool invitegain = 5 [default = false];
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->invitegain(), target);
  }
  
  // optional int32 lvlgain = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->lvlgain(), target);
  }
  
  // repeated .DB_InviteFriends_Record record = 7;
  for (int i = 0; i < this->record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->record(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_InviteFriends_Unit::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 friendid = 1 [default = 0];
    if (has_friendid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->friendid());
    }
    
    // optional int32 friendlvl = 3 [default = 0];
    if (has_friendlvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->friendlvl());
    }
    
    // optional int32 friendcredit = 4 [default = 0];
    if (has_friendcredit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->friendcredit());
    }
    
    // optional bool invitegain = 5 [default = false];
    if (has_invitegain()) {
      total_size += 1 + 1;
    }
    
    // optional int32 lvlgain = 6;
    if (has_lvlgain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lvlgain());
    }
    
  }
  // repeated string friendName = 2;
  total_size += 1 * this->friendname_size();
  for (int i = 0; i < this->friendname_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->friendname(i));
  }
  
  // repeated .DB_InviteFriends_Record record = 7;
  total_size += 1 * this->record_size();
  for (int i = 0; i < this->record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_InviteFriends_Unit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_InviteFriends_Unit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_InviteFriends_Unit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_InviteFriends_Unit::MergeFrom(const DB_InviteFriends_Unit& from) {
  GOOGLE_CHECK_NE(&from, this);
  friendname_.MergeFrom(from.friendname_);
  record_.MergeFrom(from.record_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_friendid(from.friendid());
    }
    if (from._has_bit(2)) {
      set_friendlvl(from.friendlvl());
    }
    if (from._has_bit(3)) {
      set_friendcredit(from.friendcredit());
    }
    if (from._has_bit(4)) {
      set_invitegain(from.invitegain());
    }
    if (from._has_bit(5)) {
      set_lvlgain(from.lvlgain());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_InviteFriends_Unit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_InviteFriends_Unit::CopyFrom(const DB_InviteFriends_Unit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_InviteFriends_Unit::IsInitialized() const {
  
  return true;
}

void DB_InviteFriends_Unit::Swap(DB_InviteFriends_Unit* other) {
  if (other != this) {
    std::swap(friendid_, other->friendid_);
    friendname_.Swap(&other->friendname_);
    std::swap(friendlvl_, other->friendlvl_);
    std::swap(friendcredit_, other->friendcredit_);
    std::swap(invitegain_, other->invitegain_);
    std::swap(lvlgain_, other->lvlgain_);
    record_.Swap(&other->record_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_InviteFriends_Unit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_InviteFriends_Unit_descriptor_;
  metadata.reflection = DB_InviteFriends_Unit_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string DB_InviteFriends::_default_invitefriendid_;
#ifndef _MSC_VER
const int DB_InviteFriends::kInvitefriendidFieldNumber;
const int DB_InviteFriends::kInvitegaincreditFieldNumber;
const int DB_InviteFriends::kLvlgaincreditFieldNumber;
const int DB_InviteFriends::kTopupgaincreditFieldNumber;
const int DB_InviteFriends::kGaincreditallFieldNumber;
const int DB_InviteFriends::kLastgaintimemarkFieldNumber;
const int DB_InviteFriends::kInvitefriendsFieldNumber;
#endif  // !_MSC_VER

DB_InviteFriends::DB_InviteFriends() {
  SharedCtor();
}

void DB_InviteFriends::InitAsDefaultInstance() {
}

DB_InviteFriends::DB_InviteFriends(const DB_InviteFriends& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_InviteFriends::SharedCtor() {
  _cached_size_ = 0;
  invitefriendid_ = const_cast< ::std::string*>(&_default_invitefriendid_);
  invitegaincredit_ = 0;
  lvlgaincredit_ = 0;
  topupgaincredit_ = 0;
  gaincreditall_ = 0;
  lastgaintimemark_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_InviteFriends::~DB_InviteFriends() {
  SharedDtor();
}

void DB_InviteFriends::SharedDtor() {
  if (invitefriendid_ != &_default_invitefriendid_) {
    delete invitefriendid_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_InviteFriends::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_InviteFriends_descriptor_;
}

const DB_InviteFriends& DB_InviteFriends::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_InviteFriends* DB_InviteFriends::default_instance_ = NULL;

DB_InviteFriends* DB_InviteFriends::New() const {
  return new DB_InviteFriends;
}

void DB_InviteFriends::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (invitefriendid_ != &_default_invitefriendid_) {
        invitefriendid_->clear();
      }
    }
    invitegaincredit_ = 0;
    lvlgaincredit_ = 0;
    topupgaincredit_ = 0;
    gaincreditall_ = 0;
    lastgaintimemark_ = GOOGLE_LONGLONG(0);
  }
  invitefriends_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_InviteFriends::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string invitefriendid = 1 [default = ""];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_invitefriendid()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->invitefriendid().data(), this->invitefriendid().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(16)) goto parse_invitegaincredit;
        break;
      }
      
      // optional int32 invitegaincredit = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_invitegaincredit:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &invitegaincredit_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_lvlgaincredit;
        break;
      }
      
      // optional int32 lvlgaincredit = 3 [default = 0];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_lvlgaincredit:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &lvlgaincredit_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_topupgaincredit;
        break;
      }
      
      // optional int32 topupgaincredit = 4 [default = 0];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_topupgaincredit:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &topupgaincredit_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_gaincreditall;
        break;
      }
      
      // optional int32 gaincreditall = 5 [default = 0];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_gaincreditall:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &gaincreditall_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_lastgaintimemark;
        break;
      }
      
      // optional int64 lastgaintimemark = 6 [default = 0];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_lastgaintimemark:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &lastgaintimemark_));
        _set_bit(5);
        if (input->ExpectTag(58)) goto parse_invitefriends;
        break;
      }
      
      // repeated .DB_InviteFriends_Unit invitefriends = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_invitefriends:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_invitefriends()));
        if (input->ExpectTag(58)) goto parse_invitefriends;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_InviteFriends::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_InviteFriends::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string invitefriendid = 1 [default = ""];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->invitefriendid().data(), this->invitefriendid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->invitefriendid(), output);
  }
  
  // optional int32 invitegaincredit = 2 [default = 0];
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->invitegaincredit(), output);
  }
  
  // optional int32 lvlgaincredit = 3 [default = 0];
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lvlgaincredit(), output);
  }
  
  // optional int32 topupgaincredit = 4 [default = 0];
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->topupgaincredit(), output);
  }
  
  // optional int32 gaincreditall = 5 [default = 0];
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->gaincreditall(), output);
  }
  
  // optional int64 lastgaintimemark = 6 [default = 0];
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->lastgaintimemark(), output);
  }
  
  // repeated .DB_InviteFriends_Unit invitefriends = 7;
  for (int i = 0; i < this->invitefriends_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      7, this->invitefriends(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_InviteFriends::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string invitefriendid = 1 [default = ""];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->invitefriendid().data(), this->invitefriendid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->invitefriendid(), target);
  }
  
  // optional int32 invitegaincredit = 2 [default = 0];
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->invitegaincredit(), target);
  }
  
  // optional int32 lvlgaincredit = 3 [default = 0];
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lvlgaincredit(), target);
  }
  
  // optional int32 topupgaincredit = 4 [default = 0];
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->topupgaincredit(), target);
  }
  
  // optional int32 gaincreditall = 5 [default = 0];
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->gaincreditall(), target);
  }
  
  // optional int64 lastgaintimemark = 6 [default = 0];
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->lastgaintimemark(), target);
  }
  
  // repeated .DB_InviteFriends_Unit invitefriends = 7;
  for (int i = 0; i < this->invitefriends_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->invitefriends(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_InviteFriends::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string invitefriendid = 1 [default = ""];
    if (has_invitefriendid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->invitefriendid());
    }
    
    // optional int32 invitegaincredit = 2 [default = 0];
    if (has_invitegaincredit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->invitegaincredit());
    }
    
    // optional int32 lvlgaincredit = 3 [default = 0];
    if (has_lvlgaincredit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lvlgaincredit());
    }
    
    // optional int32 topupgaincredit = 4 [default = 0];
    if (has_topupgaincredit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->topupgaincredit());
    }
    
    // optional int32 gaincreditall = 5 [default = 0];
    if (has_gaincreditall()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gaincreditall());
    }
    
    // optional int64 lastgaintimemark = 6 [default = 0];
    if (has_lastgaintimemark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lastgaintimemark());
    }
    
  }
  // repeated .DB_InviteFriends_Unit invitefriends = 7;
  total_size += 1 * this->invitefriends_size();
  for (int i = 0; i < this->invitefriends_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->invitefriends(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_InviteFriends::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_InviteFriends* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_InviteFriends*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_InviteFriends::MergeFrom(const DB_InviteFriends& from) {
  GOOGLE_CHECK_NE(&from, this);
  invitefriends_.MergeFrom(from.invitefriends_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_invitefriendid(from.invitefriendid());
    }
    if (from._has_bit(1)) {
      set_invitegaincredit(from.invitegaincredit());
    }
    if (from._has_bit(2)) {
      set_lvlgaincredit(from.lvlgaincredit());
    }
    if (from._has_bit(3)) {
      set_topupgaincredit(from.topupgaincredit());
    }
    if (from._has_bit(4)) {
      set_gaincreditall(from.gaincreditall());
    }
    if (from._has_bit(5)) {
      set_lastgaintimemark(from.lastgaintimemark());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_InviteFriends::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_InviteFriends::CopyFrom(const DB_InviteFriends& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_InviteFriends::IsInitialized() const {
  
  return true;
}

void DB_InviteFriends::Swap(DB_InviteFriends* other) {
  if (other != this) {
    std::swap(invitefriendid_, other->invitefriendid_);
    std::swap(invitegaincredit_, other->invitegaincredit_);
    std::swap(lvlgaincredit_, other->lvlgaincredit_);
    std::swap(topupgaincredit_, other->topupgaincredit_);
    std::swap(gaincreditall_, other->gaincreditall_);
    std::swap(lastgaintimemark_, other->lastgaintimemark_);
    invitefriends_.Swap(&other->invitefriends_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_InviteFriends::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_InviteFriends_descriptor_;
  metadata.reflection = DB_InviteFriends_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string DB_PTXMissionData::_default_missionid_;
#ifndef _MSC_VER
const int DB_PTXMissionData::kMissionidFieldNumber;
const int DB_PTXMissionData::kMissionstateFieldNumber;
#endif  // !_MSC_VER

DB_PTXMissionData::DB_PTXMissionData() {
  SharedCtor();
}

void DB_PTXMissionData::InitAsDefaultInstance() {
}

DB_PTXMissionData::DB_PTXMissionData(const DB_PTXMissionData& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_PTXMissionData::SharedCtor() {
  _cached_size_ = 0;
  missionid_ = const_cast< ::std::string*>(&_default_missionid_);
  missionstate_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_PTXMissionData::~DB_PTXMissionData() {
  SharedDtor();
}

void DB_PTXMissionData::SharedDtor() {
  if (missionid_ != &_default_missionid_) {
    delete missionid_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_PTXMissionData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_PTXMissionData_descriptor_;
}

const DB_PTXMissionData& DB_PTXMissionData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_PTXMissionData* DB_PTXMissionData::default_instance_ = NULL;

DB_PTXMissionData* DB_PTXMissionData::New() const {
  return new DB_PTXMissionData;
}

void DB_PTXMissionData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (missionid_ != &_default_missionid_) {
        missionid_->clear();
      }
    }
    missionstate_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_PTXMissionData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string missionid = 1 [default = ""];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_missionid()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->missionid().data(), this->missionid().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(16)) goto parse_missionstate;
        break;
      }
      
      // optional int32 missionstate = 2 [default = -1];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_missionstate:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &missionstate_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_PTXMissionData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_PTXMissionData::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string missionid = 1 [default = ""];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->missionid().data(), this->missionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->missionid(), output);
  }
  
  // optional int32 missionstate = 2 [default = -1];
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->missionstate(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_PTXMissionData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string missionid = 1 [default = ""];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->missionid().data(), this->missionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->missionid(), target);
  }
  
  // optional int32 missionstate = 2 [default = -1];
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->missionstate(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_PTXMissionData::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string missionid = 1 [default = ""];
    if (has_missionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->missionid());
    }
    
    // optional int32 missionstate = 2 [default = -1];
    if (has_missionstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->missionstate());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_PTXMissionData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_PTXMissionData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_PTXMissionData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_PTXMissionData::MergeFrom(const DB_PTXMissionData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_missionid(from.missionid());
    }
    if (from._has_bit(1)) {
      set_missionstate(from.missionstate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_PTXMissionData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_PTXMissionData::CopyFrom(const DB_PTXMissionData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_PTXMissionData::IsInitialized() const {
  
  return true;
}

void DB_PTXMissionData::Swap(DB_PTXMissionData* other) {
  if (other != this) {
    std::swap(missionid_, other->missionid_);
    std::swap(missionstate_, other->missionstate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_PTXMissionData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_PTXMissionData_descriptor_;
  metadata.reflection = DB_PTXMissionData_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string DB_PlatCrossPromotionData::_default_chanle_;
const ::std::string DB_PlatCrossPromotionData::_default_date_;
#ifndef _MSC_VER
const int DB_PlatCrossPromotionData::kChanleFieldNumber;
const int DB_PlatCrossPromotionData::kDateFieldNumber;
#endif  // !_MSC_VER

DB_PlatCrossPromotionData::DB_PlatCrossPromotionData() {
  SharedCtor();
}

void DB_PlatCrossPromotionData::InitAsDefaultInstance() {
}

DB_PlatCrossPromotionData::DB_PlatCrossPromotionData(const DB_PlatCrossPromotionData& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_PlatCrossPromotionData::SharedCtor() {
  _cached_size_ = 0;
  chanle_ = const_cast< ::std::string*>(&_default_chanle_);
  date_ = const_cast< ::std::string*>(&_default_date_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_PlatCrossPromotionData::~DB_PlatCrossPromotionData() {
  SharedDtor();
}

void DB_PlatCrossPromotionData::SharedDtor() {
  if (chanle_ != &_default_chanle_) {
    delete chanle_;
  }
  if (date_ != &_default_date_) {
    delete date_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_PlatCrossPromotionData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_PlatCrossPromotionData_descriptor_;
}

const DB_PlatCrossPromotionData& DB_PlatCrossPromotionData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_PlatCrossPromotionData* DB_PlatCrossPromotionData::default_instance_ = NULL;

DB_PlatCrossPromotionData* DB_PlatCrossPromotionData::New() const {
  return new DB_PlatCrossPromotionData;
}

void DB_PlatCrossPromotionData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (chanle_ != &_default_chanle_) {
        chanle_->clear();
      }
    }
    if (_has_bit(1)) {
      if (date_ != &_default_date_) {
        date_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_PlatCrossPromotionData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string chanle = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_chanle()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->chanle().data(), this->chanle().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_date;
        break;
      }
      
      // optional string date = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_date:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_date()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->date().data(), this->date().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_PlatCrossPromotionData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_PlatCrossPromotionData::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string chanle = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->chanle().data(), this->chanle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->chanle(), output);
  }
  
  // optional string date = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->date(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_PlatCrossPromotionData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string chanle = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->chanle().data(), this->chanle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chanle(), target);
  }
  
  // optional string date = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->date(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_PlatCrossPromotionData::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string chanle = 1;
    if (has_chanle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chanle());
    }
    
    // optional string date = 2;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_PlatCrossPromotionData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_PlatCrossPromotionData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_PlatCrossPromotionData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_PlatCrossPromotionData::MergeFrom(const DB_PlatCrossPromotionData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_chanle(from.chanle());
    }
    if (from._has_bit(1)) {
      set_date(from.date());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_PlatCrossPromotionData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_PlatCrossPromotionData::CopyFrom(const DB_PlatCrossPromotionData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_PlatCrossPromotionData::IsInitialized() const {
  
  return true;
}

void DB_PlatCrossPromotionData::Swap(DB_PlatCrossPromotionData* other) {
  if (other != this) {
    std::swap(chanle_, other->chanle_);
    std::swap(date_, other->date_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_PlatCrossPromotionData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_PlatCrossPromotionData_descriptor_;
  metadata.reflection = DB_PlatCrossPromotionData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_PlatCrossPromotion::kDataFieldNumber;
#endif  // !_MSC_VER

DB_PlatCrossPromotion::DB_PlatCrossPromotion() {
  SharedCtor();
}

void DB_PlatCrossPromotion::InitAsDefaultInstance() {
}

DB_PlatCrossPromotion::DB_PlatCrossPromotion(const DB_PlatCrossPromotion& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_PlatCrossPromotion::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_PlatCrossPromotion::~DB_PlatCrossPromotion() {
  SharedDtor();
}

void DB_PlatCrossPromotion::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_PlatCrossPromotion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_PlatCrossPromotion_descriptor_;
}

const DB_PlatCrossPromotion& DB_PlatCrossPromotion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_PlatCrossPromotion* DB_PlatCrossPromotion::default_instance_ = NULL;

DB_PlatCrossPromotion* DB_PlatCrossPromotion::New() const {
  return new DB_PlatCrossPromotion;
}

void DB_PlatCrossPromotion::Clear() {
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_PlatCrossPromotion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DB_PlatCrossPromotionData data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_data:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_data()));
        if (input->ExpectTag(10)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_PlatCrossPromotion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_PlatCrossPromotion::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .DB_PlatCrossPromotionData data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->data(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_PlatCrossPromotion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .DB_PlatCrossPromotionData data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_PlatCrossPromotion::ByteSize() const {
  int total_size = 0;
  
  // repeated .DB_PlatCrossPromotionData data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_PlatCrossPromotion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_PlatCrossPromotion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_PlatCrossPromotion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_PlatCrossPromotion::MergeFrom(const DB_PlatCrossPromotion& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_PlatCrossPromotion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_PlatCrossPromotion::CopyFrom(const DB_PlatCrossPromotion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_PlatCrossPromotion::IsInitialized() const {
  
  return true;
}

void DB_PlatCrossPromotion::Swap(DB_PlatCrossPromotion* other) {
  if (other != this) {
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_PlatCrossPromotion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_PlatCrossPromotion_descriptor_;
  metadata.reflection = DB_PlatCrossPromotion_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string DB_Plat::_default_platform_id_;
const ::std::string DB_Plat::_default_channel_;
#ifndef _MSC_VER
const int DB_Plat::kPlatformIdFieldNumber;
const int DB_Plat::kNameFieldNumber;
const int DB_Plat::kProfileLinkFieldNumber;
const int DB_Plat::kGenderFieldNumber;
const int DB_Plat::kYellowDmdLvlFieldNumber;
const int DB_Plat::kIsYellowDmdFieldNumber;
const int DB_Plat::kIsYellowDmdYearFieldNumber;
const int DB_Plat::kQQDmdLvlFieldNumber;
const int DB_Plat::kIsQQDmdFieldNumber;
const int DB_Plat::kIsQQDmdYearFieldNumber;
const int DB_Plat::kPlatRegionFieldNumber;
const int DB_Plat::kLastRegionFieldNumber;
const int DB_Plat::kGiftInfoFieldNumber;
const int DB_Plat::kWebFlagFieldNumber;
const int DB_Plat::kGetCBGiftTimeFieldNumber;
const int DB_Plat::kInviteFrdCntFieldNumber;
const int DB_Plat::kInvitefriendsFieldNumber;
const int DB_Plat::kYellowDmdtimeFieldNumber;
const int DB_Plat::kTxmissiondataFieldNumber;
const int DB_Plat::kDailyyellowresFieldNumber;
const int DB_Plat::kInviteFrdCntDayFieldNumber;
const int DB_Plat::kGaininviteFrdDayFieldNumber;
const int DB_Plat::kLastLoginTimeFieldNumber;
const int DB_Plat::kCancallbackFieldNumber;
const int DB_Plat::kInviteFriendGiftFieldNumber;
const int DB_Plat::kInviteFriendMsgByLogonFieldNumber;
const int DB_Plat::kLtRevisionFieldNumber;
const int DB_Plat::kLtSaveRevisionFieldNumber;
const int DB_Plat::kLtMemRevisionFieldNumber;
const int DB_Plat::kInviteFrdCntDayByLimitFieldNumber;
const int DB_Plat::kIsHighYellowDmdFieldNumber;
const int DB_Plat::kDayGetCostGiftFieldNumber;
const int DB_Plat::kCallBackFrdUidFieldNumber;
const int DB_Plat::kDayInviteFrdBackCntFieldNumber;
const int DB_Plat::kDayGetCouponFieldNumber;
const int DB_Plat::kTaskmarkFieldNumber;
const int DB_Plat::kChannelFieldNumber;
const int DB_Plat::kPromotionFieldNumber;
const int DB_Plat::kInviteGiftRecordFieldNumber;
const int DB_Plat::kIdenflagFieldNumber;
const int DB_Plat::kQqTenyearBackFlowFlagFieldNumber;
const int DB_Plat::kNAdultFlagFieldNumber;
const int DB_Plat::kQHallDmdLvlFieldNumber;
const int DB_Plat::kIsQHallDmdFieldNumber;
const int DB_Plat::kIsQHallDmdYearFieldNumber;
const int DB_Plat::kIsHighQHallDmdFieldNumber;
const int DB_Plat::kIsHighQHallDmdYearFieldNumber;
const int DB_Plat::kBluedmdtimeFieldNumber;
const int DB_Plat::kSiteidFieldNumber;
#endif  // !_MSC_VER

DB_Plat::DB_Plat() {
  SharedCtor();
}

void DB_Plat::InitAsDefaultInstance() {
  giftinfo_ = const_cast< ::DB_PlatGift*>(&::DB_PlatGift::default_instance());
  webflag_ = const_cast< ::DB_WebGiftFlag*>(&::DB_WebGiftFlag::default_instance());
  invitefriends_ = const_cast< ::DB_InviteFriends*>(&::DB_InviteFriends::default_instance());
  dailyyellowres_ = const_cast< ::DB_DailyYellowRes*>(&::DB_DailyYellowRes::default_instance());
  invitefriendgift_ = const_cast< ::DB_InviteFriendGift*>(&::DB_InviteFriendGift::default_instance());
  taskmark_ = const_cast< ::DB_TaskMark*>(&::DB_TaskMark::default_instance());
  promotion_ = const_cast< ::DB_PlatCrossPromotion*>(&::DB_PlatCrossPromotion::default_instance());
}

DB_Plat::DB_Plat(const DB_Plat& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_Plat::SharedCtor() {
  _cached_size_ = 0;
  platform_id_ = const_cast< ::std::string*>(&_default_platform_id_);
  gender_ = 0;
  yellowdmdlvl_ = 0;
  isyellowdmd_ = false;
  isyellowdmdyear_ = false;
  qqdmdlvl_ = 0;
  isqqdmd_ = false;
  isqqdmdyear_ = false;
  lastregion_ = -1;
  giftinfo_ = NULL;
  webflag_ = NULL;
  getcbgifttime_ = GOOGLE_LONGLONG(0);
  invitefrdcnt_ = 0;
  invitefriends_ = NULL;
  yellowdmdtime_ = 0u;
  dailyyellowres_ = NULL;
  invitefrdcntday_ = 0;
  gaininvitefrdday_ = false;
  lastlogintime_ = GOOGLE_LONGLONG(0);
  cancallback_ = true;
  invitefriendgift_ = NULL;
  ltrevision_ = GOOGLE_LONGLONG(0);
  ltsaverevision_ = GOOGLE_LONGLONG(0);
  ltmemrevision_ = GOOGLE_LONGLONG(0);
  invitefrdcntdaybylimit_ = 0;
  ishighyellowdmd_ = false;
  callbackfrduid_ = GOOGLE_LONGLONG(0);
  dayinvitefrdbackcnt_ = 0;
  daygetcoupon_ = 0;
  taskmark_ = NULL;
  channel_ = const_cast< ::std::string*>(&_default_channel_);
  promotion_ = NULL;
  idenflag_ = 0;
  qqtenyearbackflowflag_ = 0;
  nadultflag_ = 100;
  qhalldmdlvl_ = 0;
  isqhalldmd_ = false;
  isqhalldmdyear_ = false;
  ishighqhalldmd_ = false;
  ishighqhalldmdyear_ = false;
  bluedmdtime_ = 0u;
  siteid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_Plat::~DB_Plat() {
  SharedDtor();
}

void DB_Plat::SharedDtor() {
  if (platform_id_ != &_default_platform_id_) {
    delete platform_id_;
  }
  if (channel_ != &_default_channel_) {
    delete channel_;
  }
  if (this != default_instance_) {
    delete giftinfo_;
    delete webflag_;
    delete invitefriends_;
    delete dailyyellowres_;
    delete invitefriendgift_;
    delete taskmark_;
    delete promotion_;
  }
}

const ::google::protobuf::Descriptor* DB_Plat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_Plat_descriptor_;
}

const DB_Plat& DB_Plat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_Plat* DB_Plat::default_instance_ = NULL;

DB_Plat* DB_Plat::New() const {
  return new DB_Plat;
}

void DB_Plat::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (platform_id_ != &_default_platform_id_) {
        platform_id_->clear();
      }
    }
    gender_ = 0;
    yellowdmdlvl_ = 0;
    isyellowdmd_ = false;
    isyellowdmdyear_ = false;
    qqdmdlvl_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    isqqdmd_ = false;
    isqqdmdyear_ = false;
    lastregion_ = -1;
    if (_has_bit(12)) {
      if (giftinfo_ != NULL) giftinfo_->::DB_PlatGift::Clear();
    }
    if (_has_bit(13)) {
      if (webflag_ != NULL) webflag_->::DB_WebGiftFlag::Clear();
    }
    getcbgifttime_ = GOOGLE_LONGLONG(0);
    invitefrdcnt_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (_has_bit(16)) {
      if (invitefriends_ != NULL) invitefriends_->::DB_InviteFriends::Clear();
    }
    yellowdmdtime_ = 0u;
    if (_has_bit(19)) {
      if (dailyyellowres_ != NULL) dailyyellowres_->::DB_DailyYellowRes::Clear();
    }
    invitefrdcntday_ = 0;
    gaininvitefrdday_ = false;
    lastlogintime_ = GOOGLE_LONGLONG(0);
    cancallback_ = true;
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (_has_bit(24)) {
      if (invitefriendgift_ != NULL) invitefriendgift_->::DB_InviteFriendGift::Clear();
    }
    ltrevision_ = GOOGLE_LONGLONG(0);
    ltsaverevision_ = GOOGLE_LONGLONG(0);
    ltmemrevision_ = GOOGLE_LONGLONG(0);
    invitefrdcntdaybylimit_ = 0;
    ishighyellowdmd_ = false;
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    callbackfrduid_ = GOOGLE_LONGLONG(0);
    dayinvitefrdbackcnt_ = 0;
    daygetcoupon_ = 0;
    if (_has_bit(35)) {
      if (taskmark_ != NULL) taskmark_->::DB_TaskMark::Clear();
    }
    if (_has_bit(36)) {
      if (channel_ != &_default_channel_) {
        channel_->clear();
      }
    }
    if (_has_bit(37)) {
      if (promotion_ != NULL) promotion_->::DB_PlatCrossPromotion::Clear();
    }
    idenflag_ = 0;
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    qqtenyearbackflowflag_ = 0;
    nadultflag_ = 100;
    qhalldmdlvl_ = 0;
    isqhalldmd_ = false;
    isqhalldmdyear_ = false;
    ishighqhalldmd_ = false;
    ishighqhalldmdyear_ = false;
    bluedmdtime_ = 0u;
  }
  if (_has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    siteid_ = -1;
  }
  name_.Clear();
  profile_link_.Clear();
  platregion_.Clear();
  txmissiondata_.Clear();
  invitefriendmsgbylogon_.Clear();
  daygetcostgift_.Clear();
  invitegiftrecord_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_Plat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string platform_id = 1 [default = ""];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_platform_id()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->platform_id().data(), this->platform_id().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // repeated string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_name:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name(0).data(), this->name(0).length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_name;
        if (input->ExpectTag(26)) goto parse_profile_link;
        break;
      }
      
      // repeated string profile_link = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_profile_link:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_profile_link()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->profile_link(0).data(), this->profile_link(0).length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(26)) goto parse_profile_link;
        if (input->ExpectTag(32)) goto parse_gender;
        break;
      }
      
      // optional int32 gender = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_gender:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &gender_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_yellowDmdLvl;
        break;
      }
      
      // optional int32 yellowDmdLvl = 5 [default = 0];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_yellowDmdLvl:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &yellowdmdlvl_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_isYellowDmd;
        break;
      }
      
      // optional bool isYellowDmd = 6 [default = false];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_isYellowDmd:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &isyellowdmd_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_isYellowDmdYear;
        break;
      }
      
      // optional bool isYellowDmdYear = 7 [default = false];
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_isYellowDmdYear:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &isyellowdmdyear_));
        _set_bit(6);
        if (input->ExpectTag(64)) goto parse_QQDmdLvl;
        break;
      }
      
      // optional int32 QQDmdLvl = 8 [default = 0];
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_QQDmdLvl:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &qqdmdlvl_));
        _set_bit(7);
        if (input->ExpectTag(72)) goto parse_isQQDmd;
        break;
      }
      
      // optional bool isQQDmd = 9 [default = false];
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_isQQDmd:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &isqqdmd_));
        _set_bit(8);
        if (input->ExpectTag(80)) goto parse_isQQDmdYear;
        break;
      }
      
      // optional bool isQQDmdYear = 10 [default = false];
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_isQQDmdYear:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &isqqdmdyear_));
        _set_bit(9);
        if (input->ExpectTag(90)) goto parse_platRegion;
        break;
      }
      
      // repeated .DB_PlatRegion platRegion = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_platRegion:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_platregion()));
        if (input->ExpectTag(90)) goto parse_platRegion;
        if (input->ExpectTag(96)) goto parse_lastRegion;
        break;
      }
      
      // optional int32 lastRegion = 12 [default = -1];
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_lastRegion:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &lastregion_));
        _set_bit(11);
        if (input->ExpectTag(106)) goto parse_giftInfo;
        break;
      }
      
      // optional .DB_PlatGift giftInfo = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_giftInfo:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_giftinfo()));
        if (input->ExpectTag(114)) goto parse_webFlag;
        break;
      }
      
      // optional .DB_WebGiftFlag webFlag = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_webFlag:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_webflag()));
        if (input->ExpectTag(120)) goto parse_getCBGiftTime;
        break;
      }
      
      // optional int64 getCBGiftTime = 15 [default = 0];
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_getCBGiftTime:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &getcbgifttime_));
        _set_bit(14);
        if (input->ExpectTag(128)) goto parse_inviteFrdCnt;
        break;
      }
      
      // optional int32 inviteFrdCnt = 16 [default = 0];
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_inviteFrdCnt:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &invitefrdcnt_));
        _set_bit(15);
        if (input->ExpectTag(138)) goto parse_invitefriends;
        break;
      }
      
      // optional .DB_InviteFriends invitefriends = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_invitefriends:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_invitefriends()));
        if (input->ExpectTag(144)) goto parse_yellowDmdtime;
        break;
      }
      
      // optional uint32 yellowDmdtime = 18 [default = 0];
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_yellowDmdtime:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &yellowdmdtime_));
        _set_bit(17);
        if (input->ExpectTag(154)) goto parse_txmissiondata;
        break;
      }
      
      // repeated .DB_PTXMissionData txmissiondata = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_txmissiondata:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_txmissiondata()));
        if (input->ExpectTag(154)) goto parse_txmissiondata;
        if (input->ExpectTag(162)) goto parse_dailyyellowres;
        break;
      }
      
      // optional .DB_DailyYellowRes dailyyellowres = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_dailyyellowres:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_dailyyellowres()));
        if (input->ExpectTag(168)) goto parse_inviteFrdCntDay;
        break;
      }
      
      // optional int32 inviteFrdCntDay = 21 [default = 0];
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_inviteFrdCntDay:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &invitefrdcntday_));
        _set_bit(20);
        if (input->ExpectTag(176)) goto parse_gaininviteFrdDay;
        break;
      }
      
      // optional bool gaininviteFrdDay = 22 [default = false];
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_gaininviteFrdDay:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &gaininvitefrdday_));
        _set_bit(21);
        if (input->ExpectTag(184)) goto parse_lastLoginTime;
        break;
      }
      
      // optional int64 lastLoginTime = 23 [default = 0];
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_lastLoginTime:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &lastlogintime_));
        _set_bit(22);
        if (input->ExpectTag(192)) goto parse_cancallback;
        break;
      }
      
      // optional bool cancallback = 24 [default = true];
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_cancallback:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &cancallback_));
        _set_bit(23);
        if (input->ExpectTag(202)) goto parse_inviteFriendGift;
        break;
      }
      
      // optional .DB_InviteFriendGift inviteFriendGift = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_inviteFriendGift:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_invitefriendgift()));
        if (input->ExpectTag(210)) goto parse_inviteFriendMsgByLogon;
        break;
      }
      
      // repeated .DB_InviteFriendMsgByLogon inviteFriendMsgByLogon = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_inviteFriendMsgByLogon:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_invitefriendmsgbylogon()));
        if (input->ExpectTag(210)) goto parse_inviteFriendMsgByLogon;
        if (input->ExpectTag(216)) goto parse_ltRevision;
        break;
      }
      
      // optional int64 ltRevision = 27 [default = 0];
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ltRevision:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &ltrevision_));
        _set_bit(26);
        if (input->ExpectTag(224)) goto parse_ltSaveRevision;
        break;
      }
      
      // optional int64 ltSaveRevision = 28 [default = 0];
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ltSaveRevision:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &ltsaverevision_));
        _set_bit(27);
        if (input->ExpectTag(232)) goto parse_ltMemRevision;
        break;
      }
      
      // optional int64 ltMemRevision = 29 [default = 0];
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ltMemRevision:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &ltmemrevision_));
        _set_bit(28);
        if (input->ExpectTag(240)) goto parse_inviteFrdCntDayByLimit;
        break;
      }
      
      // optional int32 inviteFrdCntDayByLimit = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_inviteFrdCntDayByLimit:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &invitefrdcntdaybylimit_));
        _set_bit(29);
        if (input->ExpectTag(248)) goto parse_isHighYellowDmd;
        break;
      }
      
      // optional bool isHighYellowDmd = 31 [default = false];
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_isHighYellowDmd:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &ishighyellowdmd_));
        _set_bit(30);
        if (input->ExpectTag(256)) goto parse_dayGetCostGift;
        break;
      }
      
      // repeated int32 dayGetCostGift = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_dayGetCostGift:
        ::google::protobuf::int32 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &value));
        add_daygetcostgift(value);
        if (input->ExpectTag(256)) goto parse_dayGetCostGift;
        if (input->ExpectTag(264)) goto parse_callBackFrdUid;
        break;
      }
      
      // optional int64 callBackFrdUid = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_callBackFrdUid:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &callbackfrduid_));
        _set_bit(32);
        if (input->ExpectTag(272)) goto parse_dayInviteFrdBackCnt;
        break;
      }
      
      // optional int32 dayInviteFrdBackCnt = 34 [default = 0];
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_dayInviteFrdBackCnt:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &dayinvitefrdbackcnt_));
        _set_bit(33);
        if (input->ExpectTag(280)) goto parse_dayGetCoupon;
        break;
      }
      
      // optional int32 dayGetCoupon = 35 [default = 0];
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_dayGetCoupon:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &daygetcoupon_));
        _set_bit(34);
        if (input->ExpectTag(290)) goto parse_taskmark;
        break;
      }
      
      // optional .DB_TaskMark taskmark = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_taskmark:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_taskmark()));
        if (input->ExpectTag(298)) goto parse_channel;
        break;
      }
      
      // optional string channel = 37 [default = ""];
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_channel:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_channel()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->channel().data(), this->channel().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(306)) goto parse_promotion;
        break;
      }
      
      // optional .DB_PlatCrossPromotion promotion = 38;
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_promotion:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_promotion()));
        if (input->ExpectTag(312)) goto parse_inviteGiftRecord;
        break;
      }
      
      // repeated int32 inviteGiftRecord = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_inviteGiftRecord:
        ::google::protobuf::int32 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &value));
        add_invitegiftrecord(value);
        if (input->ExpectTag(312)) goto parse_inviteGiftRecord;
        if (input->ExpectTag(320)) goto parse_idenflag;
        break;
      }
      
      // optional int32 idenflag = 40 [default = 0];
      case 40: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_idenflag:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &idenflag_));
        _set_bit(39);
        if (input->ExpectTag(328)) goto parse_qqTenyearBackFlowFlag;
        break;
      }
      
      // optional int32 qqTenyearBackFlowFlag = 41;
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_qqTenyearBackFlowFlag:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &qqtenyearbackflowflag_));
        _set_bit(40);
        if (input->ExpectTag(336)) goto parse_nAdultFlag;
        break;
      }
      
      // optional int32 nAdultFlag = 42 [default = 100];
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_nAdultFlag:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &nadultflag_));
        _set_bit(41);
        if (input->ExpectTag(344)) goto parse_QHallDmdLvl;
        break;
      }
      
      // optional int32 QHallDmdLvl = 43 [default = 0];
      case 43: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_QHallDmdLvl:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &qhalldmdlvl_));
        _set_bit(42);
        if (input->ExpectTag(352)) goto parse_IsQHallDmd;
        break;
      }
      
      // optional bool IsQHallDmd = 44 [default = false];
      case 44: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_IsQHallDmd:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &isqhalldmd_));
        _set_bit(43);
        if (input->ExpectTag(360)) goto parse_IsQHallDmdYear;
        break;
      }
      
      // optional bool IsQHallDmdYear = 45 [default = false];
      case 45: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_IsQHallDmdYear:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &isqhalldmdyear_));
        _set_bit(44);
        if (input->ExpectTag(368)) goto parse_IsHighQHallDmd;
        break;
      }
      
      // optional bool IsHighQHallDmd = 46 [default = false];
      case 46: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_IsHighQHallDmd:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &ishighqhalldmd_));
        _set_bit(45);
        if (input->ExpectTag(376)) goto parse_IsHighQHallDmdYear;
        break;
      }
      
      // optional bool IsHighQHallDmdYear = 47 [default = false];
      case 47: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_IsHighQHallDmdYear:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &ishighqhalldmdyear_));
        _set_bit(46);
        if (input->ExpectTag(384)) goto parse_bluedmdtime;
        break;
      }
      
      // optional uint32 bluedmdtime = 48 [default = 0];
      case 48: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_bluedmdtime:
        DO_(::google::protobuf::internal::WireFormatLite::ReadUInt32(
              input, &bluedmdtime_));
        _set_bit(47);
        if (input->ExpectTag(392)) goto parse_siteid;
        break;
      }
      
      // optional int32 siteid = 49 [default = -1];
      case 49: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_siteid:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &siteid_));
        _set_bit(48);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_Plat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_Plat::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required string platform_id = 1 [default = ""];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platform_id().data(), this->platform_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->platform_id(), output);
  }
  
  // repeated string name = 2;
  for (int i = 0; i < this->name_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->name(i).data(), this->name(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(i), output);
  }
  
  // repeated string profile_link = 3;
  for (int i = 0; i < this->profile_link_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->profile_link(i).data(), this->profile_link(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->profile_link(i), output);
  }
  
  // optional int32 gender = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->gender(), output);
  }
  
  // optional int32 yellowDmdLvl = 5 [default = 0];
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->yellowdmdlvl(), output);
  }
  
  // optional bool isYellowDmd = 6 [default = false];
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isyellowdmd(), output);
  }
  
  // optional bool isYellowDmdYear = 7 [default = false];
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isyellowdmdyear(), output);
  }
  
  // optional int32 QQDmdLvl = 8 [default = 0];
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->qqdmdlvl(), output);
  }
  
  // optional bool isQQDmd = 9 [default = false];
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->isqqdmd(), output);
  }
  
  // optional bool isQQDmdYear = 10 [default = false];
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->isqqdmdyear(), output);
  }
  
  // repeated .DB_PlatRegion platRegion = 11;
  for (int i = 0; i < this->platregion_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      11, this->platregion(i), output);
  }
  
  // optional int32 lastRegion = 12 [default = -1];
  if (_has_bit(11)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->lastregion(), output);
  }
  
  // optional .DB_PlatGift giftInfo = 13;
  if (_has_bit(12)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      13, this->giftinfo(), output);
  }
  
  // optional .DB_WebGiftFlag webFlag = 14;
  if (_has_bit(13)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      14, this->webflag(), output);
  }
  
  // optional int64 getCBGiftTime = 15 [default = 0];
  if (_has_bit(14)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->getcbgifttime(), output);
  }
  
  // optional int32 inviteFrdCnt = 16 [default = 0];
  if (_has_bit(15)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->invitefrdcnt(), output);
  }
  
  // optional .DB_InviteFriends invitefriends = 17;
  if (_has_bit(16)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      17, this->invitefriends(), output);
  }
  
  // optional uint32 yellowDmdtime = 18 [default = 0];
  if (_has_bit(17)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->yellowdmdtime(), output);
  }
  
  // repeated .DB_PTXMissionData txmissiondata = 19;
  for (int i = 0; i < this->txmissiondata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      19, this->txmissiondata(i), output);
  }
  
  // optional .DB_DailyYellowRes dailyyellowres = 20;
  if (_has_bit(19)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      20, this->dailyyellowres(), output);
  }
  
  // optional int32 inviteFrdCntDay = 21 [default = 0];
  if (_has_bit(20)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->invitefrdcntday(), output);
  }
  
  // optional bool gaininviteFrdDay = 22 [default = false];
  if (_has_bit(21)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->gaininvitefrdday(), output);
  }
  
  // optional int64 lastLoginTime = 23 [default = 0];
  if (_has_bit(22)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(23, this->lastlogintime(), output);
  }
  
  // optional bool cancallback = 24 [default = true];
  if (_has_bit(23)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(24, this->cancallback(), output);
  }
  
  // optional .DB_InviteFriendGift inviteFriendGift = 25;
  if (_has_bit(24)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      25, this->invitefriendgift(), output);
  }
  
  // repeated .DB_InviteFriendMsgByLogon inviteFriendMsgByLogon = 26;
  for (int i = 0; i < this->invitefriendmsgbylogon_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      26, this->invitefriendmsgbylogon(i), output);
  }
  
  // optional int64 ltRevision = 27 [default = 0];
  if (_has_bit(26)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(27, this->ltrevision(), output);
  }
  
  // optional int64 ltSaveRevision = 28 [default = 0];
  if (_has_bit(27)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(28, this->ltsaverevision(), output);
  }
  
  // optional int64 ltMemRevision = 29 [default = 0];
  if (_has_bit(28)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(29, this->ltmemrevision(), output);
  }
  
  // optional int32 inviteFrdCntDayByLimit = 30;
  if (_has_bit(29)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->invitefrdcntdaybylimit(), output);
  }
  
  // optional bool isHighYellowDmd = 31 [default = false];
  if (_has_bit(30)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(31, this->ishighyellowdmd(), output);
  }
  
  // repeated int32 dayGetCostGift = 32;
  for (int i = 0; i < this->daygetcostgift_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      32, this->daygetcostgift(i), output);
  }
  
  // optional int64 callBackFrdUid = 33;
  if (_has_bit(32)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(33, this->callbackfrduid(), output);
  }
  
  // optional int32 dayInviteFrdBackCnt = 34 [default = 0];
  if (_has_bit(33)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(34, this->dayinvitefrdbackcnt(), output);
  }
  
  // optional int32 dayGetCoupon = 35 [default = 0];
  if (_has_bit(34)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(35, this->daygetcoupon(), output);
  }
  
  // optional .DB_TaskMark taskmark = 36;
  if (_has_bit(35)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      36, this->taskmark(), output);
  }
  
  // optional string channel = 37 [default = ""];
  if (_has_bit(36)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      37, this->channel(), output);
  }
  
  // optional .DB_PlatCrossPromotion promotion = 38;
  if (_has_bit(37)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      38, this->promotion(), output);
  }
  
  // repeated int32 inviteGiftRecord = 39;
  for (int i = 0; i < this->invitegiftrecord_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      39, this->invitegiftrecord(i), output);
  }
  
  // optional int32 idenflag = 40 [default = 0];
  if (_has_bit(39)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->idenflag(), output);
  }
  
  // optional int32 qqTenyearBackFlowFlag = 41;
  if (_has_bit(40)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(41, this->qqtenyearbackflowflag(), output);
  }
  
  // optional int32 nAdultFlag = 42 [default = 100];
  if (_has_bit(41)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(42, this->nadultflag(), output);
  }
  
  // optional int32 QHallDmdLvl = 43 [default = 0];
  if (_has_bit(42)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(43, this->qhalldmdlvl(), output);
  }
  
  // optional bool IsQHallDmd = 44 [default = false];
  if (_has_bit(43)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(44, this->isqhalldmd(), output);
  }
  
  // optional bool IsQHallDmdYear = 45 [default = false];
  if (_has_bit(44)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(45, this->isqhalldmdyear(), output);
  }
  
  // optional bool IsHighQHallDmd = 46 [default = false];
  if (_has_bit(45)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(46, this->ishighqhalldmd(), output);
  }
  
  // optional bool IsHighQHallDmdYear = 47 [default = false];
  if (_has_bit(46)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(47, this->ishighqhalldmdyear(), output);
  }
  
  // optional uint32 bluedmdtime = 48 [default = 0];
  if (_has_bit(47)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(48, this->bluedmdtime(), output);
  }
  
  // optional int32 siteid = 49 [default = -1];
  if (_has_bit(48)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(49, this->siteid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_Plat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string platform_id = 1 [default = ""];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platform_id().data(), this->platform_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->platform_id(), target);
  }
  
  // repeated string name = 2;
  for (int i = 0; i < this->name_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name(i).data(), this->name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->name(i), target);
  }
  
  // repeated string profile_link = 3;
  for (int i = 0; i < this->profile_link_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->profile_link(i).data(), this->profile_link(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->profile_link(i), target);
  }
  
  // optional int32 gender = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->gender(), target);
  }
  
  // optional int32 yellowDmdLvl = 5 [default = 0];
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->yellowdmdlvl(), target);
  }
  
  // optional bool isYellowDmd = 6 [default = false];
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->isyellowdmd(), target);
  }
  
  // optional bool isYellowDmdYear = 7 [default = false];
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isyellowdmdyear(), target);
  }
  
  // optional int32 QQDmdLvl = 8 [default = 0];
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->qqdmdlvl(), target);
  }
  
  // optional bool isQQDmd = 9 [default = false];
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->isqqdmd(), target);
  }
  
  // optional bool isQQDmdYear = 10 [default = false];
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->isqqdmdyear(), target);
  }
  
  // repeated .DB_PlatRegion platRegion = 11;
  for (int i = 0; i < this->platregion_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->platregion(i), target);
  }
  
  // optional int32 lastRegion = 12 [default = -1];
  if (_has_bit(11)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->lastregion(), target);
  }
  
  // optional .DB_PlatGift giftInfo = 13;
  if (_has_bit(12)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->giftinfo(), target);
  }
  
  // optional .DB_WebGiftFlag webFlag = 14;
  if (_has_bit(13)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->webflag(), target);
  }
  
  // optional int64 getCBGiftTime = 15 [default = 0];
  if (_has_bit(14)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->getcbgifttime(), target);
  }
  
  // optional int32 inviteFrdCnt = 16 [default = 0];
  if (_has_bit(15)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->invitefrdcnt(), target);
  }
  
  // optional .DB_InviteFriends invitefriends = 17;
  if (_has_bit(16)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->invitefriends(), target);
  }
  
  // optional uint32 yellowDmdtime = 18 [default = 0];
  if (_has_bit(17)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->yellowdmdtime(), target);
  }
  
  // repeated .DB_PTXMissionData txmissiondata = 19;
  for (int i = 0; i < this->txmissiondata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->txmissiondata(i), target);
  }
  
  // optional .DB_DailyYellowRes dailyyellowres = 20;
  if (_has_bit(19)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->dailyyellowres(), target);
  }
  
  // optional int32 inviteFrdCntDay = 21 [default = 0];
  if (_has_bit(20)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->invitefrdcntday(), target);
  }
  
  // optional bool gaininviteFrdDay = 22 [default = false];
  if (_has_bit(21)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->gaininvitefrdday(), target);
  }
  
  // optional int64 lastLoginTime = 23 [default = 0];
  if (_has_bit(22)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(23, this->lastlogintime(), target);
  }
  
  // optional bool cancallback = 24 [default = true];
  if (_has_bit(23)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(24, this->cancallback(), target);
  }
  
  // optional .DB_InviteFriendGift inviteFriendGift = 25;
  if (_has_bit(24)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        25, this->invitefriendgift(), target);
  }
  
  // repeated .DB_InviteFriendMsgByLogon inviteFriendMsgByLogon = 26;
  for (int i = 0; i < this->invitefriendmsgbylogon_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        26, this->invitefriendmsgbylogon(i), target);
  }
  
  // optional int64 ltRevision = 27 [default = 0];
  if (_has_bit(26)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(27, this->ltrevision(), target);
  }
  
  // optional int64 ltSaveRevision = 28 [default = 0];
  if (_has_bit(27)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(28, this->ltsaverevision(), target);
  }
  
  // optional int64 ltMemRevision = 29 [default = 0];
  if (_has_bit(28)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(29, this->ltmemrevision(), target);
  }
  
  // optional int32 inviteFrdCntDayByLimit = 30;
  if (_has_bit(29)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->invitefrdcntdaybylimit(), target);
  }
  
  // optional bool isHighYellowDmd = 31 [default = false];
  if (_has_bit(30)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(31, this->ishighyellowdmd(), target);
  }
  
  // repeated int32 dayGetCostGift = 32;
  for (int i = 0; i < this->daygetcostgift_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(32, this->daygetcostgift(i), target);
  }
  
  // optional int64 callBackFrdUid = 33;
  if (_has_bit(32)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(33, this->callbackfrduid(), target);
  }
  
  // optional int32 dayInviteFrdBackCnt = 34 [default = 0];
  if (_has_bit(33)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(34, this->dayinvitefrdbackcnt(), target);
  }
  
  // optional int32 dayGetCoupon = 35 [default = 0];
  if (_has_bit(34)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(35, this->daygetcoupon(), target);
  }
  
  // optional .DB_TaskMark taskmark = 36;
  if (_has_bit(35)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        36, this->taskmark(), target);
  }
  
  // optional string channel = 37 [default = ""];
  if (_has_bit(36)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        37, this->channel(), target);
  }
  
  // optional .DB_PlatCrossPromotion promotion = 38;
  if (_has_bit(37)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        38, this->promotion(), target);
  }
  
  // repeated int32 inviteGiftRecord = 39;
  for (int i = 0; i < this->invitegiftrecord_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(39, this->invitegiftrecord(i), target);
  }
  
  // optional int32 idenflag = 40 [default = 0];
  if (_has_bit(39)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->idenflag(), target);
  }
  
  // optional int32 qqTenyearBackFlowFlag = 41;
  if (_has_bit(40)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(41, this->qqtenyearbackflowflag(), target);
  }
  
  // optional int32 nAdultFlag = 42 [default = 100];
  if (_has_bit(41)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(42, this->nadultflag(), target);
  }
  
  // optional int32 QHallDmdLvl = 43 [default = 0];
  if (_has_bit(42)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(43, this->qhalldmdlvl(), target);
  }
  
  // optional bool IsQHallDmd = 44 [default = false];
  if (_has_bit(43)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(44, this->isqhalldmd(), target);
  }
  
  // optional bool IsQHallDmdYear = 45 [default = false];
  if (_has_bit(44)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(45, this->isqhalldmdyear(), target);
  }
  
  // optional bool IsHighQHallDmd = 46 [default = false];
  if (_has_bit(45)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(46, this->ishighqhalldmd(), target);
  }
  
  // optional bool IsHighQHallDmdYear = 47 [default = false];
  if (_has_bit(46)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(47, this->ishighqhalldmdyear(), target);
  }
  
  // optional uint32 bluedmdtime = 48 [default = 0];
  if (_has_bit(47)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(48, this->bluedmdtime(), target);
  }
  
  // optional int32 siteid = 49 [default = -1];
  if (_has_bit(48)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(49, this->siteid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_Plat::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string platform_id = 1 [default = ""];
    if (has_platform_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platform_id());
    }
    
    // optional int32 gender = 4;
    if (has_gender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gender());
    }
    
    // optional int32 yellowDmdLvl = 5 [default = 0];
    if (has_yellowdmdlvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yellowdmdlvl());
    }
    
    // optional bool isYellowDmd = 6 [default = false];
    if (has_isyellowdmd()) {
      total_size += 1 + 1;
    }
    
    // optional bool isYellowDmdYear = 7 [default = false];
    if (has_isyellowdmdyear()) {
      total_size += 1 + 1;
    }
    
    // optional int32 QQDmdLvl = 8 [default = 0];
    if (has_qqdmdlvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qqdmdlvl());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool isQQDmd = 9 [default = false];
    if (has_isqqdmd()) {
      total_size += 1 + 1;
    }
    
    // optional bool isQQDmdYear = 10 [default = false];
    if (has_isqqdmdyear()) {
      total_size += 1 + 1;
    }
    
    // optional int32 lastRegion = 12 [default = -1];
    if (has_lastregion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lastregion());
    }
    
    // optional .DB_PlatGift giftInfo = 13;
    if (has_giftinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->giftinfo());
    }
    
    // optional .DB_WebGiftFlag webFlag = 14;
    if (has_webflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->webflag());
    }
    
    // optional int64 getCBGiftTime = 15 [default = 0];
    if (has_getcbgifttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->getcbgifttime());
    }
    
    // optional int32 inviteFrdCnt = 16 [default = 0];
    if (has_invitefrdcnt()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->invitefrdcnt());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .DB_InviteFriends invitefriends = 17;
    if (has_invitefriends()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->invitefriends());
    }
    
    // optional uint32 yellowDmdtime = 18 [default = 0];
    if (has_yellowdmdtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->yellowdmdtime());
    }
    
    // optional .DB_DailyYellowRes dailyyellowres = 20;
    if (has_dailyyellowres()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dailyyellowres());
    }
    
    // optional int32 inviteFrdCntDay = 21 [default = 0];
    if (has_invitefrdcntday()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->invitefrdcntday());
    }
    
    // optional bool gaininviteFrdDay = 22 [default = false];
    if (has_gaininvitefrdday()) {
      total_size += 2 + 1;
    }
    
    // optional int64 lastLoginTime = 23 [default = 0];
    if (has_lastlogintime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lastlogintime());
    }
    
    // optional bool cancallback = 24 [default = true];
    if (has_cancallback()) {
      total_size += 2 + 1;
    }
    
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional .DB_InviteFriendGift inviteFriendGift = 25;
    if (has_invitefriendgift()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->invitefriendgift());
    }
    
    // optional int64 ltRevision = 27 [default = 0];
    if (has_ltrevision()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ltrevision());
    }
    
    // optional int64 ltSaveRevision = 28 [default = 0];
    if (has_ltsaverevision()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ltsaverevision());
    }
    
    // optional int64 ltMemRevision = 29 [default = 0];
    if (has_ltmemrevision()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ltmemrevision());
    }
    
    // optional int32 inviteFrdCntDayByLimit = 30;
    if (has_invitefrdcntdaybylimit()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->invitefrdcntdaybylimit());
    }
    
    // optional bool isHighYellowDmd = 31 [default = false];
    if (has_ishighyellowdmd()) {
      total_size += 2 + 1;
    }
    
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional int64 callBackFrdUid = 33;
    if (has_callbackfrduid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->callbackfrduid());
    }
    
    // optional int32 dayInviteFrdBackCnt = 34 [default = 0];
    if (has_dayinvitefrdbackcnt()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dayinvitefrdbackcnt());
    }
    
    // optional int32 dayGetCoupon = 35 [default = 0];
    if (has_daygetcoupon()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->daygetcoupon());
    }
    
    // optional .DB_TaskMark taskmark = 36;
    if (has_taskmark()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->taskmark());
    }
    
    // optional string channel = 37 [default = ""];
    if (has_channel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel());
    }
    
    // optional .DB_PlatCrossPromotion promotion = 38;
    if (has_promotion()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->promotion());
    }
    
    // optional int32 idenflag = 40 [default = 0];
    if (has_idenflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->idenflag());
    }
    
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // optional int32 qqTenyearBackFlowFlag = 41;
    if (has_qqtenyearbackflowflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qqtenyearbackflowflag());
    }
    
    // optional int32 nAdultFlag = 42 [default = 100];
    if (has_nadultflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nadultflag());
    }
    
    // optional int32 QHallDmdLvl = 43 [default = 0];
    if (has_qhalldmdlvl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qhalldmdlvl());
    }
    
    // optional bool IsQHallDmd = 44 [default = false];
    if (has_isqhalldmd()) {
      total_size += 2 + 1;
    }
    
    // optional bool IsQHallDmdYear = 45 [default = false];
    if (has_isqhalldmdyear()) {
      total_size += 2 + 1;
    }
    
    // optional bool IsHighQHallDmd = 46 [default = false];
    if (has_ishighqhalldmd()) {
      total_size += 2 + 1;
    }
    
    // optional bool IsHighQHallDmdYear = 47 [default = false];
    if (has_ishighqhalldmdyear()) {
      total_size += 2 + 1;
    }
    
    // optional uint32 bluedmdtime = 48 [default = 0];
    if (has_bluedmdtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bluedmdtime());
    }
    
  }
  if (_has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    // optional int32 siteid = 49 [default = -1];
    if (has_siteid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->siteid());
    }
    
  }
  // repeated string name = 2;
  total_size += 1 * this->name_size();
  for (int i = 0; i < this->name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->name(i));
  }
  
  // repeated string profile_link = 3;
  total_size += 1 * this->profile_link_size();
  for (int i = 0; i < this->profile_link_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->profile_link(i));
  }
  
  // repeated .DB_PlatRegion platRegion = 11;
  total_size += 1 * this->platregion_size();
  for (int i = 0; i < this->platregion_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->platregion(i));
  }
  
  // repeated .DB_PTXMissionData txmissiondata = 19;
  total_size += 2 * this->txmissiondata_size();
  for (int i = 0; i < this->txmissiondata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->txmissiondata(i));
  }
  
  // repeated .DB_InviteFriendMsgByLogon inviteFriendMsgByLogon = 26;
  total_size += 2 * this->invitefriendmsgbylogon_size();
  for (int i = 0; i < this->invitefriendmsgbylogon_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->invitefriendmsgbylogon(i));
  }
  
  // repeated int32 dayGetCostGift = 32;
  {
    int data_size = 0;
    for (int i = 0; i < this->daygetcostgift_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->daygetcostgift(i));
    }
    total_size += 2 * this->daygetcostgift_size() + data_size;
  }
  
  // repeated int32 inviteGiftRecord = 39;
  {
    int data_size = 0;
    for (int i = 0; i < this->invitegiftrecord_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->invitegiftrecord(i));
    }
    total_size += 2 * this->invitegiftrecord_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_Plat::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_Plat* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_Plat*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_Plat::MergeFrom(const DB_Plat& from) {
  GOOGLE_CHECK_NE(&from, this);
  name_.MergeFrom(from.name_);
  profile_link_.MergeFrom(from.profile_link_);
  platregion_.MergeFrom(from.platregion_);
  txmissiondata_.MergeFrom(from.txmissiondata_);
  invitefriendmsgbylogon_.MergeFrom(from.invitefriendmsgbylogon_);
  daygetcostgift_.MergeFrom(from.daygetcostgift_);
  invitegiftrecord_.MergeFrom(from.invitegiftrecord_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_platform_id(from.platform_id());
    }
    if (from._has_bit(3)) {
      set_gender(from.gender());
    }
    if (from._has_bit(4)) {
      set_yellowdmdlvl(from.yellowdmdlvl());
    }
    if (from._has_bit(5)) {
      set_isyellowdmd(from.isyellowdmd());
    }
    if (from._has_bit(6)) {
      set_isyellowdmdyear(from.isyellowdmdyear());
    }
    if (from._has_bit(7)) {
      set_qqdmdlvl(from.qqdmdlvl());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      set_isqqdmd(from.isqqdmd());
    }
    if (from._has_bit(9)) {
      set_isqqdmdyear(from.isqqdmdyear());
    }
    if (from._has_bit(11)) {
      set_lastregion(from.lastregion());
    }
    if (from._has_bit(12)) {
      mutable_giftinfo()->::DB_PlatGift::MergeFrom(from.giftinfo());
    }
    if (from._has_bit(13)) {
      mutable_webflag()->::DB_WebGiftFlag::MergeFrom(from.webflag());
    }
    if (from._has_bit(14)) {
      set_getcbgifttime(from.getcbgifttime());
    }
    if (from._has_bit(15)) {
      set_invitefrdcnt(from.invitefrdcnt());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from._has_bit(16)) {
      mutable_invitefriends()->::DB_InviteFriends::MergeFrom(from.invitefriends());
    }
    if (from._has_bit(17)) {
      set_yellowdmdtime(from.yellowdmdtime());
    }
    if (from._has_bit(19)) {
      mutable_dailyyellowres()->::DB_DailyYellowRes::MergeFrom(from.dailyyellowres());
    }
    if (from._has_bit(20)) {
      set_invitefrdcntday(from.invitefrdcntday());
    }
    if (from._has_bit(21)) {
      set_gaininvitefrdday(from.gaininvitefrdday());
    }
    if (from._has_bit(22)) {
      set_lastlogintime(from.lastlogintime());
    }
    if (from._has_bit(23)) {
      set_cancallback(from.cancallback());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from._has_bit(24)) {
      mutable_invitefriendgift()->::DB_InviteFriendGift::MergeFrom(from.invitefriendgift());
    }
    if (from._has_bit(26)) {
      set_ltrevision(from.ltrevision());
    }
    if (from._has_bit(27)) {
      set_ltsaverevision(from.ltsaverevision());
    }
    if (from._has_bit(28)) {
      set_ltmemrevision(from.ltmemrevision());
    }
    if (from._has_bit(29)) {
      set_invitefrdcntdaybylimit(from.invitefrdcntdaybylimit());
    }
    if (from._has_bit(30)) {
      set_ishighyellowdmd(from.ishighyellowdmd());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from._has_bit(32)) {
      set_callbackfrduid(from.callbackfrduid());
    }
    if (from._has_bit(33)) {
      set_dayinvitefrdbackcnt(from.dayinvitefrdbackcnt());
    }
    if (from._has_bit(34)) {
      set_daygetcoupon(from.daygetcoupon());
    }
    if (from._has_bit(35)) {
      mutable_taskmark()->::DB_TaskMark::MergeFrom(from.taskmark());
    }
    if (from._has_bit(36)) {
      set_channel(from.channel());
    }
    if (from._has_bit(37)) {
      mutable_promotion()->::DB_PlatCrossPromotion::MergeFrom(from.promotion());
    }
    if (from._has_bit(39)) {
      set_idenflag(from.idenflag());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from._has_bit(40)) {
      set_qqtenyearbackflowflag(from.qqtenyearbackflowflag());
    }
    if (from._has_bit(41)) {
      set_nadultflag(from.nadultflag());
    }
    if (from._has_bit(42)) {
      set_qhalldmdlvl(from.qhalldmdlvl());
    }
    if (from._has_bit(43)) {
      set_isqhalldmd(from.isqhalldmd());
    }
    if (from._has_bit(44)) {
      set_isqhalldmdyear(from.isqhalldmdyear());
    }
    if (from._has_bit(45)) {
      set_ishighqhalldmd(from.ishighqhalldmd());
    }
    if (from._has_bit(46)) {
      set_ishighqhalldmdyear(from.ishighqhalldmdyear());
    }
    if (from._has_bit(47)) {
      set_bluedmdtime(from.bluedmdtime());
    }
  }
  if (from._has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    if (from._has_bit(48)) {
      set_siteid(from.siteid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_Plat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_Plat::CopyFrom(const DB_Plat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_Plat::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < platregion_size(); i++) {
    if (!this->platregion(i).IsInitialized()) return false;
  }
  return true;
}

void DB_Plat::Swap(DB_Plat* other) {
  if (other != this) {
    std::swap(platform_id_, other->platform_id_);
    name_.Swap(&other->name_);
    profile_link_.Swap(&other->profile_link_);
    std::swap(gender_, other->gender_);
    std::swap(yellowdmdlvl_, other->yellowdmdlvl_);
    std::swap(isyellowdmd_, other->isyellowdmd_);
    std::swap(isyellowdmdyear_, other->isyellowdmdyear_);
    std::swap(qqdmdlvl_, other->qqdmdlvl_);
    std::swap(isqqdmd_, other->isqqdmd_);
    std::swap(isqqdmdyear_, other->isqqdmdyear_);
    platregion_.Swap(&other->platregion_);
    std::swap(lastregion_, other->lastregion_);
    std::swap(giftinfo_, other->giftinfo_);
    std::swap(webflag_, other->webflag_);
    std::swap(getcbgifttime_, other->getcbgifttime_);
    std::swap(invitefrdcnt_, other->invitefrdcnt_);
    std::swap(invitefriends_, other->invitefriends_);
    std::swap(yellowdmdtime_, other->yellowdmdtime_);
    txmissiondata_.Swap(&other->txmissiondata_);
    std::swap(dailyyellowres_, other->dailyyellowres_);
    std::swap(invitefrdcntday_, other->invitefrdcntday_);
    std::swap(gaininvitefrdday_, other->gaininvitefrdday_);
    std::swap(lastlogintime_, other->lastlogintime_);
    std::swap(cancallback_, other->cancallback_);
    std::swap(invitefriendgift_, other->invitefriendgift_);
    invitefriendmsgbylogon_.Swap(&other->invitefriendmsgbylogon_);
    std::swap(ltrevision_, other->ltrevision_);
    std::swap(ltsaverevision_, other->ltsaverevision_);
    std::swap(ltmemrevision_, other->ltmemrevision_);
    std::swap(invitefrdcntdaybylimit_, other->invitefrdcntdaybylimit_);
    std::swap(ishighyellowdmd_, other->ishighyellowdmd_);
    daygetcostgift_.Swap(&other->daygetcostgift_);
    std::swap(callbackfrduid_, other->callbackfrduid_);
    std::swap(dayinvitefrdbackcnt_, other->dayinvitefrdbackcnt_);
    std::swap(daygetcoupon_, other->daygetcoupon_);
    std::swap(taskmark_, other->taskmark_);
    std::swap(channel_, other->channel_);
    std::swap(promotion_, other->promotion_);
    invitegiftrecord_.Swap(&other->invitegiftrecord_);
    std::swap(idenflag_, other->idenflag_);
    std::swap(qqtenyearbackflowflag_, other->qqtenyearbackflowflag_);
    std::swap(nadultflag_, other->nadultflag_);
    std::swap(qhalldmdlvl_, other->qhalldmdlvl_);
    std::swap(isqhalldmd_, other->isqhalldmd_);
    std::swap(isqhalldmdyear_, other->isqhalldmdyear_);
    std::swap(ishighqhalldmd_, other->ishighqhalldmd_);
    std::swap(ishighqhalldmdyear_, other->ishighqhalldmdyear_);
    std::swap(bluedmdtime_, other->bluedmdtime_);
    std::swap(siteid_, other->siteid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_Plat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_Plat_descriptor_;
  metadata.reflection = DB_Plat_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_DailyYellowRes::kLastGetTimeFieldNumber;
#endif  // !_MSC_VER

DB_DailyYellowRes::DB_DailyYellowRes() {
  SharedCtor();
}

void DB_DailyYellowRes::InitAsDefaultInstance() {
}

DB_DailyYellowRes::DB_DailyYellowRes(const DB_DailyYellowRes& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_DailyYellowRes::SharedCtor() {
  _cached_size_ = 0;
  lastgettime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_DailyYellowRes::~DB_DailyYellowRes() {
  SharedDtor();
}

void DB_DailyYellowRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_DailyYellowRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_DailyYellowRes_descriptor_;
}

const DB_DailyYellowRes& DB_DailyYellowRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_DailyYellowRes* DB_DailyYellowRes::default_instance_ = NULL;

DB_DailyYellowRes* DB_DailyYellowRes::New() const {
  return new DB_DailyYellowRes;
}

void DB_DailyYellowRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    lastgettime_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_DailyYellowRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 lastGetTime = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &lastgettime_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_DailyYellowRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_DailyYellowRes::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 lastGetTime = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->lastgettime(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_DailyYellowRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 lastGetTime = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->lastgettime(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_DailyYellowRes::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 lastGetTime = 1;
    if (has_lastgettime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lastgettime());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_DailyYellowRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_DailyYellowRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_DailyYellowRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_DailyYellowRes::MergeFrom(const DB_DailyYellowRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_lastgettime(from.lastgettime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_DailyYellowRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_DailyYellowRes::CopyFrom(const DB_DailyYellowRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_DailyYellowRes::IsInitialized() const {
  
  return true;
}

void DB_DailyYellowRes::Swap(DB_DailyYellowRes* other) {
  if (other != this) {
    std::swap(lastgettime_, other->lastgettime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_DailyYellowRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_DailyYellowRes_descriptor_;
  metadata.reflection = DB_DailyYellowRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_InviteFriendGift::kInviteFrdCntForNewFieldNumber;
const int DB_InviteFriendGift::kInvitegiftmsgFieldNumber;
const int DB_InviteFriendGift::kInvitedfriendlvmsgFieldNumber;
const int DB_InviteFriendGift::kUnGetCouponFieldNumber;
#endif  // !_MSC_VER

DB_InviteFriendGift::DB_InviteFriendGift() {
  SharedCtor();
}

void DB_InviteFriendGift::InitAsDefaultInstance() {
}

DB_InviteFriendGift::DB_InviteFriendGift(const DB_InviteFriendGift& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_InviteFriendGift::SharedCtor() {
  _cached_size_ = 0;
  invitefrdcntfornew_ = 0;
  ungetcoupon_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_InviteFriendGift::~DB_InviteFriendGift() {
  SharedDtor();
}

void DB_InviteFriendGift::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_InviteFriendGift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_InviteFriendGift_descriptor_;
}

const DB_InviteFriendGift& DB_InviteFriendGift::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_InviteFriendGift* DB_InviteFriendGift::default_instance_ = NULL;

DB_InviteFriendGift* DB_InviteFriendGift::New() const {
  return new DB_InviteFriendGift;
}

void DB_InviteFriendGift::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    invitefrdcntfornew_ = 0;
    ungetcoupon_ = 0;
  }
  invitegiftmsg_.Clear();
  invitedfriendlvmsg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_InviteFriendGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 inviteFrdCntForNew = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &invitefrdcntfornew_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_invitegiftmsg;
        break;
      }
      
      // repeated .DB_InviteGiftMsg invitegiftmsg = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_invitegiftmsg:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_invitegiftmsg()));
        if (input->ExpectTag(18)) goto parse_invitegiftmsg;
        if (input->ExpectTag(26)) goto parse_invitedfriendlvmsg;
        break;
      }
      
      // repeated .DB_InvitedFriendLvMsg invitedfriendlvmsg = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_invitedfriendlvmsg:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_invitedfriendlvmsg()));
        if (input->ExpectTag(26)) goto parse_invitedfriendlvmsg;
        if (input->ExpectTag(32)) goto parse_unGetCoupon;
        break;
      }
      
      // optional int32 unGetCoupon = 4 [default = 0];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_unGetCoupon:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &ungetcoupon_));
        _set_bit(3);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_InviteFriendGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_InviteFriendGift::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 inviteFrdCntForNew = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->invitefrdcntfornew(), output);
  }
  
  // repeated .DB_InviteGiftMsg invitegiftmsg = 2;
  for (int i = 0; i < this->invitegiftmsg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->invitegiftmsg(i), output);
  }
  
  // repeated .DB_InvitedFriendLvMsg invitedfriendlvmsg = 3;
  for (int i = 0; i < this->invitedfriendlvmsg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->invitedfriendlvmsg(i), output);
  }
  
  // optional int32 unGetCoupon = 4 [default = 0];
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ungetcoupon(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_InviteFriendGift::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 inviteFrdCntForNew = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->invitefrdcntfornew(), target);
  }
  
  // repeated .DB_InviteGiftMsg invitegiftmsg = 2;
  for (int i = 0; i < this->invitegiftmsg_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->invitegiftmsg(i), target);
  }
  
  // repeated .DB_InvitedFriendLvMsg invitedfriendlvmsg = 3;
  for (int i = 0; i < this->invitedfriendlvmsg_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->invitedfriendlvmsg(i), target);
  }
  
  // optional int32 unGetCoupon = 4 [default = 0];
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ungetcoupon(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_InviteFriendGift::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 inviteFrdCntForNew = 1 [default = 0];
    if (has_invitefrdcntfornew()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->invitefrdcntfornew());
    }
    
    // optional int32 unGetCoupon = 4 [default = 0];
    if (has_ungetcoupon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ungetcoupon());
    }
    
  }
  // repeated .DB_InviteGiftMsg invitegiftmsg = 2;
  total_size += 1 * this->invitegiftmsg_size();
  for (int i = 0; i < this->invitegiftmsg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->invitegiftmsg(i));
  }
  
  // repeated .DB_InvitedFriendLvMsg invitedfriendlvmsg = 3;
  total_size += 1 * this->invitedfriendlvmsg_size();
  for (int i = 0; i < this->invitedfriendlvmsg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->invitedfriendlvmsg(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_InviteFriendGift::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_InviteFriendGift* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_InviteFriendGift*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_InviteFriendGift::MergeFrom(const DB_InviteFriendGift& from) {
  GOOGLE_CHECK_NE(&from, this);
  invitegiftmsg_.MergeFrom(from.invitegiftmsg_);
  invitedfriendlvmsg_.MergeFrom(from.invitedfriendlvmsg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_invitefrdcntfornew(from.invitefrdcntfornew());
    }
    if (from._has_bit(3)) {
      set_ungetcoupon(from.ungetcoupon());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_InviteFriendGift::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_InviteFriendGift::CopyFrom(const DB_InviteFriendGift& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_InviteFriendGift::IsInitialized() const {
  
  return true;
}

void DB_InviteFriendGift::Swap(DB_InviteFriendGift* other) {
  if (other != this) {
    std::swap(invitefrdcntfornew_, other->invitefrdcntfornew_);
    invitegiftmsg_.Swap(&other->invitegiftmsg_);
    invitedfriendlvmsg_.Swap(&other->invitedfriendlvmsg_);
    std::swap(ungetcoupon_, other->ungetcoupon_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_InviteFriendGift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_InviteFriendGift_descriptor_;
  metadata.reflection = DB_InviteFriendGift_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_InviteGiftMsg::kInviteFrdCntDayFieldNumber;
const int DB_InviteGiftMsg::kHasGetTimesFieldNumber;
#endif  // !_MSC_VER

DB_InviteGiftMsg::DB_InviteGiftMsg() {
  SharedCtor();
}

void DB_InviteGiftMsg::InitAsDefaultInstance() {
}

DB_InviteGiftMsg::DB_InviteGiftMsg(const DB_InviteGiftMsg& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_InviteGiftMsg::SharedCtor() {
  _cached_size_ = 0;
  invitefrdcntday_ = 0;
  hasgettimes_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_InviteGiftMsg::~DB_InviteGiftMsg() {
  SharedDtor();
}

void DB_InviteGiftMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_InviteGiftMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_InviteGiftMsg_descriptor_;
}

const DB_InviteGiftMsg& DB_InviteGiftMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_InviteGiftMsg* DB_InviteGiftMsg::default_instance_ = NULL;

DB_InviteGiftMsg* DB_InviteGiftMsg::New() const {
  return new DB_InviteGiftMsg;
}

void DB_InviteGiftMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    invitefrdcntday_ = 0;
    hasgettimes_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_InviteGiftMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 inviteFrdCntDay = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &invitefrdcntday_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_hasGetTimes;
        break;
      }
      
      // optional int32 hasGetTimes = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_hasGetTimes:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &hasgettimes_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_InviteGiftMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_InviteGiftMsg::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 inviteFrdCntDay = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->invitefrdcntday(), output);
  }
  
  // optional int32 hasGetTimes = 2 [default = 0];
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hasgettimes(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_InviteGiftMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 inviteFrdCntDay = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->invitefrdcntday(), target);
  }
  
  // optional int32 hasGetTimes = 2 [default = 0];
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hasgettimes(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_InviteGiftMsg::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 inviteFrdCntDay = 1 [default = 0];
    if (has_invitefrdcntday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->invitefrdcntday());
    }
    
    // optional int32 hasGetTimes = 2 [default = 0];
    if (has_hasgettimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hasgettimes());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_InviteGiftMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_InviteGiftMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_InviteGiftMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_InviteGiftMsg::MergeFrom(const DB_InviteGiftMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_invitefrdcntday(from.invitefrdcntday());
    }
    if (from._has_bit(1)) {
      set_hasgettimes(from.hasgettimes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_InviteGiftMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_InviteGiftMsg::CopyFrom(const DB_InviteGiftMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_InviteGiftMsg::IsInitialized() const {
  
  return true;
}

void DB_InviteGiftMsg::Swap(DB_InviteGiftMsg* other) {
  if (other != this) {
    std::swap(invitefrdcntday_, other->invitefrdcntday_);
    std::swap(hasgettimes_, other->hasgettimes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_InviteGiftMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_InviteGiftMsg_descriptor_;
  metadata.reflection = DB_InviteGiftMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string DB_InviteFriendMsgByLogon::_default_platid_;
const ::std::string DB_InviteFriendMsgByLogon::_default_name_;
const ::std::string DB_InviteFriendMsgByLogon::_default_url_;
#ifndef _MSC_VER
const int DB_InviteFriendMsgByLogon::kPlatidFieldNumber;
const int DB_InviteFriendMsgByLogon::kNameFieldNumber;
const int DB_InviteFriendMsgByLogon::kUrlFieldNumber;
#endif  // !_MSC_VER

DB_InviteFriendMsgByLogon::DB_InviteFriendMsgByLogon() {
  SharedCtor();
}

void DB_InviteFriendMsgByLogon::InitAsDefaultInstance() {
}

DB_InviteFriendMsgByLogon::DB_InviteFriendMsgByLogon(const DB_InviteFriendMsgByLogon& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_InviteFriendMsgByLogon::SharedCtor() {
  _cached_size_ = 0;
  platid_ = const_cast< ::std::string*>(&_default_platid_);
  name_ = const_cast< ::std::string*>(&_default_name_);
  url_ = const_cast< ::std::string*>(&_default_url_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_InviteFriendMsgByLogon::~DB_InviteFriendMsgByLogon() {
  SharedDtor();
}

void DB_InviteFriendMsgByLogon::SharedDtor() {
  if (platid_ != &_default_platid_) {
    delete platid_;
  }
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (url_ != &_default_url_) {
    delete url_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_InviteFriendMsgByLogon::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_InviteFriendMsgByLogon_descriptor_;
}

const DB_InviteFriendMsgByLogon& DB_InviteFriendMsgByLogon::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_InviteFriendMsgByLogon* DB_InviteFriendMsgByLogon::default_instance_ = NULL;

DB_InviteFriendMsgByLogon* DB_InviteFriendMsgByLogon::New() const {
  return new DB_InviteFriendMsgByLogon;
}

void DB_InviteFriendMsgByLogon::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (platid_ != &_default_platid_) {
        platid_->clear();
      }
    }
    if (_has_bit(1)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    if (_has_bit(2)) {
      if (url_ != &_default_url_) {
        url_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_InviteFriendMsgByLogon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string platid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_platid()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->platid().data(), this->platid().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_name:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(26)) goto parse_url;
        break;
      }
      
      // optional string url = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_url:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_url()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->url().data(), this->url().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_InviteFriendMsgByLogon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_InviteFriendMsgByLogon::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string platid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platid().data(), this->platid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->platid(), output);
  }
  
  // optional string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  // optional string url = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->url(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_InviteFriendMsgByLogon::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string platid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platid().data(), this->platid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->platid(), target);
  }
  
  // optional string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  // optional string url = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->url(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_InviteFriendMsgByLogon::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string platid = 1;
    if (has_platid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platid());
    }
    
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional string url = 3;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_InviteFriendMsgByLogon::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_InviteFriendMsgByLogon* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_InviteFriendMsgByLogon*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_InviteFriendMsgByLogon::MergeFrom(const DB_InviteFriendMsgByLogon& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_platid(from.platid());
    }
    if (from._has_bit(1)) {
      set_name(from.name());
    }
    if (from._has_bit(2)) {
      set_url(from.url());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_InviteFriendMsgByLogon::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_InviteFriendMsgByLogon::CopyFrom(const DB_InviteFriendMsgByLogon& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_InviteFriendMsgByLogon::IsInitialized() const {
  
  return true;
}

void DB_InviteFriendMsgByLogon::Swap(DB_InviteFriendMsgByLogon* other) {
  if (other != this) {
    std::swap(platid_, other->platid_);
    std::swap(name_, other->name_);
    std::swap(url_, other->url_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_InviteFriendMsgByLogon::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_InviteFriendMsgByLogon_descriptor_;
  metadata.reflection = DB_InviteFriendMsgByLogon_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DB_InvitedFriendLvMsg::kIdFieldNumber;
const int DB_InvitedFriendLvMsg::kUidsFieldNumber;
const int DB_InvitedFriendLvMsg::kOpenidsFieldNumber;
const int DB_InvitedFriendLvMsg::kUrlsFieldNumber;
const int DB_InvitedFriendLvMsg::kNamesFieldNumber;
#endif  // !_MSC_VER

DB_InvitedFriendLvMsg::DB_InvitedFriendLvMsg() {
  SharedCtor();
}

void DB_InvitedFriendLvMsg::InitAsDefaultInstance() {
}

DB_InvitedFriendLvMsg::DB_InvitedFriendLvMsg(const DB_InvitedFriendLvMsg& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_InvitedFriendLvMsg::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_InvitedFriendLvMsg::~DB_InvitedFriendLvMsg() {
  SharedDtor();
}

void DB_InvitedFriendLvMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_InvitedFriendLvMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_InvitedFriendLvMsg_descriptor_;
}

const DB_InvitedFriendLvMsg& DB_InvitedFriendLvMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_InvitedFriendLvMsg* DB_InvitedFriendLvMsg::default_instance_ = NULL;

DB_InvitedFriendLvMsg* DB_InvitedFriendLvMsg::New() const {
  return new DB_InvitedFriendLvMsg;
}

void DB_InvitedFriendLvMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  uids_.Clear();
  openids_.Clear();
  urls_.Clear();
  names_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_InvitedFriendLvMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &id_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_uids;
        break;
      }
      
      // repeated int64 uids = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_uids:
        ::google::protobuf::int64 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &value));
        add_uids(value);
        if (input->ExpectTag(16)) goto parse_uids;
        if (input->ExpectTag(26)) goto parse_openids;
        break;
      }
      
      // repeated string openids = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_openids:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_openids()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->openids(0).data(), this->openids(0).length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(26)) goto parse_openids;
        if (input->ExpectTag(34)) goto parse_urls;
        break;
      }
      
      // repeated string urls = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_urls:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_urls()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->urls(0).data(), this->urls(0).length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(34)) goto parse_urls;
        if (input->ExpectTag(42)) goto parse_names;
        break;
      }
      
      // repeated string names = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_names:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_names()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->names(0).data(), this->names(0).length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(42)) goto parse_names;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_InvitedFriendLvMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_InvitedFriendLvMsg::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 id = 1 [default = 0];
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // repeated int64 uids = 2;
  for (int i = 0; i < this->uids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->uids(i), output);
  }
  
  // repeated string openids = 3;
  for (int i = 0; i < this->openids_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->openids(i).data(), this->openids(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->openids(i), output);
  }
  
  // repeated string urls = 4;
  for (int i = 0; i < this->urls_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->urls(i).data(), this->urls(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->urls(i), output);
  }
  
  // repeated string names = 5;
  for (int i = 0; i < this->names_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->names(i).data(), this->names(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->names(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_InvitedFriendLvMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1 [default = 0];
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // repeated int64 uids = 2;
  for (int i = 0; i < this->uids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->uids(i), target);
  }
  
  // repeated string openids = 3;
  for (int i = 0; i < this->openids_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->openids(i).data(), this->openids(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->openids(i), target);
  }
  
  // repeated string urls = 4;
  for (int i = 0; i < this->urls_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->urls(i).data(), this->urls(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->urls(i), target);
  }
  
  // repeated string names = 5;
  for (int i = 0; i < this->names_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->names(i).data(), this->names(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->names(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_InvitedFriendLvMsg::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1 [default = 0];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
  }
  // repeated int64 uids = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->uids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->uids(i));
    }
    total_size += 1 * this->uids_size() + data_size;
  }
  
  // repeated string openids = 3;
  total_size += 1 * this->openids_size();
  for (int i = 0; i < this->openids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->openids(i));
  }
  
  // repeated string urls = 4;
  total_size += 1 * this->urls_size();
  for (int i = 0; i < this->urls_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->urls(i));
  }
  
  // repeated string names = 5;
  total_size += 1 * this->names_size();
  for (int i = 0; i < this->names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->names(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_InvitedFriendLvMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_InvitedFriendLvMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_InvitedFriendLvMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_InvitedFriendLvMsg::MergeFrom(const DB_InvitedFriendLvMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  uids_.MergeFrom(from.uids_);
  openids_.MergeFrom(from.openids_);
  urls_.MergeFrom(from.urls_);
  names_.MergeFrom(from.names_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_InvitedFriendLvMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_InvitedFriendLvMsg::CopyFrom(const DB_InvitedFriendLvMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_InvitedFriendLvMsg::IsInitialized() const {
  
  return true;
}

void DB_InvitedFriendLvMsg::Swap(DB_InvitedFriendLvMsg* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    uids_.Swap(&other->uids_);
    openids_.Swap(&other->openids_);
    urls_.Swap(&other->urls_);
    names_.Swap(&other->names_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_InvitedFriendLvMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_InvitedFriendLvMsg_descriptor_;
  metadata.reflection = DB_InvitedFriendLvMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string DB_TaskMark::_default_id_;
#ifndef _MSC_VER
const int DB_TaskMark::kIdFieldNumber;
const int DB_TaskMark::kStepFieldNumber;
const int DB_TaskMark::kGetStepFieldNumber;
#endif  // !_MSC_VER

DB_TaskMark::DB_TaskMark() {
  SharedCtor();
}

void DB_TaskMark::InitAsDefaultInstance() {
}

DB_TaskMark::DB_TaskMark(const DB_TaskMark& from) {
  SharedCtor();
  MergeFrom(from);
}

void DB_TaskMark::SharedCtor() {
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&_default_id_);
  step_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DB_TaskMark::~DB_TaskMark() {
  SharedDtor();
}

void DB_TaskMark::SharedDtor() {
  if (id_ != &_default_id_) {
    delete id_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DB_TaskMark::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_TaskMark_descriptor_;
}

const DB_TaskMark& DB_TaskMark::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platDB_2eproto();  return *default_instance_;
}

DB_TaskMark* DB_TaskMark::default_instance_ = NULL;

DB_TaskMark* DB_TaskMark::New() const {
  return new DB_TaskMark;
}

void DB_TaskMark::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (id_ != &_default_id_) {
        id_->clear();
      }
    }
    step_ = 0;
  }
  getstep_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DB_TaskMark::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_id()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->id().data(), this->id().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(16)) goto parse_step;
        break;
      }
      
      // optional int32 step = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_step:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &step_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_getStep;
        break;
      }
      
      // repeated int32 getStep = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_getStep:
        ::google::protobuf::int32 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &value));
        add_getstep(value);
        if (input->ExpectTag(24)) goto parse_getStep;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DB_TaskMark::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    DB_TaskMark::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(), output);
  }
  
  // optional int32 step = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->step(), output);
  }
  
  // repeated int32 getStep = 3;
  for (int i = 0; i < this->getstep_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->getstep(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DB_TaskMark::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }
  
  // optional int32 step = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->step(), target);
  }
  
  // repeated int32 getStep = 3;
  for (int i = 0; i < this->getstep_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->getstep(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DB_TaskMark::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }
    
    // optional int32 step = 2;
    if (has_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->step());
    }
    
  }
  // repeated int32 getStep = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->getstep_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->getstep(i));
    }
    total_size += 1 * this->getstep_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void DB_TaskMark::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DB_TaskMark* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DB_TaskMark*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DB_TaskMark::MergeFrom(const DB_TaskMark& from) {
  GOOGLE_CHECK_NE(&from, this);
  getstep_.MergeFrom(from.getstep_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_id(from.id());
    }
    if (from._has_bit(1)) {
      set_step(from.step());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DB_TaskMark::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DB_TaskMark::CopyFrom(const DB_TaskMark& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DB_TaskMark::IsInitialized() const {
  
  return true;
}

void DB_TaskMark::Swap(DB_TaskMark* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(step_, other->step_);
    getstep_.Swap(&other->getstep_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DB_TaskMark::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DB_TaskMark_descriptor_;
  metadata.reflection = DB_TaskMark_reflection_;
  return metadata;
}

