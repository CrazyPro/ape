// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_platDB_2eproto__INCLUDED
#define PROTOBUF_platDB_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_platDB_2eproto();
void protobuf_AssignDesc_platDB_2eproto();
void protobuf_ShutdownFile_platDB_2eproto();

class DB_PlatGiftFrdInfo;
class DB_PlatGiftGainRecord;
class DB_PlatGift;
class DB_PlatRegion;
class DB_WebGiftFlag;
class DB_TotalLimitWebGift;
class DB_InviteFriends_Record;
class DB_InviteFriends_Unit;
class DB_InviteFriends;
class DB_PTXMissionData;
class DB_PlatCrossPromotionData;
class DB_PlatCrossPromotion;
class DB_Plat;
class DB_DailyYellowRes;
class DB_InviteFriendGift;
class DB_InviteGiftMsg;
class DB_InviteFriendMsgByLogon;
class DB_InvitedFriendLvMsg;
class DB_TaskMark;

// ===================================================================

class DB_PlatGiftFrdInfo : public ::google::protobuf::Message {
 public:
  DB_PlatGiftFrdInfo();
  virtual ~DB_PlatGiftFrdInfo();
  
  DB_PlatGiftFrdInfo(const DB_PlatGiftFrdInfo& from);
  
  inline DB_PlatGiftFrdInfo& operator=(const DB_PlatGiftFrdInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_PlatGiftFrdInfo& default_instance();
  void Swap(DB_PlatGiftFrdInfo* other);
  
  // implements Message ----------------------------------------------
  
  DB_PlatGiftFrdInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_PlatGiftFrdInfo& from);
  void MergeFrom(const DB_PlatGiftFrdInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 friendID = 1;
  inline bool has_friendid() const;
  inline void clear_friendid();
  static const int kFriendIDFieldNumber = 1;
  inline ::google::protobuf::int64 friendid() const;
  inline void set_friendid(::google::protobuf::int64 value);
  
  // optional string frdOpenID = 2;
  inline bool has_frdopenid() const;
  inline void clear_frdopenid();
  static const int kFrdOpenIDFieldNumber = 2;
  inline const ::std::string& frdopenid() const;
  inline void set_frdopenid(const ::std::string& value);
  inline void set_frdopenid(const char* value);
  inline void set_frdopenid(const char* value, size_t size);
  inline ::std::string* mutable_frdopenid();
  
  // optional int32 messageID = 3;
  inline bool has_messageid() const;
  inline void clear_messageid();
  static const int kMessageIDFieldNumber = 3;
  inline ::google::protobuf::int32 messageid() const;
  inline void set_messageid(::google::protobuf::int32 value);
  
  // optional int32 giftID = 4 [default = 0];
  inline bool has_giftid() const;
  inline void clear_giftid();
  static const int kGiftIDFieldNumber = 4;
  inline ::google::protobuf::int32 giftid() const;
  inline void set_giftid(::google::protobuf::int32 value);
  
  // optional int64 getTime = 5 [default = 0];
  inline bool has_gettime() const;
  inline void clear_gettime();
  static const int kGetTimeFieldNumber = 5;
  inline ::google::protobuf::int64 gettime() const;
  inline void set_gettime(::google::protobuf::int64 value);
  
  // optional int32 giftType = 6 [default = 0];
  inline bool has_gifttype() const;
  inline void clear_gifttype();
  static const int kGiftTypeFieldNumber = 6;
  inline ::google::protobuf::int32 gifttype() const;
  inline void set_gifttype(::google::protobuf::int32 value);
  
  // optional string frdName = 7;
  inline bool has_frdname() const;
  inline void clear_frdname();
  static const int kFrdNameFieldNumber = 7;
  inline const ::std::string& frdname() const;
  inline void set_frdname(const ::std::string& value);
  inline void set_frdname(const char* value);
  inline void set_frdname(const char* value, size_t size);
  inline ::std::string* mutable_frdname();
  
  // optional string frdUrl = 8;
  inline bool has_frdurl() const;
  inline void clear_frdurl();
  static const int kFrdUrlFieldNumber = 8;
  inline const ::std::string& frdurl() const;
  inline void set_frdurl(const ::std::string& value);
  inline void set_frdurl(const char* value);
  inline void set_frdurl(const char* value, size_t size);
  inline ::std::string* mutable_frdurl();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 friendid_;
  ::std::string* frdopenid_;
  static const ::std::string _default_frdopenid_;
  ::google::protobuf::int32 messageid_;
  ::google::protobuf::int32 giftid_;
  ::google::protobuf::int64 gettime_;
  ::google::protobuf::int32 gifttype_;
  ::std::string* frdname_;
  static const ::std::string _default_frdname_;
  ::std::string* frdurl_;
  static const ::std::string _default_frdurl_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_PlatGiftFrdInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB_PlatGiftGainRecord : public ::google::protobuf::Message {
 public:
  DB_PlatGiftGainRecord();
  virtual ~DB_PlatGiftGainRecord();
  
  DB_PlatGiftGainRecord(const DB_PlatGiftGainRecord& from);
  
  inline DB_PlatGiftGainRecord& operator=(const DB_PlatGiftGainRecord& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_PlatGiftGainRecord& default_instance();
  void Swap(DB_PlatGiftGainRecord* other);
  
  // implements Message ----------------------------------------------
  
  DB_PlatGiftGainRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_PlatGiftGainRecord& from);
  void MergeFrom(const DB_PlatGiftGainRecord& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 ngiftID = 1 [default = 0];
  inline bool has_ngiftid() const;
  inline void clear_ngiftid();
  static const int kNgiftIDFieldNumber = 1;
  inline ::google::protobuf::int32 ngiftid() const;
  inline void set_ngiftid(::google::protobuf::int32 value);
  
  // optional int32 ngiftGain = 2 [default = 0];
  inline bool has_ngiftgain() const;
  inline void clear_ngiftgain();
  static const int kNgiftGainFieldNumber = 2;
  inline ::google::protobuf::int32 ngiftgain() const;
  inline void set_ngiftgain(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 ngiftid_;
  ::google::protobuf::int32 ngiftgain_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_PlatGiftGainRecord* default_instance_;
};
// -------------------------------------------------------------------

class DB_PlatGift : public ::google::protobuf::Message {
 public:
  DB_PlatGift();
  virtual ~DB_PlatGift();
  
  DB_PlatGift(const DB_PlatGift& from);
  
  inline DB_PlatGift& operator=(const DB_PlatGift& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_PlatGift& default_instance();
  void Swap(DB_PlatGift* other);
  
  // implements Message ----------------------------------------------
  
  DB_PlatGift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_PlatGift& from);
  void MergeFrom(const DB_PlatGift& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string daySendFrdIDLst = 1;
  inline int daysendfrdidlst_size() const;
  inline void clear_daysendfrdidlst();
  static const int kDaySendFrdIDLstFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& daysendfrdidlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_daysendfrdidlst();
  inline const ::std::string& daysendfrdidlst(int index) const;
  inline ::std::string* mutable_daysendfrdidlst(int index);
  inline void set_daysendfrdidlst(int index, const ::std::string& value);
  inline void set_daysendfrdidlst(int index, const char* value);
  inline void set_daysendfrdidlst(int index, const char* value, size_t size);
  inline ::std::string* add_daysendfrdidlst();
  inline void add_daysendfrdidlst(const ::std::string& value);
  inline void add_daysendfrdidlst(const char* value);
  inline void add_daysendfrdidlst(const char* value, size_t size);
  
  // repeated string dayAskFrdIDLst = 2;
  inline int dayaskfrdidlst_size() const;
  inline void clear_dayaskfrdidlst();
  static const int kDayAskFrdIDLstFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& dayaskfrdidlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_dayaskfrdidlst();
  inline const ::std::string& dayaskfrdidlst(int index) const;
  inline ::std::string* mutable_dayaskfrdidlst(int index);
  inline void set_dayaskfrdidlst(int index, const ::std::string& value);
  inline void set_dayaskfrdidlst(int index, const char* value);
  inline void set_dayaskfrdidlst(int index, const char* value, size_t size);
  inline ::std::string* add_dayaskfrdidlst();
  inline void add_dayaskfrdidlst(const ::std::string& value);
  inline void add_dayaskfrdidlst(const char* value);
  inline void add_dayaskfrdidlst(const char* value, size_t size);
  
  // optional int32 dayGetGift2BagCnt = 3;
  inline bool has_daygetgift2bagcnt() const;
  inline void clear_daygetgift2bagcnt();
  static const int kDayGetGift2BagCntFieldNumber = 3;
  inline ::google::protobuf::int32 daygetgift2bagcnt() const;
  inline void set_daygetgift2bagcnt(::google::protobuf::int32 value);
  
  // optional int32 dayAskGift2BagCnt = 4;
  inline bool has_dayaskgift2bagcnt() const;
  inline void clear_dayaskgift2bagcnt();
  static const int kDayAskGift2BagCntFieldNumber = 4;
  inline ::google::protobuf::int32 dayaskgift2bagcnt() const;
  inline void set_dayaskgift2bagcnt(::google::protobuf::int32 value);
  
  // optional int32 dayGetGiftCnt = 5;
  inline bool has_daygetgiftcnt() const;
  inline void clear_daygetgiftcnt();
  static const int kDayGetGiftCntFieldNumber = 5;
  inline ::google::protobuf::int32 daygetgiftcnt() const;
  inline void set_daygetgiftcnt(::google::protobuf::int32 value);
  
  // optional int32 dayResendGiftCnt = 6;
  inline bool has_dayresendgiftcnt() const;
  inline void clear_dayresendgiftcnt();
  static const int kDayResendGiftCntFieldNumber = 6;
  inline ::google::protobuf::int32 dayresendgiftcnt() const;
  inline void set_dayresendgiftcnt(::google::protobuf::int32 value);
  
  // repeated .DB_PlatGiftFrdInfo getGiftInfo = 7;
  inline int getgiftinfo_size() const;
  inline void clear_getgiftinfo();
  static const int kGetGiftInfoFieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_PlatGiftFrdInfo >& getgiftinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_PlatGiftFrdInfo >* mutable_getgiftinfo();
  inline const ::DB_PlatGiftFrdInfo& getgiftinfo(int index) const;
  inline ::DB_PlatGiftFrdInfo* mutable_getgiftinfo(int index);
  inline ::DB_PlatGiftFrdInfo* add_getgiftinfo();
  
  // repeated .DB_PlatGiftFrdInfo finishGiftInfo = 8;
  inline int finishgiftinfo_size() const;
  inline void clear_finishgiftinfo();
  static const int kFinishGiftInfoFieldNumber = 8;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_PlatGiftFrdInfo >& finishgiftinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_PlatGiftFrdInfo >* mutable_finishgiftinfo();
  inline const ::DB_PlatGiftFrdInfo& finishgiftinfo(int index) const;
  inline ::DB_PlatGiftFrdInfo* mutable_finishgiftinfo(int index);
  inline ::DB_PlatGiftFrdInfo* add_finishgiftinfo();
  
  // optional int32 msgIdx = 9 [default = 0];
  inline bool has_msgidx() const;
  inline void clear_msgidx();
  static const int kMsgIdxFieldNumber = 9;
  inline ::google::protobuf::int32 msgidx() const;
  inline void set_msgidx(::google::protobuf::int32 value);
  
  // optional int64 lastLoginTime = 10 [default = 0];
  inline bool has_lastlogintime() const;
  inline void clear_lastlogintime();
  static const int kLastLoginTimeFieldNumber = 10;
  inline ::google::protobuf::int64 lastlogintime() const;
  inline void set_lastlogintime(::google::protobuf::int64 value);
  
  // optional int32 daySendGiftCnt = 11;
  inline bool has_daysendgiftcnt() const;
  inline void clear_daysendgiftcnt();
  static const int kDaySendGiftCntFieldNumber = 11;
  inline ::google::protobuf::int32 daysendgiftcnt() const;
  inline void set_daysendgiftcnt(::google::protobuf::int32 value);
  
  // repeated .DB_PlatGiftGainRecord dayGainGiftRecord = 12;
  inline int daygaingiftrecord_size() const;
  inline void clear_daygaingiftrecord();
  static const int kDayGainGiftRecordFieldNumber = 12;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_PlatGiftGainRecord >& daygaingiftrecord() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_PlatGiftGainRecord >* mutable_daygaingiftrecord();
  inline const ::DB_PlatGiftGainRecord& daygaingiftrecord(int index) const;
  inline ::DB_PlatGiftGainRecord* mutable_daygaingiftrecord(int index);
  inline ::DB_PlatGiftGainRecord* add_daygaingiftrecord();
  
  // optional bool bSendGiftGain = 13;
  inline bool has_bsendgiftgain() const;
  inline void clear_bsendgiftgain();
  static const int kBSendGiftGainFieldNumber = 13;
  inline bool bsendgiftgain() const;
  inline void set_bsendgiftgain(bool value);
  
  // optional bool baskGiftGain = 14;
  inline bool has_baskgiftgain() const;
  inline void clear_baskgiftgain();
  static const int kBaskGiftGainFieldNumber = 14;
  inline bool baskgiftgain() const;
  inline void set_baskgiftgain(bool value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> daysendfrdidlst_;
  ::google::protobuf::RepeatedPtrField< ::std::string> dayaskfrdidlst_;
  ::google::protobuf::int32 daygetgift2bagcnt_;
  ::google::protobuf::int32 dayaskgift2bagcnt_;
  ::google::protobuf::int32 daygetgiftcnt_;
  ::google::protobuf::int32 dayresendgiftcnt_;
  ::google::protobuf::RepeatedPtrField< ::DB_PlatGiftFrdInfo > getgiftinfo_;
  ::google::protobuf::RepeatedPtrField< ::DB_PlatGiftFrdInfo > finishgiftinfo_;
  ::google::protobuf::int32 msgidx_;
  ::google::protobuf::int64 lastlogintime_;
  ::google::protobuf::int32 daysendgiftcnt_;
  ::google::protobuf::RepeatedPtrField< ::DB_PlatGiftGainRecord > daygaingiftrecord_;
  bool bsendgiftgain_;
  bool baskgiftgain_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_PlatGift* default_instance_;
};
// -------------------------------------------------------------------

class DB_PlatRegion : public ::google::protobuf::Message {
 public:
  DB_PlatRegion();
  virtual ~DB_PlatRegion();
  
  DB_PlatRegion(const DB_PlatRegion& from);
  
  inline DB_PlatRegion& operator=(const DB_PlatRegion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_PlatRegion& default_instance();
  void Swap(DB_PlatRegion* other);
  
  // implements Message ----------------------------------------------
  
  DB_PlatRegion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_PlatRegion& from);
  void MergeFrom(const DB_PlatRegion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);
  
  // optional int32 srvRegion = 2 [default = 0];
  inline bool has_srvregion() const;
  inline void clear_srvregion();
  static const int kSrvRegionFieldNumber = 2;
  inline ::google::protobuf::int32 srvregion() const;
  inline void set_srvregion(::google::protobuf::int32 value);
  
  // optional int32 level = 3 [default = 0];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 platType = 4 [default = 0];
  inline bool has_plattype() const;
  inline void clear_plattype();
  static const int kPlatTypeFieldNumber = 4;
  inline ::google::protobuf::int32 plattype() const;
  inline void set_plattype(::google::protobuf::int32 value);
  
  // optional int32 finishCaptureTm = 5 [default = 0];
  inline bool has_finishcapturetm() const;
  inline void clear_finishcapturetm();
  static const int kFinishCaptureTmFieldNumber = 5;
  inline ::google::protobuf::int32 finishcapturetm() const;
  inline void set_finishcapturetm(::google::protobuf::int32 value);
  
  // optional int32 lastLogonTime = 6 [default = 0];
  inline bool has_lastlogontime() const;
  inline void clear_lastlogontime();
  static const int kLastLogonTimeFieldNumber = 6;
  inline ::google::protobuf::int32 lastlogontime() const;
  inline void set_lastlogontime(::google::protobuf::int32 value);
  
  // optional int32 viplevel = 7 [default = 0];
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kViplevelFieldNumber = 7;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);
  
  // optional int32 viptype = 8 [default = 0];
  inline bool has_viptype() const;
  inline void clear_viptype();
  static const int kViptypeFieldNumber = 8;
  inline ::google::protobuf::int32 viptype() const;
  inline void set_viptype(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 srvregion_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 plattype_;
  ::google::protobuf::int32 finishcapturetm_;
  ::google::protobuf::int32 lastlogontime_;
  ::google::protobuf::int32 viplevel_;
  ::google::protobuf::int32 viptype_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_PlatRegion* default_instance_;
};
// -------------------------------------------------------------------

class DB_WebGiftFlag : public ::google::protobuf::Message {
 public:
  DB_WebGiftFlag();
  virtual ~DB_WebGiftFlag();
  
  DB_WebGiftFlag(const DB_WebGiftFlag& from);
  
  inline DB_WebGiftFlag& operator=(const DB_WebGiftFlag& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_WebGiftFlag& default_instance();
  void Swap(DB_WebGiftFlag* other);
  
  // implements Message ----------------------------------------------
  
  DB_WebGiftFlag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_WebGiftFlag& from);
  void MergeFrom(const DB_WebGiftFlag& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 lastCacuTime = 1 [default = 0];
  inline bool has_lastcacutime() const;
  inline void clear_lastcacutime();
  static const int kLastCacuTimeFieldNumber = 1;
  inline ::google::protobuf::int64 lastcacutime() const;
  inline void set_lastcacutime(::google::protobuf::int64 value);
  
  // repeated int32 webGiftLst = 2;
  inline int webgiftlst_size() const;
  inline void clear_webgiftlst();
  static const int kWebGiftLstFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& webgiftlst() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_webgiftlst();
  inline ::google::protobuf::int32 webgiftlst(int index) const;
  inline void set_webgiftlst(int index, ::google::protobuf::int32 value);
  inline void add_webgiftlst(::google::protobuf::int32 value);
  
  // optional int64 webOnceFlag = 3 [default = 0];
  inline bool has_webonceflag() const;
  inline void clear_webonceflag();
  static const int kWebOnceFlagFieldNumber = 3;
  inline ::google::protobuf::int64 webonceflag() const;
  inline void set_webonceflag(::google::protobuf::int64 value);
  
  // repeated int32 webGiftMonthLst = 4;
  inline int webgiftmonthlst_size() const;
  inline void clear_webgiftmonthlst();
  static const int kWebGiftMonthLstFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& webgiftmonthlst() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_webgiftmonthlst();
  inline ::google::protobuf::int32 webgiftmonthlst(int index) const;
  inline void set_webgiftmonthlst(int index, ::google::protobuf::int32 value);
  inline void add_webgiftmonthlst(::google::protobuf::int32 value);
  
  // repeated .DB_TotalLimitWebGift webTotalLimitLst = 5;
  inline int webtotallimitlst_size() const;
  inline void clear_webtotallimitlst();
  static const int kWebTotalLimitLstFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_TotalLimitWebGift >& webtotallimitlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_TotalLimitWebGift >* mutable_webtotallimitlst();
  inline const ::DB_TotalLimitWebGift& webtotallimitlst(int index) const;
  inline ::DB_TotalLimitWebGift* mutable_webtotallimitlst(int index);
  inline ::DB_TotalLimitWebGift* add_webtotallimitlst();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 lastcacutime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > webgiftlst_;
  ::google::protobuf::int64 webonceflag_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > webgiftmonthlst_;
  ::google::protobuf::RepeatedPtrField< ::DB_TotalLimitWebGift > webtotallimitlst_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_WebGiftFlag* default_instance_;
};
// -------------------------------------------------------------------

class DB_TotalLimitWebGift : public ::google::protobuf::Message {
 public:
  DB_TotalLimitWebGift();
  virtual ~DB_TotalLimitWebGift();
  
  DB_TotalLimitWebGift(const DB_TotalLimitWebGift& from);
  
  inline DB_TotalLimitWebGift& operator=(const DB_TotalLimitWebGift& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_TotalLimitWebGift& default_instance();
  void Swap(DB_TotalLimitWebGift* other);
  
  // implements Message ----------------------------------------------
  
  DB_TotalLimitWebGift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_TotalLimitWebGift& from);
  void MergeFrom(const DB_TotalLimitWebGift& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 tActEndTime = 1 [default = 0];
  inline bool has_tactendtime() const;
  inline void clear_tactendtime();
  static const int kTActEndTimeFieldNumber = 1;
  inline ::google::protobuf::int64 tactendtime() const;
  inline void set_tactendtime(::google::protobuf::int64 value);
  
  // optional int32 nGiftID = 2 [default = 0];
  inline bool has_ngiftid() const;
  inline void clear_ngiftid();
  static const int kNGiftIDFieldNumber = 2;
  inline ::google::protobuf::int32 ngiftid() const;
  inline void set_ngiftid(::google::protobuf::int32 value);
  
  // optional int32 nGiftCnt = 3 [default = 0];
  inline bool has_ngiftcnt() const;
  inline void clear_ngiftcnt();
  static const int kNGiftCntFieldNumber = 3;
  inline ::google::protobuf::int32 ngiftcnt() const;
  inline void set_ngiftcnt(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 tactendtime_;
  ::google::protobuf::int32 ngiftid_;
  ::google::protobuf::int32 ngiftcnt_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_TotalLimitWebGift* default_instance_;
};
// -------------------------------------------------------------------

class DB_InviteFriends_Record : public ::google::protobuf::Message {
 public:
  DB_InviteFriends_Record();
  virtual ~DB_InviteFriends_Record();
  
  DB_InviteFriends_Record(const DB_InviteFriends_Record& from);
  
  inline DB_InviteFriends_Record& operator=(const DB_InviteFriends_Record& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_InviteFriends_Record& default_instance();
  void Swap(DB_InviteFriends_Record* other);
  
  // implements Message ----------------------------------------------
  
  DB_InviteFriends_Record* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_InviteFriends_Record& from);
  void MergeFrom(const DB_InviteFriends_Record& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 ntype = 1;
  inline bool has_ntype() const;
  inline void clear_ntype();
  static const int kNtypeFieldNumber = 1;
  inline ::google::protobuf::int32 ntype() const;
  inline void set_ntype(::google::protobuf::int32 value);
  
  // optional int32 nlevel = 2;
  inline bool has_nlevel() const;
  inline void clear_nlevel();
  static const int kNlevelFieldNumber = 2;
  inline ::google::protobuf::int32 nlevel() const;
  inline void set_nlevel(::google::protobuf::int32 value);
  
  // optional int32 ncredit = 3;
  inline bool has_ncredit() const;
  inline void clear_ncredit();
  static const int kNcreditFieldNumber = 3;
  inline ::google::protobuf::int32 ncredit() const;
  inline void set_ncredit(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 ntype_;
  ::google::protobuf::int32 nlevel_;
  ::google::protobuf::int32 ncredit_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_InviteFriends_Record* default_instance_;
};
// -------------------------------------------------------------------

class DB_InviteFriends_Unit : public ::google::protobuf::Message {
 public:
  DB_InviteFriends_Unit();
  virtual ~DB_InviteFriends_Unit();
  
  DB_InviteFriends_Unit(const DB_InviteFriends_Unit& from);
  
  inline DB_InviteFriends_Unit& operator=(const DB_InviteFriends_Unit& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_InviteFriends_Unit& default_instance();
  void Swap(DB_InviteFriends_Unit* other);
  
  // implements Message ----------------------------------------------
  
  DB_InviteFriends_Unit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_InviteFriends_Unit& from);
  void MergeFrom(const DB_InviteFriends_Unit& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 friendid = 1 [default = 0];
  inline bool has_friendid() const;
  inline void clear_friendid();
  static const int kFriendidFieldNumber = 1;
  inline ::google::protobuf::int64 friendid() const;
  inline void set_friendid(::google::protobuf::int64 value);
  
  // repeated string friendName = 2;
  inline int friendname_size() const;
  inline void clear_friendname();
  static const int kFriendNameFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& friendname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_friendname();
  inline const ::std::string& friendname(int index) const;
  inline ::std::string* mutable_friendname(int index);
  inline void set_friendname(int index, const ::std::string& value);
  inline void set_friendname(int index, const char* value);
  inline void set_friendname(int index, const char* value, size_t size);
  inline ::std::string* add_friendname();
  inline void add_friendname(const ::std::string& value);
  inline void add_friendname(const char* value);
  inline void add_friendname(const char* value, size_t size);
  
  // optional int32 friendlvl = 3 [default = 0];
  inline bool has_friendlvl() const;
  inline void clear_friendlvl();
  static const int kFriendlvlFieldNumber = 3;
  inline ::google::protobuf::int32 friendlvl() const;
  inline void set_friendlvl(::google::protobuf::int32 value);
  
  // optional int32 friendcredit = 4 [default = 0];
  inline bool has_friendcredit() const;
  inline void clear_friendcredit();
  static const int kFriendcreditFieldNumber = 4;
  inline ::google::protobuf::int32 friendcredit() const;
  inline void set_friendcredit(::google::protobuf::int32 value);
  
  // optional bool invitegain = 5 [default = false];
  inline bool has_invitegain() const;
  inline void clear_invitegain();
  static const int kInvitegainFieldNumber = 5;
  inline bool invitegain() const;
  inline void set_invitegain(bool value);
  
  // optional int32 lvlgain = 6;
  inline bool has_lvlgain() const;
  inline void clear_lvlgain();
  static const int kLvlgainFieldNumber = 6;
  inline ::google::protobuf::int32 lvlgain() const;
  inline void set_lvlgain(::google::protobuf::int32 value);
  
  // repeated .DB_InviteFriends_Record record = 7;
  inline int record_size() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_InviteFriends_Record >& record() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_InviteFriends_Record >* mutable_record();
  inline const ::DB_InviteFriends_Record& record(int index) const;
  inline ::DB_InviteFriends_Record* mutable_record(int index);
  inline ::DB_InviteFriends_Record* add_record();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 friendid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> friendname_;
  ::google::protobuf::int32 friendlvl_;
  ::google::protobuf::int32 friendcredit_;
  bool invitegain_;
  ::google::protobuf::int32 lvlgain_;
  ::google::protobuf::RepeatedPtrField< ::DB_InviteFriends_Record > record_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_InviteFriends_Unit* default_instance_;
};
// -------------------------------------------------------------------

class DB_InviteFriends : public ::google::protobuf::Message {
 public:
  DB_InviteFriends();
  virtual ~DB_InviteFriends();
  
  DB_InviteFriends(const DB_InviteFriends& from);
  
  inline DB_InviteFriends& operator=(const DB_InviteFriends& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_InviteFriends& default_instance();
  void Swap(DB_InviteFriends* other);
  
  // implements Message ----------------------------------------------
  
  DB_InviteFriends* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_InviteFriends& from);
  void MergeFrom(const DB_InviteFriends& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string invitefriendid = 1 [default = ""];
  inline bool has_invitefriendid() const;
  inline void clear_invitefriendid();
  static const int kInvitefriendidFieldNumber = 1;
  inline const ::std::string& invitefriendid() const;
  inline void set_invitefriendid(const ::std::string& value);
  inline void set_invitefriendid(const char* value);
  inline void set_invitefriendid(const char* value, size_t size);
  inline ::std::string* mutable_invitefriendid();
  
  // optional int32 invitegaincredit = 2 [default = 0];
  inline bool has_invitegaincredit() const;
  inline void clear_invitegaincredit();
  static const int kInvitegaincreditFieldNumber = 2;
  inline ::google::protobuf::int32 invitegaincredit() const;
  inline void set_invitegaincredit(::google::protobuf::int32 value);
  
  // optional int32 lvlgaincredit = 3 [default = 0];
  inline bool has_lvlgaincredit() const;
  inline void clear_lvlgaincredit();
  static const int kLvlgaincreditFieldNumber = 3;
  inline ::google::protobuf::int32 lvlgaincredit() const;
  inline void set_lvlgaincredit(::google::protobuf::int32 value);
  
  // optional int32 topupgaincredit = 4 [default = 0];
  inline bool has_topupgaincredit() const;
  inline void clear_topupgaincredit();
  static const int kTopupgaincreditFieldNumber = 4;
  inline ::google::protobuf::int32 topupgaincredit() const;
  inline void set_topupgaincredit(::google::protobuf::int32 value);
  
  // optional int32 gaincreditall = 5 [default = 0];
  inline bool has_gaincreditall() const;
  inline void clear_gaincreditall();
  static const int kGaincreditallFieldNumber = 5;
  inline ::google::protobuf::int32 gaincreditall() const;
  inline void set_gaincreditall(::google::protobuf::int32 value);
  
  // optional int64 lastgaintimemark = 6 [default = 0];
  inline bool has_lastgaintimemark() const;
  inline void clear_lastgaintimemark();
  static const int kLastgaintimemarkFieldNumber = 6;
  inline ::google::protobuf::int64 lastgaintimemark() const;
  inline void set_lastgaintimemark(::google::protobuf::int64 value);
  
  // repeated .DB_InviteFriends_Unit invitefriends = 7;
  inline int invitefriends_size() const;
  inline void clear_invitefriends();
  static const int kInvitefriendsFieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_InviteFriends_Unit >& invitefriends() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_InviteFriends_Unit >* mutable_invitefriends();
  inline const ::DB_InviteFriends_Unit& invitefriends(int index) const;
  inline ::DB_InviteFriends_Unit* mutable_invitefriends(int index);
  inline ::DB_InviteFriends_Unit* add_invitefriends();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* invitefriendid_;
  static const ::std::string _default_invitefriendid_;
  ::google::protobuf::int32 invitegaincredit_;
  ::google::protobuf::int32 lvlgaincredit_;
  ::google::protobuf::int32 topupgaincredit_;
  ::google::protobuf::int32 gaincreditall_;
  ::google::protobuf::int64 lastgaintimemark_;
  ::google::protobuf::RepeatedPtrField< ::DB_InviteFriends_Unit > invitefriends_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_InviteFriends* default_instance_;
};
// -------------------------------------------------------------------

class DB_PTXMissionData : public ::google::protobuf::Message {
 public:
  DB_PTXMissionData();
  virtual ~DB_PTXMissionData();
  
  DB_PTXMissionData(const DB_PTXMissionData& from);
  
  inline DB_PTXMissionData& operator=(const DB_PTXMissionData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_PTXMissionData& default_instance();
  void Swap(DB_PTXMissionData* other);
  
  // implements Message ----------------------------------------------
  
  DB_PTXMissionData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_PTXMissionData& from);
  void MergeFrom(const DB_PTXMissionData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string missionid = 1 [default = ""];
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionidFieldNumber = 1;
  inline const ::std::string& missionid() const;
  inline void set_missionid(const ::std::string& value);
  inline void set_missionid(const char* value);
  inline void set_missionid(const char* value, size_t size);
  inline ::std::string* mutable_missionid();
  
  // optional int32 missionstate = 2 [default = -1];
  inline bool has_missionstate() const;
  inline void clear_missionstate();
  static const int kMissionstateFieldNumber = 2;
  inline ::google::protobuf::int32 missionstate() const;
  inline void set_missionstate(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* missionid_;
  static const ::std::string _default_missionid_;
  ::google::protobuf::int32 missionstate_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_PTXMissionData* default_instance_;
};
// -------------------------------------------------------------------

class DB_PlatCrossPromotionData : public ::google::protobuf::Message {
 public:
  DB_PlatCrossPromotionData();
  virtual ~DB_PlatCrossPromotionData();
  
  DB_PlatCrossPromotionData(const DB_PlatCrossPromotionData& from);
  
  inline DB_PlatCrossPromotionData& operator=(const DB_PlatCrossPromotionData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_PlatCrossPromotionData& default_instance();
  void Swap(DB_PlatCrossPromotionData* other);
  
  // implements Message ----------------------------------------------
  
  DB_PlatCrossPromotionData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_PlatCrossPromotionData& from);
  void MergeFrom(const DB_PlatCrossPromotionData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string chanle = 1;
  inline bool has_chanle() const;
  inline void clear_chanle();
  static const int kChanleFieldNumber = 1;
  inline const ::std::string& chanle() const;
  inline void set_chanle(const ::std::string& value);
  inline void set_chanle(const char* value);
  inline void set_chanle(const char* value, size_t size);
  inline ::std::string* mutable_chanle();
  
  // optional string date = 2;
  inline bool has_date() const;
  inline void clear_date();
  static const int kDateFieldNumber = 2;
  inline const ::std::string& date() const;
  inline void set_date(const ::std::string& value);
  inline void set_date(const char* value);
  inline void set_date(const char* value, size_t size);
  inline ::std::string* mutable_date();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* chanle_;
  static const ::std::string _default_chanle_;
  ::std::string* date_;
  static const ::std::string _default_date_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_PlatCrossPromotionData* default_instance_;
};
// -------------------------------------------------------------------

class DB_PlatCrossPromotion : public ::google::protobuf::Message {
 public:
  DB_PlatCrossPromotion();
  virtual ~DB_PlatCrossPromotion();
  
  DB_PlatCrossPromotion(const DB_PlatCrossPromotion& from);
  
  inline DB_PlatCrossPromotion& operator=(const DB_PlatCrossPromotion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_PlatCrossPromotion& default_instance();
  void Swap(DB_PlatCrossPromotion* other);
  
  // implements Message ----------------------------------------------
  
  DB_PlatCrossPromotion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_PlatCrossPromotion& from);
  void MergeFrom(const DB_PlatCrossPromotion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DB_PlatCrossPromotionData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_PlatCrossPromotionData >& data() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_PlatCrossPromotionData >* mutable_data();
  inline const ::DB_PlatCrossPromotionData& data(int index) const;
  inline ::DB_PlatCrossPromotionData* mutable_data(int index);
  inline ::DB_PlatCrossPromotionData* add_data();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::DB_PlatCrossPromotionData > data_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_PlatCrossPromotion* default_instance_;
};
// -------------------------------------------------------------------

class DB_Plat : public ::google::protobuf::Message {
 public:
  DB_Plat();
  virtual ~DB_Plat();
  
  DB_Plat(const DB_Plat& from);
  
  inline DB_Plat& operator=(const DB_Plat& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Plat& default_instance();
  void Swap(DB_Plat* other);
  
  // implements Message ----------------------------------------------
  
  DB_Plat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Plat& from);
  void MergeFrom(const DB_Plat& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string platform_id = 1 [default = ""];
  inline bool has_platform_id() const;
  inline void clear_platform_id();
  static const int kPlatformIdFieldNumber = 1;
  inline const ::std::string& platform_id() const;
  inline void set_platform_id(const ::std::string& value);
  inline void set_platform_id(const char* value);
  inline void set_platform_id(const char* value, size_t size);
  inline ::std::string* mutable_platform_id();
  
  // repeated string name = 2;
  inline int name_size() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& name() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name();
  inline const ::std::string& name(int index) const;
  inline ::std::string* mutable_name(int index);
  inline void set_name(int index, const ::std::string& value);
  inline void set_name(int index, const char* value);
  inline void set_name(int index, const char* value, size_t size);
  inline ::std::string* add_name();
  inline void add_name(const ::std::string& value);
  inline void add_name(const char* value);
  inline void add_name(const char* value, size_t size);
  
  // repeated string profile_link = 3;
  inline int profile_link_size() const;
  inline void clear_profile_link();
  static const int kProfileLinkFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& profile_link() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_profile_link();
  inline const ::std::string& profile_link(int index) const;
  inline ::std::string* mutable_profile_link(int index);
  inline void set_profile_link(int index, const ::std::string& value);
  inline void set_profile_link(int index, const char* value);
  inline void set_profile_link(int index, const char* value, size_t size);
  inline ::std::string* add_profile_link();
  inline void add_profile_link(const ::std::string& value);
  inline void add_profile_link(const char* value);
  inline void add_profile_link(const char* value, size_t size);
  
  // optional int32 gender = 4;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 4;
  inline ::google::protobuf::int32 gender() const;
  inline void set_gender(::google::protobuf::int32 value);
  
  // optional int32 yellowDmdLvl = 5 [default = 0];
  inline bool has_yellowdmdlvl() const;
  inline void clear_yellowdmdlvl();
  static const int kYellowDmdLvlFieldNumber = 5;
  inline ::google::protobuf::int32 yellowdmdlvl() const;
  inline void set_yellowdmdlvl(::google::protobuf::int32 value);
  
  // optional bool isYellowDmd = 6 [default = false];
  inline bool has_isyellowdmd() const;
  inline void clear_isyellowdmd();
  static const int kIsYellowDmdFieldNumber = 6;
  inline bool isyellowdmd() const;
  inline void set_isyellowdmd(bool value);
  
  // optional bool isYellowDmdYear = 7 [default = false];
  inline bool has_isyellowdmdyear() const;
  inline void clear_isyellowdmdyear();
  static const int kIsYellowDmdYearFieldNumber = 7;
  inline bool isyellowdmdyear() const;
  inline void set_isyellowdmdyear(bool value);
  
  // optional int32 QQDmdLvl = 8 [default = 0];
  inline bool has_qqdmdlvl() const;
  inline void clear_qqdmdlvl();
  static const int kQQDmdLvlFieldNumber = 8;
  inline ::google::protobuf::int32 qqdmdlvl() const;
  inline void set_qqdmdlvl(::google::protobuf::int32 value);
  
  // optional bool isQQDmd = 9 [default = false];
  inline bool has_isqqdmd() const;
  inline void clear_isqqdmd();
  static const int kIsQQDmdFieldNumber = 9;
  inline bool isqqdmd() const;
  inline void set_isqqdmd(bool value);
  
  // optional bool isQQDmdYear = 10 [default = false];
  inline bool has_isqqdmdyear() const;
  inline void clear_isqqdmdyear();
  static const int kIsQQDmdYearFieldNumber = 10;
  inline bool isqqdmdyear() const;
  inline void set_isqqdmdyear(bool value);
  
  // repeated .DB_PlatRegion platRegion = 11;
  inline int platregion_size() const;
  inline void clear_platregion();
  static const int kPlatRegionFieldNumber = 11;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_PlatRegion >& platregion() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_PlatRegion >* mutable_platregion();
  inline const ::DB_PlatRegion& platregion(int index) const;
  inline ::DB_PlatRegion* mutable_platregion(int index);
  inline ::DB_PlatRegion* add_platregion();
  
  // optional int32 lastRegion = 12 [default = -1];
  inline bool has_lastregion() const;
  inline void clear_lastregion();
  static const int kLastRegionFieldNumber = 12;
  inline ::google::protobuf::int32 lastregion() const;
  inline void set_lastregion(::google::protobuf::int32 value);
  
  // optional .DB_PlatGift giftInfo = 13;
  inline bool has_giftinfo() const;
  inline void clear_giftinfo();
  static const int kGiftInfoFieldNumber = 13;
  inline const ::DB_PlatGift& giftinfo() const;
  inline ::DB_PlatGift* mutable_giftinfo();
  
  // optional .DB_WebGiftFlag webFlag = 14;
  inline bool has_webflag() const;
  inline void clear_webflag();
  static const int kWebFlagFieldNumber = 14;
  inline const ::DB_WebGiftFlag& webflag() const;
  inline ::DB_WebGiftFlag* mutable_webflag();
  
  // optional int64 getCBGiftTime = 15 [default = 0];
  inline bool has_getcbgifttime() const;
  inline void clear_getcbgifttime();
  static const int kGetCBGiftTimeFieldNumber = 15;
  inline ::google::protobuf::int64 getcbgifttime() const;
  inline void set_getcbgifttime(::google::protobuf::int64 value);
  
  // optional int32 inviteFrdCnt = 16 [default = 0];
  inline bool has_invitefrdcnt() const;
  inline void clear_invitefrdcnt();
  static const int kInviteFrdCntFieldNumber = 16;
  inline ::google::protobuf::int32 invitefrdcnt() const;
  inline void set_invitefrdcnt(::google::protobuf::int32 value);
  
  // optional .DB_InviteFriends invitefriends = 17;
  inline bool has_invitefriends() const;
  inline void clear_invitefriends();
  static const int kInvitefriendsFieldNumber = 17;
  inline const ::DB_InviteFriends& invitefriends() const;
  inline ::DB_InviteFriends* mutable_invitefriends();
  
  // optional uint32 yellowDmdtime = 18 [default = 0];
  inline bool has_yellowdmdtime() const;
  inline void clear_yellowdmdtime();
  static const int kYellowDmdtimeFieldNumber = 18;
  inline ::google::protobuf::uint32 yellowdmdtime() const;
  inline void set_yellowdmdtime(::google::protobuf::uint32 value);
  
  // repeated .DB_PTXMissionData txmissiondata = 19;
  inline int txmissiondata_size() const;
  inline void clear_txmissiondata();
  static const int kTxmissiondataFieldNumber = 19;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_PTXMissionData >& txmissiondata() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_PTXMissionData >* mutable_txmissiondata();
  inline const ::DB_PTXMissionData& txmissiondata(int index) const;
  inline ::DB_PTXMissionData* mutable_txmissiondata(int index);
  inline ::DB_PTXMissionData* add_txmissiondata();
  
  // optional .DB_DailyYellowRes dailyyellowres = 20;
  inline bool has_dailyyellowres() const;
  inline void clear_dailyyellowres();
  static const int kDailyyellowresFieldNumber = 20;
  inline const ::DB_DailyYellowRes& dailyyellowres() const;
  inline ::DB_DailyYellowRes* mutable_dailyyellowres();
  
  // optional int32 inviteFrdCntDay = 21 [default = 0];
  inline bool has_invitefrdcntday() const;
  inline void clear_invitefrdcntday();
  static const int kInviteFrdCntDayFieldNumber = 21;
  inline ::google::protobuf::int32 invitefrdcntday() const;
  inline void set_invitefrdcntday(::google::protobuf::int32 value);
  
  // optional bool gaininviteFrdDay = 22 [default = false];
  inline bool has_gaininvitefrdday() const;
  inline void clear_gaininvitefrdday();
  static const int kGaininviteFrdDayFieldNumber = 22;
  inline bool gaininvitefrdday() const;
  inline void set_gaininvitefrdday(bool value);
  
  // optional int64 lastLoginTime = 23 [default = 0];
  inline bool has_lastlogintime() const;
  inline void clear_lastlogintime();
  static const int kLastLoginTimeFieldNumber = 23;
  inline ::google::protobuf::int64 lastlogintime() const;
  inline void set_lastlogintime(::google::protobuf::int64 value);
  
  // optional bool cancallback = 24 [default = true];
  inline bool has_cancallback() const;
  inline void clear_cancallback();
  static const int kCancallbackFieldNumber = 24;
  inline bool cancallback() const;
  inline void set_cancallback(bool value);
  
  // optional .DB_InviteFriendGift inviteFriendGift = 25;
  inline bool has_invitefriendgift() const;
  inline void clear_invitefriendgift();
  static const int kInviteFriendGiftFieldNumber = 25;
  inline const ::DB_InviteFriendGift& invitefriendgift() const;
  inline ::DB_InviteFriendGift* mutable_invitefriendgift();
  
  // repeated .DB_InviteFriendMsgByLogon inviteFriendMsgByLogon = 26;
  inline int invitefriendmsgbylogon_size() const;
  inline void clear_invitefriendmsgbylogon();
  static const int kInviteFriendMsgByLogonFieldNumber = 26;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_InviteFriendMsgByLogon >& invitefriendmsgbylogon() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_InviteFriendMsgByLogon >* mutable_invitefriendmsgbylogon();
  inline const ::DB_InviteFriendMsgByLogon& invitefriendmsgbylogon(int index) const;
  inline ::DB_InviteFriendMsgByLogon* mutable_invitefriendmsgbylogon(int index);
  inline ::DB_InviteFriendMsgByLogon* add_invitefriendmsgbylogon();
  
  // optional int64 ltRevision = 27 [default = 0];
  inline bool has_ltrevision() const;
  inline void clear_ltrevision();
  static const int kLtRevisionFieldNumber = 27;
  inline ::google::protobuf::int64 ltrevision() const;
  inline void set_ltrevision(::google::protobuf::int64 value);
  
  // optional int64 ltSaveRevision = 28 [default = 0];
  inline bool has_ltsaverevision() const;
  inline void clear_ltsaverevision();
  static const int kLtSaveRevisionFieldNumber = 28;
  inline ::google::protobuf::int64 ltsaverevision() const;
  inline void set_ltsaverevision(::google::protobuf::int64 value);
  
  // optional int64 ltMemRevision = 29 [default = 0];
  inline bool has_ltmemrevision() const;
  inline void clear_ltmemrevision();
  static const int kLtMemRevisionFieldNumber = 29;
  inline ::google::protobuf::int64 ltmemrevision() const;
  inline void set_ltmemrevision(::google::protobuf::int64 value);
  
  // optional int32 inviteFrdCntDayByLimit = 30;
  inline bool has_invitefrdcntdaybylimit() const;
  inline void clear_invitefrdcntdaybylimit();
  static const int kInviteFrdCntDayByLimitFieldNumber = 30;
  inline ::google::protobuf::int32 invitefrdcntdaybylimit() const;
  inline void set_invitefrdcntdaybylimit(::google::protobuf::int32 value);
  
  // optional bool isHighYellowDmd = 31 [default = false];
  inline bool has_ishighyellowdmd() const;
  inline void clear_ishighyellowdmd();
  static const int kIsHighYellowDmdFieldNumber = 31;
  inline bool ishighyellowdmd() const;
  inline void set_ishighyellowdmd(bool value);
  
  // repeated int32 dayGetCostGift = 32;
  inline int daygetcostgift_size() const;
  inline void clear_daygetcostgift();
  static const int kDayGetCostGiftFieldNumber = 32;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& daygetcostgift() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_daygetcostgift();
  inline ::google::protobuf::int32 daygetcostgift(int index) const;
  inline void set_daygetcostgift(int index, ::google::protobuf::int32 value);
  inline void add_daygetcostgift(::google::protobuf::int32 value);
  
  // optional int64 callBackFrdUid = 33;
  inline bool has_callbackfrduid() const;
  inline void clear_callbackfrduid();
  static const int kCallBackFrdUidFieldNumber = 33;
  inline ::google::protobuf::int64 callbackfrduid() const;
  inline void set_callbackfrduid(::google::protobuf::int64 value);
  
  // optional int32 dayInviteFrdBackCnt = 34 [default = 0];
  inline bool has_dayinvitefrdbackcnt() const;
  inline void clear_dayinvitefrdbackcnt();
  static const int kDayInviteFrdBackCntFieldNumber = 34;
  inline ::google::protobuf::int32 dayinvitefrdbackcnt() const;
  inline void set_dayinvitefrdbackcnt(::google::protobuf::int32 value);
  
  // optional int32 dayGetCoupon = 35 [default = 0];
  inline bool has_daygetcoupon() const;
  inline void clear_daygetcoupon();
  static const int kDayGetCouponFieldNumber = 35;
  inline ::google::protobuf::int32 daygetcoupon() const;
  inline void set_daygetcoupon(::google::protobuf::int32 value);
  
  // optional .DB_TaskMark taskmark = 36;
  inline bool has_taskmark() const;
  inline void clear_taskmark();
  static const int kTaskmarkFieldNumber = 36;
  inline const ::DB_TaskMark& taskmark() const;
  inline ::DB_TaskMark* mutable_taskmark();
  
  // optional string channel = 37 [default = ""];
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 37;
  inline const ::std::string& channel() const;
  inline void set_channel(const ::std::string& value);
  inline void set_channel(const char* value);
  inline void set_channel(const char* value, size_t size);
  inline ::std::string* mutable_channel();
  
  // optional .DB_PlatCrossPromotion promotion = 38;
  inline bool has_promotion() const;
  inline void clear_promotion();
  static const int kPromotionFieldNumber = 38;
  inline const ::DB_PlatCrossPromotion& promotion() const;
  inline ::DB_PlatCrossPromotion* mutable_promotion();
  
  // repeated int32 inviteGiftRecord = 39;
  inline int invitegiftrecord_size() const;
  inline void clear_invitegiftrecord();
  static const int kInviteGiftRecordFieldNumber = 39;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& invitegiftrecord() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_invitegiftrecord();
  inline ::google::protobuf::int32 invitegiftrecord(int index) const;
  inline void set_invitegiftrecord(int index, ::google::protobuf::int32 value);
  inline void add_invitegiftrecord(::google::protobuf::int32 value);
  
  // optional int32 idenflag = 40 [default = 0];
  inline bool has_idenflag() const;
  inline void clear_idenflag();
  static const int kIdenflagFieldNumber = 40;
  inline ::google::protobuf::int32 idenflag() const;
  inline void set_idenflag(::google::protobuf::int32 value);
  
  // optional int32 qqTenyearBackFlowFlag = 41;
  inline bool has_qqtenyearbackflowflag() const;
  inline void clear_qqtenyearbackflowflag();
  static const int kQqTenyearBackFlowFlagFieldNumber = 41;
  inline ::google::protobuf::int32 qqtenyearbackflowflag() const;
  inline void set_qqtenyearbackflowflag(::google::protobuf::int32 value);
  
  // optional int32 nAdultFlag = 42 [default = 100];
  inline bool has_nadultflag() const;
  inline void clear_nadultflag();
  static const int kNAdultFlagFieldNumber = 42;
  inline ::google::protobuf::int32 nadultflag() const;
  inline void set_nadultflag(::google::protobuf::int32 value);
  
  // optional int32 QHallDmdLvl = 43 [default = 0];
  inline bool has_qhalldmdlvl() const;
  inline void clear_qhalldmdlvl();
  static const int kQHallDmdLvlFieldNumber = 43;
  inline ::google::protobuf::int32 qhalldmdlvl() const;
  inline void set_qhalldmdlvl(::google::protobuf::int32 value);
  
  // optional bool IsQHallDmd = 44 [default = false];
  inline bool has_isqhalldmd() const;
  inline void clear_isqhalldmd();
  static const int kIsQHallDmdFieldNumber = 44;
  inline bool isqhalldmd() const;
  inline void set_isqhalldmd(bool value);
  
  // optional bool IsQHallDmdYear = 45 [default = false];
  inline bool has_isqhalldmdyear() const;
  inline void clear_isqhalldmdyear();
  static const int kIsQHallDmdYearFieldNumber = 45;
  inline bool isqhalldmdyear() const;
  inline void set_isqhalldmdyear(bool value);
  
  // optional bool IsHighQHallDmd = 46 [default = false];
  inline bool has_ishighqhalldmd() const;
  inline void clear_ishighqhalldmd();
  static const int kIsHighQHallDmdFieldNumber = 46;
  inline bool ishighqhalldmd() const;
  inline void set_ishighqhalldmd(bool value);
  
  // optional bool IsHighQHallDmdYear = 47 [default = false];
  inline bool has_ishighqhalldmdyear() const;
  inline void clear_ishighqhalldmdyear();
  static const int kIsHighQHallDmdYearFieldNumber = 47;
  inline bool ishighqhalldmdyear() const;
  inline void set_ishighqhalldmdyear(bool value);
  
  // optional uint32 bluedmdtime = 48 [default = 0];
  inline bool has_bluedmdtime() const;
  inline void clear_bluedmdtime();
  static const int kBluedmdtimeFieldNumber = 48;
  inline ::google::protobuf::uint32 bluedmdtime() const;
  inline void set_bluedmdtime(::google::protobuf::uint32 value);
  
  // optional int32 siteid = 49 [default = -1];
  inline bool has_siteid() const;
  inline void clear_siteid();
  static const int kSiteidFieldNumber = 49;
  inline ::google::protobuf::int32 siteid() const;
  inline void set_siteid(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* platform_id_;
  static const ::std::string _default_platform_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> profile_link_;
  ::google::protobuf::int32 gender_;
  ::google::protobuf::int32 yellowdmdlvl_;
  bool isyellowdmd_;
  bool isyellowdmdyear_;
  ::google::protobuf::int32 qqdmdlvl_;
  bool isqqdmd_;
  bool isqqdmdyear_;
  ::google::protobuf::RepeatedPtrField< ::DB_PlatRegion > platregion_;
  ::google::protobuf::int32 lastregion_;
  ::DB_PlatGift* giftinfo_;
  ::DB_WebGiftFlag* webflag_;
  ::google::protobuf::int64 getcbgifttime_;
  ::google::protobuf::int32 invitefrdcnt_;
  ::DB_InviteFriends* invitefriends_;
  ::google::protobuf::uint32 yellowdmdtime_;
  ::google::protobuf::RepeatedPtrField< ::DB_PTXMissionData > txmissiondata_;
  ::DB_DailyYellowRes* dailyyellowres_;
  ::google::protobuf::int32 invitefrdcntday_;
  bool gaininvitefrdday_;
  ::google::protobuf::int64 lastlogintime_;
  bool cancallback_;
  ::DB_InviteFriendGift* invitefriendgift_;
  ::google::protobuf::RepeatedPtrField< ::DB_InviteFriendMsgByLogon > invitefriendmsgbylogon_;
  ::google::protobuf::int64 ltrevision_;
  ::google::protobuf::int64 ltsaverevision_;
  ::google::protobuf::int64 ltmemrevision_;
  ::google::protobuf::int32 invitefrdcntdaybylimit_;
  bool ishighyellowdmd_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > daygetcostgift_;
  ::google::protobuf::int64 callbackfrduid_;
  ::google::protobuf::int32 dayinvitefrdbackcnt_;
  ::google::protobuf::int32 daygetcoupon_;
  ::DB_TaskMark* taskmark_;
  ::std::string* channel_;
  static const ::std::string _default_channel_;
  ::DB_PlatCrossPromotion* promotion_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > invitegiftrecord_;
  ::google::protobuf::int32 idenflag_;
  ::google::protobuf::int32 qqtenyearbackflowflag_;
  ::google::protobuf::int32 nadultflag_;
  ::google::protobuf::int32 qhalldmdlvl_;
  bool isqhalldmd_;
  bool isqhalldmdyear_;
  bool ishighqhalldmd_;
  bool ishighqhalldmdyear_;
  ::google::protobuf::uint32 bluedmdtime_;
  ::google::protobuf::int32 siteid_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(49 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Plat* default_instance_;
};
// -------------------------------------------------------------------

class DB_DailyYellowRes : public ::google::protobuf::Message {
 public:
  DB_DailyYellowRes();
  virtual ~DB_DailyYellowRes();
  
  DB_DailyYellowRes(const DB_DailyYellowRes& from);
  
  inline DB_DailyYellowRes& operator=(const DB_DailyYellowRes& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_DailyYellowRes& default_instance();
  void Swap(DB_DailyYellowRes* other);
  
  // implements Message ----------------------------------------------
  
  DB_DailyYellowRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_DailyYellowRes& from);
  void MergeFrom(const DB_DailyYellowRes& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 lastGetTime = 1;
  inline bool has_lastgettime() const;
  inline void clear_lastgettime();
  static const int kLastGetTimeFieldNumber = 1;
  inline ::google::protobuf::int64 lastgettime() const;
  inline void set_lastgettime(::google::protobuf::int64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 lastgettime_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_DailyYellowRes* default_instance_;
};
// -------------------------------------------------------------------

class DB_InviteFriendGift : public ::google::protobuf::Message {
 public:
  DB_InviteFriendGift();
  virtual ~DB_InviteFriendGift();
  
  DB_InviteFriendGift(const DB_InviteFriendGift& from);
  
  inline DB_InviteFriendGift& operator=(const DB_InviteFriendGift& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_InviteFriendGift& default_instance();
  void Swap(DB_InviteFriendGift* other);
  
  // implements Message ----------------------------------------------
  
  DB_InviteFriendGift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_InviteFriendGift& from);
  void MergeFrom(const DB_InviteFriendGift& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 inviteFrdCntForNew = 1 [default = 0];
  inline bool has_invitefrdcntfornew() const;
  inline void clear_invitefrdcntfornew();
  static const int kInviteFrdCntForNewFieldNumber = 1;
  inline ::google::protobuf::int32 invitefrdcntfornew() const;
  inline void set_invitefrdcntfornew(::google::protobuf::int32 value);
  
  // repeated .DB_InviteGiftMsg invitegiftmsg = 2;
  inline int invitegiftmsg_size() const;
  inline void clear_invitegiftmsg();
  static const int kInvitegiftmsgFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_InviteGiftMsg >& invitegiftmsg() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_InviteGiftMsg >* mutable_invitegiftmsg();
  inline const ::DB_InviteGiftMsg& invitegiftmsg(int index) const;
  inline ::DB_InviteGiftMsg* mutable_invitegiftmsg(int index);
  inline ::DB_InviteGiftMsg* add_invitegiftmsg();
  
  // repeated .DB_InvitedFriendLvMsg invitedfriendlvmsg = 3;
  inline int invitedfriendlvmsg_size() const;
  inline void clear_invitedfriendlvmsg();
  static const int kInvitedfriendlvmsgFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_InvitedFriendLvMsg >& invitedfriendlvmsg() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_InvitedFriendLvMsg >* mutable_invitedfriendlvmsg();
  inline const ::DB_InvitedFriendLvMsg& invitedfriendlvmsg(int index) const;
  inline ::DB_InvitedFriendLvMsg* mutable_invitedfriendlvmsg(int index);
  inline ::DB_InvitedFriendLvMsg* add_invitedfriendlvmsg();
  
  // optional int32 unGetCoupon = 4 [default = 0];
  inline bool has_ungetcoupon() const;
  inline void clear_ungetcoupon();
  static const int kUnGetCouponFieldNumber = 4;
  inline ::google::protobuf::int32 ungetcoupon() const;
  inline void set_ungetcoupon(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 invitefrdcntfornew_;
  ::google::protobuf::RepeatedPtrField< ::DB_InviteGiftMsg > invitegiftmsg_;
  ::google::protobuf::RepeatedPtrField< ::DB_InvitedFriendLvMsg > invitedfriendlvmsg_;
  ::google::protobuf::int32 ungetcoupon_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_InviteFriendGift* default_instance_;
};
// -------------------------------------------------------------------

class DB_InviteGiftMsg : public ::google::protobuf::Message {
 public:
  DB_InviteGiftMsg();
  virtual ~DB_InviteGiftMsg();
  
  DB_InviteGiftMsg(const DB_InviteGiftMsg& from);
  
  inline DB_InviteGiftMsg& operator=(const DB_InviteGiftMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_InviteGiftMsg& default_instance();
  void Swap(DB_InviteGiftMsg* other);
  
  // implements Message ----------------------------------------------
  
  DB_InviteGiftMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_InviteGiftMsg& from);
  void MergeFrom(const DB_InviteGiftMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 inviteFrdCntDay = 1 [default = 0];
  inline bool has_invitefrdcntday() const;
  inline void clear_invitefrdcntday();
  static const int kInviteFrdCntDayFieldNumber = 1;
  inline ::google::protobuf::int32 invitefrdcntday() const;
  inline void set_invitefrdcntday(::google::protobuf::int32 value);
  
  // optional int32 hasGetTimes = 2 [default = 0];
  inline bool has_hasgettimes() const;
  inline void clear_hasgettimes();
  static const int kHasGetTimesFieldNumber = 2;
  inline ::google::protobuf::int32 hasgettimes() const;
  inline void set_hasgettimes(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 invitefrdcntday_;
  ::google::protobuf::int32 hasgettimes_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_InviteGiftMsg* default_instance_;
};
// -------------------------------------------------------------------

class DB_InviteFriendMsgByLogon : public ::google::protobuf::Message {
 public:
  DB_InviteFriendMsgByLogon();
  virtual ~DB_InviteFriendMsgByLogon();
  
  DB_InviteFriendMsgByLogon(const DB_InviteFriendMsgByLogon& from);
  
  inline DB_InviteFriendMsgByLogon& operator=(const DB_InviteFriendMsgByLogon& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_InviteFriendMsgByLogon& default_instance();
  void Swap(DB_InviteFriendMsgByLogon* other);
  
  // implements Message ----------------------------------------------
  
  DB_InviteFriendMsgByLogon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_InviteFriendMsgByLogon& from);
  void MergeFrom(const DB_InviteFriendMsgByLogon& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string platid = 1;
  inline bool has_platid() const;
  inline void clear_platid();
  static const int kPlatidFieldNumber = 1;
  inline const ::std::string& platid() const;
  inline void set_platid(const ::std::string& value);
  inline void set_platid(const char* value);
  inline void set_platid(const char* value, size_t size);
  inline ::std::string* mutable_platid();
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional string url = 3;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 3;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* platid_;
  static const ::std::string _default_platid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* url_;
  static const ::std::string _default_url_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_InviteFriendMsgByLogon* default_instance_;
};
// -------------------------------------------------------------------

class DB_InvitedFriendLvMsg : public ::google::protobuf::Message {
 public:
  DB_InvitedFriendLvMsg();
  virtual ~DB_InvitedFriendLvMsg();
  
  DB_InvitedFriendLvMsg(const DB_InvitedFriendLvMsg& from);
  
  inline DB_InvitedFriendLvMsg& operator=(const DB_InvitedFriendLvMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_InvitedFriendLvMsg& default_instance();
  void Swap(DB_InvitedFriendLvMsg* other);
  
  // implements Message ----------------------------------------------
  
  DB_InvitedFriendLvMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_InvitedFriendLvMsg& from);
  void MergeFrom(const DB_InvitedFriendLvMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // repeated int64 uids = 2;
  inline int uids_size() const;
  inline void clear_uids();
  static const int kUidsFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >& uids() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >* mutable_uids();
  inline ::google::protobuf::int64 uids(int index) const;
  inline void set_uids(int index, ::google::protobuf::int64 value);
  inline void add_uids(::google::protobuf::int64 value);
  
  // repeated string openids = 3;
  inline int openids_size() const;
  inline void clear_openids();
  static const int kOpenidsFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& openids() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_openids();
  inline const ::std::string& openids(int index) const;
  inline ::std::string* mutable_openids(int index);
  inline void set_openids(int index, const ::std::string& value);
  inline void set_openids(int index, const char* value);
  inline void set_openids(int index, const char* value, size_t size);
  inline ::std::string* add_openids();
  inline void add_openids(const ::std::string& value);
  inline void add_openids(const char* value);
  inline void add_openids(const char* value, size_t size);
  
  // repeated string urls = 4;
  inline int urls_size() const;
  inline void clear_urls();
  static const int kUrlsFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& urls() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_urls();
  inline const ::std::string& urls(int index) const;
  inline ::std::string* mutable_urls(int index);
  inline void set_urls(int index, const ::std::string& value);
  inline void set_urls(int index, const char* value);
  inline void set_urls(int index, const char* value, size_t size);
  inline ::std::string* add_urls();
  inline void add_urls(const ::std::string& value);
  inline void add_urls(const char* value);
  inline void add_urls(const char* value, size_t size);
  
  // repeated string names = 5;
  inline int names_size() const;
  inline void clear_names();
  static const int kNamesFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& names() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_names();
  inline const ::std::string& names(int index) const;
  inline ::std::string* mutable_names(int index);
  inline void set_names(int index, const ::std::string& value);
  inline void set_names(int index, const char* value);
  inline void set_names(int index, const char* value, size_t size);
  inline ::std::string* add_names();
  inline void add_names(const ::std::string& value);
  inline void add_names(const char* value);
  inline void add_names(const char* value, size_t size);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > uids_;
  ::google::protobuf::RepeatedPtrField< ::std::string> openids_;
  ::google::protobuf::RepeatedPtrField< ::std::string> urls_;
  ::google::protobuf::RepeatedPtrField< ::std::string> names_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_InvitedFriendLvMsg* default_instance_;
};
// -------------------------------------------------------------------

class DB_TaskMark : public ::google::protobuf::Message {
 public:
  DB_TaskMark();
  virtual ~DB_TaskMark();
  
  DB_TaskMark(const DB_TaskMark& from);
  
  inline DB_TaskMark& operator=(const DB_TaskMark& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_TaskMark& default_instance();
  void Swap(DB_TaskMark* other);
  
  // implements Message ----------------------------------------------
  
  DB_TaskMark* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_TaskMark& from);
  void MergeFrom(const DB_TaskMark& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  
  // optional int32 step = 2;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 2;
  inline ::google::protobuf::int32 step() const;
  inline void set_step(::google::protobuf::int32 value);
  
  // repeated int32 getStep = 3;
  inline int getstep_size() const;
  inline void clear_getstep();
  static const int kGetStepFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& getstep() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_getstep();
  inline ::google::protobuf::int32 getstep(int index) const;
  inline void set_getstep(int index, ::google::protobuf::int32 value);
  inline void add_getstep(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* id_;
  static const ::std::string _default_id_;
  ::google::protobuf::int32 step_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > getstep_;
  friend void  protobuf_AddDesc_platDB_2eproto();
  friend void protobuf_AssignDesc_platDB_2eproto();
  friend void protobuf_ShutdownFile_platDB_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_TaskMark* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// DB_PlatGiftFrdInfo

// optional int64 friendID = 1;
inline bool DB_PlatGiftFrdInfo::has_friendid() const {
  return _has_bit(0);
}
inline void DB_PlatGiftFrdInfo::clear_friendid() {
  friendid_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 DB_PlatGiftFrdInfo::friendid() const {
  return friendid_;
}
inline void DB_PlatGiftFrdInfo::set_friendid(::google::protobuf::int64 value) {
  _set_bit(0);
  friendid_ = value;
}

// optional string frdOpenID = 2;
inline bool DB_PlatGiftFrdInfo::has_frdopenid() const {
  return _has_bit(1);
}
inline void DB_PlatGiftFrdInfo::clear_frdopenid() {
  if (frdopenid_ != &_default_frdopenid_) {
    frdopenid_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& DB_PlatGiftFrdInfo::frdopenid() const {
  return *frdopenid_;
}
inline void DB_PlatGiftFrdInfo::set_frdopenid(const ::std::string& value) {
  _set_bit(1);
  if (frdopenid_ == &_default_frdopenid_) {
    frdopenid_ = new ::std::string;
  }
  frdopenid_->assign(value);
}
inline void DB_PlatGiftFrdInfo::set_frdopenid(const char* value) {
  _set_bit(1);
  if (frdopenid_ == &_default_frdopenid_) {
    frdopenid_ = new ::std::string;
  }
  frdopenid_->assign(value);
}
inline void DB_PlatGiftFrdInfo::set_frdopenid(const char* value, size_t size) {
  _set_bit(1);
  if (frdopenid_ == &_default_frdopenid_) {
    frdopenid_ = new ::std::string;
  }
  frdopenid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_PlatGiftFrdInfo::mutable_frdopenid() {
  _set_bit(1);
  if (frdopenid_ == &_default_frdopenid_) {
    frdopenid_ = new ::std::string;
  }
  return frdopenid_;
}

// optional int32 messageID = 3;
inline bool DB_PlatGiftFrdInfo::has_messageid() const {
  return _has_bit(2);
}
inline void DB_PlatGiftFrdInfo::clear_messageid() {
  messageid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_PlatGiftFrdInfo::messageid() const {
  return messageid_;
}
inline void DB_PlatGiftFrdInfo::set_messageid(::google::protobuf::int32 value) {
  _set_bit(2);
  messageid_ = value;
}

// optional int32 giftID = 4 [default = 0];
inline bool DB_PlatGiftFrdInfo::has_giftid() const {
  return _has_bit(3);
}
inline void DB_PlatGiftFrdInfo::clear_giftid() {
  giftid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_PlatGiftFrdInfo::giftid() const {
  return giftid_;
}
inline void DB_PlatGiftFrdInfo::set_giftid(::google::protobuf::int32 value) {
  _set_bit(3);
  giftid_ = value;
}

// optional int64 getTime = 5 [default = 0];
inline bool DB_PlatGiftFrdInfo::has_gettime() const {
  return _has_bit(4);
}
inline void DB_PlatGiftFrdInfo::clear_gettime() {
  gettime_ = GOOGLE_LONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::int64 DB_PlatGiftFrdInfo::gettime() const {
  return gettime_;
}
inline void DB_PlatGiftFrdInfo::set_gettime(::google::protobuf::int64 value) {
  _set_bit(4);
  gettime_ = value;
}

// optional int32 giftType = 6 [default = 0];
inline bool DB_PlatGiftFrdInfo::has_gifttype() const {
  return _has_bit(5);
}
inline void DB_PlatGiftFrdInfo::clear_gifttype() {
  gifttype_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_PlatGiftFrdInfo::gifttype() const {
  return gifttype_;
}
inline void DB_PlatGiftFrdInfo::set_gifttype(::google::protobuf::int32 value) {
  _set_bit(5);
  gifttype_ = value;
}

// optional string frdName = 7;
inline bool DB_PlatGiftFrdInfo::has_frdname() const {
  return _has_bit(6);
}
inline void DB_PlatGiftFrdInfo::clear_frdname() {
  if (frdname_ != &_default_frdname_) {
    frdname_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& DB_PlatGiftFrdInfo::frdname() const {
  return *frdname_;
}
inline void DB_PlatGiftFrdInfo::set_frdname(const ::std::string& value) {
  _set_bit(6);
  if (frdname_ == &_default_frdname_) {
    frdname_ = new ::std::string;
  }
  frdname_->assign(value);
}
inline void DB_PlatGiftFrdInfo::set_frdname(const char* value) {
  _set_bit(6);
  if (frdname_ == &_default_frdname_) {
    frdname_ = new ::std::string;
  }
  frdname_->assign(value);
}
inline void DB_PlatGiftFrdInfo::set_frdname(const char* value, size_t size) {
  _set_bit(6);
  if (frdname_ == &_default_frdname_) {
    frdname_ = new ::std::string;
  }
  frdname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_PlatGiftFrdInfo::mutable_frdname() {
  _set_bit(6);
  if (frdname_ == &_default_frdname_) {
    frdname_ = new ::std::string;
  }
  return frdname_;
}

// optional string frdUrl = 8;
inline bool DB_PlatGiftFrdInfo::has_frdurl() const {
  return _has_bit(7);
}
inline void DB_PlatGiftFrdInfo::clear_frdurl() {
  if (frdurl_ != &_default_frdurl_) {
    frdurl_->clear();
  }
  _clear_bit(7);
}
inline const ::std::string& DB_PlatGiftFrdInfo::frdurl() const {
  return *frdurl_;
}
inline void DB_PlatGiftFrdInfo::set_frdurl(const ::std::string& value) {
  _set_bit(7);
  if (frdurl_ == &_default_frdurl_) {
    frdurl_ = new ::std::string;
  }
  frdurl_->assign(value);
}
inline void DB_PlatGiftFrdInfo::set_frdurl(const char* value) {
  _set_bit(7);
  if (frdurl_ == &_default_frdurl_) {
    frdurl_ = new ::std::string;
  }
  frdurl_->assign(value);
}
inline void DB_PlatGiftFrdInfo::set_frdurl(const char* value, size_t size) {
  _set_bit(7);
  if (frdurl_ == &_default_frdurl_) {
    frdurl_ = new ::std::string;
  }
  frdurl_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_PlatGiftFrdInfo::mutable_frdurl() {
  _set_bit(7);
  if (frdurl_ == &_default_frdurl_) {
    frdurl_ = new ::std::string;
  }
  return frdurl_;
}

// -------------------------------------------------------------------

// DB_PlatGiftGainRecord

// optional int32 ngiftID = 1 [default = 0];
inline bool DB_PlatGiftGainRecord::has_ngiftid() const {
  return _has_bit(0);
}
inline void DB_PlatGiftGainRecord::clear_ngiftid() {
  ngiftid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_PlatGiftGainRecord::ngiftid() const {
  return ngiftid_;
}
inline void DB_PlatGiftGainRecord::set_ngiftid(::google::protobuf::int32 value) {
  _set_bit(0);
  ngiftid_ = value;
}

// optional int32 ngiftGain = 2 [default = 0];
inline bool DB_PlatGiftGainRecord::has_ngiftgain() const {
  return _has_bit(1);
}
inline void DB_PlatGiftGainRecord::clear_ngiftgain() {
  ngiftgain_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_PlatGiftGainRecord::ngiftgain() const {
  return ngiftgain_;
}
inline void DB_PlatGiftGainRecord::set_ngiftgain(::google::protobuf::int32 value) {
  _set_bit(1);
  ngiftgain_ = value;
}

// -------------------------------------------------------------------

// DB_PlatGift

// repeated string daySendFrdIDLst = 1;
inline int DB_PlatGift::daysendfrdidlst_size() const {
  return daysendfrdidlst_.size();
}
inline void DB_PlatGift::clear_daysendfrdidlst() {
  daysendfrdidlst_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_PlatGift::daysendfrdidlst() const {
  return daysendfrdidlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_PlatGift::mutable_daysendfrdidlst() {
  return &daysendfrdidlst_;
}
inline const ::std::string& DB_PlatGift::daysendfrdidlst(int index) const {
  return daysendfrdidlst_.Get(index);
}
inline ::std::string* DB_PlatGift::mutable_daysendfrdidlst(int index) {
  return daysendfrdidlst_.Mutable(index);
}
inline void DB_PlatGift::set_daysendfrdidlst(int index, const ::std::string& value) {
  daysendfrdidlst_.Mutable(index)->assign(value);
}
inline void DB_PlatGift::set_daysendfrdidlst(int index, const char* value) {
  daysendfrdidlst_.Mutable(index)->assign(value);
}
inline void DB_PlatGift::set_daysendfrdidlst(int index, const char* value, size_t size) {
  daysendfrdidlst_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_PlatGift::add_daysendfrdidlst() {
  return daysendfrdidlst_.Add();
}
inline void DB_PlatGift::add_daysendfrdidlst(const ::std::string& value) {
  daysendfrdidlst_.Add()->assign(value);
}
inline void DB_PlatGift::add_daysendfrdidlst(const char* value) {
  daysendfrdidlst_.Add()->assign(value);
}
inline void DB_PlatGift::add_daysendfrdidlst(const char* value, size_t size) {
  daysendfrdidlst_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string dayAskFrdIDLst = 2;
inline int DB_PlatGift::dayaskfrdidlst_size() const {
  return dayaskfrdidlst_.size();
}
inline void DB_PlatGift::clear_dayaskfrdidlst() {
  dayaskfrdidlst_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_PlatGift::dayaskfrdidlst() const {
  return dayaskfrdidlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_PlatGift::mutable_dayaskfrdidlst() {
  return &dayaskfrdidlst_;
}
inline const ::std::string& DB_PlatGift::dayaskfrdidlst(int index) const {
  return dayaskfrdidlst_.Get(index);
}
inline ::std::string* DB_PlatGift::mutable_dayaskfrdidlst(int index) {
  return dayaskfrdidlst_.Mutable(index);
}
inline void DB_PlatGift::set_dayaskfrdidlst(int index, const ::std::string& value) {
  dayaskfrdidlst_.Mutable(index)->assign(value);
}
inline void DB_PlatGift::set_dayaskfrdidlst(int index, const char* value) {
  dayaskfrdidlst_.Mutable(index)->assign(value);
}
inline void DB_PlatGift::set_dayaskfrdidlst(int index, const char* value, size_t size) {
  dayaskfrdidlst_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_PlatGift::add_dayaskfrdidlst() {
  return dayaskfrdidlst_.Add();
}
inline void DB_PlatGift::add_dayaskfrdidlst(const ::std::string& value) {
  dayaskfrdidlst_.Add()->assign(value);
}
inline void DB_PlatGift::add_dayaskfrdidlst(const char* value) {
  dayaskfrdidlst_.Add()->assign(value);
}
inline void DB_PlatGift::add_dayaskfrdidlst(const char* value, size_t size) {
  dayaskfrdidlst_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// optional int32 dayGetGift2BagCnt = 3;
inline bool DB_PlatGift::has_daygetgift2bagcnt() const {
  return _has_bit(2);
}
inline void DB_PlatGift::clear_daygetgift2bagcnt() {
  daygetgift2bagcnt_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_PlatGift::daygetgift2bagcnt() const {
  return daygetgift2bagcnt_;
}
inline void DB_PlatGift::set_daygetgift2bagcnt(::google::protobuf::int32 value) {
  _set_bit(2);
  daygetgift2bagcnt_ = value;
}

// optional int32 dayAskGift2BagCnt = 4;
inline bool DB_PlatGift::has_dayaskgift2bagcnt() const {
  return _has_bit(3);
}
inline void DB_PlatGift::clear_dayaskgift2bagcnt() {
  dayaskgift2bagcnt_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_PlatGift::dayaskgift2bagcnt() const {
  return dayaskgift2bagcnt_;
}
inline void DB_PlatGift::set_dayaskgift2bagcnt(::google::protobuf::int32 value) {
  _set_bit(3);
  dayaskgift2bagcnt_ = value;
}

// optional int32 dayGetGiftCnt = 5;
inline bool DB_PlatGift::has_daygetgiftcnt() const {
  return _has_bit(4);
}
inline void DB_PlatGift::clear_daygetgiftcnt() {
  daygetgiftcnt_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_PlatGift::daygetgiftcnt() const {
  return daygetgiftcnt_;
}
inline void DB_PlatGift::set_daygetgiftcnt(::google::protobuf::int32 value) {
  _set_bit(4);
  daygetgiftcnt_ = value;
}

// optional int32 dayResendGiftCnt = 6;
inline bool DB_PlatGift::has_dayresendgiftcnt() const {
  return _has_bit(5);
}
inline void DB_PlatGift::clear_dayresendgiftcnt() {
  dayresendgiftcnt_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_PlatGift::dayresendgiftcnt() const {
  return dayresendgiftcnt_;
}
inline void DB_PlatGift::set_dayresendgiftcnt(::google::protobuf::int32 value) {
  _set_bit(5);
  dayresendgiftcnt_ = value;
}

// repeated .DB_PlatGiftFrdInfo getGiftInfo = 7;
inline int DB_PlatGift::getgiftinfo_size() const {
  return getgiftinfo_.size();
}
inline void DB_PlatGift::clear_getgiftinfo() {
  getgiftinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_PlatGiftFrdInfo >&
DB_PlatGift::getgiftinfo() const {
  return getgiftinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_PlatGiftFrdInfo >*
DB_PlatGift::mutable_getgiftinfo() {
  return &getgiftinfo_;
}
inline const ::DB_PlatGiftFrdInfo& DB_PlatGift::getgiftinfo(int index) const {
  return getgiftinfo_.Get(index);
}
inline ::DB_PlatGiftFrdInfo* DB_PlatGift::mutable_getgiftinfo(int index) {
  return getgiftinfo_.Mutable(index);
}
inline ::DB_PlatGiftFrdInfo* DB_PlatGift::add_getgiftinfo() {
  return getgiftinfo_.Add();
}

// repeated .DB_PlatGiftFrdInfo finishGiftInfo = 8;
inline int DB_PlatGift::finishgiftinfo_size() const {
  return finishgiftinfo_.size();
}
inline void DB_PlatGift::clear_finishgiftinfo() {
  finishgiftinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_PlatGiftFrdInfo >&
DB_PlatGift::finishgiftinfo() const {
  return finishgiftinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_PlatGiftFrdInfo >*
DB_PlatGift::mutable_finishgiftinfo() {
  return &finishgiftinfo_;
}
inline const ::DB_PlatGiftFrdInfo& DB_PlatGift::finishgiftinfo(int index) const {
  return finishgiftinfo_.Get(index);
}
inline ::DB_PlatGiftFrdInfo* DB_PlatGift::mutable_finishgiftinfo(int index) {
  return finishgiftinfo_.Mutable(index);
}
inline ::DB_PlatGiftFrdInfo* DB_PlatGift::add_finishgiftinfo() {
  return finishgiftinfo_.Add();
}

// optional int32 msgIdx = 9 [default = 0];
inline bool DB_PlatGift::has_msgidx() const {
  return _has_bit(8);
}
inline void DB_PlatGift::clear_msgidx() {
  msgidx_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_PlatGift::msgidx() const {
  return msgidx_;
}
inline void DB_PlatGift::set_msgidx(::google::protobuf::int32 value) {
  _set_bit(8);
  msgidx_ = value;
}

// optional int64 lastLoginTime = 10 [default = 0];
inline bool DB_PlatGift::has_lastlogintime() const {
  return _has_bit(9);
}
inline void DB_PlatGift::clear_lastlogintime() {
  lastlogintime_ = GOOGLE_LONGLONG(0);
  _clear_bit(9);
}
inline ::google::protobuf::int64 DB_PlatGift::lastlogintime() const {
  return lastlogintime_;
}
inline void DB_PlatGift::set_lastlogintime(::google::protobuf::int64 value) {
  _set_bit(9);
  lastlogintime_ = value;
}

// optional int32 daySendGiftCnt = 11;
inline bool DB_PlatGift::has_daysendgiftcnt() const {
  return _has_bit(10);
}
inline void DB_PlatGift::clear_daysendgiftcnt() {
  daysendgiftcnt_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 DB_PlatGift::daysendgiftcnt() const {
  return daysendgiftcnt_;
}
inline void DB_PlatGift::set_daysendgiftcnt(::google::protobuf::int32 value) {
  _set_bit(10);
  daysendgiftcnt_ = value;
}

// repeated .DB_PlatGiftGainRecord dayGainGiftRecord = 12;
inline int DB_PlatGift::daygaingiftrecord_size() const {
  return daygaingiftrecord_.size();
}
inline void DB_PlatGift::clear_daygaingiftrecord() {
  daygaingiftrecord_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_PlatGiftGainRecord >&
DB_PlatGift::daygaingiftrecord() const {
  return daygaingiftrecord_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_PlatGiftGainRecord >*
DB_PlatGift::mutable_daygaingiftrecord() {
  return &daygaingiftrecord_;
}
inline const ::DB_PlatGiftGainRecord& DB_PlatGift::daygaingiftrecord(int index) const {
  return daygaingiftrecord_.Get(index);
}
inline ::DB_PlatGiftGainRecord* DB_PlatGift::mutable_daygaingiftrecord(int index) {
  return daygaingiftrecord_.Mutable(index);
}
inline ::DB_PlatGiftGainRecord* DB_PlatGift::add_daygaingiftrecord() {
  return daygaingiftrecord_.Add();
}

// optional bool bSendGiftGain = 13;
inline bool DB_PlatGift::has_bsendgiftgain() const {
  return _has_bit(12);
}
inline void DB_PlatGift::clear_bsendgiftgain() {
  bsendgiftgain_ = false;
  _clear_bit(12);
}
inline bool DB_PlatGift::bsendgiftgain() const {
  return bsendgiftgain_;
}
inline void DB_PlatGift::set_bsendgiftgain(bool value) {
  _set_bit(12);
  bsendgiftgain_ = value;
}

// optional bool baskGiftGain = 14;
inline bool DB_PlatGift::has_baskgiftgain() const {
  return _has_bit(13);
}
inline void DB_PlatGift::clear_baskgiftgain() {
  baskgiftgain_ = false;
  _clear_bit(13);
}
inline bool DB_PlatGift::baskgiftgain() const {
  return baskgiftgain_;
}
inline void DB_PlatGift::set_baskgiftgain(bool value) {
  _set_bit(13);
  baskgiftgain_ = value;
}

// -------------------------------------------------------------------

// DB_PlatRegion

// required int64 uid = 1;
inline bool DB_PlatRegion::has_uid() const {
  return _has_bit(0);
}
inline void DB_PlatRegion::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 DB_PlatRegion::uid() const {
  return uid_;
}
inline void DB_PlatRegion::set_uid(::google::protobuf::int64 value) {
  _set_bit(0);
  uid_ = value;
}

// optional int32 srvRegion = 2 [default = 0];
inline bool DB_PlatRegion::has_srvregion() const {
  return _has_bit(1);
}
inline void DB_PlatRegion::clear_srvregion() {
  srvregion_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_PlatRegion::srvregion() const {
  return srvregion_;
}
inline void DB_PlatRegion::set_srvregion(::google::protobuf::int32 value) {
  _set_bit(1);
  srvregion_ = value;
}

// optional int32 level = 3 [default = 0];
inline bool DB_PlatRegion::has_level() const {
  return _has_bit(2);
}
inline void DB_PlatRegion::clear_level() {
  level_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_PlatRegion::level() const {
  return level_;
}
inline void DB_PlatRegion::set_level(::google::protobuf::int32 value) {
  _set_bit(2);
  level_ = value;
}

// optional int32 platType = 4 [default = 0];
inline bool DB_PlatRegion::has_plattype() const {
  return _has_bit(3);
}
inline void DB_PlatRegion::clear_plattype() {
  plattype_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_PlatRegion::plattype() const {
  return plattype_;
}
inline void DB_PlatRegion::set_plattype(::google::protobuf::int32 value) {
  _set_bit(3);
  plattype_ = value;
}

// optional int32 finishCaptureTm = 5 [default = 0];
inline bool DB_PlatRegion::has_finishcapturetm() const {
  return _has_bit(4);
}
inline void DB_PlatRegion::clear_finishcapturetm() {
  finishcapturetm_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_PlatRegion::finishcapturetm() const {
  return finishcapturetm_;
}
inline void DB_PlatRegion::set_finishcapturetm(::google::protobuf::int32 value) {
  _set_bit(4);
  finishcapturetm_ = value;
}

// optional int32 lastLogonTime = 6 [default = 0];
inline bool DB_PlatRegion::has_lastlogontime() const {
  return _has_bit(5);
}
inline void DB_PlatRegion::clear_lastlogontime() {
  lastlogontime_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_PlatRegion::lastlogontime() const {
  return lastlogontime_;
}
inline void DB_PlatRegion::set_lastlogontime(::google::protobuf::int32 value) {
  _set_bit(5);
  lastlogontime_ = value;
}

// optional int32 viplevel = 7 [default = 0];
inline bool DB_PlatRegion::has_viplevel() const {
  return _has_bit(6);
}
inline void DB_PlatRegion::clear_viplevel() {
  viplevel_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_PlatRegion::viplevel() const {
  return viplevel_;
}
inline void DB_PlatRegion::set_viplevel(::google::protobuf::int32 value) {
  _set_bit(6);
  viplevel_ = value;
}

// optional int32 viptype = 8 [default = 0];
inline bool DB_PlatRegion::has_viptype() const {
  return _has_bit(7);
}
inline void DB_PlatRegion::clear_viptype() {
  viptype_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_PlatRegion::viptype() const {
  return viptype_;
}
inline void DB_PlatRegion::set_viptype(::google::protobuf::int32 value) {
  _set_bit(7);
  viptype_ = value;
}

// -------------------------------------------------------------------

// DB_WebGiftFlag

// optional int64 lastCacuTime = 1 [default = 0];
inline bool DB_WebGiftFlag::has_lastcacutime() const {
  return _has_bit(0);
}
inline void DB_WebGiftFlag::clear_lastcacutime() {
  lastcacutime_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 DB_WebGiftFlag::lastcacutime() const {
  return lastcacutime_;
}
inline void DB_WebGiftFlag::set_lastcacutime(::google::protobuf::int64 value) {
  _set_bit(0);
  lastcacutime_ = value;
}

// repeated int32 webGiftLst = 2;
inline int DB_WebGiftFlag::webgiftlst_size() const {
  return webgiftlst_.size();
}
inline void DB_WebGiftFlag::clear_webgiftlst() {
  webgiftlst_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WebGiftFlag::webgiftlst() const {
  return webgiftlst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WebGiftFlag::mutable_webgiftlst() {
  return &webgiftlst_;
}
inline ::google::protobuf::int32 DB_WebGiftFlag::webgiftlst(int index) const {
  return webgiftlst_.Get(index);
}
inline void DB_WebGiftFlag::set_webgiftlst(int index, ::google::protobuf::int32 value) {
  webgiftlst_.Set(index, value);
}
inline void DB_WebGiftFlag::add_webgiftlst(::google::protobuf::int32 value) {
  webgiftlst_.Add(value);
}

// optional int64 webOnceFlag = 3 [default = 0];
inline bool DB_WebGiftFlag::has_webonceflag() const {
  return _has_bit(2);
}
inline void DB_WebGiftFlag::clear_webonceflag() {
  webonceflag_ = GOOGLE_LONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::int64 DB_WebGiftFlag::webonceflag() const {
  return webonceflag_;
}
inline void DB_WebGiftFlag::set_webonceflag(::google::protobuf::int64 value) {
  _set_bit(2);
  webonceflag_ = value;
}

// repeated int32 webGiftMonthLst = 4;
inline int DB_WebGiftFlag::webgiftmonthlst_size() const {
  return webgiftmonthlst_.size();
}
inline void DB_WebGiftFlag::clear_webgiftmonthlst() {
  webgiftmonthlst_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WebGiftFlag::webgiftmonthlst() const {
  return webgiftmonthlst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WebGiftFlag::mutable_webgiftmonthlst() {
  return &webgiftmonthlst_;
}
inline ::google::protobuf::int32 DB_WebGiftFlag::webgiftmonthlst(int index) const {
  return webgiftmonthlst_.Get(index);
}
inline void DB_WebGiftFlag::set_webgiftmonthlst(int index, ::google::protobuf::int32 value) {
  webgiftmonthlst_.Set(index, value);
}
inline void DB_WebGiftFlag::add_webgiftmonthlst(::google::protobuf::int32 value) {
  webgiftmonthlst_.Add(value);
}

// repeated .DB_TotalLimitWebGift webTotalLimitLst = 5;
inline int DB_WebGiftFlag::webtotallimitlst_size() const {
  return webtotallimitlst_.size();
}
inline void DB_WebGiftFlag::clear_webtotallimitlst() {
  webtotallimitlst_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_TotalLimitWebGift >&
DB_WebGiftFlag::webtotallimitlst() const {
  return webtotallimitlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_TotalLimitWebGift >*
DB_WebGiftFlag::mutable_webtotallimitlst() {
  return &webtotallimitlst_;
}
inline const ::DB_TotalLimitWebGift& DB_WebGiftFlag::webtotallimitlst(int index) const {
  return webtotallimitlst_.Get(index);
}
inline ::DB_TotalLimitWebGift* DB_WebGiftFlag::mutable_webtotallimitlst(int index) {
  return webtotallimitlst_.Mutable(index);
}
inline ::DB_TotalLimitWebGift* DB_WebGiftFlag::add_webtotallimitlst() {
  return webtotallimitlst_.Add();
}

// -------------------------------------------------------------------

// DB_TotalLimitWebGift

// optional int64 tActEndTime = 1 [default = 0];
inline bool DB_TotalLimitWebGift::has_tactendtime() const {
  return _has_bit(0);
}
inline void DB_TotalLimitWebGift::clear_tactendtime() {
  tactendtime_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 DB_TotalLimitWebGift::tactendtime() const {
  return tactendtime_;
}
inline void DB_TotalLimitWebGift::set_tactendtime(::google::protobuf::int64 value) {
  _set_bit(0);
  tactendtime_ = value;
}

// optional int32 nGiftID = 2 [default = 0];
inline bool DB_TotalLimitWebGift::has_ngiftid() const {
  return _has_bit(1);
}
inline void DB_TotalLimitWebGift::clear_ngiftid() {
  ngiftid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_TotalLimitWebGift::ngiftid() const {
  return ngiftid_;
}
inline void DB_TotalLimitWebGift::set_ngiftid(::google::protobuf::int32 value) {
  _set_bit(1);
  ngiftid_ = value;
}

// optional int32 nGiftCnt = 3 [default = 0];
inline bool DB_TotalLimitWebGift::has_ngiftcnt() const {
  return _has_bit(2);
}
inline void DB_TotalLimitWebGift::clear_ngiftcnt() {
  ngiftcnt_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_TotalLimitWebGift::ngiftcnt() const {
  return ngiftcnt_;
}
inline void DB_TotalLimitWebGift::set_ngiftcnt(::google::protobuf::int32 value) {
  _set_bit(2);
  ngiftcnt_ = value;
}

// -------------------------------------------------------------------

// DB_InviteFriends_Record

// optional int32 ntype = 1;
inline bool DB_InviteFriends_Record::has_ntype() const {
  return _has_bit(0);
}
inline void DB_InviteFriends_Record::clear_ntype() {
  ntype_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_InviteFriends_Record::ntype() const {
  return ntype_;
}
inline void DB_InviteFriends_Record::set_ntype(::google::protobuf::int32 value) {
  _set_bit(0);
  ntype_ = value;
}

// optional int32 nlevel = 2;
inline bool DB_InviteFriends_Record::has_nlevel() const {
  return _has_bit(1);
}
inline void DB_InviteFriends_Record::clear_nlevel() {
  nlevel_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_InviteFriends_Record::nlevel() const {
  return nlevel_;
}
inline void DB_InviteFriends_Record::set_nlevel(::google::protobuf::int32 value) {
  _set_bit(1);
  nlevel_ = value;
}

// optional int32 ncredit = 3;
inline bool DB_InviteFriends_Record::has_ncredit() const {
  return _has_bit(2);
}
inline void DB_InviteFriends_Record::clear_ncredit() {
  ncredit_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_InviteFriends_Record::ncredit() const {
  return ncredit_;
}
inline void DB_InviteFriends_Record::set_ncredit(::google::protobuf::int32 value) {
  _set_bit(2);
  ncredit_ = value;
}

// -------------------------------------------------------------------

// DB_InviteFriends_Unit

// optional int64 friendid = 1 [default = 0];
inline bool DB_InviteFriends_Unit::has_friendid() const {
  return _has_bit(0);
}
inline void DB_InviteFriends_Unit::clear_friendid() {
  friendid_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 DB_InviteFriends_Unit::friendid() const {
  return friendid_;
}
inline void DB_InviteFriends_Unit::set_friendid(::google::protobuf::int64 value) {
  _set_bit(0);
  friendid_ = value;
}

// repeated string friendName = 2;
inline int DB_InviteFriends_Unit::friendname_size() const {
  return friendname_.size();
}
inline void DB_InviteFriends_Unit::clear_friendname() {
  friendname_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_InviteFriends_Unit::friendname() const {
  return friendname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_InviteFriends_Unit::mutable_friendname() {
  return &friendname_;
}
inline const ::std::string& DB_InviteFriends_Unit::friendname(int index) const {
  return friendname_.Get(index);
}
inline ::std::string* DB_InviteFriends_Unit::mutable_friendname(int index) {
  return friendname_.Mutable(index);
}
inline void DB_InviteFriends_Unit::set_friendname(int index, const ::std::string& value) {
  friendname_.Mutable(index)->assign(value);
}
inline void DB_InviteFriends_Unit::set_friendname(int index, const char* value) {
  friendname_.Mutable(index)->assign(value);
}
inline void DB_InviteFriends_Unit::set_friendname(int index, const char* value, size_t size) {
  friendname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_InviteFriends_Unit::add_friendname() {
  return friendname_.Add();
}
inline void DB_InviteFriends_Unit::add_friendname(const ::std::string& value) {
  friendname_.Add()->assign(value);
}
inline void DB_InviteFriends_Unit::add_friendname(const char* value) {
  friendname_.Add()->assign(value);
}
inline void DB_InviteFriends_Unit::add_friendname(const char* value, size_t size) {
  friendname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// optional int32 friendlvl = 3 [default = 0];
inline bool DB_InviteFriends_Unit::has_friendlvl() const {
  return _has_bit(2);
}
inline void DB_InviteFriends_Unit::clear_friendlvl() {
  friendlvl_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_InviteFriends_Unit::friendlvl() const {
  return friendlvl_;
}
inline void DB_InviteFriends_Unit::set_friendlvl(::google::protobuf::int32 value) {
  _set_bit(2);
  friendlvl_ = value;
}

// optional int32 friendcredit = 4 [default = 0];
inline bool DB_InviteFriends_Unit::has_friendcredit() const {
  return _has_bit(3);
}
inline void DB_InviteFriends_Unit::clear_friendcredit() {
  friendcredit_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_InviteFriends_Unit::friendcredit() const {
  return friendcredit_;
}
inline void DB_InviteFriends_Unit::set_friendcredit(::google::protobuf::int32 value) {
  _set_bit(3);
  friendcredit_ = value;
}

// optional bool invitegain = 5 [default = false];
inline bool DB_InviteFriends_Unit::has_invitegain() const {
  return _has_bit(4);
}
inline void DB_InviteFriends_Unit::clear_invitegain() {
  invitegain_ = false;
  _clear_bit(4);
}
inline bool DB_InviteFriends_Unit::invitegain() const {
  return invitegain_;
}
inline void DB_InviteFriends_Unit::set_invitegain(bool value) {
  _set_bit(4);
  invitegain_ = value;
}

// optional int32 lvlgain = 6;
inline bool DB_InviteFriends_Unit::has_lvlgain() const {
  return _has_bit(5);
}
inline void DB_InviteFriends_Unit::clear_lvlgain() {
  lvlgain_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_InviteFriends_Unit::lvlgain() const {
  return lvlgain_;
}
inline void DB_InviteFriends_Unit::set_lvlgain(::google::protobuf::int32 value) {
  _set_bit(5);
  lvlgain_ = value;
}

// repeated .DB_InviteFriends_Record record = 7;
inline int DB_InviteFriends_Unit::record_size() const {
  return record_.size();
}
inline void DB_InviteFriends_Unit::clear_record() {
  record_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_InviteFriends_Record >&
DB_InviteFriends_Unit::record() const {
  return record_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_InviteFriends_Record >*
DB_InviteFriends_Unit::mutable_record() {
  return &record_;
}
inline const ::DB_InviteFriends_Record& DB_InviteFriends_Unit::record(int index) const {
  return record_.Get(index);
}
inline ::DB_InviteFriends_Record* DB_InviteFriends_Unit::mutable_record(int index) {
  return record_.Mutable(index);
}
inline ::DB_InviteFriends_Record* DB_InviteFriends_Unit::add_record() {
  return record_.Add();
}

// -------------------------------------------------------------------

// DB_InviteFriends

// optional string invitefriendid = 1 [default = ""];
inline bool DB_InviteFriends::has_invitefriendid() const {
  return _has_bit(0);
}
inline void DB_InviteFriends::clear_invitefriendid() {
  if (invitefriendid_ != &_default_invitefriendid_) {
    invitefriendid_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& DB_InviteFriends::invitefriendid() const {
  return *invitefriendid_;
}
inline void DB_InviteFriends::set_invitefriendid(const ::std::string& value) {
  _set_bit(0);
  if (invitefriendid_ == &_default_invitefriendid_) {
    invitefriendid_ = new ::std::string;
  }
  invitefriendid_->assign(value);
}
inline void DB_InviteFriends::set_invitefriendid(const char* value) {
  _set_bit(0);
  if (invitefriendid_ == &_default_invitefriendid_) {
    invitefriendid_ = new ::std::string;
  }
  invitefriendid_->assign(value);
}
inline void DB_InviteFriends::set_invitefriendid(const char* value, size_t size) {
  _set_bit(0);
  if (invitefriendid_ == &_default_invitefriendid_) {
    invitefriendid_ = new ::std::string;
  }
  invitefriendid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_InviteFriends::mutable_invitefriendid() {
  _set_bit(0);
  if (invitefriendid_ == &_default_invitefriendid_) {
    invitefriendid_ = new ::std::string;
  }
  return invitefriendid_;
}

// optional int32 invitegaincredit = 2 [default = 0];
inline bool DB_InviteFriends::has_invitegaincredit() const {
  return _has_bit(1);
}
inline void DB_InviteFriends::clear_invitegaincredit() {
  invitegaincredit_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_InviteFriends::invitegaincredit() const {
  return invitegaincredit_;
}
inline void DB_InviteFriends::set_invitegaincredit(::google::protobuf::int32 value) {
  _set_bit(1);
  invitegaincredit_ = value;
}

// optional int32 lvlgaincredit = 3 [default = 0];
inline bool DB_InviteFriends::has_lvlgaincredit() const {
  return _has_bit(2);
}
inline void DB_InviteFriends::clear_lvlgaincredit() {
  lvlgaincredit_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_InviteFriends::lvlgaincredit() const {
  return lvlgaincredit_;
}
inline void DB_InviteFriends::set_lvlgaincredit(::google::protobuf::int32 value) {
  _set_bit(2);
  lvlgaincredit_ = value;
}

// optional int32 topupgaincredit = 4 [default = 0];
inline bool DB_InviteFriends::has_topupgaincredit() const {
  return _has_bit(3);
}
inline void DB_InviteFriends::clear_topupgaincredit() {
  topupgaincredit_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_InviteFriends::topupgaincredit() const {
  return topupgaincredit_;
}
inline void DB_InviteFriends::set_topupgaincredit(::google::protobuf::int32 value) {
  _set_bit(3);
  topupgaincredit_ = value;
}

// optional int32 gaincreditall = 5 [default = 0];
inline bool DB_InviteFriends::has_gaincreditall() const {
  return _has_bit(4);
}
inline void DB_InviteFriends::clear_gaincreditall() {
  gaincreditall_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_InviteFriends::gaincreditall() const {
  return gaincreditall_;
}
inline void DB_InviteFriends::set_gaincreditall(::google::protobuf::int32 value) {
  _set_bit(4);
  gaincreditall_ = value;
}

// optional int64 lastgaintimemark = 6 [default = 0];
inline bool DB_InviteFriends::has_lastgaintimemark() const {
  return _has_bit(5);
}
inline void DB_InviteFriends::clear_lastgaintimemark() {
  lastgaintimemark_ = GOOGLE_LONGLONG(0);
  _clear_bit(5);
}
inline ::google::protobuf::int64 DB_InviteFriends::lastgaintimemark() const {
  return lastgaintimemark_;
}
inline void DB_InviteFriends::set_lastgaintimemark(::google::protobuf::int64 value) {
  _set_bit(5);
  lastgaintimemark_ = value;
}

// repeated .DB_InviteFriends_Unit invitefriends = 7;
inline int DB_InviteFriends::invitefriends_size() const {
  return invitefriends_.size();
}
inline void DB_InviteFriends::clear_invitefriends() {
  invitefriends_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_InviteFriends_Unit >&
DB_InviteFriends::invitefriends() const {
  return invitefriends_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_InviteFriends_Unit >*
DB_InviteFriends::mutable_invitefriends() {
  return &invitefriends_;
}
inline const ::DB_InviteFriends_Unit& DB_InviteFriends::invitefriends(int index) const {
  return invitefriends_.Get(index);
}
inline ::DB_InviteFriends_Unit* DB_InviteFriends::mutable_invitefriends(int index) {
  return invitefriends_.Mutable(index);
}
inline ::DB_InviteFriends_Unit* DB_InviteFriends::add_invitefriends() {
  return invitefriends_.Add();
}

// -------------------------------------------------------------------

// DB_PTXMissionData

// optional string missionid = 1 [default = ""];
inline bool DB_PTXMissionData::has_missionid() const {
  return _has_bit(0);
}
inline void DB_PTXMissionData::clear_missionid() {
  if (missionid_ != &_default_missionid_) {
    missionid_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& DB_PTXMissionData::missionid() const {
  return *missionid_;
}
inline void DB_PTXMissionData::set_missionid(const ::std::string& value) {
  _set_bit(0);
  if (missionid_ == &_default_missionid_) {
    missionid_ = new ::std::string;
  }
  missionid_->assign(value);
}
inline void DB_PTXMissionData::set_missionid(const char* value) {
  _set_bit(0);
  if (missionid_ == &_default_missionid_) {
    missionid_ = new ::std::string;
  }
  missionid_->assign(value);
}
inline void DB_PTXMissionData::set_missionid(const char* value, size_t size) {
  _set_bit(0);
  if (missionid_ == &_default_missionid_) {
    missionid_ = new ::std::string;
  }
  missionid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_PTXMissionData::mutable_missionid() {
  _set_bit(0);
  if (missionid_ == &_default_missionid_) {
    missionid_ = new ::std::string;
  }
  return missionid_;
}

// optional int32 missionstate = 2 [default = -1];
inline bool DB_PTXMissionData::has_missionstate() const {
  return _has_bit(1);
}
inline void DB_PTXMissionData::clear_missionstate() {
  missionstate_ = -1;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_PTXMissionData::missionstate() const {
  return missionstate_;
}
inline void DB_PTXMissionData::set_missionstate(::google::protobuf::int32 value) {
  _set_bit(1);
  missionstate_ = value;
}

// -------------------------------------------------------------------

// DB_PlatCrossPromotionData

// optional string chanle = 1;
inline bool DB_PlatCrossPromotionData::has_chanle() const {
  return _has_bit(0);
}
inline void DB_PlatCrossPromotionData::clear_chanle() {
  if (chanle_ != &_default_chanle_) {
    chanle_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& DB_PlatCrossPromotionData::chanle() const {
  return *chanle_;
}
inline void DB_PlatCrossPromotionData::set_chanle(const ::std::string& value) {
  _set_bit(0);
  if (chanle_ == &_default_chanle_) {
    chanle_ = new ::std::string;
  }
  chanle_->assign(value);
}
inline void DB_PlatCrossPromotionData::set_chanle(const char* value) {
  _set_bit(0);
  if (chanle_ == &_default_chanle_) {
    chanle_ = new ::std::string;
  }
  chanle_->assign(value);
}
inline void DB_PlatCrossPromotionData::set_chanle(const char* value, size_t size) {
  _set_bit(0);
  if (chanle_ == &_default_chanle_) {
    chanle_ = new ::std::string;
  }
  chanle_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_PlatCrossPromotionData::mutable_chanle() {
  _set_bit(0);
  if (chanle_ == &_default_chanle_) {
    chanle_ = new ::std::string;
  }
  return chanle_;
}

// optional string date = 2;
inline bool DB_PlatCrossPromotionData::has_date() const {
  return _has_bit(1);
}
inline void DB_PlatCrossPromotionData::clear_date() {
  if (date_ != &_default_date_) {
    date_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& DB_PlatCrossPromotionData::date() const {
  return *date_;
}
inline void DB_PlatCrossPromotionData::set_date(const ::std::string& value) {
  _set_bit(1);
  if (date_ == &_default_date_) {
    date_ = new ::std::string;
  }
  date_->assign(value);
}
inline void DB_PlatCrossPromotionData::set_date(const char* value) {
  _set_bit(1);
  if (date_ == &_default_date_) {
    date_ = new ::std::string;
  }
  date_->assign(value);
}
inline void DB_PlatCrossPromotionData::set_date(const char* value, size_t size) {
  _set_bit(1);
  if (date_ == &_default_date_) {
    date_ = new ::std::string;
  }
  date_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_PlatCrossPromotionData::mutable_date() {
  _set_bit(1);
  if (date_ == &_default_date_) {
    date_ = new ::std::string;
  }
  return date_;
}

// -------------------------------------------------------------------

// DB_PlatCrossPromotion

// repeated .DB_PlatCrossPromotionData data = 1;
inline int DB_PlatCrossPromotion::data_size() const {
  return data_.size();
}
inline void DB_PlatCrossPromotion::clear_data() {
  data_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_PlatCrossPromotionData >&
DB_PlatCrossPromotion::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_PlatCrossPromotionData >*
DB_PlatCrossPromotion::mutable_data() {
  return &data_;
}
inline const ::DB_PlatCrossPromotionData& DB_PlatCrossPromotion::data(int index) const {
  return data_.Get(index);
}
inline ::DB_PlatCrossPromotionData* DB_PlatCrossPromotion::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::DB_PlatCrossPromotionData* DB_PlatCrossPromotion::add_data() {
  return data_.Add();
}

// -------------------------------------------------------------------

// DB_Plat

// required string platform_id = 1 [default = ""];
inline bool DB_Plat::has_platform_id() const {
  return _has_bit(0);
}
inline void DB_Plat::clear_platform_id() {
  if (platform_id_ != &_default_platform_id_) {
    platform_id_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& DB_Plat::platform_id() const {
  return *platform_id_;
}
inline void DB_Plat::set_platform_id(const ::std::string& value) {
  _set_bit(0);
  if (platform_id_ == &_default_platform_id_) {
    platform_id_ = new ::std::string;
  }
  platform_id_->assign(value);
}
inline void DB_Plat::set_platform_id(const char* value) {
  _set_bit(0);
  if (platform_id_ == &_default_platform_id_) {
    platform_id_ = new ::std::string;
  }
  platform_id_->assign(value);
}
inline void DB_Plat::set_platform_id(const char* value, size_t size) {
  _set_bit(0);
  if (platform_id_ == &_default_platform_id_) {
    platform_id_ = new ::std::string;
  }
  platform_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Plat::mutable_platform_id() {
  _set_bit(0);
  if (platform_id_ == &_default_platform_id_) {
    platform_id_ = new ::std::string;
  }
  return platform_id_;
}

// repeated string name = 2;
inline int DB_Plat::name_size() const {
  return name_.size();
}
inline void DB_Plat::clear_name() {
  name_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_Plat::name() const {
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_Plat::mutable_name() {
  return &name_;
}
inline const ::std::string& DB_Plat::name(int index) const {
  return name_.Get(index);
}
inline ::std::string* DB_Plat::mutable_name(int index) {
  return name_.Mutable(index);
}
inline void DB_Plat::set_name(int index, const ::std::string& value) {
  name_.Mutable(index)->assign(value);
}
inline void DB_Plat::set_name(int index, const char* value) {
  name_.Mutable(index)->assign(value);
}
inline void DB_Plat::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Plat::add_name() {
  return name_.Add();
}
inline void DB_Plat::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
}
inline void DB_Plat::add_name(const char* value) {
  name_.Add()->assign(value);
}
inline void DB_Plat::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string profile_link = 3;
inline int DB_Plat::profile_link_size() const {
  return profile_link_.size();
}
inline void DB_Plat::clear_profile_link() {
  profile_link_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_Plat::profile_link() const {
  return profile_link_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_Plat::mutable_profile_link() {
  return &profile_link_;
}
inline const ::std::string& DB_Plat::profile_link(int index) const {
  return profile_link_.Get(index);
}
inline ::std::string* DB_Plat::mutable_profile_link(int index) {
  return profile_link_.Mutable(index);
}
inline void DB_Plat::set_profile_link(int index, const ::std::string& value) {
  profile_link_.Mutable(index)->assign(value);
}
inline void DB_Plat::set_profile_link(int index, const char* value) {
  profile_link_.Mutable(index)->assign(value);
}
inline void DB_Plat::set_profile_link(int index, const char* value, size_t size) {
  profile_link_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Plat::add_profile_link() {
  return profile_link_.Add();
}
inline void DB_Plat::add_profile_link(const ::std::string& value) {
  profile_link_.Add()->assign(value);
}
inline void DB_Plat::add_profile_link(const char* value) {
  profile_link_.Add()->assign(value);
}
inline void DB_Plat::add_profile_link(const char* value, size_t size) {
  profile_link_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// optional int32 gender = 4;
inline bool DB_Plat::has_gender() const {
  return _has_bit(3);
}
inline void DB_Plat::clear_gender() {
  gender_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Plat::gender() const {
  return gender_;
}
inline void DB_Plat::set_gender(::google::protobuf::int32 value) {
  _set_bit(3);
  gender_ = value;
}

// optional int32 yellowDmdLvl = 5 [default = 0];
inline bool DB_Plat::has_yellowdmdlvl() const {
  return _has_bit(4);
}
inline void DB_Plat::clear_yellowdmdlvl() {
  yellowdmdlvl_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_Plat::yellowdmdlvl() const {
  return yellowdmdlvl_;
}
inline void DB_Plat::set_yellowdmdlvl(::google::protobuf::int32 value) {
  _set_bit(4);
  yellowdmdlvl_ = value;
}

// optional bool isYellowDmd = 6 [default = false];
inline bool DB_Plat::has_isyellowdmd() const {
  return _has_bit(5);
}
inline void DB_Plat::clear_isyellowdmd() {
  isyellowdmd_ = false;
  _clear_bit(5);
}
inline bool DB_Plat::isyellowdmd() const {
  return isyellowdmd_;
}
inline void DB_Plat::set_isyellowdmd(bool value) {
  _set_bit(5);
  isyellowdmd_ = value;
}

// optional bool isYellowDmdYear = 7 [default = false];
inline bool DB_Plat::has_isyellowdmdyear() const {
  return _has_bit(6);
}
inline void DB_Plat::clear_isyellowdmdyear() {
  isyellowdmdyear_ = false;
  _clear_bit(6);
}
inline bool DB_Plat::isyellowdmdyear() const {
  return isyellowdmdyear_;
}
inline void DB_Plat::set_isyellowdmdyear(bool value) {
  _set_bit(6);
  isyellowdmdyear_ = value;
}

// optional int32 QQDmdLvl = 8 [default = 0];
inline bool DB_Plat::has_qqdmdlvl() const {
  return _has_bit(7);
}
inline void DB_Plat::clear_qqdmdlvl() {
  qqdmdlvl_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_Plat::qqdmdlvl() const {
  return qqdmdlvl_;
}
inline void DB_Plat::set_qqdmdlvl(::google::protobuf::int32 value) {
  _set_bit(7);
  qqdmdlvl_ = value;
}

// optional bool isQQDmd = 9 [default = false];
inline bool DB_Plat::has_isqqdmd() const {
  return _has_bit(8);
}
inline void DB_Plat::clear_isqqdmd() {
  isqqdmd_ = false;
  _clear_bit(8);
}
inline bool DB_Plat::isqqdmd() const {
  return isqqdmd_;
}
inline void DB_Plat::set_isqqdmd(bool value) {
  _set_bit(8);
  isqqdmd_ = value;
}

// optional bool isQQDmdYear = 10 [default = false];
inline bool DB_Plat::has_isqqdmdyear() const {
  return _has_bit(9);
}
inline void DB_Plat::clear_isqqdmdyear() {
  isqqdmdyear_ = false;
  _clear_bit(9);
}
inline bool DB_Plat::isqqdmdyear() const {
  return isqqdmdyear_;
}
inline void DB_Plat::set_isqqdmdyear(bool value) {
  _set_bit(9);
  isqqdmdyear_ = value;
}

// repeated .DB_PlatRegion platRegion = 11;
inline int DB_Plat::platregion_size() const {
  return platregion_.size();
}
inline void DB_Plat::clear_platregion() {
  platregion_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_PlatRegion >&
DB_Plat::platregion() const {
  return platregion_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_PlatRegion >*
DB_Plat::mutable_platregion() {
  return &platregion_;
}
inline const ::DB_PlatRegion& DB_Plat::platregion(int index) const {
  return platregion_.Get(index);
}
inline ::DB_PlatRegion* DB_Plat::mutable_platregion(int index) {
  return platregion_.Mutable(index);
}
inline ::DB_PlatRegion* DB_Plat::add_platregion() {
  return platregion_.Add();
}

// optional int32 lastRegion = 12 [default = -1];
inline bool DB_Plat::has_lastregion() const {
  return _has_bit(11);
}
inline void DB_Plat::clear_lastregion() {
  lastregion_ = -1;
  _clear_bit(11);
}
inline ::google::protobuf::int32 DB_Plat::lastregion() const {
  return lastregion_;
}
inline void DB_Plat::set_lastregion(::google::protobuf::int32 value) {
  _set_bit(11);
  lastregion_ = value;
}

// optional .DB_PlatGift giftInfo = 13;
inline bool DB_Plat::has_giftinfo() const {
  return _has_bit(12);
}
inline void DB_Plat::clear_giftinfo() {
  if (giftinfo_ != NULL) giftinfo_->::DB_PlatGift::Clear();
  _clear_bit(12);
}
inline const ::DB_PlatGift& DB_Plat::giftinfo() const {
  return giftinfo_ != NULL ? *giftinfo_ : *default_instance_->giftinfo_;
}
inline ::DB_PlatGift* DB_Plat::mutable_giftinfo() {
  _set_bit(12);
  if (giftinfo_ == NULL) giftinfo_ = new ::DB_PlatGift;
  return giftinfo_;
}

// optional .DB_WebGiftFlag webFlag = 14;
inline bool DB_Plat::has_webflag() const {
  return _has_bit(13);
}
inline void DB_Plat::clear_webflag() {
  if (webflag_ != NULL) webflag_->::DB_WebGiftFlag::Clear();
  _clear_bit(13);
}
inline const ::DB_WebGiftFlag& DB_Plat::webflag() const {
  return webflag_ != NULL ? *webflag_ : *default_instance_->webflag_;
}
inline ::DB_WebGiftFlag* DB_Plat::mutable_webflag() {
  _set_bit(13);
  if (webflag_ == NULL) webflag_ = new ::DB_WebGiftFlag;
  return webflag_;
}

// optional int64 getCBGiftTime = 15 [default = 0];
inline bool DB_Plat::has_getcbgifttime() const {
  return _has_bit(14);
}
inline void DB_Plat::clear_getcbgifttime() {
  getcbgifttime_ = GOOGLE_LONGLONG(0);
  _clear_bit(14);
}
inline ::google::protobuf::int64 DB_Plat::getcbgifttime() const {
  return getcbgifttime_;
}
inline void DB_Plat::set_getcbgifttime(::google::protobuf::int64 value) {
  _set_bit(14);
  getcbgifttime_ = value;
}

// optional int32 inviteFrdCnt = 16 [default = 0];
inline bool DB_Plat::has_invitefrdcnt() const {
  return _has_bit(15);
}
inline void DB_Plat::clear_invitefrdcnt() {
  invitefrdcnt_ = 0;
  _clear_bit(15);
}
inline ::google::protobuf::int32 DB_Plat::invitefrdcnt() const {
  return invitefrdcnt_;
}
inline void DB_Plat::set_invitefrdcnt(::google::protobuf::int32 value) {
  _set_bit(15);
  invitefrdcnt_ = value;
}

// optional .DB_InviteFriends invitefriends = 17;
inline bool DB_Plat::has_invitefriends() const {
  return _has_bit(16);
}
inline void DB_Plat::clear_invitefriends() {
  if (invitefriends_ != NULL) invitefriends_->::DB_InviteFriends::Clear();
  _clear_bit(16);
}
inline const ::DB_InviteFriends& DB_Plat::invitefriends() const {
  return invitefriends_ != NULL ? *invitefriends_ : *default_instance_->invitefriends_;
}
inline ::DB_InviteFriends* DB_Plat::mutable_invitefriends() {
  _set_bit(16);
  if (invitefriends_ == NULL) invitefriends_ = new ::DB_InviteFriends;
  return invitefriends_;
}

// optional uint32 yellowDmdtime = 18 [default = 0];
inline bool DB_Plat::has_yellowdmdtime() const {
  return _has_bit(17);
}
inline void DB_Plat::clear_yellowdmdtime() {
  yellowdmdtime_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 DB_Plat::yellowdmdtime() const {
  return yellowdmdtime_;
}
inline void DB_Plat::set_yellowdmdtime(::google::protobuf::uint32 value) {
  _set_bit(17);
  yellowdmdtime_ = value;
}

// repeated .DB_PTXMissionData txmissiondata = 19;
inline int DB_Plat::txmissiondata_size() const {
  return txmissiondata_.size();
}
inline void DB_Plat::clear_txmissiondata() {
  txmissiondata_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_PTXMissionData >&
DB_Plat::txmissiondata() const {
  return txmissiondata_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_PTXMissionData >*
DB_Plat::mutable_txmissiondata() {
  return &txmissiondata_;
}
inline const ::DB_PTXMissionData& DB_Plat::txmissiondata(int index) const {
  return txmissiondata_.Get(index);
}
inline ::DB_PTXMissionData* DB_Plat::mutable_txmissiondata(int index) {
  return txmissiondata_.Mutable(index);
}
inline ::DB_PTXMissionData* DB_Plat::add_txmissiondata() {
  return txmissiondata_.Add();
}

// optional .DB_DailyYellowRes dailyyellowres = 20;
inline bool DB_Plat::has_dailyyellowres() const {
  return _has_bit(19);
}
inline void DB_Plat::clear_dailyyellowres() {
  if (dailyyellowres_ != NULL) dailyyellowres_->::DB_DailyYellowRes::Clear();
  _clear_bit(19);
}
inline const ::DB_DailyYellowRes& DB_Plat::dailyyellowres() const {
  return dailyyellowres_ != NULL ? *dailyyellowres_ : *default_instance_->dailyyellowres_;
}
inline ::DB_DailyYellowRes* DB_Plat::mutable_dailyyellowres() {
  _set_bit(19);
  if (dailyyellowres_ == NULL) dailyyellowres_ = new ::DB_DailyYellowRes;
  return dailyyellowres_;
}

// optional int32 inviteFrdCntDay = 21 [default = 0];
inline bool DB_Plat::has_invitefrdcntday() const {
  return _has_bit(20);
}
inline void DB_Plat::clear_invitefrdcntday() {
  invitefrdcntday_ = 0;
  _clear_bit(20);
}
inline ::google::protobuf::int32 DB_Plat::invitefrdcntday() const {
  return invitefrdcntday_;
}
inline void DB_Plat::set_invitefrdcntday(::google::protobuf::int32 value) {
  _set_bit(20);
  invitefrdcntday_ = value;
}

// optional bool gaininviteFrdDay = 22 [default = false];
inline bool DB_Plat::has_gaininvitefrdday() const {
  return _has_bit(21);
}
inline void DB_Plat::clear_gaininvitefrdday() {
  gaininvitefrdday_ = false;
  _clear_bit(21);
}
inline bool DB_Plat::gaininvitefrdday() const {
  return gaininvitefrdday_;
}
inline void DB_Plat::set_gaininvitefrdday(bool value) {
  _set_bit(21);
  gaininvitefrdday_ = value;
}

// optional int64 lastLoginTime = 23 [default = 0];
inline bool DB_Plat::has_lastlogintime() const {
  return _has_bit(22);
}
inline void DB_Plat::clear_lastlogintime() {
  lastlogintime_ = GOOGLE_LONGLONG(0);
  _clear_bit(22);
}
inline ::google::protobuf::int64 DB_Plat::lastlogintime() const {
  return lastlogintime_;
}
inline void DB_Plat::set_lastlogintime(::google::protobuf::int64 value) {
  _set_bit(22);
  lastlogintime_ = value;
}

// optional bool cancallback = 24 [default = true];
inline bool DB_Plat::has_cancallback() const {
  return _has_bit(23);
}
inline void DB_Plat::clear_cancallback() {
  cancallback_ = true;
  _clear_bit(23);
}
inline bool DB_Plat::cancallback() const {
  return cancallback_;
}
inline void DB_Plat::set_cancallback(bool value) {
  _set_bit(23);
  cancallback_ = value;
}

// optional .DB_InviteFriendGift inviteFriendGift = 25;
inline bool DB_Plat::has_invitefriendgift() const {
  return _has_bit(24);
}
inline void DB_Plat::clear_invitefriendgift() {
  if (invitefriendgift_ != NULL) invitefriendgift_->::DB_InviteFriendGift::Clear();
  _clear_bit(24);
}
inline const ::DB_InviteFriendGift& DB_Plat::invitefriendgift() const {
  return invitefriendgift_ != NULL ? *invitefriendgift_ : *default_instance_->invitefriendgift_;
}
inline ::DB_InviteFriendGift* DB_Plat::mutable_invitefriendgift() {
  _set_bit(24);
  if (invitefriendgift_ == NULL) invitefriendgift_ = new ::DB_InviteFriendGift;
  return invitefriendgift_;
}

// repeated .DB_InviteFriendMsgByLogon inviteFriendMsgByLogon = 26;
inline int DB_Plat::invitefriendmsgbylogon_size() const {
  return invitefriendmsgbylogon_.size();
}
inline void DB_Plat::clear_invitefriendmsgbylogon() {
  invitefriendmsgbylogon_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_InviteFriendMsgByLogon >&
DB_Plat::invitefriendmsgbylogon() const {
  return invitefriendmsgbylogon_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_InviteFriendMsgByLogon >*
DB_Plat::mutable_invitefriendmsgbylogon() {
  return &invitefriendmsgbylogon_;
}
inline const ::DB_InviteFriendMsgByLogon& DB_Plat::invitefriendmsgbylogon(int index) const {
  return invitefriendmsgbylogon_.Get(index);
}
inline ::DB_InviteFriendMsgByLogon* DB_Plat::mutable_invitefriendmsgbylogon(int index) {
  return invitefriendmsgbylogon_.Mutable(index);
}
inline ::DB_InviteFriendMsgByLogon* DB_Plat::add_invitefriendmsgbylogon() {
  return invitefriendmsgbylogon_.Add();
}

// optional int64 ltRevision = 27 [default = 0];
inline bool DB_Plat::has_ltrevision() const {
  return _has_bit(26);
}
inline void DB_Plat::clear_ltrevision() {
  ltrevision_ = GOOGLE_LONGLONG(0);
  _clear_bit(26);
}
inline ::google::protobuf::int64 DB_Plat::ltrevision() const {
  return ltrevision_;
}
inline void DB_Plat::set_ltrevision(::google::protobuf::int64 value) {
  _set_bit(26);
  ltrevision_ = value;
}

// optional int64 ltSaveRevision = 28 [default = 0];
inline bool DB_Plat::has_ltsaverevision() const {
  return _has_bit(27);
}
inline void DB_Plat::clear_ltsaverevision() {
  ltsaverevision_ = GOOGLE_LONGLONG(0);
  _clear_bit(27);
}
inline ::google::protobuf::int64 DB_Plat::ltsaverevision() const {
  return ltsaverevision_;
}
inline void DB_Plat::set_ltsaverevision(::google::protobuf::int64 value) {
  _set_bit(27);
  ltsaverevision_ = value;
}

// optional int64 ltMemRevision = 29 [default = 0];
inline bool DB_Plat::has_ltmemrevision() const {
  return _has_bit(28);
}
inline void DB_Plat::clear_ltmemrevision() {
  ltmemrevision_ = GOOGLE_LONGLONG(0);
  _clear_bit(28);
}
inline ::google::protobuf::int64 DB_Plat::ltmemrevision() const {
  return ltmemrevision_;
}
inline void DB_Plat::set_ltmemrevision(::google::protobuf::int64 value) {
  _set_bit(28);
  ltmemrevision_ = value;
}

// optional int32 inviteFrdCntDayByLimit = 30;
inline bool DB_Plat::has_invitefrdcntdaybylimit() const {
  return _has_bit(29);
}
inline void DB_Plat::clear_invitefrdcntdaybylimit() {
  invitefrdcntdaybylimit_ = 0;
  _clear_bit(29);
}
inline ::google::protobuf::int32 DB_Plat::invitefrdcntdaybylimit() const {
  return invitefrdcntdaybylimit_;
}
inline void DB_Plat::set_invitefrdcntdaybylimit(::google::protobuf::int32 value) {
  _set_bit(29);
  invitefrdcntdaybylimit_ = value;
}

// optional bool isHighYellowDmd = 31 [default = false];
inline bool DB_Plat::has_ishighyellowdmd() const {
  return _has_bit(30);
}
inline void DB_Plat::clear_ishighyellowdmd() {
  ishighyellowdmd_ = false;
  _clear_bit(30);
}
inline bool DB_Plat::ishighyellowdmd() const {
  return ishighyellowdmd_;
}
inline void DB_Plat::set_ishighyellowdmd(bool value) {
  _set_bit(30);
  ishighyellowdmd_ = value;
}

// repeated int32 dayGetCostGift = 32;
inline int DB_Plat::daygetcostgift_size() const {
  return daygetcostgift_.size();
}
inline void DB_Plat::clear_daygetcostgift() {
  daygetcostgift_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_Plat::daygetcostgift() const {
  return daygetcostgift_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_Plat::mutable_daygetcostgift() {
  return &daygetcostgift_;
}
inline ::google::protobuf::int32 DB_Plat::daygetcostgift(int index) const {
  return daygetcostgift_.Get(index);
}
inline void DB_Plat::set_daygetcostgift(int index, ::google::protobuf::int32 value) {
  daygetcostgift_.Set(index, value);
}
inline void DB_Plat::add_daygetcostgift(::google::protobuf::int32 value) {
  daygetcostgift_.Add(value);
}

// optional int64 callBackFrdUid = 33;
inline bool DB_Plat::has_callbackfrduid() const {
  return _has_bit(32);
}
inline void DB_Plat::clear_callbackfrduid() {
  callbackfrduid_ = GOOGLE_LONGLONG(0);
  _clear_bit(32);
}
inline ::google::protobuf::int64 DB_Plat::callbackfrduid() const {
  return callbackfrduid_;
}
inline void DB_Plat::set_callbackfrduid(::google::protobuf::int64 value) {
  _set_bit(32);
  callbackfrduid_ = value;
}

// optional int32 dayInviteFrdBackCnt = 34 [default = 0];
inline bool DB_Plat::has_dayinvitefrdbackcnt() const {
  return _has_bit(33);
}
inline void DB_Plat::clear_dayinvitefrdbackcnt() {
  dayinvitefrdbackcnt_ = 0;
  _clear_bit(33);
}
inline ::google::protobuf::int32 DB_Plat::dayinvitefrdbackcnt() const {
  return dayinvitefrdbackcnt_;
}
inline void DB_Plat::set_dayinvitefrdbackcnt(::google::protobuf::int32 value) {
  _set_bit(33);
  dayinvitefrdbackcnt_ = value;
}

// optional int32 dayGetCoupon = 35 [default = 0];
inline bool DB_Plat::has_daygetcoupon() const {
  return _has_bit(34);
}
inline void DB_Plat::clear_daygetcoupon() {
  daygetcoupon_ = 0;
  _clear_bit(34);
}
inline ::google::protobuf::int32 DB_Plat::daygetcoupon() const {
  return daygetcoupon_;
}
inline void DB_Plat::set_daygetcoupon(::google::protobuf::int32 value) {
  _set_bit(34);
  daygetcoupon_ = value;
}

// optional .DB_TaskMark taskmark = 36;
inline bool DB_Plat::has_taskmark() const {
  return _has_bit(35);
}
inline void DB_Plat::clear_taskmark() {
  if (taskmark_ != NULL) taskmark_->::DB_TaskMark::Clear();
  _clear_bit(35);
}
inline const ::DB_TaskMark& DB_Plat::taskmark() const {
  return taskmark_ != NULL ? *taskmark_ : *default_instance_->taskmark_;
}
inline ::DB_TaskMark* DB_Plat::mutable_taskmark() {
  _set_bit(35);
  if (taskmark_ == NULL) taskmark_ = new ::DB_TaskMark;
  return taskmark_;
}

// optional string channel = 37 [default = ""];
inline bool DB_Plat::has_channel() const {
  return _has_bit(36);
}
inline void DB_Plat::clear_channel() {
  if (channel_ != &_default_channel_) {
    channel_->clear();
  }
  _clear_bit(36);
}
inline const ::std::string& DB_Plat::channel() const {
  return *channel_;
}
inline void DB_Plat::set_channel(const ::std::string& value) {
  _set_bit(36);
  if (channel_ == &_default_channel_) {
    channel_ = new ::std::string;
  }
  channel_->assign(value);
}
inline void DB_Plat::set_channel(const char* value) {
  _set_bit(36);
  if (channel_ == &_default_channel_) {
    channel_ = new ::std::string;
  }
  channel_->assign(value);
}
inline void DB_Plat::set_channel(const char* value, size_t size) {
  _set_bit(36);
  if (channel_ == &_default_channel_) {
    channel_ = new ::std::string;
  }
  channel_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Plat::mutable_channel() {
  _set_bit(36);
  if (channel_ == &_default_channel_) {
    channel_ = new ::std::string;
  }
  return channel_;
}

// optional .DB_PlatCrossPromotion promotion = 38;
inline bool DB_Plat::has_promotion() const {
  return _has_bit(37);
}
inline void DB_Plat::clear_promotion() {
  if (promotion_ != NULL) promotion_->::DB_PlatCrossPromotion::Clear();
  _clear_bit(37);
}
inline const ::DB_PlatCrossPromotion& DB_Plat::promotion() const {
  return promotion_ != NULL ? *promotion_ : *default_instance_->promotion_;
}
inline ::DB_PlatCrossPromotion* DB_Plat::mutable_promotion() {
  _set_bit(37);
  if (promotion_ == NULL) promotion_ = new ::DB_PlatCrossPromotion;
  return promotion_;
}

// repeated int32 inviteGiftRecord = 39;
inline int DB_Plat::invitegiftrecord_size() const {
  return invitegiftrecord_.size();
}
inline void DB_Plat::clear_invitegiftrecord() {
  invitegiftrecord_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_Plat::invitegiftrecord() const {
  return invitegiftrecord_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_Plat::mutable_invitegiftrecord() {
  return &invitegiftrecord_;
}
inline ::google::protobuf::int32 DB_Plat::invitegiftrecord(int index) const {
  return invitegiftrecord_.Get(index);
}
inline void DB_Plat::set_invitegiftrecord(int index, ::google::protobuf::int32 value) {
  invitegiftrecord_.Set(index, value);
}
inline void DB_Plat::add_invitegiftrecord(::google::protobuf::int32 value) {
  invitegiftrecord_.Add(value);
}

// optional int32 idenflag = 40 [default = 0];
inline bool DB_Plat::has_idenflag() const {
  return _has_bit(39);
}
inline void DB_Plat::clear_idenflag() {
  idenflag_ = 0;
  _clear_bit(39);
}
inline ::google::protobuf::int32 DB_Plat::idenflag() const {
  return idenflag_;
}
inline void DB_Plat::set_idenflag(::google::protobuf::int32 value) {
  _set_bit(39);
  idenflag_ = value;
}

// optional int32 qqTenyearBackFlowFlag = 41;
inline bool DB_Plat::has_qqtenyearbackflowflag() const {
  return _has_bit(40);
}
inline void DB_Plat::clear_qqtenyearbackflowflag() {
  qqtenyearbackflowflag_ = 0;
  _clear_bit(40);
}
inline ::google::protobuf::int32 DB_Plat::qqtenyearbackflowflag() const {
  return qqtenyearbackflowflag_;
}
inline void DB_Plat::set_qqtenyearbackflowflag(::google::protobuf::int32 value) {
  _set_bit(40);
  qqtenyearbackflowflag_ = value;
}

// optional int32 nAdultFlag = 42 [default = 100];
inline bool DB_Plat::has_nadultflag() const {
  return _has_bit(41);
}
inline void DB_Plat::clear_nadultflag() {
  nadultflag_ = 100;
  _clear_bit(41);
}
inline ::google::protobuf::int32 DB_Plat::nadultflag() const {
  return nadultflag_;
}
inline void DB_Plat::set_nadultflag(::google::protobuf::int32 value) {
  _set_bit(41);
  nadultflag_ = value;
}

// optional int32 QHallDmdLvl = 43 [default = 0];
inline bool DB_Plat::has_qhalldmdlvl() const {
  return _has_bit(42);
}
inline void DB_Plat::clear_qhalldmdlvl() {
  qhalldmdlvl_ = 0;
  _clear_bit(42);
}
inline ::google::protobuf::int32 DB_Plat::qhalldmdlvl() const {
  return qhalldmdlvl_;
}
inline void DB_Plat::set_qhalldmdlvl(::google::protobuf::int32 value) {
  _set_bit(42);
  qhalldmdlvl_ = value;
}

// optional bool IsQHallDmd = 44 [default = false];
inline bool DB_Plat::has_isqhalldmd() const {
  return _has_bit(43);
}
inline void DB_Plat::clear_isqhalldmd() {
  isqhalldmd_ = false;
  _clear_bit(43);
}
inline bool DB_Plat::isqhalldmd() const {
  return isqhalldmd_;
}
inline void DB_Plat::set_isqhalldmd(bool value) {
  _set_bit(43);
  isqhalldmd_ = value;
}

// optional bool IsQHallDmdYear = 45 [default = false];
inline bool DB_Plat::has_isqhalldmdyear() const {
  return _has_bit(44);
}
inline void DB_Plat::clear_isqhalldmdyear() {
  isqhalldmdyear_ = false;
  _clear_bit(44);
}
inline bool DB_Plat::isqhalldmdyear() const {
  return isqhalldmdyear_;
}
inline void DB_Plat::set_isqhalldmdyear(bool value) {
  _set_bit(44);
  isqhalldmdyear_ = value;
}

// optional bool IsHighQHallDmd = 46 [default = false];
inline bool DB_Plat::has_ishighqhalldmd() const {
  return _has_bit(45);
}
inline void DB_Plat::clear_ishighqhalldmd() {
  ishighqhalldmd_ = false;
  _clear_bit(45);
}
inline bool DB_Plat::ishighqhalldmd() const {
  return ishighqhalldmd_;
}
inline void DB_Plat::set_ishighqhalldmd(bool value) {
  _set_bit(45);
  ishighqhalldmd_ = value;
}

// optional bool IsHighQHallDmdYear = 47 [default = false];
inline bool DB_Plat::has_ishighqhalldmdyear() const {
  return _has_bit(46);
}
inline void DB_Plat::clear_ishighqhalldmdyear() {
  ishighqhalldmdyear_ = false;
  _clear_bit(46);
}
inline bool DB_Plat::ishighqhalldmdyear() const {
  return ishighqhalldmdyear_;
}
inline void DB_Plat::set_ishighqhalldmdyear(bool value) {
  _set_bit(46);
  ishighqhalldmdyear_ = value;
}

// optional uint32 bluedmdtime = 48 [default = 0];
inline bool DB_Plat::has_bluedmdtime() const {
  return _has_bit(47);
}
inline void DB_Plat::clear_bluedmdtime() {
  bluedmdtime_ = 0u;
  _clear_bit(47);
}
inline ::google::protobuf::uint32 DB_Plat::bluedmdtime() const {
  return bluedmdtime_;
}
inline void DB_Plat::set_bluedmdtime(::google::protobuf::uint32 value) {
  _set_bit(47);
  bluedmdtime_ = value;
}

// optional int32 siteid = 49 [default = -1];
inline bool DB_Plat::has_siteid() const {
  return _has_bit(48);
}
inline void DB_Plat::clear_siteid() {
  siteid_ = -1;
  _clear_bit(48);
}
inline ::google::protobuf::int32 DB_Plat::siteid() const {
  return siteid_;
}
inline void DB_Plat::set_siteid(::google::protobuf::int32 value) {
  _set_bit(48);
  siteid_ = value;
}

// -------------------------------------------------------------------

// DB_DailyYellowRes

// optional int64 lastGetTime = 1;
inline bool DB_DailyYellowRes::has_lastgettime() const {
  return _has_bit(0);
}
inline void DB_DailyYellowRes::clear_lastgettime() {
  lastgettime_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 DB_DailyYellowRes::lastgettime() const {
  return lastgettime_;
}
inline void DB_DailyYellowRes::set_lastgettime(::google::protobuf::int64 value) {
  _set_bit(0);
  lastgettime_ = value;
}

// -------------------------------------------------------------------

// DB_InviteFriendGift

// optional int32 inviteFrdCntForNew = 1 [default = 0];
inline bool DB_InviteFriendGift::has_invitefrdcntfornew() const {
  return _has_bit(0);
}
inline void DB_InviteFriendGift::clear_invitefrdcntfornew() {
  invitefrdcntfornew_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_InviteFriendGift::invitefrdcntfornew() const {
  return invitefrdcntfornew_;
}
inline void DB_InviteFriendGift::set_invitefrdcntfornew(::google::protobuf::int32 value) {
  _set_bit(0);
  invitefrdcntfornew_ = value;
}

// repeated .DB_InviteGiftMsg invitegiftmsg = 2;
inline int DB_InviteFriendGift::invitegiftmsg_size() const {
  return invitegiftmsg_.size();
}
inline void DB_InviteFriendGift::clear_invitegiftmsg() {
  invitegiftmsg_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_InviteGiftMsg >&
DB_InviteFriendGift::invitegiftmsg() const {
  return invitegiftmsg_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_InviteGiftMsg >*
DB_InviteFriendGift::mutable_invitegiftmsg() {
  return &invitegiftmsg_;
}
inline const ::DB_InviteGiftMsg& DB_InviteFriendGift::invitegiftmsg(int index) const {
  return invitegiftmsg_.Get(index);
}
inline ::DB_InviteGiftMsg* DB_InviteFriendGift::mutable_invitegiftmsg(int index) {
  return invitegiftmsg_.Mutable(index);
}
inline ::DB_InviteGiftMsg* DB_InviteFriendGift::add_invitegiftmsg() {
  return invitegiftmsg_.Add();
}

// repeated .DB_InvitedFriendLvMsg invitedfriendlvmsg = 3;
inline int DB_InviteFriendGift::invitedfriendlvmsg_size() const {
  return invitedfriendlvmsg_.size();
}
inline void DB_InviteFriendGift::clear_invitedfriendlvmsg() {
  invitedfriendlvmsg_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_InvitedFriendLvMsg >&
DB_InviteFriendGift::invitedfriendlvmsg() const {
  return invitedfriendlvmsg_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_InvitedFriendLvMsg >*
DB_InviteFriendGift::mutable_invitedfriendlvmsg() {
  return &invitedfriendlvmsg_;
}
inline const ::DB_InvitedFriendLvMsg& DB_InviteFriendGift::invitedfriendlvmsg(int index) const {
  return invitedfriendlvmsg_.Get(index);
}
inline ::DB_InvitedFriendLvMsg* DB_InviteFriendGift::mutable_invitedfriendlvmsg(int index) {
  return invitedfriendlvmsg_.Mutable(index);
}
inline ::DB_InvitedFriendLvMsg* DB_InviteFriendGift::add_invitedfriendlvmsg() {
  return invitedfriendlvmsg_.Add();
}

// optional int32 unGetCoupon = 4 [default = 0];
inline bool DB_InviteFriendGift::has_ungetcoupon() const {
  return _has_bit(3);
}
inline void DB_InviteFriendGift::clear_ungetcoupon() {
  ungetcoupon_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_InviteFriendGift::ungetcoupon() const {
  return ungetcoupon_;
}
inline void DB_InviteFriendGift::set_ungetcoupon(::google::protobuf::int32 value) {
  _set_bit(3);
  ungetcoupon_ = value;
}

// -------------------------------------------------------------------

// DB_InviteGiftMsg

// optional int32 inviteFrdCntDay = 1 [default = 0];
inline bool DB_InviteGiftMsg::has_invitefrdcntday() const {
  return _has_bit(0);
}
inline void DB_InviteGiftMsg::clear_invitefrdcntday() {
  invitefrdcntday_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_InviteGiftMsg::invitefrdcntday() const {
  return invitefrdcntday_;
}
inline void DB_InviteGiftMsg::set_invitefrdcntday(::google::protobuf::int32 value) {
  _set_bit(0);
  invitefrdcntday_ = value;
}

// optional int32 hasGetTimes = 2 [default = 0];
inline bool DB_InviteGiftMsg::has_hasgettimes() const {
  return _has_bit(1);
}
inline void DB_InviteGiftMsg::clear_hasgettimes() {
  hasgettimes_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_InviteGiftMsg::hasgettimes() const {
  return hasgettimes_;
}
inline void DB_InviteGiftMsg::set_hasgettimes(::google::protobuf::int32 value) {
  _set_bit(1);
  hasgettimes_ = value;
}

// -------------------------------------------------------------------

// DB_InviteFriendMsgByLogon

// optional string platid = 1;
inline bool DB_InviteFriendMsgByLogon::has_platid() const {
  return _has_bit(0);
}
inline void DB_InviteFriendMsgByLogon::clear_platid() {
  if (platid_ != &_default_platid_) {
    platid_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& DB_InviteFriendMsgByLogon::platid() const {
  return *platid_;
}
inline void DB_InviteFriendMsgByLogon::set_platid(const ::std::string& value) {
  _set_bit(0);
  if (platid_ == &_default_platid_) {
    platid_ = new ::std::string;
  }
  platid_->assign(value);
}
inline void DB_InviteFriendMsgByLogon::set_platid(const char* value) {
  _set_bit(0);
  if (platid_ == &_default_platid_) {
    platid_ = new ::std::string;
  }
  platid_->assign(value);
}
inline void DB_InviteFriendMsgByLogon::set_platid(const char* value, size_t size) {
  _set_bit(0);
  if (platid_ == &_default_platid_) {
    platid_ = new ::std::string;
  }
  platid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_InviteFriendMsgByLogon::mutable_platid() {
  _set_bit(0);
  if (platid_ == &_default_platid_) {
    platid_ = new ::std::string;
  }
  return platid_;
}

// optional string name = 2;
inline bool DB_InviteFriendMsgByLogon::has_name() const {
  return _has_bit(1);
}
inline void DB_InviteFriendMsgByLogon::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& DB_InviteFriendMsgByLogon::name() const {
  return *name_;
}
inline void DB_InviteFriendMsgByLogon::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DB_InviteFriendMsgByLogon::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DB_InviteFriendMsgByLogon::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_InviteFriendMsgByLogon::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional string url = 3;
inline bool DB_InviteFriendMsgByLogon::has_url() const {
  return _has_bit(2);
}
inline void DB_InviteFriendMsgByLogon::clear_url() {
  if (url_ != &_default_url_) {
    url_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& DB_InviteFriendMsgByLogon::url() const {
  return *url_;
}
inline void DB_InviteFriendMsgByLogon::set_url(const ::std::string& value) {
  _set_bit(2);
  if (url_ == &_default_url_) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void DB_InviteFriendMsgByLogon::set_url(const char* value) {
  _set_bit(2);
  if (url_ == &_default_url_) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void DB_InviteFriendMsgByLogon::set_url(const char* value, size_t size) {
  _set_bit(2);
  if (url_ == &_default_url_) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_InviteFriendMsgByLogon::mutable_url() {
  _set_bit(2);
  if (url_ == &_default_url_) {
    url_ = new ::std::string;
  }
  return url_;
}

// -------------------------------------------------------------------

// DB_InvitedFriendLvMsg

// optional int32 id = 1 [default = 0];
inline bool DB_InvitedFriendLvMsg::has_id() const {
  return _has_bit(0);
}
inline void DB_InvitedFriendLvMsg::clear_id() {
  id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_InvitedFriendLvMsg::id() const {
  return id_;
}
inline void DB_InvitedFriendLvMsg::set_id(::google::protobuf::int32 value) {
  _set_bit(0);
  id_ = value;
}

// repeated int64 uids = 2;
inline int DB_InvitedFriendLvMsg::uids_size() const {
  return uids_.size();
}
inline void DB_InvitedFriendLvMsg::clear_uids() {
  uids_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DB_InvitedFriendLvMsg::uids() const {
  return uids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DB_InvitedFriendLvMsg::mutable_uids() {
  return &uids_;
}
inline ::google::protobuf::int64 DB_InvitedFriendLvMsg::uids(int index) const {
  return uids_.Get(index);
}
inline void DB_InvitedFriendLvMsg::set_uids(int index, ::google::protobuf::int64 value) {
  uids_.Set(index, value);
}
inline void DB_InvitedFriendLvMsg::add_uids(::google::protobuf::int64 value) {
  uids_.Add(value);
}

// repeated string openids = 3;
inline int DB_InvitedFriendLvMsg::openids_size() const {
  return openids_.size();
}
inline void DB_InvitedFriendLvMsg::clear_openids() {
  openids_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_InvitedFriendLvMsg::openids() const {
  return openids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_InvitedFriendLvMsg::mutable_openids() {
  return &openids_;
}
inline const ::std::string& DB_InvitedFriendLvMsg::openids(int index) const {
  return openids_.Get(index);
}
inline ::std::string* DB_InvitedFriendLvMsg::mutable_openids(int index) {
  return openids_.Mutable(index);
}
inline void DB_InvitedFriendLvMsg::set_openids(int index, const ::std::string& value) {
  openids_.Mutable(index)->assign(value);
}
inline void DB_InvitedFriendLvMsg::set_openids(int index, const char* value) {
  openids_.Mutable(index)->assign(value);
}
inline void DB_InvitedFriendLvMsg::set_openids(int index, const char* value, size_t size) {
  openids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_InvitedFriendLvMsg::add_openids() {
  return openids_.Add();
}
inline void DB_InvitedFriendLvMsg::add_openids(const ::std::string& value) {
  openids_.Add()->assign(value);
}
inline void DB_InvitedFriendLvMsg::add_openids(const char* value) {
  openids_.Add()->assign(value);
}
inline void DB_InvitedFriendLvMsg::add_openids(const char* value, size_t size) {
  openids_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string urls = 4;
inline int DB_InvitedFriendLvMsg::urls_size() const {
  return urls_.size();
}
inline void DB_InvitedFriendLvMsg::clear_urls() {
  urls_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_InvitedFriendLvMsg::urls() const {
  return urls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_InvitedFriendLvMsg::mutable_urls() {
  return &urls_;
}
inline const ::std::string& DB_InvitedFriendLvMsg::urls(int index) const {
  return urls_.Get(index);
}
inline ::std::string* DB_InvitedFriendLvMsg::mutable_urls(int index) {
  return urls_.Mutable(index);
}
inline void DB_InvitedFriendLvMsg::set_urls(int index, const ::std::string& value) {
  urls_.Mutable(index)->assign(value);
}
inline void DB_InvitedFriendLvMsg::set_urls(int index, const char* value) {
  urls_.Mutable(index)->assign(value);
}
inline void DB_InvitedFriendLvMsg::set_urls(int index, const char* value, size_t size) {
  urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_InvitedFriendLvMsg::add_urls() {
  return urls_.Add();
}
inline void DB_InvitedFriendLvMsg::add_urls(const ::std::string& value) {
  urls_.Add()->assign(value);
}
inline void DB_InvitedFriendLvMsg::add_urls(const char* value) {
  urls_.Add()->assign(value);
}
inline void DB_InvitedFriendLvMsg::add_urls(const char* value, size_t size) {
  urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string names = 5;
inline int DB_InvitedFriendLvMsg::names_size() const {
  return names_.size();
}
inline void DB_InvitedFriendLvMsg::clear_names() {
  names_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_InvitedFriendLvMsg::names() const {
  return names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_InvitedFriendLvMsg::mutable_names() {
  return &names_;
}
inline const ::std::string& DB_InvitedFriendLvMsg::names(int index) const {
  return names_.Get(index);
}
inline ::std::string* DB_InvitedFriendLvMsg::mutable_names(int index) {
  return names_.Mutable(index);
}
inline void DB_InvitedFriendLvMsg::set_names(int index, const ::std::string& value) {
  names_.Mutable(index)->assign(value);
}
inline void DB_InvitedFriendLvMsg::set_names(int index, const char* value) {
  names_.Mutable(index)->assign(value);
}
inline void DB_InvitedFriendLvMsg::set_names(int index, const char* value, size_t size) {
  names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_InvitedFriendLvMsg::add_names() {
  return names_.Add();
}
inline void DB_InvitedFriendLvMsg::add_names(const ::std::string& value) {
  names_.Add()->assign(value);
}
inline void DB_InvitedFriendLvMsg::add_names(const char* value) {
  names_.Add()->assign(value);
}
inline void DB_InvitedFriendLvMsg::add_names(const char* value, size_t size) {
  names_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// -------------------------------------------------------------------

// DB_TaskMark

// optional string id = 1;
inline bool DB_TaskMark::has_id() const {
  return _has_bit(0);
}
inline void DB_TaskMark::clear_id() {
  if (id_ != &_default_id_) {
    id_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& DB_TaskMark::id() const {
  return *id_;
}
inline void DB_TaskMark::set_id(const ::std::string& value) {
  _set_bit(0);
  if (id_ == &_default_id_) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void DB_TaskMark::set_id(const char* value) {
  _set_bit(0);
  if (id_ == &_default_id_) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void DB_TaskMark::set_id(const char* value, size_t size) {
  _set_bit(0);
  if (id_ == &_default_id_) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_TaskMark::mutable_id() {
  _set_bit(0);
  if (id_ == &_default_id_) {
    id_ = new ::std::string;
  }
  return id_;
}

// optional int32 step = 2;
inline bool DB_TaskMark::has_step() const {
  return _has_bit(1);
}
inline void DB_TaskMark::clear_step() {
  step_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_TaskMark::step() const {
  return step_;
}
inline void DB_TaskMark::set_step(::google::protobuf::int32 value) {
  _set_bit(1);
  step_ = value;
}

// repeated int32 getStep = 3;
inline int DB_TaskMark::getstep_size() const {
  return getstep_.size();
}
inline void DB_TaskMark::clear_getstep() {
  getstep_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_TaskMark::getstep() const {
  return getstep_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_TaskMark::mutable_getstep() {
  return &getstep_;
}
inline ::google::protobuf::int32 DB_TaskMark::getstep(int index) const {
  return getstep_.Get(index);
}
inline void DB_TaskMark::set_getstep(int index, ::google::protobuf::int32 value) {
  getstep_.Set(index, value);
}
inline void DB_TaskMark::add_getstep(::google::protobuf::int32 value) {
  getstep_.Add(value);
}


#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_platDB_2eproto__INCLUDED
