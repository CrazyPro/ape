// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_dbinterface_5fsub_2eproto__INCLUDED
#define PROTOBUF_dbinterface_5fsub_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();

class DB_UserLiteBase;
class DB_CityUserLite;
class DB_RegionCityUserLite;
class DB_GuildUserLite;
class DB_StarUserLite;
class DB_UserLite;
class DB_Star;
class DB_BitCache;
class DB_BanLogin;
class DB_QuestRule;
class DB_Quest;
class DB_AiAttackQueuedArmyInfo;
class DB_AiAttackQueued;
class DB_AiAttack;
class DB_Troop;
class DB_TrapArmy;
class DB_Trap;
class DB_Loot;
class DB_LootEquip;
class DB_LootSuperWeapon;
class DB_LootReport;
class DB_Mushroom;
class DB_Stats;
class DB_UpgradeArmy;
class DB_UnlockArmy;
class DB_Academy;
class DB_Monsterbaiter;
class DB_Locker;
class DB_Army;
class DB_Book;
class DB_Emblem;
class DB_EmblemNew;
class DB_WeaponCom;
class DB_WeaponCenter;
class DB_Jammer;
class DB_WeaponExtraWpcInfo;
class DB_WeaponExtraEmblemInfo;
class DB_CaptureBase;
class DB_SlaveRoom;
class DB_NPCActive;
class DB_BaseDefNPC;
class DB_AdmiralSkill;
class DB_AdmiralSkillData;
class DB_AdmiralTrainLV;
class DB_AdmiralLetter;
class DB_AdmiralEquip;
class DB_Admiral;
class DB_AdmiralInfo;
class DB_HeroLetter;
class DB_HeroSkillData;
class DB_HeroAtkData;
class DB_Hero;
class DB_UpgradeHero;
class DB_HeroInfo;
class DB_Flag;
class DB_Storedata;
class DB_EnemyStar;
class DB_GiftFrdInfo;
class DB_NewComerGiftList;
class DB_GiftInfo;
class DB_DayAtkUser;
class DB_UserStar;
class DB_DefenseActivityNode;
class DB_DefenseActivity;
class DB_DefenseHonor;
class DB_BuffUnit;
class DB_BuffData;
class DB_BagItemLog;
class DB_Log;
class DB_BagItem;
class DB_Bag;
class DB_MoonCake;
class DB_HolidayDraw;
class DB_LeaveMessage_Unit;
class DB_LeaveMessage;
class DB_TXMissionData;
class DB_ClientNumStat;
class DB_PokerInfo;
class DB_CurrPokerInfo;
class DB_PokerExchanges;
class DB_WorldCupPredictions;
class DB_WCBetInfo;
class DB_CardDuelInfo;
class DB_MiddleYearGift;
class DB_OpenSNSGift;
class DB_CallBackFriend;
class DB_AttackCount;
class DB_Science;
class DB_Effect;
class DB_Officer;
class DB_WpcRank;
class DB_LeagueBtl;
class DB_HappylibAward;
class DB_HappyLib;
class DB_BossBtlMsg;
class DB_MedalHonorInfo;
class DB_MedalHonor;

// ===================================================================

class DB_UserLiteBase : public ::google::protobuf::Message {
 public:
  DB_UserLiteBase();
  virtual ~DB_UserLiteBase();
  
  DB_UserLiteBase(const DB_UserLiteBase& from);
  
  inline DB_UserLiteBase& operator=(const DB_UserLiteBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_UserLiteBase& default_instance();
  void Swap(DB_UserLiteBase* other);
  
  // implements Message ----------------------------------------------
  
  DB_UserLiteBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_UserLiteBase& from);
  void MergeFrom(const DB_UserLiteBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline const ::std::string& userid() const;
  inline void set_userid(const ::std::string& value);
  inline void set_userid(const char* value);
  inline void set_userid(const char* value, size_t size);
  inline ::std::string* mutable_userid();
  
  // repeated string name = 2;
  inline int name_size() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& name() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name();
  inline const ::std::string& name(int index) const;
  inline ::std::string* mutable_name(int index);
  inline void set_name(int index, const ::std::string& value);
  inline void set_name(int index, const char* value);
  inline void set_name(int index, const char* value, size_t size);
  inline ::std::string* add_name();
  inline void add_name(const ::std::string& value);
  inline void add_name(const char* value);
  inline void add_name(const char* value, size_t size);
  
  // repeated string pic = 3;
  inline int pic_size() const;
  inline void clear_pic();
  static const int kPicFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& pic() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_pic();
  inline const ::std::string& pic(int index) const;
  inline ::std::string* mutable_pic(int index);
  inline void set_pic(int index, const ::std::string& value);
  inline void set_pic(int index, const char* value);
  inline void set_pic(int index, const char* value, size_t size);
  inline ::std::string* add_pic();
  inline void add_pic(const ::std::string& value);
  inline void add_pic(const char* value);
  inline void add_pic(const char* value, size_t size);
  
  // optional int32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional uint32 combatValue = 5;
  inline bool has_combatvalue() const;
  inline void clear_combatvalue();
  static const int kCombatValueFieldNumber = 5;
  inline ::google::protobuf::uint32 combatvalue() const;
  inline void set_combatvalue(::google::protobuf::uint32 value);
  
  // optional bool online = 6;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 6;
  inline bool online() const;
  inline void set_online(bool value);
  
  // optional int32 savetime = 7;
  inline bool has_savetime() const;
  inline void clear_savetime();
  static const int kSavetimeFieldNumber = 7;
  inline ::google::protobuf::int32 savetime() const;
  inline void set_savetime(::google::protobuf::int32 value);
  
  // optional uint32 nIntegralScore = 8;
  inline bool has_nintegralscore() const;
  inline void clear_nintegralscore();
  static const int kNIntegralScoreFieldNumber = 8;
  inline ::google::protobuf::uint32 nintegralscore() const;
  inline void set_nintegralscore(::google::protobuf::uint32 value);
  
  // optional int32 countryID = 9 [default = 0];
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 9;
  inline ::google::protobuf::int32 countryid() const;
  inline void set_countryid(::google::protobuf::int32 value);
  
  // optional int32 lastLogonTm = 10;
  inline bool has_lastlogontm() const;
  inline void clear_lastlogontm();
  static const int kLastLogonTmFieldNumber = 10;
  inline ::google::protobuf::int32 lastlogontm() const;
  inline void set_lastlogontm(::google::protobuf::int32 value);
  
  // optional int32 officerPosition = 11;
  inline bool has_officerposition() const;
  inline void clear_officerposition();
  static const int kOfficerPositionFieldNumber = 11;
  inline ::google::protobuf::int32 officerposition() const;
  inline void set_officerposition(::google::protobuf::int32 value);
  
  // optional int32 arenaRank = 12;
  inline bool has_arenarank() const;
  inline void clear_arenarank();
  static const int kArenaRankFieldNumber = 12;
  inline ::google::protobuf::int32 arenarank() const;
  inline void set_arenarank(::google::protobuf::int32 value);
  
  // optional int32 vipLevel = 13;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 13;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);
  
  // optional int32 vipType = 14;
  inline bool has_viptype() const;
  inline void clear_viptype();
  static const int kVipTypeFieldNumber = 14;
  inline ::google::protobuf::int32 viptype() const;
  inline void set_viptype(::google::protobuf::int32 value);
  
  // optional int32 heroarenacombat = 15;
  inline bool has_heroarenacombat() const;
  inline void clear_heroarenacombat();
  static const int kHeroarenacombatFieldNumber = 15;
  inline ::google::protobuf::int32 heroarenacombat() const;
  inline void set_heroarenacombat(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* userid_;
  static const ::std::string _default_userid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> pic_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::uint32 combatvalue_;
  bool online_;
  ::google::protobuf::int32 savetime_;
  ::google::protobuf::uint32 nintegralscore_;
  ::google::protobuf::int32 countryid_;
  ::google::protobuf::int32 lastlogontm_;
  ::google::protobuf::int32 officerposition_;
  ::google::protobuf::int32 arenarank_;
  ::google::protobuf::int32 viplevel_;
  ::google::protobuf::int32 viptype_;
  ::google::protobuf::int32 heroarenacombat_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_UserLiteBase* default_instance_;
};
// -------------------------------------------------------------------

class DB_CityUserLite : public ::google::protobuf::Message {
 public:
  DB_CityUserLite();
  virtual ~DB_CityUserLite();
  
  DB_CityUserLite(const DB_CityUserLite& from);
  
  inline DB_CityUserLite& operator=(const DB_CityUserLite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_CityUserLite& default_instance();
  void Swap(DB_CityUserLite* other);
  
  // implements Message ----------------------------------------------
  
  DB_CityUserLite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_CityUserLite& from);
  void MergeFrom(const DB_CityUserLite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 morale = 1 [default = 0];
  inline bool has_morale() const;
  inline void clear_morale();
  static const int kMoraleFieldNumber = 1;
  inline ::google::protobuf::int32 morale() const;
  inline void set_morale(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 morale_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_CityUserLite* default_instance_;
};
// -------------------------------------------------------------------

class DB_RegionCityUserLite : public ::google::protobuf::Message {
 public:
  DB_RegionCityUserLite();
  virtual ~DB_RegionCityUserLite();
  
  DB_RegionCityUserLite(const DB_RegionCityUserLite& from);
  
  inline DB_RegionCityUserLite& operator=(const DB_RegionCityUserLite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_RegionCityUserLite& default_instance();
  void Swap(DB_RegionCityUserLite* other);
  
  // implements Message ----------------------------------------------
  
  DB_RegionCityUserLite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_RegionCityUserLite& from);
  void MergeFrom(const DB_RegionCityUserLite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 morale = 1 [default = 0];
  inline bool has_morale() const;
  inline void clear_morale();
  static const int kMoraleFieldNumber = 1;
  inline ::google::protobuf::int32 morale() const;
  inline void set_morale(::google::protobuf::int32 value);
  
  // optional int32 region = 2 [default = 0];
  inline bool has_region() const;
  inline void clear_region();
  static const int kRegionFieldNumber = 2;
  inline ::google::protobuf::int32 region() const;
  inline void set_region(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 morale_;
  ::google::protobuf::int32 region_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_RegionCityUserLite* default_instance_;
};
// -------------------------------------------------------------------

class DB_GuildUserLite : public ::google::protobuf::Message {
 public:
  DB_GuildUserLite();
  virtual ~DB_GuildUserLite();
  
  DB_GuildUserLite(const DB_GuildUserLite& from);
  
  inline DB_GuildUserLite& operator=(const DB_GuildUserLite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_GuildUserLite& default_instance();
  void Swap(DB_GuildUserLite* other);
  
  // implements Message ----------------------------------------------
  
  DB_GuildUserLite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_GuildUserLite& from);
  void MergeFrom(const DB_GuildUserLite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 position = 1;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 1;
  inline ::google::protobuf::int32 position() const;
  inline void set_position(::google::protobuf::int32 value);
  
  // optional int32 contribute = 2;
  inline bool has_contribute() const;
  inline void clear_contribute();
  static const int kContributeFieldNumber = 2;
  inline ::google::protobuf::int32 contribute() const;
  inline void set_contribute(::google::protobuf::int32 value);
  
  // optional int32 totalContribute = 3;
  inline bool has_totalcontribute() const;
  inline void clear_totalcontribute();
  static const int kTotalContributeFieldNumber = 3;
  inline ::google::protobuf::int32 totalcontribute() const;
  inline void set_totalcontribute(::google::protobuf::int32 value);
  
  // optional int32 addAtkPct = 4;
  inline bool has_addatkpct() const;
  inline void clear_addatkpct();
  static const int kAddAtkPctFieldNumber = 4;
  inline ::google::protobuf::int32 addatkpct() const;
  inline void set_addatkpct(::google::protobuf::int32 value);
  
  // optional int32 addBloodPct = 5;
  inline bool has_addbloodpct() const;
  inline void clear_addbloodpct();
  static const int kAddBloodPctFieldNumber = 5;
  inline ::google::protobuf::int32 addbloodpct() const;
  inline void set_addbloodpct(::google::protobuf::int32 value);
  
  // repeated int32 daycontribute = 6;
  inline int daycontribute_size() const;
  inline void clear_daycontribute();
  static const int kDaycontributeFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& daycontribute() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_daycontribute();
  inline ::google::protobuf::int32 daycontribute(int index) const;
  inline void set_daycontribute(int index, ::google::protobuf::int32 value);
  inline void add_daycontribute(::google::protobuf::int32 value);
  
  // optional int32 lastcontributetm = 7;
  inline bool has_lastcontributetm() const;
  inline void clear_lastcontributetm();
  static const int kLastcontributetmFieldNumber = 7;
  inline ::google::protobuf::int32 lastcontributetm() const;
  inline void set_lastcontributetm(::google::protobuf::int32 value);
  
  // optional int32 lastcontidx = 8;
  inline bool has_lastcontidx() const;
  inline void clear_lastcontidx();
  static const int kLastcontidxFieldNumber = 8;
  inline ::google::protobuf::int32 lastcontidx() const;
  inline void set_lastcontidx(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 position_;
  ::google::protobuf::int32 contribute_;
  ::google::protobuf::int32 totalcontribute_;
  ::google::protobuf::int32 addatkpct_;
  ::google::protobuf::int32 addbloodpct_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > daycontribute_;
  ::google::protobuf::int32 lastcontributetm_;
  ::google::protobuf::int32 lastcontidx_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_GuildUserLite* default_instance_;
};
// -------------------------------------------------------------------

class DB_StarUserLite : public ::google::protobuf::Message {
 public:
  DB_StarUserLite();
  virtual ~DB_StarUserLite();
  
  DB_StarUserLite(const DB_StarUserLite& from);
  
  inline DB_StarUserLite& operator=(const DB_StarUserLite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_StarUserLite& default_instance();
  void Swap(DB_StarUserLite* other);
  
  // implements Message ----------------------------------------------
  
  DB_StarUserLite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_StarUserLite& from);
  void MergeFrom(const DB_StarUserLite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 attacktime = 1;
  inline bool has_attacktime() const;
  inline void clear_attacktime();
  static const int kAttacktimeFieldNumber = 1;
  inline ::google::protobuf::int32 attacktime() const;
  inline void set_attacktime(::google::protobuf::int32 value);
  
  // optional int32 userstat = 2;
  inline bool has_userstat() const;
  inline void clear_userstat();
  static const int kUserstatFieldNumber = 2;
  inline ::google::protobuf::int32 userstat() const;
  inline void set_userstat(::google::protobuf::int32 value);
  
  // optional int32 safetime = 3;
  inline bool has_safetime() const;
  inline void clear_safetime();
  static const int kSafetimeFieldNumber = 3;
  inline ::google::protobuf::int32 safetime() const;
  inline void set_safetime(::google::protobuf::int32 value);
  
  // optional int64 totalpercharge = 4;
  inline bool has_totalpercharge() const;
  inline void clear_totalpercharge();
  static const int kTotalperchargeFieldNumber = 4;
  inline ::google::protobuf::int64 totalpercharge() const;
  inline void set_totalpercharge(::google::protobuf::int64 value);
  
  // optional int32 playeronlinetm = 5;
  inline bool has_playeronlinetm() const;
  inline void clear_playeronlinetm();
  static const int kPlayeronlinetmFieldNumber = 5;
  inline ::google::protobuf::int32 playeronlinetm() const;
  inline void set_playeronlinetm(::google::protobuf::int32 value);
  
  // optional uint32 playerrefreshtm = 6;
  inline bool has_playerrefreshtm() const;
  inline void clear_playerrefreshtm();
  static const int kPlayerrefreshtmFieldNumber = 6;
  inline ::google::protobuf::uint32 playerrefreshtm() const;
  inline void set_playerrefreshtm(::google::protobuf::uint32 value);
  
  // optional int32 finishCaptureTm = 7;
  inline bool has_finishcapturetm() const;
  inline void clear_finishcapturetm();
  static const int kFinishCaptureTmFieldNumber = 7;
  inline ::google::protobuf::int32 finishcapturetm() const;
  inline void set_finishcapturetm(::google::protobuf::int32 value);
  
  // optional int32 logoutsafetime = 8;
  inline bool has_logoutsafetime() const;
  inline void clear_logoutsafetime();
  static const int kLogoutsafetimeFieldNumber = 8;
  inline ::google::protobuf::int32 logoutsafetime() const;
  inline void set_logoutsafetime(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 attacktime_;
  ::google::protobuf::int32 userstat_;
  ::google::protobuf::int32 safetime_;
  ::google::protobuf::int64 totalpercharge_;
  ::google::protobuf::int32 playeronlinetm_;
  ::google::protobuf::uint32 playerrefreshtm_;
  ::google::protobuf::int32 finishcapturetm_;
  ::google::protobuf::int32 logoutsafetime_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_StarUserLite* default_instance_;
};
// -------------------------------------------------------------------

class DB_UserLite : public ::google::protobuf::Message {
 public:
  DB_UserLite();
  virtual ~DB_UserLite();
  
  DB_UserLite(const DB_UserLite& from);
  
  inline DB_UserLite& operator=(const DB_UserLite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_UserLite& default_instance();
  void Swap(DB_UserLite* other);
  
  // implements Message ----------------------------------------------
  
  DB_UserLite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_UserLite& from);
  void MergeFrom(const DB_UserLite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .DB_UserLiteBase userLite = 1;
  inline bool has_userlite() const;
  inline void clear_userlite();
  static const int kUserLiteFieldNumber = 1;
  inline const ::DB_UserLiteBase& userlite() const;
  inline ::DB_UserLiteBase* mutable_userlite();
  
  // optional .DB_CityUserLite cityLite = 2;
  inline bool has_citylite() const;
  inline void clear_citylite();
  static const int kCityLiteFieldNumber = 2;
  inline const ::DB_CityUserLite& citylite() const;
  inline ::DB_CityUserLite* mutable_citylite();
  
  // optional .DB_StarUserLite starLite = 3;
  inline bool has_starlite() const;
  inline void clear_starlite();
  static const int kStarLiteFieldNumber = 3;
  inline const ::DB_StarUserLite& starlite() const;
  inline ::DB_StarUserLite* mutable_starlite();
  
  // optional .DB_GuildUserLite guildLite = 4;
  inline bool has_guildlite() const;
  inline void clear_guildlite();
  static const int kGuildLiteFieldNumber = 4;
  inline const ::DB_GuildUserLite& guildlite() const;
  inline ::DB_GuildUserLite* mutable_guildlite();
  
  // optional .DB_RegionCityUserLite regionCityLite = 5;
  inline bool has_regioncitylite() const;
  inline void clear_regioncitylite();
  static const int kRegionCityLiteFieldNumber = 5;
  inline const ::DB_RegionCityUserLite& regioncitylite() const;
  inline ::DB_RegionCityUserLite* mutable_regioncitylite();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::DB_UserLiteBase* userlite_;
  ::DB_CityUserLite* citylite_;
  ::DB_StarUserLite* starlite_;
  ::DB_GuildUserLite* guildlite_;
  ::DB_RegionCityUserLite* regioncitylite_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_UserLite* default_instance_;
};
// -------------------------------------------------------------------

class DB_Star : public ::google::protobuf::Message {
 public:
  DB_Star();
  virtual ~DB_Star();
  
  DB_Star(const DB_Star& from);
  
  inline DB_Star& operator=(const DB_Star& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Star& default_instance();
  void Swap(DB_Star* other);
  
  // implements Message ----------------------------------------------
  
  DB_Star* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Star& from);
  void MergeFrom(const DB_Star& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline const ::std::string& userid() const;
  inline void set_userid(const ::std::string& value);
  inline void set_userid(const char* value);
  inline void set_userid(const char* value, size_t size);
  inline ::std::string* mutable_userid();
  
  // repeated string name = 2;
  inline int name_size() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& name() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name();
  inline const ::std::string& name(int index) const;
  inline ::std::string* mutable_name(int index);
  inline void set_name(int index, const ::std::string& value);
  inline void set_name(int index, const char* value);
  inline void set_name(int index, const char* value, size_t size);
  inline ::std::string* add_name();
  inline void add_name(const ::std::string& value);
  inline void add_name(const char* value);
  inline void add_name(const char* value, size_t size);
  
  // repeated string profile_link = 3;
  inline int profile_link_size() const;
  inline void clear_profile_link();
  static const int kProfileLinkFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& profile_link() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_profile_link();
  inline const ::std::string& profile_link(int index) const;
  inline ::std::string* mutable_profile_link(int index);
  inline void set_profile_link(int index, const ::std::string& value);
  inline void set_profile_link(int index, const char* value);
  inline void set_profile_link(int index, const char* value, size_t size);
  inline ::std::string* add_profile_link();
  inline void add_profile_link(const ::std::string& value);
  inline void add_profile_link(const char* value);
  inline void add_profile_link(const char* value, size_t size);
  
  // optional int32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 safetime = 5;
  inline bool has_safetime() const;
  inline void clear_safetime();
  static const int kSafetimeFieldNumber = 5;
  inline ::google::protobuf::int32 safetime() const;
  inline void set_safetime(::google::protobuf::int32 value);
  
  // optional int32 attacktime = 6;
  inline bool has_attacktime() const;
  inline void clear_attacktime();
  static const int kAttacktimeFieldNumber = 6;
  inline ::google::protobuf::int32 attacktime() const;
  inline void set_attacktime(::google::protobuf::int32 value);
  
  // optional bool online = 7;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 7;
  inline bool online() const;
  inline void set_online(bool value);
  
  // optional int32 userstat = 8;
  inline bool has_userstat() const;
  inline void clear_userstat();
  static const int kUserstatFieldNumber = 8;
  inline ::google::protobuf::int32 userstat() const;
  inline void set_userstat(::google::protobuf::int32 value);
  
  // optional int32 savetime = 9;
  inline bool has_savetime() const;
  inline void clear_savetime();
  static const int kSavetimeFieldNumber = 9;
  inline ::google::protobuf::int32 savetime() const;
  inline void set_savetime(::google::protobuf::int32 value);
  
  // optional int64 totalpercharge = 10;
  inline bool has_totalpercharge() const;
  inline void clear_totalpercharge();
  static const int kTotalperchargeFieldNumber = 10;
  inline ::google::protobuf::int64 totalpercharge() const;
  inline void set_totalpercharge(::google::protobuf::int64 value);
  
  // optional int32 playeronlinetm = 11;
  inline bool has_playeronlinetm() const;
  inline void clear_playeronlinetm();
  static const int kPlayeronlinetmFieldNumber = 11;
  inline ::google::protobuf::int32 playeronlinetm() const;
  inline void set_playeronlinetm(::google::protobuf::int32 value);
  
  // optional uint32 playerrefreshtm = 12;
  inline bool has_playerrefreshtm() const;
  inline void clear_playerrefreshtm();
  static const int kPlayerrefreshtmFieldNumber = 12;
  inline ::google::protobuf::uint32 playerrefreshtm() const;
  inline void set_playerrefreshtm(::google::protobuf::uint32 value);
  
  // optional int32 finishCaptureTm = 13;
  inline bool has_finishcapturetm() const;
  inline void clear_finishcapturetm();
  static const int kFinishCaptureTmFieldNumber = 13;
  inline ::google::protobuf::int32 finishcapturetm() const;
  inline void set_finishcapturetm(::google::protobuf::int32 value);
  
  // optional uint32 combatPowerValue = 14;
  inline bool has_combatpowervalue() const;
  inline void clear_combatpowervalue();
  static const int kCombatPowerValueFieldNumber = 14;
  inline ::google::protobuf::uint32 combatpowervalue() const;
  inline void set_combatpowervalue(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* userid_;
  static const ::std::string _default_userid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> profile_link_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 safetime_;
  ::google::protobuf::int32 attacktime_;
  bool online_;
  ::google::protobuf::int32 userstat_;
  ::google::protobuf::int32 savetime_;
  ::google::protobuf::int64 totalpercharge_;
  ::google::protobuf::int32 playeronlinetm_;
  ::google::protobuf::uint32 playerrefreshtm_;
  ::google::protobuf::int32 finishcapturetm_;
  ::google::protobuf::uint32 combatpowervalue_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Star* default_instance_;
};
// -------------------------------------------------------------------

class DB_BitCache : public ::google::protobuf::Message {
 public:
  DB_BitCache();
  virtual ~DB_BitCache();
  
  DB_BitCache(const DB_BitCache& from);
  
  inline DB_BitCache& operator=(const DB_BitCache& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_BitCache& default_instance();
  void Swap(DB_BitCache* other);
  
  // implements Message ----------------------------------------------
  
  DB_BitCache* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_BitCache& from);
  void MergeFrom(const DB_BitCache& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 bit = 1;
  inline int bit_size() const;
  inline void clear_bit();
  static const int kBitFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& bit() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_bit();
  inline ::google::protobuf::int32 bit(int index) const;
  inline void set_bit(int index, ::google::protobuf::int32 value);
  inline void add_bit(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > bit_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_BitCache* default_instance_;
};
// -------------------------------------------------------------------

class DB_BanLogin : public ::google::protobuf::Message {
 public:
  DB_BanLogin();
  virtual ~DB_BanLogin();
  
  DB_BanLogin(const DB_BanLogin& from);
  
  inline DB_BanLogin& operator=(const DB_BanLogin& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_BanLogin& default_instance();
  void Swap(DB_BanLogin* other);
  
  // implements Message ----------------------------------------------
  
  DB_BanLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_BanLogin& from);
  void MergeFrom(const DB_BanLogin& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool banlogin = 1 [default = false];
  inline bool has_banlogin() const;
  inline void clear_banlogin();
  static const int kBanloginFieldNumber = 1;
  inline bool banlogin() const;
  inline void set_banlogin(bool value);
  
  // optional int64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool banlogin_;
  ::google::protobuf::int64 time_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_BanLogin* default_instance_;
};
// -------------------------------------------------------------------

class DB_QuestRule : public ::google::protobuf::Message {
 public:
  DB_QuestRule();
  virtual ~DB_QuestRule();
  
  DB_QuestRule(const DB_QuestRule& from);
  
  inline DB_QuestRule& operator=(const DB_QuestRule& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_QuestRule& default_instance();
  void Swap(DB_QuestRule* other);
  
  // implements Message ----------------------------------------------
  
  DB_QuestRule* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_QuestRule& from);
  void MergeFrom(const DB_QuestRule& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 blvl = 1;
  inline bool has_blvl() const;
  inline void clear_blvl();
  static const int kBlvlFieldNumber = 1;
  inline ::google::protobuf::int32 blvl() const;
  inline void set_blvl(::google::protobuf::int32 value);
  
  // optional int32 brlvl = 2;
  inline bool has_brlvl() const;
  inline void clear_brlvl();
  static const int kBrlvlFieldNumber = 2;
  inline ::google::protobuf::int32 brlvl() const;
  inline void set_brlvl(::google::protobuf::int32 value);
  
  // optional int32 b1lvl = 3;
  inline bool has_b1lvl() const;
  inline void clear_b1lvl();
  static const int kB1LvlFieldNumber = 3;
  inline ::google::protobuf::int32 b1lvl() const;
  inline void set_b1lvl(::google::protobuf::int32 value);
  
  // optional int32 b1count = 4;
  inline bool has_b1count() const;
  inline void clear_b1count();
  static const int kB1CountFieldNumber = 4;
  inline ::google::protobuf::int32 b1count() const;
  inline void set_b1count(::google::protobuf::int32 value);
  
  // optional int32 b2lvl = 5;
  inline bool has_b2lvl() const;
  inline void clear_b2lvl();
  static const int kB2LvlFieldNumber = 5;
  inline ::google::protobuf::int32 b2lvl() const;
  inline void set_b2lvl(::google::protobuf::int32 value);
  
  // optional int32 b2count = 6;
  inline bool has_b2count() const;
  inline void clear_b2count();
  static const int kB2CountFieldNumber = 6;
  inline ::google::protobuf::int32 b2count() const;
  inline void set_b2count(::google::protobuf::int32 value);
  
  // optional int32 b3lvl = 7;
  inline bool has_b3lvl() const;
  inline void clear_b3lvl();
  static const int kB3LvlFieldNumber = 7;
  inline ::google::protobuf::int32 b3lvl() const;
  inline void set_b3lvl(::google::protobuf::int32 value);
  
  // optional int32 b4lvl = 8;
  inline bool has_b4lvl() const;
  inline void clear_b4lvl();
  static const int kB4LvlFieldNumber = 8;
  inline ::google::protobuf::int32 b4lvl() const;
  inline void set_b4lvl(::google::protobuf::int32 value);
  
  // optional int32 b5lvl = 9;
  inline bool has_b5lvl() const;
  inline void clear_b5lvl();
  static const int kB5LvlFieldNumber = 9;
  inline ::google::protobuf::int32 b5lvl() const;
  inline void set_b5lvl(::google::protobuf::int32 value);
  
  // optional int32 b6lvl = 10;
  inline bool has_b6lvl() const;
  inline void clear_b6lvl();
  static const int kB6LvlFieldNumber = 10;
  inline ::google::protobuf::int32 b6lvl() const;
  inline void set_b6lvl(::google::protobuf::int32 value);
  
  // optional int32 b6count = 11;
  inline bool has_b6count() const;
  inline void clear_b6count();
  static const int kB6CountFieldNumber = 11;
  inline ::google::protobuf::int32 b6count() const;
  inline void set_b6count(::google::protobuf::int32 value);
  
  // optional int32 b7lvl = 12;
  inline bool has_b7lvl() const;
  inline void clear_b7lvl();
  static const int kB7LvlFieldNumber = 12;
  inline ::google::protobuf::int32 b7lvl() const;
  inline void set_b7lvl(::google::protobuf::int32 value);
  
  // optional int32 b8lvl = 13;
  inline bool has_b8lvl() const;
  inline void clear_b8lvl();
  static const int kB8LvlFieldNumber = 13;
  inline ::google::protobuf::int32 b8lvl() const;
  inline void set_b8lvl(::google::protobuf::int32 value);
  
  // optional int32 b9lvl = 14;
  inline bool has_b9lvl() const;
  inline void clear_b9lvl();
  static const int kB9LvlFieldNumber = 14;
  inline ::google::protobuf::int32 b9lvl() const;
  inline void set_b9lvl(::google::protobuf::int32 value);
  
  // optional int32 b10lvl = 15;
  inline bool has_b10lvl() const;
  inline void clear_b10lvl();
  static const int kB10LvlFieldNumber = 15;
  inline ::google::protobuf::int32 b10lvl() const;
  inline void set_b10lvl(::google::protobuf::int32 value);
  
  // optional int32 b11lvl = 16;
  inline bool has_b11lvl() const;
  inline void clear_b11lvl();
  static const int kB11LvlFieldNumber = 16;
  inline ::google::protobuf::int32 b11lvl() const;
  inline void set_b11lvl(::google::protobuf::int32 value);
  
  // optional int32 b12lvl = 17;
  inline bool has_b12lvl() const;
  inline void clear_b12lvl();
  static const int kB12LvlFieldNumber = 17;
  inline ::google::protobuf::int32 b12lvl() const;
  inline void set_b12lvl(::google::protobuf::int32 value);
  
  // optional int32 b13lvl = 18;
  inline bool has_b13lvl() const;
  inline void clear_b13lvl();
  static const int kB13LvlFieldNumber = 18;
  inline ::google::protobuf::int32 b13lvl() const;
  inline void set_b13lvl(::google::protobuf::int32 value);
  
  // optional int32 b14lvl = 19;
  inline bool has_b14lvl() const;
  inline void clear_b14lvl();
  static const int kB14LvlFieldNumber = 19;
  inline ::google::protobuf::int32 b14lvl() const;
  inline void set_b14lvl(::google::protobuf::int32 value);
  
  // optional int32 b15lvl = 20;
  inline bool has_b15lvl() const;
  inline void clear_b15lvl();
  static const int kB15LvlFieldNumber = 20;
  inline ::google::protobuf::int32 b15lvl() const;
  inline void set_b15lvl(::google::protobuf::int32 value);
  
  // optional int32 b16lvl = 21;
  inline bool has_b16lvl() const;
  inline void clear_b16lvl();
  static const int kB16LvlFieldNumber = 21;
  inline ::google::protobuf::int32 b16lvl() const;
  inline void set_b16lvl(::google::protobuf::int32 value);
  
  // optional int32 b17lvl = 22;
  inline bool has_b17lvl() const;
  inline void clear_b17lvl();
  static const int kB17LvlFieldNumber = 22;
  inline ::google::protobuf::int32 b17lvl() const;
  inline void set_b17lvl(::google::protobuf::int32 value);
  
  // optional int32 b18lvl = 23;
  inline bool has_b18lvl() const;
  inline void clear_b18lvl();
  static const int kB18LvlFieldNumber = 23;
  inline ::google::protobuf::int32 b18lvl() const;
  inline void set_b18lvl(::google::protobuf::int32 value);
  
  // optional int32 b19lvl = 24;
  inline bool has_b19lvl() const;
  inline void clear_b19lvl();
  static const int kB19LvlFieldNumber = 24;
  inline ::google::protobuf::int32 b19lvl() const;
  inline void set_b19lvl(::google::protobuf::int32 value);
  
  // optional int32 b20lvl = 25;
  inline bool has_b20lvl() const;
  inline void clear_b20lvl();
  static const int kB20LvlFieldNumber = 25;
  inline ::google::protobuf::int32 b20lvl() const;
  inline void set_b20lvl(::google::protobuf::int32 value);
  
  // optional int32 b21lvl = 26;
  inline bool has_b21lvl() const;
  inline void clear_b21lvl();
  static const int kB21LvlFieldNumber = 26;
  inline ::google::protobuf::int32 b21lvl() const;
  inline void set_b21lvl(::google::protobuf::int32 value);
  
  // optional int32 b22lvl = 27;
  inline bool has_b22lvl() const;
  inline void clear_b22lvl();
  static const int kB22LvlFieldNumber = 27;
  inline ::google::protobuf::int32 b22lvl() const;
  inline void set_b22lvl(::google::protobuf::int32 value);
  
  // optional int32 b23lvl = 28;
  inline bool has_b23lvl() const;
  inline void clear_b23lvl();
  static const int kB23LvlFieldNumber = 28;
  inline ::google::protobuf::int32 b23lvl() const;
  inline void set_b23lvl(::google::protobuf::int32 value);
  
  // optional int32 b24lvl = 29;
  inline bool has_b24lvl() const;
  inline void clear_b24lvl();
  static const int kB24LvlFieldNumber = 29;
  inline ::google::protobuf::int32 b24lvl() const;
  inline void set_b24lvl(::google::protobuf::int32 value);
  
  // optional int32 b25lvl = 30;
  inline bool has_b25lvl() const;
  inline void clear_b25lvl();
  static const int kB25LvlFieldNumber = 30;
  inline ::google::protobuf::int32 b25lvl() const;
  inline void set_b25lvl(::google::protobuf::int32 value);
  
  // optional int32 b26lvl = 31;
  inline bool has_b26lvl() const;
  inline void clear_b26lvl();
  static const int kB26LvlFieldNumber = 31;
  inline ::google::protobuf::int32 b26lvl() const;
  inline void set_b26lvl(::google::protobuf::int32 value);
  
  // optional int32 b28lvl = 32;
  inline bool has_b28lvl() const;
  inline void clear_b28lvl();
  static const int kB28LvlFieldNumber = 32;
  inline ::google::protobuf::int32 b28lvl() const;
  inline void set_b28lvl(::google::protobuf::int32 value);
  
  // optional int32 b29lvl = 33;
  inline bool has_b29lvl() const;
  inline void clear_b29lvl();
  static const int kB29LvlFieldNumber = 33;
  inline ::google::protobuf::int32 b29lvl() const;
  inline void set_b29lvl(::google::protobuf::int32 value);
  
  // optional int32 b30lvl = 34;
  inline bool has_b30lvl() const;
  inline void clear_b30lvl();
  static const int kB30LvlFieldNumber = 34;
  inline ::google::protobuf::int32 b30lvl() const;
  inline void set_b30lvl(::google::protobuf::int32 value);
  
  // optional int32 b31lvl = 35;
  inline bool has_b31lvl() const;
  inline void clear_b31lvl();
  static const int kB31LvlFieldNumber = 35;
  inline ::google::protobuf::int32 b31lvl() const;
  inline void set_b31lvl(::google::protobuf::int32 value);
  
  // optional int32 b33lvl = 36;
  inline bool has_b33lvl() const;
  inline void clear_b33lvl();
  static const int kB33LvlFieldNumber = 36;
  inline ::google::protobuf::int32 b33lvl() const;
  inline void set_b33lvl(::google::protobuf::int32 value);
  
  // optional int32 lootpicked = 37;
  inline bool has_lootpicked() const;
  inline void clear_lootpicked();
  static const int kLootpickedFieldNumber = 37;
  inline ::google::protobuf::int32 lootpicked() const;
  inline void set_lootpicked(::google::protobuf::int32 value);
  
  // optional int32 singleclickbank1 = 38;
  inline bool has_singleclickbank1() const;
  inline void clear_singleclickbank1();
  static const int kSingleclickbank1FieldNumber = 38;
  inline ::google::protobuf::int32 singleclickbank1() const;
  inline void set_singleclickbank1(::google::protobuf::int32 value);
  
  // optional int32 singleclickbank2 = 39;
  inline bool has_singleclickbank2() const;
  inline void clear_singleclickbank2();
  static const int kSingleclickbank2FieldNumber = 39;
  inline ::google::protobuf::int32 singleclickbank2() const;
  inline void set_singleclickbank2(::google::protobuf::int32 value);
  
  // optional int32 resourcegather1 = 40;
  inline bool has_resourcegather1() const;
  inline void clear_resourcegather1();
  static const int kResourcegather1FieldNumber = 40;
  inline ::google::protobuf::int32 resourcegather1() const;
  inline void set_resourcegather1(::google::protobuf::int32 value);
  
  // optional int32 resourcegather2 = 41;
  inline bool has_resourcegather2() const;
  inline void clear_resourcegather2();
  static const int kResourcegather2FieldNumber = 41;
  inline ::google::protobuf::int32 resourcegather2() const;
  inline void set_resourcegather2(::google::protobuf::int32 value);
  
  // optional int32 worder_count = 42;
  inline bool has_worder_count() const;
  inline void clear_worder_count();
  static const int kWorderCountFieldNumber = 42;
  inline ::google::protobuf::int32 worder_count() const;
  inline void set_worder_count(::google::protobuf::int32 value);
  
  // optional int32 invasion_repel = 43;
  inline bool has_invasion_repel() const;
  inline void clear_invasion_repel();
  static const int kInvasionRepelFieldNumber = 43;
  inline ::google::protobuf::int32 invasion_repel() const;
  inline void set_invasion_repel(::google::protobuf::int32 value);
  
  // optional int32 friendInstalls = 44;
  inline bool has_friendinstalls() const;
  inline void clear_friendinstalls();
  static const int kFriendInstallsFieldNumber = 44;
  inline ::google::protobuf::int32 friendinstalls() const;
  inline void set_friendinstalls(::google::protobuf::int32 value);
  
  // optional int32 built = 45;
  inline bool has_built() const;
  inline void clear_built();
  static const int kBuiltFieldNumber = 45;
  inline ::google::protobuf::int32 built() const;
  inline void set_built(::google::protobuf::int32 value);
  
  // optional int32 built3 = 46;
  inline bool has_built3() const;
  inline void clear_built3();
  static const int kBuilt3FieldNumber = 46;
  inline ::google::protobuf::int32 built3() const;
  inline void set_built3(::google::protobuf::int32 value);
  
  // optional int32 built10 = 47;
  inline bool has_built10() const;
  inline void clear_built10();
  static const int kBuilt10FieldNumber = 47;
  inline ::google::protobuf::int32 built10() const;
  inline void set_built10(::google::protobuf::int32 value);
  
  // optional int32 wallcount = 48;
  inline bool has_wallcount() const;
  inline void clear_wallcount();
  static const int kWallcountFieldNumber = 48;
  inline ::google::protobuf::int32 wallcount() const;
  inline void set_wallcount(::google::protobuf::int32 value);
  
  // optional int32 artifacts = 49;
  inline bool has_artifacts() const;
  inline void clear_artifacts();
  static const int kArtifactsFieldNumber = 49;
  inline ::google::protobuf::int32 artifacts() const;
  inline void set_artifacts(::google::protobuf::int32 value);
  
  // optional int32 doodad = 50;
  inline bool has_doodad() const;
  inline void clear_doodad();
  static const int kDoodadFieldNumber = 50;
  inline ::google::protobuf::int32 doodad() const;
  inline void set_doodad(::google::protobuf::int32 value);
  
  // optional int32 bonus_bookmark = 51;
  inline bool has_bonus_bookmark() const;
  inline void clear_bonus_bookmark();
  static const int kBonusBookmarkFieldNumber = 51;
  inline ::google::protobuf::int32 bonus_bookmark() const;
  inline void set_bonus_bookmark(::google::protobuf::int32 value);
  
  // optional int32 bonus_fan = 52;
  inline bool has_bonus_fan() const;
  inline void clear_bonus_fan();
  static const int kBonusFanFieldNumber = 52;
  inline ::google::protobuf::int32 bonus_fan() const;
  inline void set_bonus_fan(::google::protobuf::int32 value);
  
  // optional int32 bonus_invites = 53;
  inline bool has_bonus_invites() const;
  inline void clear_bonus_invites();
  static const int kBonusInvitesFieldNumber = 53;
  inline ::google::protobuf::int32 bonus_invites() const;
  inline void set_bonus_invites(::google::protobuf::int32 value);
  
  // optional int32 bonus_gifts = 54;
  inline bool has_bonus_gifts() const;
  inline void clear_bonus_gifts();
  static const int kBonusGiftsFieldNumber = 54;
  inline ::google::protobuf::int32 bonus_gifts() const;
  inline void set_bonus_gifts(::google::protobuf::int32 value);
  
  // optional int32 _kills = 56;
  inline bool has__kills() const;
  inline void clear__kills();
  static const int kKillsFieldNumber = 56;
  inline ::google::protobuf::int32 _kills() const;
  inline void set__kills(::google::protobuf::int32 value);
  
  // optional int32 _killsInAttack = 57;
  inline bool has__killsinattack() const;
  inline void clear__killsinattack();
  static const int kKillsInAttackFieldNumber = 57;
  inline ::google::protobuf::int32 _killsinattack() const;
  inline void set__killsinattack(::google::protobuf::int32 value);
  
  // optional int32 _maxKillsLRS = 58;
  inline bool has__maxkillslrs() const;
  inline void clear__maxkillslrs();
  static const int kMaxKillsLRSFieldNumber = 58;
  inline ::google::protobuf::int32 _maxkillslrs() const;
  inline void set__maxkillslrs(::google::protobuf::int32 value);
  
  // optional int32 _maxFlattenLRS = 59;
  inline bool has__maxflattenlrs() const;
  inline void clear__maxflattenlrs();
  static const int kMaxFlattenLRSFieldNumber = 59;
  inline ::google::protobuf::int32 _maxflattenlrs() const;
  inline void set__maxflattenlrs(::google::protobuf::int32 value);
  
  // optional int32 _lrs1 = 60;
  inline bool has__lrs1() const;
  inline void clear__lrs1();
  static const int kLrs1FieldNumber = 60;
  inline ::google::protobuf::int32 _lrs1() const;
  inline void set__lrs1(::google::protobuf::int32 value);
  
  // optional int32 _lrs2 = 61;
  inline bool has__lrs2() const;
  inline void clear__lrs2();
  static const int kLrs2FieldNumber = 61;
  inline ::google::protobuf::int32 _lrs2() const;
  inline void set__lrs2(::google::protobuf::int32 value);
  
  // optional int32 _lrs3 = 62;
  inline bool has__lrs3() const;
  inline void clear__lrs3();
  static const int kLrs3FieldNumber = 62;
  inline ::google::protobuf::int32 _lrs3() const;
  inline void set__lrs3(::google::protobuf::int32 value);
  
  // optional int32 _lrs4 = 63;
  inline bool has__lrs4() const;
  inline void clear__lrs4();
  static const int kLrs4FieldNumber = 63;
  inline ::google::protobuf::int32 _lrs4() const;
  inline void set__lrs4(::google::protobuf::int32 value);
  
  // optional int32 _lrs5 = 64;
  inline bool has__lrs5() const;
  inline void clear__lrs5();
  static const int kLrs5FieldNumber = 64;
  inline ::google::protobuf::int32 _lrs5() const;
  inline void set__lrs5(::google::protobuf::int32 value);
  
  // optional int32 _lrs6 = 65;
  inline bool has__lrs6() const;
  inline void clear__lrs6();
  static const int kLrs6FieldNumber = 65;
  inline ::google::protobuf::int32 _lrs6() const;
  inline void set__lrs6(::google::protobuf::int32 value);
  
  // optional int32 _lrs7 = 66;
  inline bool has__lrs7() const;
  inline void clear__lrs7();
  static const int kLrs7FieldNumber = 66;
  inline ::google::protobuf::int32 _lrs7() const;
  inline void set__lrs7(::google::protobuf::int32 value);
  
  // optional int32 _lrs8 = 67;
  inline bool has__lrs8() const;
  inline void clear__lrs8();
  static const int kLrs8FieldNumber = 67;
  inline ::google::protobuf::int32 _lrs8() const;
  inline void set__lrs8(::google::protobuf::int32 value);
  
  // optional int32 _lrs9 = 68;
  inline bool has__lrs9() const;
  inline void clear__lrs9();
  static const int kLrs9FieldNumber = 68;
  inline ::google::protobuf::int32 _lrs9() const;
  inline void set__lrs9(::google::protobuf::int32 value);
  
  // optional int32 _lrs10 = 69;
  inline bool has__lrs10() const;
  inline void clear__lrs10();
  static const int kLrs10FieldNumber = 69;
  inline ::google::protobuf::int32 _lrs10() const;
  inline void set__lrs10(::google::protobuf::int32 value);
  
  // optional int32 _resLoot = 70;
  inline bool has__resloot() const;
  inline void clear__resloot();
  static const int kResLootFieldNumber = 70;
  inline ::google::protobuf::int32 _resloot() const;
  inline void set__resloot(::google::protobuf::int32 value);
  
  // optional int32 _destroy_base = 71;
  inline bool has__destroy_base() const;
  inline void clear__destroy_base();
  static const int kDestroyBaseFieldNumber = 71;
  inline ::google::protobuf::int32 _destroy_base() const;
  inline void set__destroy_base(::google::protobuf::int32 value);
  
  // optional int32 _attack_enemy = 72;
  inline bool has__attack_enemy() const;
  inline void clear__attack_enemy();
  static const int kAttackEnemyFieldNumber = 72;
  inline ::google::protobuf::int32 _attack_enemy() const;
  inline void set__attack_enemy(::google::protobuf::int32 value);
  
  // optional int32 _qzoneActive = 73;
  inline bool has__qzoneactive() const;
  inline void clear__qzoneactive();
  static const int kQzoneActiveFieldNumber = 73;
  inline ::google::protobuf::int32 _qzoneactive() const;
  inline void set__qzoneactive(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 blvl_;
  ::google::protobuf::int32 brlvl_;
  ::google::protobuf::int32 b1lvl_;
  ::google::protobuf::int32 b1count_;
  ::google::protobuf::int32 b2lvl_;
  ::google::protobuf::int32 b2count_;
  ::google::protobuf::int32 b3lvl_;
  ::google::protobuf::int32 b4lvl_;
  ::google::protobuf::int32 b5lvl_;
  ::google::protobuf::int32 b6lvl_;
  ::google::protobuf::int32 b6count_;
  ::google::protobuf::int32 b7lvl_;
  ::google::protobuf::int32 b8lvl_;
  ::google::protobuf::int32 b9lvl_;
  ::google::protobuf::int32 b10lvl_;
  ::google::protobuf::int32 b11lvl_;
  ::google::protobuf::int32 b12lvl_;
  ::google::protobuf::int32 b13lvl_;
  ::google::protobuf::int32 b14lvl_;
  ::google::protobuf::int32 b15lvl_;
  ::google::protobuf::int32 b16lvl_;
  ::google::protobuf::int32 b17lvl_;
  ::google::protobuf::int32 b18lvl_;
  ::google::protobuf::int32 b19lvl_;
  ::google::protobuf::int32 b20lvl_;
  ::google::protobuf::int32 b21lvl_;
  ::google::protobuf::int32 b22lvl_;
  ::google::protobuf::int32 b23lvl_;
  ::google::protobuf::int32 b24lvl_;
  ::google::protobuf::int32 b25lvl_;
  ::google::protobuf::int32 b26lvl_;
  ::google::protobuf::int32 b28lvl_;
  ::google::protobuf::int32 b29lvl_;
  ::google::protobuf::int32 b30lvl_;
  ::google::protobuf::int32 b31lvl_;
  ::google::protobuf::int32 b33lvl_;
  ::google::protobuf::int32 lootpicked_;
  ::google::protobuf::int32 singleclickbank1_;
  ::google::protobuf::int32 singleclickbank2_;
  ::google::protobuf::int32 resourcegather1_;
  ::google::protobuf::int32 resourcegather2_;
  ::google::protobuf::int32 worder_count_;
  ::google::protobuf::int32 invasion_repel_;
  ::google::protobuf::int32 friendinstalls_;
  ::google::protobuf::int32 built_;
  ::google::protobuf::int32 built3_;
  ::google::protobuf::int32 built10_;
  ::google::protobuf::int32 wallcount_;
  ::google::protobuf::int32 artifacts_;
  ::google::protobuf::int32 doodad_;
  ::google::protobuf::int32 bonus_bookmark_;
  ::google::protobuf::int32 bonus_fan_;
  ::google::protobuf::int32 bonus_invites_;
  ::google::protobuf::int32 bonus_gifts_;
  ::google::protobuf::int32 _kills_;
  ::google::protobuf::int32 _killsinattack_;
  ::google::protobuf::int32 _maxkillslrs_;
  ::google::protobuf::int32 _maxflattenlrs_;
  ::google::protobuf::int32 _lrs1_;
  ::google::protobuf::int32 _lrs2_;
  ::google::protobuf::int32 _lrs3_;
  ::google::protobuf::int32 _lrs4_;
  ::google::protobuf::int32 _lrs5_;
  ::google::protobuf::int32 _lrs6_;
  ::google::protobuf::int32 _lrs7_;
  ::google::protobuf::int32 _lrs8_;
  ::google::protobuf::int32 _lrs9_;
  ::google::protobuf::int32 _lrs10_;
  ::google::protobuf::int32 _resloot_;
  ::google::protobuf::int32 _destroy_base_;
  ::google::protobuf::int32 _attack_enemy_;
  ::google::protobuf::int32 _qzoneactive_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(72 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_QuestRule* default_instance_;
};
// -------------------------------------------------------------------

class DB_Quest : public ::google::protobuf::Message {
 public:
  DB_Quest();
  virtual ~DB_Quest();
  
  DB_Quest(const DB_Quest& from);
  
  inline DB_Quest& operator=(const DB_Quest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Quest& default_instance();
  void Swap(DB_Quest* other);
  
  // implements Message ----------------------------------------------
  
  DB_Quest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Quest& from);
  void MergeFrom(const DB_Quest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .DB_QuestRule g = 1;
  inline bool has_g() const;
  inline void clear_g();
  static const int kGFieldNumber = 1;
  inline const ::DB_QuestRule& g() const;
  inline ::DB_QuestRule* mutable_g();
  
  // repeated string c = 2;
  inline int c_size() const;
  inline void clear_c();
  static const int kCFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& c() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_c();
  inline const ::std::string& c(int index) const;
  inline ::std::string* mutable_c(int index);
  inline void set_c(int index, const ::std::string& value);
  inline void set_c(int index, const char* value);
  inline void set_c(int index, const char* value, size_t size);
  inline ::std::string* add_c();
  inline void add_c(const ::std::string& value);
  inline void add_c(const char* value);
  inline void add_c(const char* value, size_t size);
  
  // repeated string finished_quest = 17;
  inline int finished_quest_size() const;
  inline void clear_finished_quest();
  static const int kFinishedQuestFieldNumber = 17;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& finished_quest() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_finished_quest();
  inline const ::std::string& finished_quest(int index) const;
  inline ::std::string* mutable_finished_quest(int index);
  inline void set_finished_quest(int index, const ::std::string& value);
  inline void set_finished_quest(int index, const char* value);
  inline void set_finished_quest(int index, const char* value, size_t size);
  inline ::std::string* add_finished_quest();
  inline void add_finished_quest(const ::std::string& value);
  inline void add_finished_quest(const char* value);
  inline void add_finished_quest(const char* value, size_t size);
  
  // repeated int32 finishQuest = 3;
  inline int finishquest_size() const;
  inline void clear_finishquest();
  static const int kFinishQuestFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& finishquest() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_finishquest();
  inline ::google::protobuf::int32 finishquest(int index) const;
  inline void set_finishquest(int index, ::google::protobuf::int32 value);
  inline void add_finishquest(::google::protobuf::int32 value);
  
  // repeated string t1 = 4;
  inline int t1_size() const;
  inline void clear_t1();
  static const int kT1FieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& t1() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_t1();
  inline const ::std::string& t1(int index) const;
  inline ::std::string* mutable_t1(int index);
  inline void set_t1(int index, const ::std::string& value);
  inline void set_t1(int index, const char* value);
  inline void set_t1(int index, const char* value, size_t size);
  inline ::std::string* add_t1();
  inline void add_t1(const ::std::string& value);
  inline void add_t1(const char* value);
  inline void add_t1(const char* value, size_t size);
  
  // repeated string t2 = 5;
  inline int t2_size() const;
  inline void clear_t2();
  static const int kT2FieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& t2() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_t2();
  inline const ::std::string& t2(int index) const;
  inline ::std::string* mutable_t2(int index);
  inline void set_t2(int index, const ::std::string& value);
  inline void set_t2(int index, const char* value);
  inline void set_t2(int index, const char* value, size_t size);
  inline ::std::string* add_t2();
  inline void add_t2(const ::std::string& value);
  inline void add_t2(const char* value);
  inline void add_t2(const char* value, size_t size);
  
  // repeated string t3 = 6;
  inline int t3_size() const;
  inline void clear_t3();
  static const int kT3FieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& t3() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_t3();
  inline const ::std::string& t3(int index) const;
  inline ::std::string* mutable_t3(int index);
  inline void set_t3(int index, const ::std::string& value);
  inline void set_t3(int index, const char* value);
  inline void set_t3(int index, const char* value, size_t size);
  inline ::std::string* add_t3();
  inline void add_t3(const ::std::string& value);
  inline void add_t3(const char* value);
  inline void add_t3(const char* value, size_t size);
  
  // repeated string t4 = 7;
  inline int t4_size() const;
  inline void clear_t4();
  static const int kT4FieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& t4() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_t4();
  inline const ::std::string& t4(int index) const;
  inline ::std::string* mutable_t4(int index);
  inline void set_t4(int index, const ::std::string& value);
  inline void set_t4(int index, const char* value);
  inline void set_t4(int index, const char* value, size_t size);
  inline ::std::string* add_t4();
  inline void add_t4(const ::std::string& value);
  inline void add_t4(const char* value);
  inline void add_t4(const char* value, size_t size);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::DB_QuestRule* g_;
  ::google::protobuf::RepeatedPtrField< ::std::string> c_;
  ::google::protobuf::RepeatedPtrField< ::std::string> finished_quest_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > finishquest_;
  ::google::protobuf::RepeatedPtrField< ::std::string> t1_;
  ::google::protobuf::RepeatedPtrField< ::std::string> t2_;
  ::google::protobuf::RepeatedPtrField< ::std::string> t3_;
  ::google::protobuf::RepeatedPtrField< ::std::string> t4_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Quest* default_instance_;
};
// -------------------------------------------------------------------

class DB_AiAttackQueuedArmyInfo : public ::google::protobuf::Message {
 public:
  DB_AiAttackQueuedArmyInfo();
  virtual ~DB_AiAttackQueuedArmyInfo();
  
  DB_AiAttackQueuedArmyInfo(const DB_AiAttackQueuedArmyInfo& from);
  
  inline DB_AiAttackQueuedArmyInfo& operator=(const DB_AiAttackQueuedArmyInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_AiAttackQueuedArmyInfo& default_instance();
  void Swap(DB_AiAttackQueuedArmyInfo* other);
  
  // implements Message ----------------------------------------------
  
  DB_AiAttackQueuedArmyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_AiAttackQueuedArmyInfo& from);
  void MergeFrom(const DB_AiAttackQueuedArmyInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
  // optional int32 area = 4;
  inline bool has_area() const;
  inline void clear_area();
  static const int kAreaFieldNumber = 4;
  inline ::google::protobuf::int32 area() const;
  inline void set_area(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 area_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_AiAttackQueuedArmyInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB_AiAttackQueued : public ::google::protobuf::Message {
 public:
  DB_AiAttackQueued();
  virtual ~DB_AiAttackQueued();
  
  DB_AiAttackQueued(const DB_AiAttackQueued& from);
  
  inline DB_AiAttackQueued& operator=(const DB_AiAttackQueued& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_AiAttackQueued& default_instance();
  void Swap(DB_AiAttackQueued* other);
  
  // implements Message ----------------------------------------------
  
  DB_AiAttackQueued* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_AiAttackQueued& from);
  void MergeFrom(const DB_AiAttackQueued& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DB_AiAttackQueuedArmyInfo attack = 1;
  inline int attack_size() const;
  inline void clear_attack();
  static const int kAttackFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_AiAttackQueuedArmyInfo >& attack() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_AiAttackQueuedArmyInfo >* mutable_attack();
  inline const ::DB_AiAttackQueuedArmyInfo& attack(int index) const;
  inline ::DB_AiAttackQueuedArmyInfo* mutable_attack(int index);
  inline ::DB_AiAttackQueuedArmyInfo* add_attack();
  
  // optional int32 warned = 2;
  inline bool has_warned() const;
  inline void clear_warned();
  static const int kWarnedFieldNumber = 2;
  inline ::google::protobuf::int32 warned() const;
  inline void set_warned(::google::protobuf::int32 value);
  
  // optional int32 startUnits = 3;
  inline bool has_startunits() const;
  inline void clear_startunits();
  static const int kStartUnitsFieldNumber = 3;
  inline ::google::protobuf::int32 startunits() const;
  inline void set_startunits(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::DB_AiAttackQueuedArmyInfo > attack_;
  ::google::protobuf::int32 warned_;
  ::google::protobuf::int32 startunits_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_AiAttackQueued* default_instance_;
};
// -------------------------------------------------------------------

class DB_AiAttack : public ::google::protobuf::Message {
 public:
  DB_AiAttack();
  virtual ~DB_AiAttack();
  
  DB_AiAttack(const DB_AiAttack& from);
  
  inline DB_AiAttack& operator=(const DB_AiAttack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_AiAttack& default_instance();
  void Swap(DB_AiAttack* other);
  
  // implements Message ----------------------------------------------
  
  DB_AiAttack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_AiAttack& from);
  void MergeFrom(const DB_AiAttack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 currentid = 1;
  inline bool has_currentid() const;
  inline void clear_currentid();
  static const int kCurrentidFieldNumber = 1;
  inline ::google::protobuf::int32 currentid() const;
  inline void set_currentid(::google::protobuf::int32 value);
  
  // optional int32 nextAttack = 2;
  inline bool has_nextattack() const;
  inline void clear_nextattack();
  static const int kNextAttackFieldNumber = 2;
  inline ::google::protobuf::int32 nextattack() const;
  inline void set_nextattack(::google::protobuf::int32 value);
  
  // optional int32 lastattack = 3;
  inline bool has_lastattack() const;
  inline void clear_lastattack();
  static const int kLastattackFieldNumber = 3;
  inline ::google::protobuf::int32 lastattack() const;
  inline void set_lastattack(::google::protobuf::int32 value);
  
  // optional .DB_AiAttackQueued queued = 4;
  inline bool has_queued() const;
  inline void clear_queued();
  static const int kQueuedFieldNumber = 4;
  inline const ::DB_AiAttackQueued& queued() const;
  inline ::DB_AiAttackQueued* mutable_queued();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 currentid_;
  ::google::protobuf::int32 nextattack_;
  ::google::protobuf::int32 lastattack_;
  ::DB_AiAttackQueued* queued_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_AiAttack* default_instance_;
};
// -------------------------------------------------------------------

class DB_Troop : public ::google::protobuf::Message {
 public:
  DB_Troop();
  virtual ~DB_Troop();
  
  DB_Troop(const DB_Troop& from);
  
  inline DB_Troop& operator=(const DB_Troop& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Troop& default_instance();
  void Swap(DB_Troop* other);
  
  // implements Message ----------------------------------------------
  
  DB_Troop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Troop& from);
  void MergeFrom(const DB_Troop& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 health = 2;
  inline bool has_health() const;
  inline void clear_health();
  static const int kHealthFieldNumber = 2;
  inline ::google::protobuf::int32 health() const;
  inline void set_health(::google::protobuf::int32 value);
  
  // optional int32 stance = 3;
  inline bool has_stance() const;
  inline void clear_stance();
  static const int kStanceFieldNumber = 3;
  inline ::google::protobuf::int32 stance() const;
  inline void set_stance(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 health_;
  ::google::protobuf::int32 stance_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Troop* default_instance_;
};
// -------------------------------------------------------------------

class DB_TrapArmy : public ::google::protobuf::Message {
 public:
  DB_TrapArmy();
  virtual ~DB_TrapArmy();
  
  DB_TrapArmy(const DB_TrapArmy& from);
  
  inline DB_TrapArmy& operator=(const DB_TrapArmy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_TrapArmy& default_instance();
  void Swap(DB_TrapArmy* other);
  
  // implements Message ----------------------------------------------
  
  DB_TrapArmy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_TrapArmy& from);
  void MergeFrom(const DB_TrapArmy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 armytype = 1 [default = 0];
  inline bool has_armytype() const;
  inline void clear_armytype();
  static const int kArmytypeFieldNumber = 1;
  inline ::google::protobuf::int32 armytype() const;
  inline void set_armytype(::google::protobuf::int32 value);
  
  // optional int32 armynum = 2 [default = 0];
  inline bool has_armynum() const;
  inline void clear_armynum();
  static const int kArmynumFieldNumber = 2;
  inline ::google::protobuf::int32 armynum() const;
  inline void set_armynum(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 armytype_;
  ::google::protobuf::int32 armynum_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_TrapArmy* default_instance_;
};
// -------------------------------------------------------------------

class DB_Trap : public ::google::protobuf::Message {
 public:
  DB_Trap();
  virtual ~DB_Trap();
  
  DB_Trap(const DB_Trap& from);
  
  inline DB_Trap& operator=(const DB_Trap& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Trap& default_instance();
  void Swap(DB_Trap* other);
  
  // implements Message ----------------------------------------------
  
  DB_Trap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Trap& from);
  void MergeFrom(const DB_Trap& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DB_TrapArmy trapArmy = 1;
  inline int traparmy_size() const;
  inline void clear_traparmy();
  static const int kTrapArmyFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_TrapArmy >& traparmy() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_TrapArmy >* mutable_traparmy();
  inline const ::DB_TrapArmy& traparmy(int index) const;
  inline ::DB_TrapArmy* mutable_traparmy(int index);
  inline ::DB_TrapArmy* add_traparmy();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::DB_TrapArmy > traparmy_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Trap* default_instance_;
};
// -------------------------------------------------------------------

class DB_Loot : public ::google::protobuf::Message {
 public:
  DB_Loot();
  virtual ~DB_Loot();
  
  DB_Loot(const DB_Loot& from);
  
  inline DB_Loot& operator=(const DB_Loot& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Loot& default_instance();
  void Swap(DB_Loot* other);
  
  // implements Message ----------------------------------------------
  
  DB_Loot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Loot& from);
  void MergeFrom(const DB_Loot& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 X = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);
  
  // optional int32 Y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);
  
  // optional int32 f = 3;
  inline bool has_f() const;
  inline void clear_f();
  static const int kFFieldNumber = 3;
  inline ::google::protobuf::int32 f() const;
  inline void set_f(::google::protobuf::int32 value);
  
  // optional int32 st = 4;
  inline bool has_st() const;
  inline void clear_st();
  static const int kStFieldNumber = 4;
  inline ::google::protobuf::int32 st() const;
  inline void set_st(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 f_;
  ::google::protobuf::int32 st_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Loot* default_instance_;
};
// -------------------------------------------------------------------

class DB_LootEquip : public ::google::protobuf::Message {
 public:
  DB_LootEquip();
  virtual ~DB_LootEquip();
  
  DB_LootEquip(const DB_LootEquip& from);
  
  inline DB_LootEquip& operator=(const DB_LootEquip& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_LootEquip& default_instance();
  void Swap(DB_LootEquip* other);
  
  // implements Message ----------------------------------------------
  
  DB_LootEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_LootEquip& from);
  void MergeFrom(const DB_LootEquip& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 showtype = 2;
  inline bool has_showtype() const;
  inline void clear_showtype();
  static const int kShowtypeFieldNumber = 2;
  inline ::google::protobuf::int32 showtype() const;
  inline void set_showtype(::google::protobuf::int32 value);
  
  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);
  
  // optional int32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);
  
  // optional int32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 herograde = 6;
  inline bool has_herograde() const;
  inline void clear_herograde();
  static const int kHerogradeFieldNumber = 6;
  inline ::google::protobuf::int32 herograde() const;
  inline void set_herograde(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 showtype_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 herograde_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_LootEquip* default_instance_;
};
// -------------------------------------------------------------------

class DB_LootSuperWeapon : public ::google::protobuf::Message {
 public:
  DB_LootSuperWeapon();
  virtual ~DB_LootSuperWeapon();
  
  DB_LootSuperWeapon(const DB_LootSuperWeapon& from);
  
  inline DB_LootSuperWeapon& operator=(const DB_LootSuperWeapon& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_LootSuperWeapon& default_instance();
  void Swap(DB_LootSuperWeapon* other);
  
  // implements Message ----------------------------------------------
  
  DB_LootSuperWeapon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_LootSuperWeapon& from);
  void MergeFrom(const DB_LootSuperWeapon& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 useSuperWeaponNum = 1 [default = 0];
  inline bool has_usesuperweaponnum() const;
  inline void clear_usesuperweaponnum();
  static const int kUseSuperWeaponNumFieldNumber = 1;
  inline ::google::protobuf::int32 usesuperweaponnum() const;
  inline void set_usesuperweaponnum(::google::protobuf::int32 value);
  
  // optional int32 useSuperWeaponID = 2 [default = 0];
  inline bool has_usesuperweaponid() const;
  inline void clear_usesuperweaponid();
  static const int kUseSuperWeaponIDFieldNumber = 2;
  inline ::google::protobuf::int32 usesuperweaponid() const;
  inline void set_usesuperweaponid(::google::protobuf::int32 value);
  
  // optional int32 useTime = 3 [default = 0];
  inline bool has_usetime() const;
  inline void clear_usetime();
  static const int kUseTimeFieldNumber = 3;
  inline ::google::protobuf::int32 usetime() const;
  inline void set_usetime(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 usesuperweaponnum_;
  ::google::protobuf::int32 usesuperweaponid_;
  ::google::protobuf::int32 usetime_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_LootSuperWeapon* default_instance_;
};
// -------------------------------------------------------------------

class DB_LootReport : public ::google::protobuf::Message {
 public:
  DB_LootReport();
  virtual ~DB_LootReport();
  
  DB_LootReport(const DB_LootReport& from);
  
  inline DB_LootReport& operator=(const DB_LootReport& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_LootReport& default_instance();
  void Swap(DB_LootReport* other);
  
  // implements Message ----------------------------------------------
  
  DB_LootReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_LootReport& from);
  void MergeFrom(const DB_LootReport& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 attackID = 1;
  inline bool has_attackid() const;
  inline void clear_attackid();
  static const int kAttackIDFieldNumber = 1;
  inline ::google::protobuf::int64 attackid() const;
  inline void set_attackid(::google::protobuf::int64 value);
  
  // optional int64 recoveryID = 2;
  inline bool has_recoveryid() const;
  inline void clear_recoveryid();
  static const int kRecoveryIDFieldNumber = 2;
  inline ::google::protobuf::int64 recoveryid() const;
  inline void set_recoveryid(::google::protobuf::int64 value);
  
  // optional string r1 = 3;
  inline bool has_r1() const;
  inline void clear_r1();
  static const int kR1FieldNumber = 3;
  inline const ::std::string& r1() const;
  inline void set_r1(const ::std::string& value);
  inline void set_r1(const char* value);
  inline void set_r1(const char* value, size_t size);
  inline ::std::string* mutable_r1();
  
  // optional string r2 = 4;
  inline bool has_r2() const;
  inline void clear_r2();
  static const int kR2FieldNumber = 4;
  inline const ::std::string& r2() const;
  inline void set_r2(const ::std::string& value);
  inline void set_r2(const char* value);
  inline void set_r2(const char* value, size_t size);
  inline ::std::string* mutable_r2();
  
  // optional string attackName = 5;
  inline bool has_attackname() const;
  inline void clear_attackname();
  static const int kAttackNameFieldNumber = 5;
  inline const ::std::string& attackname() const;
  inline void set_attackname(const ::std::string& value);
  inline void set_attackname(const char* value);
  inline void set_attackname(const char* value, size_t size);
  inline ::std::string* mutable_attackname();
  
  // optional string log = 6;
  inline bool has_log() const;
  inline void clear_log();
  static const int kLogFieldNumber = 6;
  inline const ::std::string& log() const;
  inline void set_log(const ::std::string& value);
  inline void set_log(const char* value);
  inline void set_log(const char* value, size_t size);
  inline ::std::string* mutable_log();
  
  // optional string attacPic = 7;
  inline bool has_attacpic() const;
  inline void clear_attacpic();
  static const int kAttacPicFieldNumber = 7;
  inline const ::std::string& attacpic() const;
  inline void set_attacpic(const ::std::string& value);
  inline void set_attacpic(const char* value);
  inline void set_attacpic(const char* value, size_t size);
  inline ::std::string* mutable_attacpic();
  
  // optional int32 attacktime = 8;
  inline bool has_attacktime() const;
  inline void clear_attacktime();
  static const int kAttacktimeFieldNumber = 8;
  inline ::google::protobuf::int32 attacktime() const;
  inline void set_attacktime(::google::protobuf::int32 value);
  
  // optional bool hasbalance = 15 [default = false];
  inline bool has_hasbalance() const;
  inline void clear_hasbalance();
  static const int kHasbalanceFieldNumber = 15;
  inline bool hasbalance() const;
  inline void set_hasbalance(bool value);
  
  // optional int32 damage = 16;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 16;
  inline ::google::protobuf::int32 damage() const;
  inline void set_damage(::google::protobuf::int32 value);
  
  // optional int32 type = 17;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 17;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional string defenceName = 18;
  inline bool has_defencename() const;
  inline void clear_defencename();
  static const int kDefenceNameFieldNumber = 18;
  inline const ::std::string& defencename() const;
  inline void set_defencename(const ::std::string& value);
  inline void set_defencename(const char* value);
  inline void set_defencename(const char* value, size_t size);
  inline ::std::string* mutable_defencename();
  
  // optional int32 Attacklevel = 19;
  inline bool has_attacklevel() const;
  inline void clear_attacklevel();
  static const int kAttacklevelFieldNumber = 19;
  inline ::google::protobuf::int32 attacklevel() const;
  inline void set_attacklevel(::google::protobuf::int32 value);
  
  // optional int32 defencelevel = 20;
  inline bool has_defencelevel() const;
  inline void clear_defencelevel();
  static const int kDefencelevelFieldNumber = 20;
  inline ::google::protobuf::int32 defencelevel() const;
  inline void set_defencelevel(::google::protobuf::int32 value);
  
  // optional string attackpic_square = 21;
  inline bool has_attackpic_square() const;
  inline void clear_attackpic_square();
  static const int kAttackpicSquareFieldNumber = 21;
  inline const ::std::string& attackpic_square() const;
  inline void set_attackpic_square(const ::std::string& value);
  inline void set_attackpic_square(const char* value);
  inline void set_attackpic_square(const char* value, size_t size);
  inline ::std::string* mutable_attackpic_square();
  
  // optional string defencepic_square = 22;
  inline bool has_defencepic_square() const;
  inline void clear_defencepic_square();
  static const int kDefencepicSquareFieldNumber = 22;
  inline const ::std::string& defencepic_square() const;
  inline void set_defencepic_square(const ::std::string& value);
  inline void set_defencepic_square(const char* value);
  inline void set_defencepic_square(const char* value, size_t size);
  inline ::std::string* mutable_defencepic_square();
  
  // optional int32 initdamage = 23;
  inline bool has_initdamage() const;
  inline void clear_initdamage();
  static const int kInitdamageFieldNumber = 23;
  inline ::google::protobuf::int32 initdamage() const;
  inline void set_initdamage(::google::protobuf::int32 value);
  
  // repeated .DB_LootEquip attackequiploot = 24;
  inline int attackequiploot_size() const;
  inline void clear_attackequiploot();
  static const int kAttackequiplootFieldNumber = 24;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_LootEquip >& attackequiploot() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_LootEquip >* mutable_attackequiploot();
  inline const ::DB_LootEquip& attackequiploot(int index) const;
  inline ::DB_LootEquip* mutable_attackequiploot(int index);
  inline ::DB_LootEquip* add_attackequiploot();
  
  // repeated .DB_LootEquip defenceequiploot = 25;
  inline int defenceequiploot_size() const;
  inline void clear_defenceequiploot();
  static const int kDefenceequiplootFieldNumber = 25;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_LootEquip >& defenceequiploot() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_LootEquip >* mutable_defenceequiploot();
  inline const ::DB_LootEquip& defenceequiploot(int index) const;
  inline ::DB_LootEquip* mutable_defenceequiploot(int index);
  inline ::DB_LootEquip* add_defenceequiploot();
  
  // optional int32 honor = 26 [default = 0];
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 26;
  inline ::google::protobuf::int32 honor() const;
  inline void set_honor(::google::protobuf::int32 value);
  
  // optional bool isStrike = 27 [default = false];
  inline bool has_isstrike() const;
  inline void clear_isstrike();
  static const int kIsStrikeFieldNumber = 27;
  inline bool isstrike() const;
  inline void set_isstrike(bool value);
  
  // optional int32 feats = 28 [default = 0];
  inline bool has_feats() const;
  inline void clear_feats();
  static const int kFeatsFieldNumber = 28;
  inline ::google::protobuf::int32 feats() const;
  inline void set_feats(::google::protobuf::int32 value);
  
  // optional bool destroySlaveRoom = 29 [default = false];
  inline bool has_destroyslaveroom() const;
  inline void clear_destroyslaveroom();
  static const int kDestroySlaveRoomFieldNumber = 29;
  inline bool destroyslaveroom() const;
  inline void set_destroyslaveroom(bool value);
  
  // optional int32 adimralExp = 30 [default = 0];
  inline bool has_adimralexp() const;
  inline void clear_adimralexp();
  static const int kAdimralExpFieldNumber = 30;
  inline ::google::protobuf::int32 adimralexp() const;
  inline void set_adimralexp(::google::protobuf::int32 value);
  
  // optional int32 defAdimralExp = 31 [default = 0];
  inline bool has_defadimralexp() const;
  inline void clear_defadimralexp();
  static const int kDefAdimralExpFieldNumber = 31;
  inline ::google::protobuf::int32 defadimralexp() const;
  inline void set_defadimralexp(::google::protobuf::int32 value);
  
  // optional int32 warstage = 32 [default = 0];
  inline bool has_warstage() const;
  inline void clear_warstage();
  static const int kWarstageFieldNumber = 32;
  inline ::google::protobuf::int32 warstage() const;
  inline void set_warstage(::google::protobuf::int32 value);
  
  // optional .DB_LootSuperWeapon superweapon = 33;
  inline bool has_superweapon() const;
  inline void clear_superweapon();
  static const int kSuperweaponFieldNumber = 33;
  inline const ::DB_LootSuperWeapon& superweapon() const;
  inline ::DB_LootSuperWeapon* mutable_superweapon();
  
  // optional bool isSuperStorm = 34 [default = false];
  inline bool has_issuperstorm() const;
  inline void clear_issuperstorm();
  static const int kIsSuperStormFieldNumber = 34;
  inline bool issuperstorm() const;
  inline void set_issuperstorm(bool value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 attackid_;
  ::google::protobuf::int64 recoveryid_;
  ::std::string* r1_;
  static const ::std::string _default_r1_;
  ::std::string* r2_;
  static const ::std::string _default_r2_;
  ::std::string* attackname_;
  static const ::std::string _default_attackname_;
  ::std::string* log_;
  static const ::std::string _default_log_;
  ::std::string* attacpic_;
  static const ::std::string _default_attacpic_;
  ::google::protobuf::int32 attacktime_;
  bool hasbalance_;
  ::google::protobuf::int32 damage_;
  ::google::protobuf::int32 type_;
  ::std::string* defencename_;
  static const ::std::string _default_defencename_;
  ::google::protobuf::int32 attacklevel_;
  ::google::protobuf::int32 defencelevel_;
  ::std::string* attackpic_square_;
  static const ::std::string _default_attackpic_square_;
  ::std::string* defencepic_square_;
  static const ::std::string _default_defencepic_square_;
  ::google::protobuf::int32 initdamage_;
  ::google::protobuf::RepeatedPtrField< ::DB_LootEquip > attackequiploot_;
  ::google::protobuf::RepeatedPtrField< ::DB_LootEquip > defenceequiploot_;
  ::google::protobuf::int32 honor_;
  bool isstrike_;
  ::google::protobuf::int32 feats_;
  bool destroyslaveroom_;
  ::google::protobuf::int32 adimralexp_;
  ::google::protobuf::int32 defadimralexp_;
  ::google::protobuf::int32 warstage_;
  ::DB_LootSuperWeapon* superweapon_;
  bool issuperstorm_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(28 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_LootReport* default_instance_;
};
// -------------------------------------------------------------------

class DB_Mushroom : public ::google::protobuf::Message {
 public:
  DB_Mushroom();
  virtual ~DB_Mushroom();
  
  DB_Mushroom(const DB_Mushroom& from);
  
  inline DB_Mushroom& operator=(const DB_Mushroom& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Mushroom& default_instance();
  void Swap(DB_Mushroom* other);
  
  // implements Message ----------------------------------------------
  
  DB_Mushroom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Mushroom& from);
  void MergeFrom(const DB_Mushroom& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 s = 1;
  inline bool has_s() const;
  inline void clear_s();
  static const int kSFieldNumber = 1;
  inline ::google::protobuf::int32 s() const;
  inline void set_s(::google::protobuf::int32 value);
  
  // repeated .DB_Loot l = 2;
  inline int l_size() const;
  inline void clear_l();
  static const int kLFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_Loot >& l() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_Loot >* mutable_l();
  inline const ::DB_Loot& l(int index) const;
  inline ::DB_Loot* mutable_l(int index);
  inline ::DB_Loot* add_l();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 s_;
  ::google::protobuf::RepeatedPtrField< ::DB_Loot > l_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Mushroom* default_instance_;
};
// -------------------------------------------------------------------

class DB_Stats : public ::google::protobuf::Message {
 public:
  DB_Stats();
  virtual ~DB_Stats();
  
  DB_Stats(const DB_Stats& from);
  
  inline DB_Stats& operator=(const DB_Stats& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Stats& default_instance();
  void Swap(DB_Stats* other);
  
  // implements Message ----------------------------------------------
  
  DB_Stats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Stats& from);
  void MergeFrom(const DB_Stats& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 mrlsr = 1;
  inline bool has_mrlsr() const;
  inline void clear_mrlsr();
  static const int kMrlsrFieldNumber = 1;
  inline ::google::protobuf::int32 mrlsr() const;
  inline void set_mrlsr(::google::protobuf::int32 value);
  
  // optional int32 mrls = 2;
  inline bool has_mrls() const;
  inline void clear_mrls();
  static const int kMrlsFieldNumber = 2;
  inline ::google::protobuf::int32 mrls() const;
  inline void set_mrls(::google::protobuf::int32 value);
  
  // optional int32 mrlv = 3;
  inline bool has_mrlv() const;
  inline void clear_mrlv();
  static const int kMrlvFieldNumber = 3;
  inline ::google::protobuf::int32 mrlv() const;
  inline void set_mrlv(::google::protobuf::int32 value);
  
  // optional int32 mutesfx = 4;
  inline bool has_mutesfx() const;
  inline void clear_mutesfx();
  static const int kMutesfxFieldNumber = 4;
  inline ::google::protobuf::int32 mutesfx() const;
  inline void set_mutesfx(::google::protobuf::int32 value);
  
  // optional int32 mutemusic = 5;
  inline bool has_mutemusic() const;
  inline void clear_mutemusic();
  static const int kMutemusicFieldNumber = 5;
  inline ::google::protobuf::int32 mutemusic() const;
  inline void set_mutemusic(::google::protobuf::int32 value);
  
  // optional int32 log = 6;
  inline bool has_log() const;
  inline void clear_log();
  static const int kLogFieldNumber = 6;
  inline ::google::protobuf::int32 log() const;
  inline void set_log(::google::protobuf::int32 value);
  
  // optional int32 s = 7;
  inline bool has_s() const;
  inline void clear_s();
  static const int kSFieldNumber = 7;
  inline ::google::protobuf::int32 s() const;
  inline void set_s(::google::protobuf::int32 value);
  
  // optional int32 e_lp = 8;
  inline bool has_e_lp() const;
  inline void clear_e_lp();
  static const int kELpFieldNumber = 8;
  inline ::google::protobuf::int32 e_lp() const;
  inline void set_e_lp(::google::protobuf::int32 value);
  
  // optional int32 popuprate = 9;
  inline bool has_popuprate() const;
  inline void clear_popuprate();
  static const int kPopuprateFieldNumber = 9;
  inline ::google::protobuf::int32 popuprate() const;
  inline void set_popuprate(::google::protobuf::int32 value);
  
  // optional int32 CM = 10;
  inline bool has_cm() const;
  inline void clear_cm();
  static const int kCMFieldNumber = 10;
  inline ::google::protobuf::int32 cm() const;
  inline void set_cm(::google::protobuf::int32 value);
  
  // optional int32 tip = 11;
  inline bool has_tip() const;
  inline void clear_tip();
  static const int kTipFieldNumber = 11;
  inline ::google::protobuf::int32 tip() const;
  inline void set_tip(::google::protobuf::int32 value);
  
  // optional int32 updateid = 12;
  inline bool has_updateid() const;
  inline void clear_updateid();
  static const int kUpdateidFieldNumber = 12;
  inline ::google::protobuf::int32 updateid() const;
  inline void set_updateid(::google::protobuf::int32 value);
  
  // optional int32 reinforcements = 13;
  inline bool has_reinforcements() const;
  inline void clear_reinforcements();
  static const int kReinforcementsFieldNumber = 13;
  inline ::google::protobuf::int32 reinforcements() const;
  inline void set_reinforcements(::google::protobuf::int32 value);
  
  // optional int32 reinforcements_state = 14;
  inline bool has_reinforcements_state() const;
  inline void clear_reinforcements_state();
  static const int kReinforcementsStateFieldNumber = 14;
  inline ::google::protobuf::int32 reinforcements_state() const;
  inline void set_reinforcements_state(::google::protobuf::int32 value);
  
  // optional int32 savetime = 15;
  inline bool has_savetime() const;
  inline void clear_savetime();
  static const int kSavetimeFieldNumber = 15;
  inline ::google::protobuf::int32 savetime() const;
  inline void set_savetime(::google::protobuf::int32 value);
  
  // optional int32 reinforcementsTime = 16;
  inline bool has_reinforcementstime() const;
  inline void clear_reinforcementstime();
  static const int kReinforcementsTimeFieldNumber = 16;
  inline ::google::protobuf::int32 reinforcementstime() const;
  inline void set_reinforcementstime(::google::protobuf::int32 value);
  
  // optional int32 settings_vo = 17 [default = 1];
  inline bool has_settings_vo() const;
  inline void clear_settings_vo();
  static const int kSettingsVoFieldNumber = 17;
  inline ::google::protobuf::int32 settings_vo() const;
  inline void set_settings_vo(::google::protobuf::int32 value);
  
  // optional int32 settings_bodies = 18 [default = 1];
  inline bool has_settings_bodies() const;
  inline void clear_settings_bodies();
  static const int kSettingsBodiesFieldNumber = 18;
  inline ::google::protobuf::int32 settings_bodies() const;
  inline void set_settings_bodies(::google::protobuf::int32 value);
  
  // optional int32 settings_vehicles = 19 [default = 1];
  inline bool has_settings_vehicles() const;
  inline void clear_settings_vehicles();
  static const int kSettingsVehiclesFieldNumber = 19;
  inline ::google::protobuf::int32 settings_vehicles() const;
  inline void set_settings_vehicles(::google::protobuf::int32 value);
  
  // optional int32 settings_admiral = 20 [default = 1];
  inline bool has_settings_admiral() const;
  inline void clear_settings_admiral();
  static const int kSettingsAdmiralFieldNumber = 20;
  inline ::google::protobuf::int32 settings_admiral() const;
  inline void set_settings_admiral(::google::protobuf::int32 value);
  
  // optional bool settings_lowfps = 21 [default = false];
  inline bool has_settings_lowfps() const;
  inline void clear_settings_lowfps();
  static const int kSettingsLowfpsFieldNumber = 21;
  inline bool settings_lowfps() const;
  inline void set_settings_lowfps(bool value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 mrlsr_;
  ::google::protobuf::int32 mrls_;
  ::google::protobuf::int32 mrlv_;
  ::google::protobuf::int32 mutesfx_;
  ::google::protobuf::int32 mutemusic_;
  ::google::protobuf::int32 log_;
  ::google::protobuf::int32 s_;
  ::google::protobuf::int32 e_lp_;
  ::google::protobuf::int32 popuprate_;
  ::google::protobuf::int32 cm_;
  ::google::protobuf::int32 tip_;
  ::google::protobuf::int32 updateid_;
  ::google::protobuf::int32 reinforcements_;
  ::google::protobuf::int32 reinforcements_state_;
  ::google::protobuf::int32 savetime_;
  ::google::protobuf::int32 reinforcementstime_;
  ::google::protobuf::int32 settings_vo_;
  ::google::protobuf::int32 settings_bodies_;
  ::google::protobuf::int32 settings_vehicles_;
  ::google::protobuf::int32 settings_admiral_;
  bool settings_lowfps_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(21 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Stats* default_instance_;
};
// -------------------------------------------------------------------

class DB_UpgradeArmy : public ::google::protobuf::Message {
 public:
  DB_UpgradeArmy();
  virtual ~DB_UpgradeArmy();
  
  DB_UpgradeArmy(const DB_UpgradeArmy& from);
  
  inline DB_UpgradeArmy& operator=(const DB_UpgradeArmy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_UpgradeArmy& default_instance();
  void Swap(DB_UpgradeArmy* other);
  
  // implements Message ----------------------------------------------
  
  DB_UpgradeArmy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_UpgradeArmy& from);
  void MergeFrom(const DB_UpgradeArmy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 armyType = 1;
  inline bool has_armytype() const;
  inline void clear_armytype();
  static const int kArmyTypeFieldNumber = 1;
  inline ::google::protobuf::int32 armytype() const;
  inline void set_armytype(::google::protobuf::int32 value);
  
  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 finishTime = 3 [default = 0];
  inline bool has_finishtime() const;
  inline void clear_finishtime();
  static const int kFinishTimeFieldNumber = 3;
  inline ::google::protobuf::int32 finishtime() const;
  inline void set_finishtime(::google::protobuf::int32 value);
  
  // optional int32 ExtraBldTime = 4 [default = 0];
  inline bool has_extrabldtime() const;
  inline void clear_extrabldtime();
  static const int kExtraBldTimeFieldNumber = 4;
  inline ::google::protobuf::int32 extrabldtime() const;
  inline void set_extrabldtime(::google::protobuf::int32 value);
  
  // optional int32 ExtraUpTime = 5 [default = 0];
  inline bool has_extrauptime() const;
  inline void clear_extrauptime();
  static const int kExtraUpTimeFieldNumber = 5;
  inline ::google::protobuf::int32 extrauptime() const;
  inline void set_extrauptime(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 armytype_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 finishtime_;
  ::google::protobuf::int32 extrabldtime_;
  ::google::protobuf::int32 extrauptime_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_UpgradeArmy* default_instance_;
};
// -------------------------------------------------------------------

class DB_UnlockArmy : public ::google::protobuf::Message {
 public:
  DB_UnlockArmy();
  virtual ~DB_UnlockArmy();
  
  DB_UnlockArmy(const DB_UnlockArmy& from);
  
  inline DB_UnlockArmy& operator=(const DB_UnlockArmy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_UnlockArmy& default_instance();
  void Swap(DB_UnlockArmy* other);
  
  // implements Message ----------------------------------------------
  
  DB_UnlockArmy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_UnlockArmy& from);
  void MergeFrom(const DB_UnlockArmy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 armyType = 1;
  inline bool has_armytype() const;
  inline void clear_armytype();
  static const int kArmyTypeFieldNumber = 1;
  inline ::google::protobuf::int32 armytype() const;
  inline void set_armytype(::google::protobuf::int32 value);
  
  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 armytype_;
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_UnlockArmy* default_instance_;
};
// -------------------------------------------------------------------

class DB_Academy : public ::google::protobuf::Message {
 public:
  DB_Academy();
  virtual ~DB_Academy();
  
  DB_Academy(const DB_Academy& from);
  
  inline DB_Academy& operator=(const DB_Academy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Academy& default_instance();
  void Swap(DB_Academy* other);
  
  // implements Message ----------------------------------------------
  
  DB_Academy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Academy& from);
  void MergeFrom(const DB_Academy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  
  // optional int32 l = 2;
  inline bool has_l() const;
  inline void clear_l();
  static const int kLFieldNumber = 2;
  inline ::google::protobuf::int32 l() const;
  inline void set_l(::google::protobuf::int32 value);
  
  // optional int32 t = 3;
  inline bool has_t() const;
  inline void clear_t();
  static const int kTFieldNumber = 3;
  inline ::google::protobuf::int32 t() const;
  inline void set_t(::google::protobuf::int32 value);
  
  // optional int32 savetime = 4;
  inline bool has_savetime() const;
  inline void clear_savetime();
  static const int kSavetimeFieldNumber = 4;
  inline ::google::protobuf::int32 savetime() const;
  inline void set_savetime(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* type_;
  static const ::std::string _default_type_;
  ::google::protobuf::int32 l_;
  ::google::protobuf::int32 t_;
  ::google::protobuf::int32 savetime_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Academy* default_instance_;
};
// -------------------------------------------------------------------

class DB_Monsterbaiter : public ::google::protobuf::Message {
 public:
  DB_Monsterbaiter();
  virtual ~DB_Monsterbaiter();
  
  DB_Monsterbaiter(const DB_Monsterbaiter& from);
  
  inline DB_Monsterbaiter& operator=(const DB_Monsterbaiter& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Monsterbaiter& default_instance();
  void Swap(DB_Monsterbaiter* other);
  
  // implements Message ----------------------------------------------
  
  DB_Monsterbaiter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Monsterbaiter& from);
  void MergeFrom(const DB_Monsterbaiter& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 queue = 1;
  inline int queue_size() const;
  inline void clear_queue();
  static const int kQueueFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& queue() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_queue();
  inline ::google::protobuf::int32 queue(int index) const;
  inline void set_queue(int index, ::google::protobuf::int32 value);
  inline void add_queue(::google::protobuf::int32 value);
  
  // optional int32 musk = 2;
  inline bool has_musk() const;
  inline void clear_musk();
  static const int kMuskFieldNumber = 2;
  inline ::google::protobuf::int32 musk() const;
  inline void set_musk(::google::protobuf::int32 value);
  
  // optional int32 angle = 3;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 3;
  inline ::google::protobuf::int32 angle() const;
  inline void set_angle(::google::protobuf::int32 value);
  
  // optional int32 startTime = 4 [default = 0];
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 4;
  inline ::google::protobuf::int32 starttime() const;
  inline void set_starttime(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > queue_;
  ::google::protobuf::int32 musk_;
  ::google::protobuf::int32 angle_;
  ::google::protobuf::int32 starttime_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Monsterbaiter* default_instance_;
};
// -------------------------------------------------------------------

class DB_Locker : public ::google::protobuf::Message {
 public:
  DB_Locker();
  virtual ~DB_Locker();
  
  DB_Locker(const DB_Locker& from);
  
  inline DB_Locker& operator=(const DB_Locker& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Locker& default_instance();
  void Swap(DB_Locker* other);
  
  // implements Message ----------------------------------------------
  
  DB_Locker* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Locker& from);
  void MergeFrom(const DB_Locker& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional int32 t = 2;
  inline bool has_t() const;
  inline void clear_t();
  static const int kTFieldNumber = 2;
  inline ::google::protobuf::int32 t() const;
  inline void set_t(::google::protobuf::int32 value);
  
  // optional string s = 3;
  inline bool has_s() const;
  inline void clear_s();
  static const int kSFieldNumber = 3;
  inline const ::std::string& s() const;
  inline void set_s(const ::std::string& value);
  inline void set_s(const char* value);
  inline void set_s(const char* value, size_t size);
  inline ::std::string* mutable_s();
  
  // optional string e = 4;
  inline bool has_e() const;
  inline void clear_e();
  static const int kEFieldNumber = 4;
  inline const ::std::string& e() const;
  inline void set_e(const ::std::string& value);
  inline void set_e(const char* value);
  inline void set_e(const char* value, size_t size);
  inline ::std::string* mutable_e();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::int32 t_;
  ::std::string* s_;
  static const ::std::string _default_s_;
  ::std::string* e_;
  static const ::std::string _default_e_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Locker* default_instance_;
};
// -------------------------------------------------------------------

class DB_Army : public ::google::protobuf::Message {
 public:
  DB_Army();
  virtual ~DB_Army();
  
  DB_Army(const DB_Army& from);
  
  inline DB_Army& operator=(const DB_Army& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Army& default_instance();
  void Swap(DB_Army* other);
  
  // implements Message ----------------------------------------------
  
  DB_Army* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Army& from);
  void MergeFrom(const DB_Army& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 X = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);
  
  // optional int32 Y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);
  
  // optional int32 angle = 4;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 4;
  inline ::google::protobuf::int32 angle() const;
  inline void set_angle(::google::protobuf::int32 value);
  
  // optional int32 health = 5;
  inline bool has_health() const;
  inline void clear_health();
  static const int kHealthFieldNumber = 5;
  inline ::google::protobuf::int32 health() const;
  inline void set_health(::google::protobuf::int32 value);
  
  // optional int32 stance = 6;
  inline bool has_stance() const;
  inline void clear_stance();
  static const int kStanceFieldNumber = 6;
  inline ::google::protobuf::int32 stance() const;
  inline void set_stance(::google::protobuf::int32 value);
  
  // optional int32 id = 7 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 7;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 delstate = 8 [default = 0];
  inline bool has_delstate() const;
  inline void clear_delstate();
  static const int kDelstateFieldNumber = 8;
  inline ::google::protobuf::int32 delstate() const;
  inline void set_delstate(::google::protobuf::int32 value);
  
  // optional int32 campstate = 9 [default = 0];
  inline bool has_campstate() const;
  inline void clear_campstate();
  static const int kCampstateFieldNumber = 9;
  inline ::google::protobuf::int32 campstate() const;
  inline void set_campstate(::google::protobuf::int32 value);
  
  // optional int32 grade = 10 [default = 0];
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 10;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 angle_;
  ::google::protobuf::int32 health_;
  ::google::protobuf::int32 stance_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 delstate_;
  ::google::protobuf::int32 campstate_;
  ::google::protobuf::int32 grade_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Army* default_instance_;
};
// -------------------------------------------------------------------

class DB_Book : public ::google::protobuf::Message {
 public:
  DB_Book();
  virtual ~DB_Book();
  
  DB_Book(const DB_Book& from);
  
  inline DB_Book& operator=(const DB_Book& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Book& default_instance();
  void Swap(DB_Book* other);
  
  // implements Message ----------------------------------------------
  
  DB_Book* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Book& from);
  void MergeFrom(const DB_Book& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 bookID = 2 [default = 0];
  inline bool has_bookid() const;
  inline void clear_bookid();
  static const int kBookIDFieldNumber = 2;
  inline ::google::protobuf::int32 bookid() const;
  inline void set_bookid(::google::protobuf::int32 value);
  
  // optional int32 level = 3 [default = 0];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 lock = 4 [default = 0];
  inline bool has_lock() const;
  inline void clear_lock();
  static const int kLockFieldNumber = 4;
  inline ::google::protobuf::int32 lock() const;
  inline void set_lock(::google::protobuf::int32 value);
  
  // optional int32 exp = 5 [default = 0];
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
  // optional int32 bagType = 6 [default = 0];
  inline bool has_bagtype() const;
  inline void clear_bagtype();
  static const int kBagTypeFieldNumber = 6;
  inline ::google::protobuf::int32 bagtype() const;
  inline void set_bagtype(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 bookid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 lock_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 bagtype_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Book* default_instance_;
};
// -------------------------------------------------------------------

class DB_Emblem : public ::google::protobuf::Message {
 public:
  DB_Emblem();
  virtual ~DB_Emblem();
  
  DB_Emblem(const DB_Emblem& from);
  
  inline DB_Emblem& operator=(const DB_Emblem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Emblem& default_instance();
  void Swap(DB_Emblem* other);
  
  // implements Message ----------------------------------------------
  
  DB_Emblem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Emblem& from);
  void MergeFrom(const DB_Emblem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 emblemID = 1 [default = 0];
  inline bool has_emblemid() const;
  inline void clear_emblemid();
  static const int kEmblemIDFieldNumber = 1;
  inline ::google::protobuf::int32 emblemid() const;
  inline void set_emblemid(::google::protobuf::int32 value);
  
  // optional int32 count = 2 [default = 0];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 emblemid_;
  ::google::protobuf::int32 count_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Emblem* default_instance_;
};
// -------------------------------------------------------------------

class DB_EmblemNew : public ::google::protobuf::Message {
 public:
  DB_EmblemNew();
  virtual ~DB_EmblemNew();
  
  DB_EmblemNew(const DB_EmblemNew& from);
  
  inline DB_EmblemNew& operator=(const DB_EmblemNew& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_EmblemNew& default_instance();
  void Swap(DB_EmblemNew* other);
  
  // implements Message ----------------------------------------------
  
  DB_EmblemNew* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_EmblemNew& from);
  void MergeFrom(const DB_EmblemNew& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 emblemID = 2 [default = 0];
  inline bool has_emblemid() const;
  inline void clear_emblemid();
  static const int kEmblemIDFieldNumber = 2;
  inline ::google::protobuf::int32 emblemid() const;
  inline void set_emblemid(::google::protobuf::int32 value);
  
  // optional int32 lock = 4 [default = 0];
  inline bool has_lock() const;
  inline void clear_lock();
  static const int kLockFieldNumber = 4;
  inline ::google::protobuf::int32 lock() const;
  inline void set_lock(::google::protobuf::int32 value);
  
  // optional int32 exp = 5 [default = 0];
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
  // optional int32 bagType = 6 [default = 0];
  inline bool has_bagtype() const;
  inline void clear_bagtype();
  static const int kBagTypeFieldNumber = 6;
  inline ::google::protobuf::int32 bagtype() const;
  inline void set_bagtype(::google::protobuf::int32 value);
  
  // optional int32 useFlag = 7 [default = 0];
  inline bool has_useflag() const;
  inline void clear_useflag();
  static const int kUseFlagFieldNumber = 7;
  inline ::google::protobuf::int32 useflag() const;
  inline void set_useflag(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 emblemid_;
  ::google::protobuf::int32 lock_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 bagtype_;
  ::google::protobuf::int32 useflag_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_EmblemNew* default_instance_;
};
// -------------------------------------------------------------------

class DB_WeaponCom : public ::google::protobuf::Message {
 public:
  DB_WeaponCom();
  virtual ~DB_WeaponCom();
  
  DB_WeaponCom(const DB_WeaponCom& from);
  
  inline DB_WeaponCom& operator=(const DB_WeaponCom& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_WeaponCom& default_instance();
  void Swap(DB_WeaponCom* other);
  
  // implements Message ----------------------------------------------
  
  DB_WeaponCom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_WeaponCom& from);
  void MergeFrom(const DB_WeaponCom& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 comID = 2 [default = 0];
  inline bool has_comid() const;
  inline void clear_comid();
  static const int kComIDFieldNumber = 2;
  inline ::google::protobuf::int32 comid() const;
  inline void set_comid(::google::protobuf::int32 value);
  
  // optional int32 level = 3 [default = 0];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 lock = 4 [default = 0];
  inline bool has_lock() const;
  inline void clear_lock();
  static const int kLockFieldNumber = 4;
  inline ::google::protobuf::int32 lock() const;
  inline void set_lock(::google::protobuf::int32 value);
  
  // optional int32 exp = 5 [default = 0];
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
  // optional int32 bagType = 6 [default = 0];
  inline bool has_bagtype() const;
  inline void clear_bagtype();
  static const int kBagTypeFieldNumber = 6;
  inline ::google::protobuf::int32 bagtype() const;
  inline void set_bagtype(::google::protobuf::int32 value);
  
  // optional int32 grade = 7 [default = 0];
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 7;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);
  
  // optional int32 extraType = 8 [default = 0];
  inline bool has_extratype() const;
  inline void clear_extratype();
  static const int kExtraTypeFieldNumber = 8;
  inline ::google::protobuf::int32 extratype() const;
  inline void set_extratype(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 comid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 lock_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 bagtype_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 extratype_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_WeaponCom* default_instance_;
};
// -------------------------------------------------------------------

class DB_WeaponCenter : public ::google::protobuf::Message {
 public:
  DB_WeaponCenter();
  virtual ~DB_WeaponCenter();
  
  DB_WeaponCenter(const DB_WeaponCenter& from);
  
  inline DB_WeaponCenter& operator=(const DB_WeaponCenter& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_WeaponCenter& default_instance();
  void Swap(DB_WeaponCenter* other);
  
  // implements Message ----------------------------------------------
  
  DB_WeaponCenter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_WeaponCenter& from);
  void MergeFrom(const DB_WeaponCenter& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 sceneID = 1;
  inline int sceneid_size() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& sceneid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_sceneid();
  inline ::google::protobuf::int32 sceneid(int index) const;
  inline void set_sceneid(int index, ::google::protobuf::int32 value);
  inline void add_sceneid(::google::protobuf::int32 value);
  
  // repeated int32 freeExploreCnt = 2;
  inline int freeexplorecnt_size() const;
  inline void clear_freeexplorecnt();
  static const int kFreeExploreCntFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& freeexplorecnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_freeexplorecnt();
  inline ::google::protobuf::int32 freeexplorecnt(int index) const;
  inline void set_freeexplorecnt(int index, ::google::protobuf::int32 value);
  inline void add_freeexplorecnt(::google::protobuf::int32 value);
  
  // repeated int32 finishExpTime = 3;
  inline int finishexptime_size() const;
  inline void clear_finishexptime();
  static const int kFinishExpTimeFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& finishexptime() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_finishexptime();
  inline ::google::protobuf::int32 finishexptime(int index) const;
  inline void set_finishexptime(int index, ::google::protobuf::int32 value);
  inline void add_finishexptime(::google::protobuf::int32 value);
  
  // repeated int32 baseCom = 4;
  inline int basecom_size() const;
  inline void clear_basecom();
  static const int kBaseComFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& basecom() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_basecom();
  inline ::google::protobuf::int32 basecom(int index) const;
  inline void set_basecom(int index, ::google::protobuf::int32 value);
  inline void add_basecom(::google::protobuf::int32 value);
  
  // repeated int32 armyCom = 5;
  inline int armycom_size() const;
  inline void clear_armycom();
  static const int kArmyComFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& armycom() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_armycom();
  inline ::google::protobuf::int32 armycom(int index) const;
  inline void set_armycom(int index, ::google::protobuf::int32 value);
  inline void add_armycom(::google::protobuf::int32 value);
  
  // repeated int32 tankCom = 6;
  inline int tankcom_size() const;
  inline void clear_tankcom();
  static const int kTankComFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& tankcom() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_tankcom();
  inline ::google::protobuf::int32 tankcom(int index) const;
  inline void set_tankcom(int index, ::google::protobuf::int32 value);
  inline void add_tankcom(::google::protobuf::int32 value);
  
  // repeated int32 planeCom = 7;
  inline int planecom_size() const;
  inline void clear_planecom();
  static const int kPlaneComFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& planecom() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_planecom();
  inline ::google::protobuf::int32 planecom(int index) const;
  inline void set_planecom(int index, ::google::protobuf::int32 value);
  inline void add_planecom(::google::protobuf::int32 value);
  
  // repeated .DB_WeaponCom wpcCom = 8;
  inline int wpccom_size() const;
  inline void clear_wpccom();
  static const int kWpcComFieldNumber = 8;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_WeaponCom >& wpccom() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_WeaponCom >* mutable_wpccom();
  inline const ::DB_WeaponCom& wpccom(int index) const;
  inline ::DB_WeaponCom* mutable_wpccom(int index);
  inline ::DB_WeaponCom* add_wpccom();
  
  // repeated .DB_Emblem wpcEmblem = 9;
  inline int wpcemblem_size() const;
  inline void clear_wpcemblem();
  static const int kWpcEmblemFieldNumber = 9;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_Emblem >& wpcemblem() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_Emblem >* mutable_wpcemblem();
  inline const ::DB_Emblem& wpcemblem(int index) const;
  inline ::DB_Emblem* mutable_wpcemblem(int index);
  inline ::DB_Emblem* add_wpcemblem();
  
  // repeated int32 earthTowerEmblem = 10;
  inline int earthtoweremblem_size() const;
  inline void clear_earthtoweremblem();
  static const int kEarthTowerEmblemFieldNumber = 10;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& earthtoweremblem() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_earthtoweremblem();
  inline ::google::protobuf::int32 earthtoweremblem(int index) const;
  inline void set_earthtoweremblem(int index, ::google::protobuf::int32 value);
  inline void add_earthtoweremblem(::google::protobuf::int32 value);
  
  // repeated int32 airTowerEmblem = 11;
  inline int airtoweremblem_size() const;
  inline void clear_airtoweremblem();
  static const int kAirTowerEmblemFieldNumber = 11;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& airtoweremblem() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_airtoweremblem();
  inline ::google::protobuf::int32 airtoweremblem(int index) const;
  inline void set_airtoweremblem(int index, ::google::protobuf::int32 value);
  inline void add_airtoweremblem(::google::protobuf::int32 value);
  
  // repeated int32 otherEmblem = 12;
  inline int otheremblem_size() const;
  inline void clear_otheremblem();
  static const int kOtherEmblemFieldNumber = 12;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& otheremblem() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_otheremblem();
  inline ::google::protobuf::int32 otheremblem(int index) const;
  inline void set_otheremblem(int index, ::google::protobuf::int32 value);
  inline void add_otheremblem(::google::protobuf::int32 value);
  
  // repeated .DB_EmblemNew wpcEmblemNew = 13;
  inline int wpcemblemnew_size() const;
  inline void clear_wpcemblemnew();
  static const int kWpcEmblemNewFieldNumber = 13;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_EmblemNew >& wpcemblemnew() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_EmblemNew >* mutable_wpcemblemnew();
  inline const ::DB_EmblemNew& wpcemblemnew(int index) const;
  inline ::DB_EmblemNew* mutable_wpcemblemnew(int index);
  inline ::DB_EmblemNew* add_wpcemblemnew();
  
  // repeated int32 gunTurretEmblem = 14;
  inline int gunturretemblem_size() const;
  inline void clear_gunturretemblem();
  static const int kGunTurretEmblemFieldNumber = 14;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& gunturretemblem() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_gunturretemblem();
  inline ::google::protobuf::int32 gunturretemblem(int index) const;
  inline void set_gunturretemblem(int index, ::google::protobuf::int32 value);
  inline void add_gunturretemblem(::google::protobuf::int32 value);
  
  // repeated int32 mortarTowerEmblem = 15;
  inline int mortartoweremblem_size() const;
  inline void clear_mortartoweremblem();
  static const int kMortarTowerEmblemFieldNumber = 15;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& mortartoweremblem() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_mortartoweremblem();
  inline ::google::protobuf::int32 mortartoweremblem(int index) const;
  inline void set_mortartoweremblem(int index, ::google::protobuf::int32 value);
  inline void add_mortartoweremblem(::google::protobuf::int32 value);
  
  // repeated int32 otherbldEmblem = 16;
  inline int otherbldemblem_size() const;
  inline void clear_otherbldemblem();
  static const int kOtherbldEmblemFieldNumber = 16;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& otherbldemblem() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_otherbldemblem();
  inline ::google::protobuf::int32 otherbldemblem(int index) const;
  inline void set_otherbldemblem(int index, ::google::protobuf::int32 value);
  inline void add_otherbldemblem(::google::protobuf::int32 value);
  
  // repeated .DB_Book wpcBook = 17;
  inline int wpcbook_size() const;
  inline void clear_wpcbook();
  static const int kWpcBookFieldNumber = 17;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_Book >& wpcbook() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_Book >* mutable_wpcbook();
  inline const ::DB_Book& wpcbook(int index) const;
  inline ::DB_Book* mutable_wpcbook(int index);
  inline ::DB_Book* add_wpcbook();
  
  // repeated int32 admiralBook = 18;
  inline int admiralbook_size() const;
  inline void clear_admiralbook();
  static const int kAdmiralBookFieldNumber = 18;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& admiralbook() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_admiralbook();
  inline ::google::protobuf::int32 admiralbook(int index) const;
  inline void set_admiralbook(int index, ::google::protobuf::int32 value);
  inline void add_admiralbook(::google::protobuf::int32 value);
  
  // repeated int32 laserTowerEmblem = 19;
  inline int lasertoweremblem_size() const;
  inline void clear_lasertoweremblem();
  static const int kLaserTowerEmblemFieldNumber = 19;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& lasertoweremblem() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_lasertoweremblem();
  inline ::google::protobuf::int32 lasertoweremblem(int index) const;
  inline void set_lasertoweremblem(int index, ::google::protobuf::int32 value);
  inline void add_lasertoweremblem(::google::protobuf::int32 value);
  
  // repeated int32 heroCom = 20;
  inline int herocom_size() const;
  inline void clear_herocom();
  static const int kHeroComFieldNumber = 20;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& herocom() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_herocom();
  inline ::google::protobuf::int32 herocom(int index) const;
  inline void set_herocom(int index, ::google::protobuf::int32 value);
  inline void add_herocom(::google::protobuf::int32 value);
  
  // optional .DB_WeaponExtraWpcInfo unlockExtraNum = 21;
  inline bool has_unlockextranum() const;
  inline void clear_unlockextranum();
  static const int kUnlockExtraNumFieldNumber = 21;
  inline const ::DB_WeaponExtraWpcInfo& unlockextranum() const;
  inline ::DB_WeaponExtraWpcInfo* mutable_unlockextranum();
  
  // optional .DB_WeaponExtraWpcInfo turnOnNum = 22;
  inline bool has_turnonnum() const;
  inline void clear_turnonnum();
  static const int kTurnOnNumFieldNumber = 22;
  inline const ::DB_WeaponExtraWpcInfo& turnonnum() const;
  inline ::DB_WeaponExtraWpcInfo* mutable_turnonnum();
  
  // optional .DB_WeaponExtraEmblemInfo unlockEmblemNum = 23;
  inline bool has_unlockemblemnum() const;
  inline void clear_unlockemblemnum();
  static const int kUnlockEmblemNumFieldNumber = 23;
  inline const ::DB_WeaponExtraEmblemInfo& unlockemblemnum() const;
  inline ::DB_WeaponExtraEmblemInfo* mutable_unlockemblemnum();
  
  // repeated int32 giantCanonEmblem = 24;
  inline int giantcanonemblem_size() const;
  inline void clear_giantcanonemblem();
  static const int kGiantCanonEmblemFieldNumber = 24;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& giantcanonemblem() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_giantcanonemblem();
  inline ::google::protobuf::int32 giantcanonemblem(int index) const;
  inline void set_giantcanonemblem(int index, ::google::protobuf::int32 value);
  inline void add_giantcanonemblem(::google::protobuf::int32 value);
  
  // repeated .DB_Jammer wpcJammer = 25;
  inline int wpcjammer_size() const;
  inline void clear_wpcjammer();
  static const int kWpcJammerFieldNumber = 25;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_Jammer >& wpcjammer() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_Jammer >* mutable_wpcjammer();
  inline const ::DB_Jammer& wpcjammer(int index) const;
  inline ::DB_Jammer* mutable_wpcjammer(int index);
  inline ::DB_Jammer* add_wpcjammer();
  
  // repeated int32 baseJammer = 26;
  inline int basejammer_size() const;
  inline void clear_basejammer();
  static const int kBaseJammerFieldNumber = 26;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& basejammer() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_basejammer();
  inline ::google::protobuf::int32 basejammer(int index) const;
  inline void set_basejammer(int index, ::google::protobuf::int32 value);
  inline void add_basejammer(::google::protobuf::int32 value);
  
  // repeated int32 armyJammer = 27;
  inline int armyjammer_size() const;
  inline void clear_armyjammer();
  static const int kArmyJammerFieldNumber = 27;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& armyjammer() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_armyjammer();
  inline ::google::protobuf::int32 armyjammer(int index) const;
  inline void set_armyjammer(int index, ::google::protobuf::int32 value);
  inline void add_armyjammer(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > sceneid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > freeexplorecnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > finishexptime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > basecom_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > armycom_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > tankcom_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > planecom_;
  ::google::protobuf::RepeatedPtrField< ::DB_WeaponCom > wpccom_;
  ::google::protobuf::RepeatedPtrField< ::DB_Emblem > wpcemblem_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > earthtoweremblem_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > airtoweremblem_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > otheremblem_;
  ::google::protobuf::RepeatedPtrField< ::DB_EmblemNew > wpcemblemnew_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gunturretemblem_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mortartoweremblem_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > otherbldemblem_;
  ::google::protobuf::RepeatedPtrField< ::DB_Book > wpcbook_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > admiralbook_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lasertoweremblem_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > herocom_;
  ::DB_WeaponExtraWpcInfo* unlockextranum_;
  ::DB_WeaponExtraWpcInfo* turnonnum_;
  ::DB_WeaponExtraEmblemInfo* unlockemblemnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > giantcanonemblem_;
  ::google::protobuf::RepeatedPtrField< ::DB_Jammer > wpcjammer_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > basejammer_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > armyjammer_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(27 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_WeaponCenter* default_instance_;
};
// -------------------------------------------------------------------

class DB_Jammer : public ::google::protobuf::Message {
 public:
  DB_Jammer();
  virtual ~DB_Jammer();
  
  DB_Jammer(const DB_Jammer& from);
  
  inline DB_Jammer& operator=(const DB_Jammer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Jammer& default_instance();
  void Swap(DB_Jammer* other);
  
  // implements Message ----------------------------------------------
  
  DB_Jammer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Jammer& from);
  void MergeFrom(const DB_Jammer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 jammerID = 2 [default = 0];
  inline bool has_jammerid() const;
  inline void clear_jammerid();
  static const int kJammerIDFieldNumber = 2;
  inline ::google::protobuf::int32 jammerid() const;
  inline void set_jammerid(::google::protobuf::int32 value);
  
  // optional int32 level = 3 [default = 0];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional bool bLock = 4 [default = false];
  inline bool has_block() const;
  inline void clear_block();
  static const int kBLockFieldNumber = 4;
  inline bool block() const;
  inline void set_block(bool value);
  
  // optional int32 exp = 5 [default = 0];
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
  // optional int32 bagType = 6 [default = 0];
  inline bool has_bagtype() const;
  inline void clear_bagtype();
  static const int kBagTypeFieldNumber = 6;
  inline ::google::protobuf::int32 bagtype() const;
  inline void set_bagtype(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 jammerid_;
  ::google::protobuf::int32 level_;
  bool block_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 bagtype_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Jammer* default_instance_;
};
// -------------------------------------------------------------------

class DB_WeaponExtraWpcInfo : public ::google::protobuf::Message {
 public:
  DB_WeaponExtraWpcInfo();
  virtual ~DB_WeaponExtraWpcInfo();
  
  DB_WeaponExtraWpcInfo(const DB_WeaponExtraWpcInfo& from);
  
  inline DB_WeaponExtraWpcInfo& operator=(const DB_WeaponExtraWpcInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_WeaponExtraWpcInfo& default_instance();
  void Swap(DB_WeaponExtraWpcInfo* other);
  
  // implements Message ----------------------------------------------
  
  DB_WeaponExtraWpcInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_WeaponExtraWpcInfo& from);
  void MergeFrom(const DB_WeaponExtraWpcInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 extraBaseComNum = 1 [default = 0];
  inline bool has_extrabasecomnum() const;
  inline void clear_extrabasecomnum();
  static const int kExtraBaseComNumFieldNumber = 1;
  inline ::google::protobuf::int32 extrabasecomnum() const;
  inline void set_extrabasecomnum(::google::protobuf::int32 value);
  
  // optional int32 extraArmyComNum = 2 [default = 0];
  inline bool has_extraarmycomnum() const;
  inline void clear_extraarmycomnum();
  static const int kExtraArmyComNumFieldNumber = 2;
  inline ::google::protobuf::int32 extraarmycomnum() const;
  inline void set_extraarmycomnum(::google::protobuf::int32 value);
  
  // optional int32 extraTankComNum = 3 [default = 0];
  inline bool has_extratankcomnum() const;
  inline void clear_extratankcomnum();
  static const int kExtraTankComNumFieldNumber = 3;
  inline ::google::protobuf::int32 extratankcomnum() const;
  inline void set_extratankcomnum(::google::protobuf::int32 value);
  
  // optional int32 extraPlaneComNum = 4 [default = 0];
  inline bool has_extraplanecomnum() const;
  inline void clear_extraplanecomnum();
  static const int kExtraPlaneComNumFieldNumber = 4;
  inline ::google::protobuf::int32 extraplanecomnum() const;
  inline void set_extraplanecomnum(::google::protobuf::int32 value);
  
  // optional int32 extraHeroComNum = 5 [default = 0];
  inline bool has_extraherocomnum() const;
  inline void clear_extraherocomnum();
  static const int kExtraHeroComNumFieldNumber = 5;
  inline ::google::protobuf::int32 extraherocomnum() const;
  inline void set_extraherocomnum(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 extrabasecomnum_;
  ::google::protobuf::int32 extraarmycomnum_;
  ::google::protobuf::int32 extratankcomnum_;
  ::google::protobuf::int32 extraplanecomnum_;
  ::google::protobuf::int32 extraherocomnum_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_WeaponExtraWpcInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB_WeaponExtraEmblemInfo : public ::google::protobuf::Message {
 public:
  DB_WeaponExtraEmblemInfo();
  virtual ~DB_WeaponExtraEmblemInfo();
  
  DB_WeaponExtraEmblemInfo(const DB_WeaponExtraEmblemInfo& from);
  
  inline DB_WeaponExtraEmblemInfo& operator=(const DB_WeaponExtraEmblemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_WeaponExtraEmblemInfo& default_instance();
  void Swap(DB_WeaponExtraEmblemInfo* other);
  
  // implements Message ----------------------------------------------
  
  DB_WeaponExtraEmblemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_WeaponExtraEmblemInfo& from);
  void MergeFrom(const DB_WeaponExtraEmblemInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 earthEmblemCnt = 1 [default = 0];
  inline bool has_earthemblemcnt() const;
  inline void clear_earthemblemcnt();
  static const int kEarthEmblemCntFieldNumber = 1;
  inline ::google::protobuf::int32 earthemblemcnt() const;
  inline void set_earthemblemcnt(::google::protobuf::int32 value);
  
  // optional int32 airEmblemCnt = 2 [default = 0];
  inline bool has_airemblemcnt() const;
  inline void clear_airemblemcnt();
  static const int kAirEmblemCntFieldNumber = 2;
  inline ::google::protobuf::int32 airemblemcnt() const;
  inline void set_airemblemcnt(::google::protobuf::int32 value);
  
  // optional int32 baseEmblemCnt = 3 [default = 0];
  inline bool has_baseemblemcnt() const;
  inline void clear_baseemblemcnt();
  static const int kBaseEmblemCntFieldNumber = 3;
  inline ::google::protobuf::int32 baseemblemcnt() const;
  inline void set_baseemblemcnt(::google::protobuf::int32 value);
  
  // optional int32 lasertowerEmblemCnt = 4 [default = 0];
  inline bool has_lasertoweremblemcnt() const;
  inline void clear_lasertoweremblemcnt();
  static const int kLasertowerEmblemCntFieldNumber = 4;
  inline ::google::protobuf::int32 lasertoweremblemcnt() const;
  inline void set_lasertoweremblemcnt(::google::protobuf::int32 value);
  
  // optional int32 giantcanonEmblemCnt = 5 [default = 0];
  inline bool has_giantcanonemblemcnt() const;
  inline void clear_giantcanonemblemcnt();
  static const int kGiantcanonEmblemCntFieldNumber = 5;
  inline ::google::protobuf::int32 giantcanonemblemcnt() const;
  inline void set_giantcanonemblemcnt(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 earthemblemcnt_;
  ::google::protobuf::int32 airemblemcnt_;
  ::google::protobuf::int32 baseemblemcnt_;
  ::google::protobuf::int32 lasertoweremblemcnt_;
  ::google::protobuf::int32 giantcanonemblemcnt_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_WeaponExtraEmblemInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB_CaptureBase : public ::google::protobuf::Message {
 public:
  DB_CaptureBase();
  virtual ~DB_CaptureBase();
  
  DB_CaptureBase(const DB_CaptureBase& from);
  
  inline DB_CaptureBase& operator=(const DB_CaptureBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_CaptureBase& default_instance();
  void Swap(DB_CaptureBase* other);
  
  // implements Message ----------------------------------------------
  
  DB_CaptureBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_CaptureBase& from);
  void MergeFrom(const DB_CaptureBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 baseID = 1 [default = 0];
  inline bool has_baseid() const;
  inline void clear_baseid();
  static const int kBaseIDFieldNumber = 1;
  inline ::google::protobuf::int64 baseid() const;
  inline void set_baseid(::google::protobuf::int64 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional string pic = 3;
  inline bool has_pic() const;
  inline void clear_pic();
  static const int kPicFieldNumber = 3;
  inline const ::std::string& pic() const;
  inline void set_pic(const ::std::string& value);
  inline void set_pic(const char* value);
  inline void set_pic(const char* value, size_t size);
  inline ::std::string* mutable_pic();
  
  // optional int32 level = 4 [default = 0];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 finishCaptureTm = 5 [default = 0];
  inline bool has_finishcapturetm() const;
  inline void clear_finishcapturetm();
  static const int kFinishCaptureTmFieldNumber = 5;
  inline ::google::protobuf::int32 finishcapturetm() const;
  inline void set_finishcapturetm(::google::protobuf::int32 value);
  
  // optional int32 srcType = 6 [default = 0];
  inline bool has_srctype() const;
  inline void clear_srctype();
  static const int kSrcTypeFieldNumber = 6;
  inline ::google::protobuf::int32 srctype() const;
  inline void set_srctype(::google::protobuf::int32 value);
  
  // optional int32 pickResTime = 7 [default = 0];
  inline bool has_pickrestime() const;
  inline void clear_pickrestime();
  static const int kPickResTimeFieldNumber = 7;
  inline ::google::protobuf::int32 pickrestime() const;
  inline void set_pickrestime(::google::protobuf::int32 value);
  
  // optional bool lossUser = 8 [default = false];
  inline bool has_lossuser() const;
  inline void clear_lossuser();
  static const int kLossUserFieldNumber = 8;
  inline bool lossuser() const;
  inline void set_lossuser(bool value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 baseid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* pic_;
  static const ::std::string _default_pic_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 finishcapturetm_;
  ::google::protobuf::int32 srctype_;
  ::google::protobuf::int32 pickrestime_;
  bool lossuser_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_CaptureBase* default_instance_;
};
// -------------------------------------------------------------------

class DB_SlaveRoom : public ::google::protobuf::Message {
 public:
  DB_SlaveRoom();
  virtual ~DB_SlaveRoom();
  
  DB_SlaveRoom(const DB_SlaveRoom& from);
  
  inline DB_SlaveRoom& operator=(const DB_SlaveRoom& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_SlaveRoom& default_instance();
  void Swap(DB_SlaveRoom* other);
  
  // implements Message ----------------------------------------------
  
  DB_SlaveRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_SlaveRoom& from);
  void MergeFrom(const DB_SlaveRoom& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 dayRescueCnt = 1 [default = 0];
  inline bool has_dayrescuecnt() const;
  inline void clear_dayrescuecnt();
  static const int kDayRescueCntFieldNumber = 1;
  inline ::google::protobuf::int32 dayrescuecnt() const;
  inline void set_dayrescuecnt(::google::protobuf::int32 value);
  
  // optional int32 dayCapturedCnt = 2 [default = 0];
  inline bool has_daycapturedcnt() const;
  inline void clear_daycapturedcnt();
  static const int kDayCapturedCntFieldNumber = 2;
  inline ::google::protobuf::int32 daycapturedcnt() const;
  inline void set_daycapturedcnt(::google::protobuf::int32 value);
  
  // optional .DB_CaptureBase capturedInfo = 3;
  inline bool has_capturedinfo() const;
  inline void clear_capturedinfo();
  static const int kCapturedInfoFieldNumber = 3;
  inline const ::DB_CaptureBase& capturedinfo() const;
  inline ::DB_CaptureBase* mutable_capturedinfo();
  
  // repeated .DB_CaptureBase captureBase = 4;
  inline int capturebase_size() const;
  inline void clear_capturebase();
  static const int kCaptureBaseFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_CaptureBase >& capturebase() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_CaptureBase >* mutable_capturebase();
  inline const ::DB_CaptureBase& capturebase(int index) const;
  inline ::DB_CaptureBase* mutable_capturebase(int index);
  inline ::DB_CaptureBase* add_capturebase();
  
  // optional int32 prcMedal = 5 [default = 0];
  inline bool has_prcmedal() const;
  inline void clear_prcmedal();
  static const int kPrcMedalFieldNumber = 5;
  inline ::google::protobuf::int32 prcmedal() const;
  inline void set_prcmedal(::google::protobuf::int32 value);
  
  // optional int32 prcOil = 6 [default = 0];
  inline bool has_prcoil() const;
  inline void clear_prcoil();
  static const int kPrcOilFieldNumber = 6;
  inline ::google::protobuf::int32 prcoil() const;
  inline void set_prcoil(::google::protobuf::int32 value);
  
  // optional int32 prcHonor = 7 [default = 0];
  inline bool has_prchonor() const;
  inline void clear_prchonor();
  static const int kPrcHonorFieldNumber = 7;
  inline ::google::protobuf::int32 prchonor() const;
  inline void set_prchonor(::google::protobuf::int32 value);
  
  // optional int32 prcFeats = 8 [default = 0];
  inline bool has_prcfeats() const;
  inline void clear_prcfeats();
  static const int kPrcFeatsFieldNumber = 8;
  inline ::google::protobuf::int32 prcfeats() const;
  inline void set_prcfeats(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 dayrescuecnt_;
  ::google::protobuf::int32 daycapturedcnt_;
  ::DB_CaptureBase* capturedinfo_;
  ::google::protobuf::RepeatedPtrField< ::DB_CaptureBase > capturebase_;
  ::google::protobuf::int32 prcmedal_;
  ::google::protobuf::int32 prcoil_;
  ::google::protobuf::int32 prchonor_;
  ::google::protobuf::int32 prcfeats_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_SlaveRoom* default_instance_;
};
// -------------------------------------------------------------------

class DB_NPCActive : public ::google::protobuf::Message {
 public:
  DB_NPCActive();
  virtual ~DB_NPCActive();
  
  DB_NPCActive(const DB_NPCActive& from);
  
  inline DB_NPCActive& operator=(const DB_NPCActive& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_NPCActive& default_instance();
  void Swap(DB_NPCActive* other);
  
  // implements Message ----------------------------------------------
  
  DB_NPCActive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_NPCActive& from);
  void MergeFrom(const DB_NPCActive& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 dayWinNPCID = 1;
  inline int daywinnpcid_size() const;
  inline void clear_daywinnpcid();
  static const int kDayWinNPCIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& daywinnpcid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_daywinnpcid();
  inline ::google::protobuf::int32 daywinnpcid(int index) const;
  inline void set_daywinnpcid(int index, ::google::protobuf::int32 value);
  inline void add_daywinnpcid(::google::protobuf::int32 value);
  
  // repeated int32 dayLostNPCID = 2;
  inline int daylostnpcid_size() const;
  inline void clear_daylostnpcid();
  static const int kDayLostNPCIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& daylostnpcid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_daylostnpcid();
  inline ::google::protobuf::int32 daylostnpcid(int index) const;
  inline void set_daylostnpcid(int index, ::google::protobuf::int32 value);
  inline void add_daylostnpcid(::google::protobuf::int32 value);
  
  // repeated int32 dayGetItemID = 3;
  inline int daygetitemid_size() const;
  inline void clear_daygetitemid();
  static const int kDayGetItemIDFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& daygetitemid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_daygetitemid();
  inline ::google::protobuf::int32 daygetitemid(int index) const;
  inline void set_daygetitemid(int index, ::google::protobuf::int32 value);
  inline void add_daygetitemid(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > daywinnpcid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > daylostnpcid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > daygetitemid_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_NPCActive* default_instance_;
};
// -------------------------------------------------------------------

class DB_BaseDefNPC : public ::google::protobuf::Message {
 public:
  DB_BaseDefNPC();
  virtual ~DB_BaseDefNPC();
  
  DB_BaseDefNPC(const DB_BaseDefNPC& from);
  
  inline DB_BaseDefNPC& operator=(const DB_BaseDefNPC& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_BaseDefNPC& default_instance();
  void Swap(DB_BaseDefNPC* other);
  
  // implements Message ----------------------------------------------
  
  DB_BaseDefNPC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_BaseDefNPC& from);
  void MergeFrom(const DB_BaseDefNPC& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 bestScore = 1;
  inline bool has_bestscore() const;
  inline void clear_bestscore();
  static const int kBestScoreFieldNumber = 1;
  inline ::google::protobuf::int32 bestscore() const;
  inline void set_bestscore(::google::protobuf::int32 value);
  
  // optional int32 dayDefCnt = 2;
  inline bool has_daydefcnt() const;
  inline void clear_daydefcnt();
  static const int kDayDefCntFieldNumber = 2;
  inline ::google::protobuf::int32 daydefcnt() const;
  inline void set_daydefcnt(::google::protobuf::int32 value);
  
  // optional int32 leftStakeCnt = 3;
  inline bool has_leftstakecnt() const;
  inline void clear_leftstakecnt();
  static const int kLeftStakeCntFieldNumber = 3;
  inline ::google::protobuf::int32 leftstakecnt() const;
  inline void set_leftstakecnt(::google::protobuf::int32 value);
  
  // repeated int32 showItemLst = 4;
  inline int showitemlst_size() const;
  inline void clear_showitemlst();
  static const int kShowItemLstFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& showitemlst() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_showitemlst();
  inline ::google::protobuf::int32 showitemlst(int index) const;
  inline void set_showitemlst(int index, ::google::protobuf::int32 value);
  inline void add_showitemlst(::google::protobuf::int32 value);
  
  // repeated int32 showItemCnt = 5;
  inline int showitemcnt_size() const;
  inline void clear_showitemcnt();
  static const int kShowItemCntFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& showitemcnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_showitemcnt();
  inline ::google::protobuf::int32 showitemcnt(int index) const;
  inline void set_showitemcnt(int index, ::google::protobuf::int32 value);
  inline void add_showitemcnt(::google::protobuf::int32 value);
  
  // repeated int32 stakeItemLst = 6;
  inline int stakeitemlst_size() const;
  inline void clear_stakeitemlst();
  static const int kStakeItemLstFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& stakeitemlst() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_stakeitemlst();
  inline ::google::protobuf::int32 stakeitemlst(int index) const;
  inline void set_stakeitemlst(int index, ::google::protobuf::int32 value);
  inline void add_stakeitemlst(::google::protobuf::int32 value);
  
  // repeated int32 stakeItemCnt = 7;
  inline int stakeitemcnt_size() const;
  inline void clear_stakeitemcnt();
  static const int kStakeItemCntFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& stakeitemcnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_stakeitemcnt();
  inline ::google::protobuf::int32 stakeitemcnt(int index) const;
  inline void set_stakeitemcnt(int index, ::google::protobuf::int32 value);
  inline void add_stakeitemcnt(::google::protobuf::int32 value);
  
  // optional int32 lastNPCID = 8;
  inline bool has_lastnpcid() const;
  inline void clear_lastnpcid();
  static const int kLastNPCIDFieldNumber = 8;
  inline ::google::protobuf::int32 lastnpcid() const;
  inline void set_lastnpcid(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 bestscore_;
  ::google::protobuf::int32 daydefcnt_;
  ::google::protobuf::int32 leftstakecnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > showitemlst_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > showitemcnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stakeitemlst_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stakeitemcnt_;
  ::google::protobuf::int32 lastnpcid_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_BaseDefNPC* default_instance_;
};
// -------------------------------------------------------------------

class DB_AdmiralSkill : public ::google::protobuf::Message {
 public:
  DB_AdmiralSkill();
  virtual ~DB_AdmiralSkill();
  
  DB_AdmiralSkill(const DB_AdmiralSkill& from);
  
  inline DB_AdmiralSkill& operator=(const DB_AdmiralSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_AdmiralSkill& default_instance();
  void Swap(DB_AdmiralSkill* other);
  
  // implements Message ----------------------------------------------
  
  DB_AdmiralSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_AdmiralSkill& from);
  void MergeFrom(const DB_AdmiralSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 skillID = 2 [default = 0];
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 2;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);
  
  // optional bool initSkill = 3 [default = false];
  inline bool has_initskill() const;
  inline void clear_initskill();
  static const int kInitSkillFieldNumber = 3;
  inline bool initskill() const;
  inline void set_initskill(bool value);
  
  // optional int32 level = 4 [default = 1];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 exp = 5 [default = 0];
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 skillid_;
  bool initskill_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_AdmiralSkill* default_instance_;
};
// -------------------------------------------------------------------

class DB_AdmiralSkillData : public ::google::protobuf::Message {
 public:
  DB_AdmiralSkillData();
  virtual ~DB_AdmiralSkillData();
  
  DB_AdmiralSkillData(const DB_AdmiralSkillData& from);
  
  inline DB_AdmiralSkillData& operator=(const DB_AdmiralSkillData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_AdmiralSkillData& default_instance();
  void Swap(DB_AdmiralSkillData* other);
  
  // implements Message ----------------------------------------------
  
  DB_AdmiralSkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_AdmiralSkillData& from);
  void MergeFrom(const DB_AdmiralSkillData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 skillID = 1 [default = 0];
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);
  
  // optional int32 level = 2 [default = 1];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 exp = 3 [default = 0];
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_AdmiralSkillData* default_instance_;
};
// -------------------------------------------------------------------

class DB_AdmiralTrainLV : public ::google::protobuf::Message {
 public:
  DB_AdmiralTrainLV();
  virtual ~DB_AdmiralTrainLV();
  
  DB_AdmiralTrainLV(const DB_AdmiralTrainLV& from);
  
  inline DB_AdmiralTrainLV& operator=(const DB_AdmiralTrainLV& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_AdmiralTrainLV& default_instance();
  void Swap(DB_AdmiralTrainLV* other);
  
  // implements Message ----------------------------------------------
  
  DB_AdmiralTrainLV* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_AdmiralTrainLV& from);
  void MergeFrom(const DB_AdmiralTrainLV& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 level = 1 [default = 0];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 cnt = 2 [default = 0];
  inline bool has_cnt() const;
  inline void clear_cnt();
  static const int kCntFieldNumber = 2;
  inline ::google::protobuf::int32 cnt() const;
  inline void set_cnt(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 cnt_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_AdmiralTrainLV* default_instance_;
};
// -------------------------------------------------------------------

class DB_AdmiralLetter : public ::google::protobuf::Message {
 public:
  DB_AdmiralLetter();
  virtual ~DB_AdmiralLetter();
  
  DB_AdmiralLetter(const DB_AdmiralLetter& from);
  
  inline DB_AdmiralLetter& operator=(const DB_AdmiralLetter& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_AdmiralLetter& default_instance();
  void Swap(DB_AdmiralLetter* other);
  
  // implements Message ----------------------------------------------
  
  DB_AdmiralLetter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_AdmiralLetter& from);
  void MergeFrom(const DB_AdmiralLetter& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 letterID = 1 [default = 0];
  inline bool has_letterid() const;
  inline void clear_letterid();
  static const int kLetterIDFieldNumber = 1;
  inline ::google::protobuf::int32 letterid() const;
  inline void set_letterid(::google::protobuf::int32 value);
  
  // optional int32 count = 2 [default = 0];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 letterid_;
  ::google::protobuf::int32 count_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_AdmiralLetter* default_instance_;
};
// -------------------------------------------------------------------

class DB_AdmiralEquip : public ::google::protobuf::Message {
 public:
  DB_AdmiralEquip();
  virtual ~DB_AdmiralEquip();
  
  DB_AdmiralEquip(const DB_AdmiralEquip& from);
  
  inline DB_AdmiralEquip& operator=(const DB_AdmiralEquip& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_AdmiralEquip& default_instance();
  void Swap(DB_AdmiralEquip* other);
  
  // implements Message ----------------------------------------------
  
  DB_AdmiralEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_AdmiralEquip& from);
  void MergeFrom(const DB_AdmiralEquip& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 equipID = 1;
  inline int equipid_size() const;
  inline void clear_equipid();
  static const int kEquipIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& equipid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_equipid();
  inline ::google::protobuf::int32 equipid(int index) const;
  inline void set_equipid(int index, ::google::protobuf::int32 value);
  inline void add_equipid(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > equipid_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_AdmiralEquip* default_instance_;
};
// -------------------------------------------------------------------

class DB_Admiral : public ::google::protobuf::Message {
 public:
  DB_Admiral();
  virtual ~DB_Admiral();
  
  DB_Admiral(const DB_Admiral& from);
  
  inline DB_Admiral& operator=(const DB_Admiral& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Admiral& default_instance();
  void Swap(DB_Admiral* other);
  
  // implements Message ----------------------------------------------
  
  DB_Admiral* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Admiral& from);
  void MergeFrom(const DB_Admiral& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 admiralId = 1 [default = 0];
  inline bool has_admiralid() const;
  inline void clear_admiralid();
  static const int kAdmiralIdFieldNumber = 1;
  inline ::google::protobuf::int32 admiralid() const;
  inline void set_admiralid(::google::protobuf::int32 value);
  
  // optional int32 level = 2 [default = 0];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 exp = 3 [default = 0];
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
  // optional int32 useType = 4 [default = 0];
  inline bool has_usetype() const;
  inline void clear_usetype();
  static const int kUseTypeFieldNumber = 4;
  inline ::google::protobuf::int32 usetype() const;
  inline void set_usetype(::google::protobuf::int32 value);
  
  // optional int32 addAtk = 5 [default = 0];
  inline bool has_addatk() const;
  inline void clear_addatk();
  static const int kAddAtkFieldNumber = 5;
  inline ::google::protobuf::int32 addatk() const;
  inline void set_addatk(::google::protobuf::int32 value);
  
  // optional int32 addHP = 6 [default = 0];
  inline bool has_addhp() const;
  inline void clear_addhp();
  static const int kAddHPFieldNumber = 6;
  inline ::google::protobuf::int32 addhp() const;
  inline void set_addhp(::google::protobuf::int32 value);
  
  // optional int32 addDef = 7 [default = 0];
  inline bool has_adddef() const;
  inline void clear_adddef();
  static const int kAddDefFieldNumber = 7;
  inline ::google::protobuf::int32 adddef() const;
  inline void set_adddef(::google::protobuf::int32 value);
  
  // optional int32 addCrt = 8 [default = 0];
  inline bool has_addcrt() const;
  inline void clear_addcrt();
  static const int kAddCrtFieldNumber = 8;
  inline ::google::protobuf::int32 addcrt() const;
  inline void set_addcrt(::google::protobuf::int32 value);
  
  // optional int32 finalAtk = 9 [default = 0];
  inline bool has_finalatk() const;
  inline void clear_finalatk();
  static const int kFinalAtkFieldNumber = 9;
  inline ::google::protobuf::int32 finalatk() const;
  inline void set_finalatk(::google::protobuf::int32 value);
  
  // optional int32 finalHP = 10 [default = 0];
  inline bool has_finalhp() const;
  inline void clear_finalhp();
  static const int kFinalHPFieldNumber = 10;
  inline ::google::protobuf::int32 finalhp() const;
  inline void set_finalhp(::google::protobuf::int32 value);
  
  // optional int32 finalDef = 11 [default = 0];
  inline bool has_finaldef() const;
  inline void clear_finaldef();
  static const int kFinalDefFieldNumber = 11;
  inline ::google::protobuf::int32 finaldef() const;
  inline void set_finaldef(::google::protobuf::int32 value);
  
  // optional int32 finalCrt = 12 [default = 0];
  inline bool has_finalcrt() const;
  inline void clear_finalcrt();
  static const int kFinalCrtFieldNumber = 12;
  inline ::google::protobuf::int32 finalcrt() const;
  inline void set_finalcrt(::google::protobuf::int32 value);
  
  // repeated int32 skillID = 13;
  inline int skillid_size() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 13;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& skillid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_skillid();
  inline ::google::protobuf::int32 skillid(int index) const;
  inline void set_skillid(int index, ::google::protobuf::int32 value);
  inline void add_skillid(::google::protobuf::int32 value);
  
  // optional .DB_AdmiralTrainLV trainLV = 15;
  inline bool has_trainlv() const;
  inline void clear_trainlv();
  static const int kTrainLVFieldNumber = 15;
  inline const ::DB_AdmiralTrainLV& trainlv() const;
  inline ::DB_AdmiralTrainLV* mutable_trainlv();
  
  // optional int32 useSoulCnt = 16 [default = 0];
  inline bool has_usesoulcnt() const;
  inline void clear_usesoulcnt();
  static const int kUseSoulCntFieldNumber = 16;
  inline ::google::protobuf::int32 usesoulcnt() const;
  inline void set_usesoulcnt(::google::protobuf::int32 value);
  
  // optional int32 score = 17 [default = 0];
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 17;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);
  
  // optional .DB_AdmiralSkillData initSkill = 18;
  inline bool has_initskill() const;
  inline void clear_initskill();
  static const int kInitSkillFieldNumber = 18;
  inline const ::DB_AdmiralSkillData& initskill() const;
  inline ::DB_AdmiralSkillData* mutable_initskill();
  
  // optional .DB_AdmiralEquip equip = 19;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 19;
  inline const ::DB_AdmiralEquip& equip() const;
  inline ::DB_AdmiralEquip* mutable_equip();
  
  // optional int32 buffTime = 20;
  inline bool has_bufftime() const;
  inline void clear_bufftime();
  static const int kBuffTimeFieldNumber = 20;
  inline ::google::protobuf::int32 bufftime() const;
  inline void set_bufftime(::google::protobuf::int32 value);
  
  // repeated int32 medalhonorList = 21;
  inline int medalhonorlist_size() const;
  inline void clear_medalhonorlist();
  static const int kMedalhonorListFieldNumber = 21;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& medalhonorlist() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_medalhonorlist();
  inline ::google::protobuf::int32 medalhonorlist(int index) const;
  inline void set_medalhonorlist(int index, ::google::protobuf::int32 value);
  inline void add_medalhonorlist(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 admiralid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 usetype_;
  ::google::protobuf::int32 addatk_;
  ::google::protobuf::int32 addhp_;
  ::google::protobuf::int32 adddef_;
  ::google::protobuf::int32 addcrt_;
  ::google::protobuf::int32 finalatk_;
  ::google::protobuf::int32 finalhp_;
  ::google::protobuf::int32 finaldef_;
  ::google::protobuf::int32 finalcrt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > skillid_;
  ::DB_AdmiralTrainLV* trainlv_;
  ::google::protobuf::int32 usesoulcnt_;
  ::google::protobuf::int32 score_;
  ::DB_AdmiralSkillData* initskill_;
  ::DB_AdmiralEquip* equip_;
  ::google::protobuf::int32 bufftime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > medalhonorlist_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Admiral* default_instance_;
};
// -------------------------------------------------------------------

class DB_AdmiralInfo : public ::google::protobuf::Message {
 public:
  DB_AdmiralInfo();
  virtual ~DB_AdmiralInfo();
  
  DB_AdmiralInfo(const DB_AdmiralInfo& from);
  
  inline DB_AdmiralInfo& operator=(const DB_AdmiralInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_AdmiralInfo& default_instance();
  void Swap(DB_AdmiralInfo* other);
  
  // implements Message ----------------------------------------------
  
  DB_AdmiralInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_AdmiralInfo& from);
  void MergeFrom(const DB_AdmiralInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DB_Admiral admiral = 1;
  inline int admiral_size() const;
  inline void clear_admiral();
  static const int kAdmiralFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_Admiral >& admiral() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_Admiral >* mutable_admiral();
  inline const ::DB_Admiral& admiral(int index) const;
  inline ::DB_Admiral* mutable_admiral(int index);
  inline ::DB_Admiral* add_admiral();
  
  // optional int32 soul = 2 [default = 0];
  inline bool has_soul() const;
  inline void clear_soul();
  static const int kSoulFieldNumber = 2;
  inline ::google::protobuf::int32 soul() const;
  inline void set_soul(::google::protobuf::int32 value);
  
  // optional bool hasSendAdmiral = 3 [default = false];
  inline bool has_hassendadmiral() const;
  inline void clear_hassendadmiral();
  static const int kHasSendAdmiralFieldNumber = 3;
  inline bool hassendadmiral() const;
  inline void set_hassendadmiral(bool value);
  
  // repeated int32 sendID = 4;
  inline int sendid_size() const;
  inline void clear_sendid();
  static const int kSendIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& sendid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_sendid();
  inline ::google::protobuf::int32 sendid(int index) const;
  inline void set_sendid(int index, ::google::protobuf::int32 value);
  inline void add_sendid(::google::protobuf::int32 value);
  
  // optional bool hasCreditVisit = 5 [default = false];
  inline bool has_hascreditvisit() const;
  inline void clear_hascreditvisit();
  static const int kHasCreditVisitFieldNumber = 5;
  inline bool hascreditvisit() const;
  inline void set_hascreditvisit(bool value);
  
  // repeated int32 freeVisitCnt = 6;
  inline int freevisitcnt_size() const;
  inline void clear_freevisitcnt();
  static const int kFreeVisitCntFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& freevisitcnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_freevisitcnt();
  inline ::google::protobuf::int32 freevisitcnt(int index) const;
  inline void set_freevisitcnt(int index, ::google::protobuf::int32 value);
  inline void add_freevisitcnt(::google::protobuf::int32 value);
  
  // repeated int32 finishVisitTime = 7;
  inline int finishvisittime_size() const;
  inline void clear_finishvisittime();
  static const int kFinishVisitTimeFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& finishvisittime() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_finishvisittime();
  inline ::google::protobuf::int32 finishvisittime(int index) const;
  inline void set_finishvisittime(int index, ::google::protobuf::int32 value);
  inline void add_finishvisittime(::google::protobuf::int32 value);
  
  // repeated .DB_AdmiralSkill skill = 8;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 8;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_AdmiralSkill >& skill() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_AdmiralSkill >* mutable_skill();
  inline const ::DB_AdmiralSkill& skill(int index) const;
  inline ::DB_AdmiralSkill* mutable_skill(int index);
  inline ::DB_AdmiralSkill* add_skill();
  
  // repeated int32 collectLst = 9;
  inline int collectlst_size() const;
  inline void clear_collectlst();
  static const int kCollectLstFieldNumber = 9;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& collectlst() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_collectlst();
  inline ::google::protobuf::int32 collectlst(int index) const;
  inline void set_collectlst(int index, ::google::protobuf::int32 value);
  inline void add_collectlst(::google::protobuf::int32 value);
  
  // optional int32 shenjiangExchangeCnt = 10 [default = 0];
  inline bool has_shenjiangexchangecnt() const;
  inline void clear_shenjiangexchangecnt();
  static const int kShenjiangExchangeCntFieldNumber = 10;
  inline ::google::protobuf::int32 shenjiangexchangecnt() const;
  inline void set_shenjiangexchangecnt(::google::protobuf::int32 value);
  
  // repeated .DB_AdmiralLetter admiralletter = 11;
  inline int admiralletter_size() const;
  inline void clear_admiralletter();
  static const int kAdmiralletterFieldNumber = 11;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_AdmiralLetter >& admiralletter() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_AdmiralLetter >* mutable_admiralletter();
  inline const ::DB_AdmiralLetter& admiralletter(int index) const;
  inline ::DB_AdmiralLetter* mutable_admiralletter(int index);
  inline ::DB_AdmiralLetter* add_admiralletter();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::DB_Admiral > admiral_;
  ::google::protobuf::int32 soul_;
  bool hassendadmiral_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > sendid_;
  bool hascreditvisit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > freevisitcnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > finishvisittime_;
  ::google::protobuf::RepeatedPtrField< ::DB_AdmiralSkill > skill_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > collectlst_;
  ::google::protobuf::int32 shenjiangexchangecnt_;
  ::google::protobuf::RepeatedPtrField< ::DB_AdmiralLetter > admiralletter_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_AdmiralInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB_HeroLetter : public ::google::protobuf::Message {
 public:
  DB_HeroLetter();
  virtual ~DB_HeroLetter();
  
  DB_HeroLetter(const DB_HeroLetter& from);
  
  inline DB_HeroLetter& operator=(const DB_HeroLetter& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_HeroLetter& default_instance();
  void Swap(DB_HeroLetter* other);
  
  // implements Message ----------------------------------------------
  
  DB_HeroLetter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_HeroLetter& from);
  void MergeFrom(const DB_HeroLetter& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 letterID = 1 [default = 0];
  inline bool has_letterid() const;
  inline void clear_letterid();
  static const int kLetterIDFieldNumber = 1;
  inline ::google::protobuf::int32 letterid() const;
  inline void set_letterid(::google::protobuf::int32 value);
  
  // optional int32 count = 2 [default = 0];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 letterid_;
  ::google::protobuf::int32 count_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_HeroLetter* default_instance_;
};
// -------------------------------------------------------------------

class DB_HeroSkillData : public ::google::protobuf::Message {
 public:
  DB_HeroSkillData();
  virtual ~DB_HeroSkillData();
  
  DB_HeroSkillData(const DB_HeroSkillData& from);
  
  inline DB_HeroSkillData& operator=(const DB_HeroSkillData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_HeroSkillData& default_instance();
  void Swap(DB_HeroSkillData* other);
  
  // implements Message ----------------------------------------------
  
  DB_HeroSkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_HeroSkillData& from);
  void MergeFrom(const DB_HeroSkillData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 skillID = 1 [default = 0];
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);
  
  // optional int32 level = 2 [default = 1];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_HeroSkillData* default_instance_;
};
// -------------------------------------------------------------------

class DB_HeroAtkData : public ::google::protobuf::Message {
 public:
  DB_HeroAtkData();
  virtual ~DB_HeroAtkData();
  
  DB_HeroAtkData(const DB_HeroAtkData& from);
  
  inline DB_HeroAtkData& operator=(const DB_HeroAtkData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_HeroAtkData& default_instance();
  void Swap(DB_HeroAtkData* other);
  
  // implements Message ----------------------------------------------
  
  DB_HeroAtkData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_HeroAtkData& from);
  void MergeFrom(const DB_HeroAtkData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 X = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);
  
  // optional int32 Y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);
  
  // optional int32 angle = 4;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 4;
  inline ::google::protobuf::int32 angle() const;
  inline void set_angle(::google::protobuf::int32 value);
  
  // optional int32 health = 5;
  inline bool has_health() const;
  inline void clear_health();
  static const int kHealthFieldNumber = 5;
  inline ::google::protobuf::int32 health() const;
  inline void set_health(::google::protobuf::int32 value);
  
  // optional int32 stance = 6;
  inline bool has_stance() const;
  inline void clear_stance();
  static const int kStanceFieldNumber = 6;
  inline ::google::protobuf::int32 stance() const;
  inline void set_stance(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 angle_;
  ::google::protobuf::int32 health_;
  ::google::protobuf::int32 stance_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_HeroAtkData* default_instance_;
};
// -------------------------------------------------------------------

class DB_Hero : public ::google::protobuf::Message {
 public:
  DB_Hero();
  virtual ~DB_Hero();
  
  DB_Hero(const DB_Hero& from);
  
  inline DB_Hero& operator=(const DB_Hero& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Hero& default_instance();
  void Swap(DB_Hero* other);
  
  // implements Message ----------------------------------------------
  
  DB_Hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Hero& from);
  void MergeFrom(const DB_Hero& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 heroId = 1 [default = 0];
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::int32 heroid() const;
  inline void set_heroid(::google::protobuf::int32 value);
  
  // optional int32 level = 2 [default = 0];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 grade = 3 [default = 0];
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 3;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);
  
  // optional int32 levelexp = 4 [default = 0];
  inline bool has_levelexp() const;
  inline void clear_levelexp();
  static const int kLevelexpFieldNumber = 4;
  inline ::google::protobuf::int32 levelexp() const;
  inline void set_levelexp(::google::protobuf::int32 value);
  
  // optional int32 gradeexp = 5 [default = 0];
  inline bool has_gradeexp() const;
  inline void clear_gradeexp();
  static const int kGradeexpFieldNumber = 5;
  inline ::google::protobuf::int32 gradeexp() const;
  inline void set_gradeexp(::google::protobuf::int32 value);
  
  // optional .DB_HeroSkillData initSkill = 6;
  inline bool has_initskill() const;
  inline void clear_initskill();
  static const int kInitSkillFieldNumber = 6;
  inline const ::DB_HeroSkillData& initskill() const;
  inline ::DB_HeroSkillData* mutable_initskill();
  
  // optional .DB_HeroAtkData atkData = 7;
  inline bool has_atkdata() const;
  inline void clear_atkdata();
  static const int kAtkDataFieldNumber = 7;
  inline const ::DB_HeroAtkData& atkdata() const;
  inline ::DB_HeroAtkData* mutable_atkdata();
  
  // optional int32 recoverhptm = 8 [default = 0];
  inline bool has_recoverhptm() const;
  inline void clear_recoverhptm();
  static const int kRecoverhptmFieldNumber = 8;
  inline ::google::protobuf::int32 recoverhptm() const;
  inline void set_recoverhptm(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 heroid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 levelexp_;
  ::google::protobuf::int32 gradeexp_;
  ::DB_HeroSkillData* initskill_;
  ::DB_HeroAtkData* atkdata_;
  ::google::protobuf::int32 recoverhptm_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Hero* default_instance_;
};
// -------------------------------------------------------------------

class DB_UpgradeHero : public ::google::protobuf::Message {
 public:
  DB_UpgradeHero();
  virtual ~DB_UpgradeHero();
  
  DB_UpgradeHero(const DB_UpgradeHero& from);
  
  inline DB_UpgradeHero& operator=(const DB_UpgradeHero& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_UpgradeHero& default_instance();
  void Swap(DB_UpgradeHero* other);
  
  // implements Message ----------------------------------------------
  
  DB_UpgradeHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_UpgradeHero& from);
  void MergeFrom(const DB_UpgradeHero& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 herotype = 1;
  inline bool has_herotype() const;
  inline void clear_herotype();
  static const int kHerotypeFieldNumber = 1;
  inline ::google::protobuf::int32 herotype() const;
  inline void set_herotype(::google::protobuf::int32 value);
  
  // optional int32 finishTime = 2 [default = 0];
  inline bool has_finishtime() const;
  inline void clear_finishtime();
  static const int kFinishTimeFieldNumber = 2;
  inline ::google::protobuf::int32 finishtime() const;
  inline void set_finishtime(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 herotype_;
  ::google::protobuf::int32 finishtime_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_UpgradeHero* default_instance_;
};
// -------------------------------------------------------------------

class DB_HeroInfo : public ::google::protobuf::Message {
 public:
  DB_HeroInfo();
  virtual ~DB_HeroInfo();
  
  DB_HeroInfo(const DB_HeroInfo& from);
  
  inline DB_HeroInfo& operator=(const DB_HeroInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_HeroInfo& default_instance();
  void Swap(DB_HeroInfo* other);
  
  // implements Message ----------------------------------------------
  
  DB_HeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_HeroInfo& from);
  void MergeFrom(const DB_HeroInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DB_Hero hero = 1;
  inline int hero_size() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_Hero >& hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_Hero >* mutable_hero();
  inline const ::DB_Hero& hero(int index) const;
  inline ::DB_Hero* mutable_hero(int index);
  inline ::DB_Hero* add_hero();
  
  // repeated .DB_HeroLetter heroletter = 2;
  inline int heroletter_size() const;
  inline void clear_heroletter();
  static const int kHeroletterFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_HeroLetter >& heroletter() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_HeroLetter >* mutable_heroletter();
  inline const ::DB_HeroLetter& heroletter(int index) const;
  inline ::DB_HeroLetter* mutable_heroletter(int index);
  inline ::DB_HeroLetter* add_heroletter();
  
  // repeated int32 freeVisitCnt = 3;
  inline int freevisitcnt_size() const;
  inline void clear_freevisitcnt();
  static const int kFreeVisitCntFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& freevisitcnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_freevisitcnt();
  inline ::google::protobuf::int32 freevisitcnt(int index) const;
  inline void set_freevisitcnt(int index, ::google::protobuf::int32 value);
  inline void add_freevisitcnt(::google::protobuf::int32 value);
  
  // repeated int32 finishVisitTime = 4;
  inline int finishvisittime_size() const;
  inline void clear_finishvisittime();
  static const int kFinishVisitTimeFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& finishvisittime() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_finishvisittime();
  inline ::google::protobuf::int32 finishvisittime(int index) const;
  inline void set_finishvisittime(int index, ::google::protobuf::int32 value);
  inline void add_finishvisittime(::google::protobuf::int32 value);
  
  // repeated int32 collectLst = 5;
  inline int collectlst_size() const;
  inline void clear_collectlst();
  static const int kCollectLstFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& collectlst() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_collectlst();
  inline ::google::protobuf::int32 collectlst(int index) const;
  inline void set_collectlst(int index, ::google::protobuf::int32 value);
  inline void add_collectlst(::google::protobuf::int32 value);
  
  // optional bool hasSendhero = 6 [default = false];
  inline bool has_hassendhero() const;
  inline void clear_hassendhero();
  static const int kHasSendheroFieldNumber = 6;
  inline bool hassendhero() const;
  inline void set_hassendhero(bool value);
  
  // repeated int32 sendID = 7;
  inline int sendid_size() const;
  inline void clear_sendid();
  static const int kSendIDFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& sendid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_sendid();
  inline ::google::protobuf::int32 sendid(int index) const;
  inline void set_sendid(int index, ::google::protobuf::int32 value);
  inline void add_sendid(::google::protobuf::int32 value);
  
  // optional bool hasCreditVisit = 8 [default = false];
  inline bool has_hascreditvisit() const;
  inline void clear_hascreditvisit();
  static const int kHasCreditVisitFieldNumber = 8;
  inline bool hascreditvisit() const;
  inline void set_hascreditvisit(bool value);
  
  // repeated .DB_UpgradeHero heroupgrade = 9;
  inline int heroupgrade_size() const;
  inline void clear_heroupgrade();
  static const int kHeroupgradeFieldNumber = 9;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_UpgradeHero >& heroupgrade() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_UpgradeHero >* mutable_heroupgrade();
  inline const ::DB_UpgradeHero& heroupgrade(int index) const;
  inline ::DB_UpgradeHero* mutable_heroupgrade(int index);
  inline ::DB_UpgradeHero* add_heroupgrade();
  
  // repeated int32 heroAtkLst = 10;
  inline int heroatklst_size() const;
  inline void clear_heroatklst();
  static const int kHeroAtkLstFieldNumber = 10;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& heroatklst() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_heroatklst();
  inline ::google::protobuf::int32 heroatklst(int index) const;
  inline void set_heroatklst(int index, ::google::protobuf::int32 value);
  inline void add_heroatklst(::google::protobuf::int32 value);
  
  // repeated int32 heroDefLst = 11;
  inline int herodeflst_size() const;
  inline void clear_herodeflst();
  static const int kHeroDefLstFieldNumber = 11;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& herodeflst() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_herodeflst();
  inline ::google::protobuf::int32 herodeflst(int index) const;
  inline void set_herodeflst(int index, ::google::protobuf::int32 value);
  inline void add_herodeflst(::google::protobuf::int32 value);
  
  // repeated int32 heroAutoLst = 12;
  inline int heroautolst_size() const;
  inline void clear_heroautolst();
  static const int kHeroAutoLstFieldNumber = 12;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& heroautolst() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_heroautolst();
  inline ::google::protobuf::int32 heroautolst(int index) const;
  inline void set_heroautolst(int index, ::google::protobuf::int32 value);
  inline void add_heroautolst(::google::protobuf::int32 value);
  
  // repeated int32 heroarenaLst = 13;
  inline int heroarenalst_size() const;
  inline void clear_heroarenalst();
  static const int kHeroarenaLstFieldNumber = 13;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& heroarenalst() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_heroarenalst();
  inline ::google::protobuf::int32 heroarenalst(int index) const;
  inline void set_heroarenalst(int index, ::google::protobuf::int32 value);
  inline void add_heroarenalst(::google::protobuf::int32 value);
  
  // optional int32 nAtkPartnerNum = 14;
  inline bool has_natkpartnernum() const;
  inline void clear_natkpartnernum();
  static const int kNAtkPartnerNumFieldNumber = 14;
  inline ::google::protobuf::int32 natkpartnernum() const;
  inline void set_natkpartnernum(::google::protobuf::int32 value);
  
  // optional int32 nDefPartnerNum = 15;
  inline bool has_ndefpartnernum() const;
  inline void clear_ndefpartnernum();
  static const int kNDefPartnerNumFieldNumber = 15;
  inline ::google::protobuf::int32 ndefpartnernum() const;
  inline void set_ndefpartnernum(::google::protobuf::int32 value);
  
  // optional int32 nAutoPartnerNum = 16;
  inline bool has_nautopartnernum() const;
  inline void clear_nautopartnernum();
  static const int kNAutoPartnerNumFieldNumber = 16;
  inline ::google::protobuf::int32 nautopartnernum() const;
  inline void set_nautopartnernum(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::DB_Hero > hero_;
  ::google::protobuf::RepeatedPtrField< ::DB_HeroLetter > heroletter_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > freevisitcnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > finishvisittime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > collectlst_;
  bool hassendhero_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > sendid_;
  bool hascreditvisit_;
  ::google::protobuf::RepeatedPtrField< ::DB_UpgradeHero > heroupgrade_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > heroatklst_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > herodeflst_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > heroautolst_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > heroarenalst_;
  ::google::protobuf::int32 natkpartnernum_;
  ::google::protobuf::int32 ndefpartnernum_;
  ::google::protobuf::int32 nautopartnernum_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_HeroInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB_Flag : public ::google::protobuf::Message {
 public:
  DB_Flag();
  virtual ~DB_Flag();
  
  DB_Flag(const DB_Flag& from);
  
  inline DB_Flag& operator=(const DB_Flag& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Flag& default_instance();
  void Swap(DB_Flag* other);
  
  // implements Message ----------------------------------------------
  
  DB_Flag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Flag& from);
  void MergeFrom(const DB_Flag& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 music = 1;
  inline bool has_music() const;
  inline void clear_music();
  static const int kMusicFieldNumber = 1;
  inline ::google::protobuf::int32 music() const;
  inline void set_music(::google::protobuf::int32 value);
  
  // optional int32 effect = 2;
  inline bool has_effect() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 2;
  inline ::google::protobuf::int32 effect() const;
  inline void set_effect(::google::protobuf::int32 value);
  
  // optional int32 quality = 3;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 3;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);
  
  // optional int32 allianceWelcome = 4;
  inline bool has_alliancewelcome() const;
  inline void clear_alliancewelcome();
  static const int kAllianceWelcomeFieldNumber = 4;
  inline ::google::protobuf::int32 alliancewelcome() const;
  inline void set_alliancewelcome(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 music_;
  ::google::protobuf::int32 effect_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 alliancewelcome_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Flag* default_instance_;
};
// -------------------------------------------------------------------

class DB_Storedata : public ::google::protobuf::Message {
 public:
  DB_Storedata();
  virtual ~DB_Storedata();
  
  DB_Storedata(const DB_Storedata& from);
  
  inline DB_Storedata& operator=(const DB_Storedata& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Storedata& default_instance();
  void Swap(DB_Storedata* other);
  
  // implements Message ----------------------------------------------
  
  DB_Storedata* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Storedata& from);
  void MergeFrom(const DB_Storedata& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  
  // optional int32 q = 2;
  inline bool has_q() const;
  inline void clear_q();
  static const int kQFieldNumber = 2;
  inline ::google::protobuf::int32 q() const;
  inline void set_q(::google::protobuf::int32 value);
  
  // optional int32 s = 3;
  inline bool has_s() const;
  inline void clear_s();
  static const int kSFieldNumber = 3;
  inline ::google::protobuf::int32 s() const;
  inline void set_s(::google::protobuf::int32 value);
  
  // optional int32 e = 4;
  inline bool has_e() const;
  inline void clear_e();
  static const int kEFieldNumber = 4;
  inline ::google::protobuf::int32 e() const;
  inline void set_e(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* type_;
  static const ::std::string _default_type_;
  ::google::protobuf::int32 q_;
  ::google::protobuf::int32 s_;
  ::google::protobuf::int32 e_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Storedata* default_instance_;
};
// -------------------------------------------------------------------

class DB_EnemyStar : public ::google::protobuf::Message {
 public:
  DB_EnemyStar();
  virtual ~DB_EnemyStar();
  
  DB_EnemyStar(const DB_EnemyStar& from);
  
  inline DB_EnemyStar& operator=(const DB_EnemyStar& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_EnemyStar& default_instance();
  void Swap(DB_EnemyStar* other);
  
  // implements Message ----------------------------------------------
  
  DB_EnemyStar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_EnemyStar& from);
  void MergeFrom(const DB_EnemyStar& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 enemyID = 1;
  inline bool has_enemyid() const;
  inline void clear_enemyid();
  static const int kEnemyIDFieldNumber = 1;
  inline ::google::protobuf::int64 enemyid() const;
  inline void set_enemyid(::google::protobuf::int64 value);
  
  // optional int64 attactCnt = 2;
  inline bool has_attactcnt() const;
  inline void clear_attactcnt();
  static const int kAttactCntFieldNumber = 2;
  inline ::google::protobuf::int64 attactcnt() const;
  inline void set_attactcnt(::google::protobuf::int64 value);
  
  // optional int64 recoveryCnt = 3;
  inline bool has_recoverycnt() const;
  inline void clear_recoverycnt();
  static const int kRecoveryCntFieldNumber = 3;
  inline ::google::protobuf::int64 recoverycnt() const;
  inline void set_recoverycnt(::google::protobuf::int64 value);
  
  // optional int32 attacktime = 4;
  inline bool has_attacktime() const;
  inline void clear_attacktime();
  static const int kAttacktimeFieldNumber = 4;
  inline ::google::protobuf::int32 attacktime() const;
  inline void set_attacktime(::google::protobuf::int32 value);
  
  // optional int32 countdown = 5 [default = 0];
  inline bool has_countdown() const;
  inline void clear_countdown();
  static const int kCountdownFieldNumber = 5;
  inline ::google::protobuf::int32 countdown() const;
  inline void set_countdown(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 enemyid_;
  ::google::protobuf::int64 attactcnt_;
  ::google::protobuf::int64 recoverycnt_;
  ::google::protobuf::int32 attacktime_;
  ::google::protobuf::int32 countdown_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_EnemyStar* default_instance_;
};
// -------------------------------------------------------------------

class DB_GiftFrdInfo : public ::google::protobuf::Message {
 public:
  DB_GiftFrdInfo();
  virtual ~DB_GiftFrdInfo();
  
  DB_GiftFrdInfo(const DB_GiftFrdInfo& from);
  
  inline DB_GiftFrdInfo& operator=(const DB_GiftFrdInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_GiftFrdInfo& default_instance();
  void Swap(DB_GiftFrdInfo* other);
  
  // implements Message ----------------------------------------------
  
  DB_GiftFrdInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_GiftFrdInfo& from);
  void MergeFrom(const DB_GiftFrdInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 friendID = 1;
  inline bool has_friendid() const;
  inline void clear_friendid();
  static const int kFriendIDFieldNumber = 1;
  inline ::google::protobuf::int64 friendid() const;
  inline void set_friendid(::google::protobuf::int64 value);
  
  // optional string frdOpenID = 2;
  inline bool has_frdopenid() const;
  inline void clear_frdopenid();
  static const int kFrdOpenIDFieldNumber = 2;
  inline const ::std::string& frdopenid() const;
  inline void set_frdopenid(const ::std::string& value);
  inline void set_frdopenid(const char* value);
  inline void set_frdopenid(const char* value, size_t size);
  inline ::std::string* mutable_frdopenid();
  
  // optional int32 messageID = 3;
  inline bool has_messageid() const;
  inline void clear_messageid();
  static const int kMessageIDFieldNumber = 3;
  inline ::google::protobuf::int32 messageid() const;
  inline void set_messageid(::google::protobuf::int32 value);
  
  // optional int32 giftID = 4 [default = 0];
  inline bool has_giftid() const;
  inline void clear_giftid();
  static const int kGiftIDFieldNumber = 4;
  inline ::google::protobuf::int32 giftid() const;
  inline void set_giftid(::google::protobuf::int32 value);
  
  // optional int64 getTime = 5 [default = 0];
  inline bool has_gettime() const;
  inline void clear_gettime();
  static const int kGetTimeFieldNumber = 5;
  inline ::google::protobuf::int64 gettime() const;
  inline void set_gettime(::google::protobuf::int64 value);
  
  // optional int32 giftType = 6 [default = 0];
  inline bool has_gifttype() const;
  inline void clear_gifttype();
  static const int kGiftTypeFieldNumber = 6;
  inline ::google::protobuf::int32 gifttype() const;
  inline void set_gifttype(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 friendid_;
  ::std::string* frdopenid_;
  static const ::std::string _default_frdopenid_;
  ::google::protobuf::int32 messageid_;
  ::google::protobuf::int32 giftid_;
  ::google::protobuf::int64 gettime_;
  ::google::protobuf::int32 gifttype_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_GiftFrdInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB_NewComerGiftList : public ::google::protobuf::Message {
 public:
  DB_NewComerGiftList();
  virtual ~DB_NewComerGiftList();
  
  DB_NewComerGiftList(const DB_NewComerGiftList& from);
  
  inline DB_NewComerGiftList& operator=(const DB_NewComerGiftList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_NewComerGiftList& default_instance();
  void Swap(DB_NewComerGiftList* other);
  
  // implements Message ----------------------------------------------
  
  DB_NewComerGiftList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_NewComerGiftList& from);
  void MergeFrom(const DB_NewComerGiftList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 newComerGiftID = 1;
  inline bool has_newcomergiftid() const;
  inline void clear_newcomergiftid();
  static const int kNewComerGiftIDFieldNumber = 1;
  inline ::google::protobuf::int32 newcomergiftid() const;
  inline void set_newcomergiftid(::google::protobuf::int32 value);
  
  // optional int32 newComerGiftGain = 2;
  inline bool has_newcomergiftgain() const;
  inline void clear_newcomergiftgain();
  static const int kNewComerGiftGainFieldNumber = 2;
  inline ::google::protobuf::int32 newcomergiftgain() const;
  inline void set_newcomergiftgain(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 newcomergiftid_;
  ::google::protobuf::int32 newcomergiftgain_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_NewComerGiftList* default_instance_;
};
// -------------------------------------------------------------------

class DB_GiftInfo : public ::google::protobuf::Message {
 public:
  DB_GiftInfo();
  virtual ~DB_GiftInfo();
  
  DB_GiftInfo(const DB_GiftInfo& from);
  
  inline DB_GiftInfo& operator=(const DB_GiftInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_GiftInfo& default_instance();
  void Swap(DB_GiftInfo* other);
  
  // implements Message ----------------------------------------------
  
  DB_GiftInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_GiftInfo& from);
  void MergeFrom(const DB_GiftInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string daySendFrdIDLst = 1;
  inline int daysendfrdidlst_size() const;
  inline void clear_daysendfrdidlst();
  static const int kDaySendFrdIDLstFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& daysendfrdidlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_daysendfrdidlst();
  inline const ::std::string& daysendfrdidlst(int index) const;
  inline ::std::string* mutable_daysendfrdidlst(int index);
  inline void set_daysendfrdidlst(int index, const ::std::string& value);
  inline void set_daysendfrdidlst(int index, const char* value);
  inline void set_daysendfrdidlst(int index, const char* value, size_t size);
  inline ::std::string* add_daysendfrdidlst();
  inline void add_daysendfrdidlst(const ::std::string& value);
  inline void add_daysendfrdidlst(const char* value);
  inline void add_daysendfrdidlst(const char* value, size_t size);
  
  // repeated string dayAskFrdIDLst = 2;
  inline int dayaskfrdidlst_size() const;
  inline void clear_dayaskfrdidlst();
  static const int kDayAskFrdIDLstFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& dayaskfrdidlst() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_dayaskfrdidlst();
  inline const ::std::string& dayaskfrdidlst(int index) const;
  inline ::std::string* mutable_dayaskfrdidlst(int index);
  inline void set_dayaskfrdidlst(int index, const ::std::string& value);
  inline void set_dayaskfrdidlst(int index, const char* value);
  inline void set_dayaskfrdidlst(int index, const char* value, size_t size);
  inline ::std::string* add_dayaskfrdidlst();
  inline void add_dayaskfrdidlst(const ::std::string& value);
  inline void add_dayaskfrdidlst(const char* value);
  inline void add_dayaskfrdidlst(const char* value, size_t size);
  
  // optional int32 dayGetGift2BagCnt = 3;
  inline bool has_daygetgift2bagcnt() const;
  inline void clear_daygetgift2bagcnt();
  static const int kDayGetGift2BagCntFieldNumber = 3;
  inline ::google::protobuf::int32 daygetgift2bagcnt() const;
  inline void set_daygetgift2bagcnt(::google::protobuf::int32 value);
  
  // optional int32 dayAskGift2BagCnt = 4;
  inline bool has_dayaskgift2bagcnt() const;
  inline void clear_dayaskgift2bagcnt();
  static const int kDayAskGift2BagCntFieldNumber = 4;
  inline ::google::protobuf::int32 dayaskgift2bagcnt() const;
  inline void set_dayaskgift2bagcnt(::google::protobuf::int32 value);
  
  // optional int32 dayGetGiftCnt = 5;
  inline bool has_daygetgiftcnt() const;
  inline void clear_daygetgiftcnt();
  static const int kDayGetGiftCntFieldNumber = 5;
  inline ::google::protobuf::int32 daygetgiftcnt() const;
  inline void set_daygetgiftcnt(::google::protobuf::int32 value);
  
  // optional int32 dayResendGiftCnt = 6;
  inline bool has_dayresendgiftcnt() const;
  inline void clear_dayresendgiftcnt();
  static const int kDayResendGiftCntFieldNumber = 6;
  inline ::google::protobuf::int32 dayresendgiftcnt() const;
  inline void set_dayresendgiftcnt(::google::protobuf::int32 value);
  
  // repeated .DB_GiftFrdInfo getGiftInfo = 7;
  inline int getgiftinfo_size() const;
  inline void clear_getgiftinfo();
  static const int kGetGiftInfoFieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_GiftFrdInfo >& getgiftinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_GiftFrdInfo >* mutable_getgiftinfo();
  inline const ::DB_GiftFrdInfo& getgiftinfo(int index) const;
  inline ::DB_GiftFrdInfo* mutable_getgiftinfo(int index);
  inline ::DB_GiftFrdInfo* add_getgiftinfo();
  
  // repeated .DB_GiftFrdInfo finishGiftInfo = 8;
  inline int finishgiftinfo_size() const;
  inline void clear_finishgiftinfo();
  static const int kFinishGiftInfoFieldNumber = 8;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_GiftFrdInfo >& finishgiftinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_GiftFrdInfo >* mutable_finishgiftinfo();
  inline const ::DB_GiftFrdInfo& finishgiftinfo(int index) const;
  inline ::DB_GiftFrdInfo* mutable_finishgiftinfo(int index);
  inline ::DB_GiftFrdInfo* add_finishgiftinfo();
  
  // optional int32 msgIdx = 9 [default = 0];
  inline bool has_msgidx() const;
  inline void clear_msgidx();
  static const int kMsgIdxFieldNumber = 9;
  inline ::google::protobuf::int32 msgidx() const;
  inline void set_msgidx(::google::protobuf::int32 value);
  
  // optional int64 lastLoginTime = 10 [default = 0];
  inline bool has_lastlogintime() const;
  inline void clear_lastlogintime();
  static const int kLastLoginTimeFieldNumber = 10;
  inline ::google::protobuf::int64 lastlogintime() const;
  inline void set_lastlogintime(::google::protobuf::int64 value);
  
  // optional int32 daySendGiftCnt = 11;
  inline bool has_daysendgiftcnt() const;
  inline void clear_daysendgiftcnt();
  static const int kDaySendGiftCntFieldNumber = 11;
  inline ::google::protobuf::int32 daysendgiftcnt() const;
  inline void set_daysendgiftcnt(::google::protobuf::int32 value);
  
  // repeated .DB_NewComerGiftList newComerGiftList = 12;
  inline int newcomergiftlist_size() const;
  inline void clear_newcomergiftlist();
  static const int kNewComerGiftListFieldNumber = 12;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_NewComerGiftList >& newcomergiftlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_NewComerGiftList >* mutable_newcomergiftlist();
  inline const ::DB_NewComerGiftList& newcomergiftlist(int index) const;
  inline ::DB_NewComerGiftList* mutable_newcomergiftlist(int index);
  inline ::DB_NewComerGiftList* add_newcomergiftlist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> daysendfrdidlst_;
  ::google::protobuf::RepeatedPtrField< ::std::string> dayaskfrdidlst_;
  ::google::protobuf::int32 daygetgift2bagcnt_;
  ::google::protobuf::int32 dayaskgift2bagcnt_;
  ::google::protobuf::int32 daygetgiftcnt_;
  ::google::protobuf::int32 dayresendgiftcnt_;
  ::google::protobuf::RepeatedPtrField< ::DB_GiftFrdInfo > getgiftinfo_;
  ::google::protobuf::RepeatedPtrField< ::DB_GiftFrdInfo > finishgiftinfo_;
  ::google::protobuf::int32 msgidx_;
  ::google::protobuf::int64 lastlogintime_;
  ::google::protobuf::int32 daysendgiftcnt_;
  ::google::protobuf::RepeatedPtrField< ::DB_NewComerGiftList > newcomergiftlist_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_GiftInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB_DayAtkUser : public ::google::protobuf::Message {
 public:
  DB_DayAtkUser();
  virtual ~DB_DayAtkUser();
  
  DB_DayAtkUser(const DB_DayAtkUser& from);
  
  inline DB_DayAtkUser& operator=(const DB_DayAtkUser& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_DayAtkUser& default_instance();
  void Swap(DB_DayAtkUser* other);
  
  // implements Message ----------------------------------------------
  
  DB_DayAtkUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_DayAtkUser& from);
  void MergeFrom(const DB_DayAtkUser& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 dayAtkUserID = 1 [default = 0];
  inline bool has_dayatkuserid() const;
  inline void clear_dayatkuserid();
  static const int kDayAtkUserIDFieldNumber = 1;
  inline ::google::protobuf::int64 dayatkuserid() const;
  inline void set_dayatkuserid(::google::protobuf::int64 value);
  
  // optional int64 dayAtkUserCnt = 2 [default = 0];
  inline bool has_dayatkusercnt() const;
  inline void clear_dayatkusercnt();
  static const int kDayAtkUserCntFieldNumber = 2;
  inline ::google::protobuf::int64 dayatkusercnt() const;
  inline void set_dayatkusercnt(::google::protobuf::int64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 dayatkuserid_;
  ::google::protobuf::int64 dayatkusercnt_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_DayAtkUser* default_instance_;
};
// -------------------------------------------------------------------

class DB_UserStar : public ::google::protobuf::Message {
 public:
  DB_UserStar();
  virtual ~DB_UserStar();
  
  DB_UserStar(const DB_UserStar& from);
  
  inline DB_UserStar& operator=(const DB_UserStar& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_UserStar& default_instance();
  void Swap(DB_UserStar* other);
  
  // implements Message ----------------------------------------------
  
  DB_UserStar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_UserStar& from);
  void MergeFrom(const DB_UserStar& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int64 enemyID = 1;
  inline int enemyid_size() const;
  inline void clear_enemyid();
  static const int kEnemyIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >& enemyid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >* mutable_enemyid();
  inline ::google::protobuf::int64 enemyid(int index) const;
  inline void set_enemyid(int index, ::google::protobuf::int64 value);
  inline void add_enemyid(::google::protobuf::int64 value);
  
  // repeated int64 attactCnt = 2;
  inline int attactcnt_size() const;
  inline void clear_attactcnt();
  static const int kAttactCntFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >& attactcnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >* mutable_attactcnt();
  inline ::google::protobuf::int64 attactcnt(int index) const;
  inline void set_attactcnt(int index, ::google::protobuf::int64 value);
  inline void add_attactcnt(::google::protobuf::int64 value);
  
  // repeated int64 recoveryCnt = 3;
  inline int recoverycnt_size() const;
  inline void clear_recoverycnt();
  static const int kRecoveryCntFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >& recoverycnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >* mutable_recoverycnt();
  inline ::google::protobuf::int64 recoverycnt(int index) const;
  inline void set_recoverycnt(int index, ::google::protobuf::int64 value);
  inline void add_recoverycnt(::google::protobuf::int64 value);
  
  // repeated .DB_EnemyStar EnemyList = 4;
  inline int enemylist_size() const;
  inline void clear_enemylist();
  static const int kEnemyListFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_EnemyStar >& enemylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_EnemyStar >* mutable_enemylist();
  inline const ::DB_EnemyStar& enemylist(int index) const;
  inline ::DB_EnemyStar* mutable_enemylist(int index);
  inline ::DB_EnemyStar* add_enemylist();
  
  // repeated .DB_DayAtkUser dayAtkInfo = 5;
  inline int dayatkinfo_size() const;
  inline void clear_dayatkinfo();
  static const int kDayAtkInfoFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_DayAtkUser >& dayatkinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_DayAtkUser >* mutable_dayatkinfo();
  inline const ::DB_DayAtkUser& dayatkinfo(int index) const;
  inline ::DB_DayAtkUser* mutable_dayatkinfo(int index);
  inline ::DB_DayAtkUser* add_dayatkinfo();
  
  // optional int32 dayDestroySlaveRoomCnt = 6 [default = 0];
  inline bool has_daydestroyslaveroomcnt() const;
  inline void clear_daydestroyslaveroomcnt();
  static const int kDayDestroySlaveRoomCntFieldNumber = 6;
  inline ::google::protobuf::int32 daydestroyslaveroomcnt() const;
  inline void set_daydestroyslaveroomcnt(::google::protobuf::int32 value);
  
  // optional int32 dayAtkCount = 7 [default = 0];
  inline bool has_dayatkcount() const;
  inline void clear_dayatkcount();
  static const int kDayAtkCountFieldNumber = 7;
  inline ::google::protobuf::int32 dayatkcount() const;
  inline void set_dayatkcount(::google::protobuf::int32 value);
  
  // optional int32 dayDefCount = 8 [default = 0];
  inline bool has_daydefcount() const;
  inline void clear_daydefcount();
  static const int kDayDefCountFieldNumber = 8;
  inline ::google::protobuf::int32 daydefcount() const;
  inline void set_daydefcount(::google::protobuf::int32 value);
  
  // optional int32 sprweaponhurtednum = 9 [default = 0];
  inline bool has_sprweaponhurtednum() const;
  inline void clear_sprweaponhurtednum();
  static const int kSprweaponhurtednumFieldNumber = 9;
  inline ::google::protobuf::int32 sprweaponhurtednum() const;
  inline void set_sprweaponhurtednum(::google::protobuf::int32 value);
  
  // optional int32 sprweaponhurtedtime = 10 [default = 0];
  inline bool has_sprweaponhurtedtime() const;
  inline void clear_sprweaponhurtedtime();
  static const int kSprweaponhurtedtimeFieldNumber = 10;
  inline ::google::protobuf::int32 sprweaponhurtedtime() const;
  inline void set_sprweaponhurtedtime(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > enemyid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > attactcnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > recoverycnt_;
  ::google::protobuf::RepeatedPtrField< ::DB_EnemyStar > enemylist_;
  ::google::protobuf::RepeatedPtrField< ::DB_DayAtkUser > dayatkinfo_;
  ::google::protobuf::int32 daydestroyslaveroomcnt_;
  ::google::protobuf::int32 dayatkcount_;
  ::google::protobuf::int32 daydefcount_;
  ::google::protobuf::int32 sprweaponhurtednum_;
  ::google::protobuf::int32 sprweaponhurtedtime_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_UserStar* default_instance_;
};
// -------------------------------------------------------------------

class DB_DefenseActivityNode : public ::google::protobuf::Message {
 public:
  DB_DefenseActivityNode();
  virtual ~DB_DefenseActivityNode();
  
  DB_DefenseActivityNode(const DB_DefenseActivityNode& from);
  
  inline DB_DefenseActivityNode& operator=(const DB_DefenseActivityNode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_DefenseActivityNode& default_instance();
  void Swap(DB_DefenseActivityNode* other);
  
  // implements Message ----------------------------------------------
  
  DB_DefenseActivityNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_DefenseActivityNode& from);
  void MergeFrom(const DB_DefenseActivityNode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 activityid = 1 [default = 0];
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityidFieldNumber = 1;
  inline ::google::protobuf::int32 activityid() const;
  inline void set_activityid(::google::protobuf::int32 value);
  
  // optional int32 activitycut = 2 [default = 0];
  inline bool has_activitycut() const;
  inline void clear_activitycut();
  static const int kActivitycutFieldNumber = 2;
  inline ::google::protobuf::int32 activitycut() const;
  inline void set_activitycut(::google::protobuf::int32 value);
  
  // repeated bool awardlist = 3;
  inline int awardlist_size() const;
  inline void clear_awardlist();
  static const int kAwardlistFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< bool >& awardlist() const
      ;
  inline ::google::protobuf::RepeatedField< bool >* mutable_awardlist();
  inline bool awardlist(int index) const;
  inline void set_awardlist(int index, bool value);
  inline void add_awardlist(bool value);
  
  // optional int32 lstcustomtime = 4 [default = -1];
  inline bool has_lstcustomtime() const;
  inline void clear_lstcustomtime();
  static const int kLstcustomtimeFieldNumber = 4;
  inline ::google::protobuf::int32 lstcustomtime() const;
  inline void set_lstcustomtime(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 activityid_;
  ::google::protobuf::int32 activitycut_;
  ::google::protobuf::RepeatedField< bool > awardlist_;
  ::google::protobuf::int32 lstcustomtime_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_DefenseActivityNode* default_instance_;
};
// -------------------------------------------------------------------

class DB_DefenseActivity : public ::google::protobuf::Message {
 public:
  DB_DefenseActivity();
  virtual ~DB_DefenseActivity();
  
  DB_DefenseActivity(const DB_DefenseActivity& from);
  
  inline DB_DefenseActivity& operator=(const DB_DefenseActivity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_DefenseActivity& default_instance();
  void Swap(DB_DefenseActivity* other);
  
  // implements Message ----------------------------------------------
  
  DB_DefenseActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_DefenseActivity& from);
  void MergeFrom(const DB_DefenseActivity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .DB_DefenseActivityNode activities = 1;
  inline bool has_activities() const;
  inline void clear_activities();
  static const int kActivitiesFieldNumber = 1;
  inline const ::DB_DefenseActivityNode& activities() const;
  inline ::DB_DefenseActivityNode* mutable_activities();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::DB_DefenseActivityNode* activities_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_DefenseActivity* default_instance_;
};
// -------------------------------------------------------------------

class DB_DefenseHonor : public ::google::protobuf::Message {
 public:
  DB_DefenseHonor();
  virtual ~DB_DefenseHonor();
  
  DB_DefenseHonor(const DB_DefenseHonor& from);
  
  inline DB_DefenseHonor& operator=(const DB_DefenseHonor& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_DefenseHonor& default_instance();
  void Swap(DB_DefenseHonor* other);
  
  // implements Message ----------------------------------------------
  
  DB_DefenseHonor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_DefenseHonor& from);
  void MergeFrom(const DB_DefenseHonor& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 lastdefencehonorid = 1 [default = 0];
  inline bool has_lastdefencehonorid() const;
  inline void clear_lastdefencehonorid();
  static const int kLastdefencehonoridFieldNumber = 1;
  inline ::google::protobuf::int64 lastdefencehonorid() const;
  inline void set_lastdefencehonorid(::google::protobuf::int64 value);
  
  // optional int32 gaindefencehornorcnt = 2 [default = 0];
  inline bool has_gaindefencehornorcnt() const;
  inline void clear_gaindefencehornorcnt();
  static const int kGaindefencehornorcntFieldNumber = 2;
  inline ::google::protobuf::int32 gaindefencehornorcnt() const;
  inline void set_gaindefencehornorcnt(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 lastdefencehonorid_;
  ::google::protobuf::int32 gaindefencehornorcnt_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_DefenseHonor* default_instance_;
};
// -------------------------------------------------------------------

class DB_BuffUnit : public ::google::protobuf::Message {
 public:
  DB_BuffUnit();
  virtual ~DB_BuffUnit();
  
  DB_BuffUnit(const DB_BuffUnit& from);
  
  inline DB_BuffUnit& operator=(const DB_BuffUnit& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_BuffUnit& default_instance();
  void Swap(DB_BuffUnit* other);
  
  // implements Message ----------------------------------------------
  
  DB_BuffUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_BuffUnit& from);
  void MergeFrom(const DB_BuffUnit& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 bufftype = 1;
  inline bool has_bufftype() const;
  inline void clear_bufftype();
  static const int kBufftypeFieldNumber = 1;
  inline ::google::protobuf::int32 bufftype() const;
  inline void set_bufftype(::google::protobuf::int32 value);
  
  // optional uint32 buffEndTime = 2;
  inline bool has_buffendtime() const;
  inline void clear_buffendtime();
  static const int kBuffEndTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 buffendtime() const;
  inline void set_buffendtime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 bufftype_;
  ::google::protobuf::uint32 buffendtime_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_BuffUnit* default_instance_;
};
// -------------------------------------------------------------------

class DB_BuffData : public ::google::protobuf::Message {
 public:
  DB_BuffData();
  virtual ~DB_BuffData();
  
  DB_BuffData(const DB_BuffData& from);
  
  inline DB_BuffData& operator=(const DB_BuffData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_BuffData& default_instance();
  void Swap(DB_BuffData* other);
  
  // implements Message ----------------------------------------------
  
  DB_BuffData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_BuffData& from);
  void MergeFrom(const DB_BuffData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DB_BuffUnit bufflist = 1;
  inline int bufflist_size() const;
  inline void clear_bufflist();
  static const int kBufflistFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_BuffUnit >& bufflist() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_BuffUnit >* mutable_bufflist();
  inline const ::DB_BuffUnit& bufflist(int index) const;
  inline ::DB_BuffUnit* mutable_bufflist(int index);
  inline ::DB_BuffUnit* add_bufflist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::DB_BuffUnit > bufflist_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_BuffData* default_instance_;
};
// -------------------------------------------------------------------

class DB_BagItemLog : public ::google::protobuf::Message {
 public:
  DB_BagItemLog();
  virtual ~DB_BagItemLog();
  
  DB_BagItemLog(const DB_BagItemLog& from);
  
  inline DB_BagItemLog& operator=(const DB_BagItemLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_BagItemLog& default_instance();
  void Swap(DB_BagItemLog* other);
  
  // implements Message ----------------------------------------------
  
  DB_BagItemLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_BagItemLog& from);
  void MergeFrom(const DB_BagItemLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 logType = 1 [default = 0];
  inline bool has_logtype() const;
  inline void clear_logtype();
  static const int kLogTypeFieldNumber = 1;
  inline ::google::protobuf::int32 logtype() const;
  inline void set_logtype(::google::protobuf::int32 value);
  
  // optional int32 itemID = 2 [default = 0];
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);
  
  // optional int32 count = 3 [default = 0];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
  // optional int32 date = 4 [default = 0];
  inline bool has_date() const;
  inline void clear_date();
  static const int kDateFieldNumber = 4;
  inline ::google::protobuf::int32 date() const;
  inline void set_date(::google::protobuf::int32 value);
  
  // optional int32 medal = 5 [default = 0];
  inline bool has_medal() const;
  inline void clear_medal();
  static const int kMedalFieldNumber = 5;
  inline ::google::protobuf::int32 medal() const;
  inline void set_medal(::google::protobuf::int32 value);
  
  // optional int32 oil = 6 [default = 0];
  inline bool has_oil() const;
  inline void clear_oil();
  static const int kOilFieldNumber = 6;
  inline ::google::protobuf::int32 oil() const;
  inline void set_oil(::google::protobuf::int32 value);
  
  // optional int32 credit = 7 [default = 0];
  inline bool has_credit() const;
  inline void clear_credit();
  static const int kCreditFieldNumber = 7;
  inline ::google::protobuf::int32 credit() const;
  inline void set_credit(::google::protobuf::int32 value);
  
  // optional int32 honor = 8 [default = 0];
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 8;
  inline ::google::protobuf::int32 honor() const;
  inline void set_honor(::google::protobuf::int32 value);
  
  // repeated int32 itemType = 9;
  inline int itemtype_size() const;
  inline void clear_itemtype();
  static const int kItemTypeFieldNumber = 9;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& itemtype() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_itemtype();
  inline ::google::protobuf::int32 itemtype(int index) const;
  inline void set_itemtype(int index, ::google::protobuf::int32 value);
  inline void add_itemtype(::google::protobuf::int32 value);
  
  // repeated int32 itemCnt = 10;
  inline int itemcnt_size() const;
  inline void clear_itemcnt();
  static const int kItemCntFieldNumber = 10;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& itemcnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_itemcnt();
  inline ::google::protobuf::int32 itemcnt(int index) const;
  inline void set_itemcnt(int index, ::google::protobuf::int32 value);
  inline void add_itemcnt(::google::protobuf::int32 value);
  
  // repeated int32 armyType = 11;
  inline int armytype_size() const;
  inline void clear_armytype();
  static const int kArmyTypeFieldNumber = 11;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& armytype() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_armytype();
  inline ::google::protobuf::int32 armytype(int index) const;
  inline void set_armytype(int index, ::google::protobuf::int32 value);
  inline void add_armytype(::google::protobuf::int32 value);
  
  // repeated int32 armyCnt = 12;
  inline int armycnt_size() const;
  inline void clear_armycnt();
  static const int kArmyCntFieldNumber = 12;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& armycnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_armycnt();
  inline ::google::protobuf::int32 armycnt(int index) const;
  inline void set_armycnt(int index, ::google::protobuf::int32 value);
  inline void add_armycnt(::google::protobuf::int32 value);
  
  // repeated int32 weaponID = 13;
  inline int weaponid_size() const;
  inline void clear_weaponid();
  static const int kWeaponIDFieldNumber = 13;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& weaponid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_weaponid();
  inline ::google::protobuf::int32 weaponid(int index) const;
  inline void set_weaponid(int index, ::google::protobuf::int32 value);
  inline void add_weaponid(::google::protobuf::int32 value);
  
  // repeated int32 emblemID = 14;
  inline int emblemid_size() const;
  inline void clear_emblemid();
  static const int kEmblemIDFieldNumber = 14;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& emblemid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_emblemid();
  inline ::google::protobuf::int32 emblemid(int index) const;
  inline void set_emblemid(int index, ::google::protobuf::int32 value);
  inline void add_emblemid(::google::protobuf::int32 value);
  
  // repeated int32 weaponCnt = 15;
  inline int weaponcnt_size() const;
  inline void clear_weaponcnt();
  static const int kWeaponCntFieldNumber = 15;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& weaponcnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_weaponcnt();
  inline ::google::protobuf::int32 weaponcnt(int index) const;
  inline void set_weaponcnt(int index, ::google::protobuf::int32 value);
  inline void add_weaponcnt(::google::protobuf::int32 value);
  
  // repeated int32 emblemCnt = 16;
  inline int emblemcnt_size() const;
  inline void clear_emblemcnt();
  static const int kEmblemCntFieldNumber = 16;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& emblemcnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_emblemcnt();
  inline ::google::protobuf::int32 emblemcnt(int index) const;
  inline void set_emblemcnt(int index, ::google::protobuf::int32 value);
  inline void add_emblemcnt(::google::protobuf::int32 value);
  
  // repeated int32 admiralID = 17;
  inline int admiralid_size() const;
  inline void clear_admiralid();
  static const int kAdmiralIDFieldNumber = 17;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& admiralid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_admiralid();
  inline ::google::protobuf::int32 admiralid(int index) const;
  inline void set_admiralid(int index, ::google::protobuf::int32 value);
  inline void add_admiralid(::google::protobuf::int32 value);
  
  // repeated int32 admiralCnt = 18;
  inline int admiralcnt_size() const;
  inline void clear_admiralcnt();
  static const int kAdmiralCntFieldNumber = 18;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& admiralcnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_admiralcnt();
  inline ::google::protobuf::int32 admiralcnt(int index) const;
  inline void set_admiralcnt(int index, ::google::protobuf::int32 value);
  inline void add_admiralcnt(::google::protobuf::int32 value);
  
  // optional int32 feats = 19;
  inline bool has_feats() const;
  inline void clear_feats();
  static const int kFeatsFieldNumber = 19;
  inline ::google::protobuf::int32 feats() const;
  inline void set_feats(::google::protobuf::int32 value);
  
  // optional int32 thew = 20;
  inline bool has_thew() const;
  inline void clear_thew();
  static const int kThewFieldNumber = 20;
  inline ::google::protobuf::int32 thew() const;
  inline void set_thew(::google::protobuf::int32 value);
  
  // optional int32 morale = 21;
  inline bool has_morale() const;
  inline void clear_morale();
  static const int kMoraleFieldNumber = 21;
  inline ::google::protobuf::int32 morale() const;
  inline void set_morale(::google::protobuf::int32 value);
  
  // optional int32 zhangong = 22;
  inline bool has_zhangong() const;
  inline void clear_zhangong();
  static const int kZhangongFieldNumber = 22;
  inline ::google::protobuf::int32 zhangong() const;
  inline void set_zhangong(::google::protobuf::int32 value);
  
  // repeated int32 equipID = 23;
  inline int equipid_size() const;
  inline void clear_equipid();
  static const int kEquipIDFieldNumber = 23;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& equipid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_equipid();
  inline ::google::protobuf::int32 equipid(int index) const;
  inline void set_equipid(int index, ::google::protobuf::int32 value);
  inline void add_equipid(::google::protobuf::int32 value);
  
  // repeated int32 equipCnt = 24;
  inline int equipcnt_size() const;
  inline void clear_equipcnt();
  static const int kEquipCntFieldNumber = 24;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& equipcnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_equipcnt();
  inline ::google::protobuf::int32 equipcnt(int index) const;
  inline void set_equipcnt(int index, ::google::protobuf::int32 value);
  inline void add_equipcnt(::google::protobuf::int32 value);
  
  // optional int32 gScore = 25;
  inline bool has_gscore() const;
  inline void clear_gscore();
  static const int kGScoreFieldNumber = 25;
  inline ::google::protobuf::int32 gscore() const;
  inline void set_gscore(::google::protobuf::int32 value);
  
  // optional int32 admiralsoul = 26;
  inline bool has_admiralsoul() const;
  inline void clear_admiralsoul();
  static const int kAdmiralsoulFieldNumber = 26;
  inline ::google::protobuf::int32 admiralsoul() const;
  inline void set_admiralsoul(::google::protobuf::int32 value);
  
  // optional int32 cntrScore = 27 [default = 0];
  inline bool has_cntrscore() const;
  inline void clear_cntrscore();
  static const int kCntrScoreFieldNumber = 27;
  inline ::google::protobuf::int32 cntrscore() const;
  inline void set_cntrscore(::google::protobuf::int32 value);
  
  // repeated int32 admiralLetterID = 28;
  inline int admiralletterid_size() const;
  inline void clear_admiralletterid();
  static const int kAdmiralLetterIDFieldNumber = 28;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& admiralletterid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_admiralletterid();
  inline ::google::protobuf::int32 admiralletterid(int index) const;
  inline void set_admiralletterid(int index, ::google::protobuf::int32 value);
  inline void add_admiralletterid(::google::protobuf::int32 value);
  
  // repeated int32 admiralLetterCnt = 29;
  inline int admirallettercnt_size() const;
  inline void clear_admirallettercnt();
  static const int kAdmiralLetterCntFieldNumber = 29;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& admirallettercnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_admirallettercnt();
  inline ::google::protobuf::int32 admirallettercnt(int index) const;
  inline void set_admirallettercnt(int index, ::google::protobuf::int32 value);
  inline void add_admirallettercnt(::google::protobuf::int32 value);
  
  // repeated int32 heroLetterID = 30;
  inline int heroletterid_size() const;
  inline void clear_heroletterid();
  static const int kHeroLetterIDFieldNumber = 30;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& heroletterid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_heroletterid();
  inline ::google::protobuf::int32 heroletterid(int index) const;
  inline void set_heroletterid(int index, ::google::protobuf::int32 value);
  inline void add_heroletterid(::google::protobuf::int32 value);
  
  // repeated int32 heroLetterCnt = 31;
  inline int herolettercnt_size() const;
  inline void clear_herolettercnt();
  static const int kHeroLetterCntFieldNumber = 31;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& herolettercnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_herolettercnt();
  inline ::google::protobuf::int32 herolettercnt(int index) const;
  inline void set_herolettercnt(int index, ::google::protobuf::int32 value);
  inline void add_herolettercnt(::google::protobuf::int32 value);
  
  // optional int32 nMilitarySoul = 32;
  inline bool has_nmilitarysoul() const;
  inline void clear_nmilitarysoul();
  static const int kNMilitarySoulFieldNumber = 32;
  inline ::google::protobuf::int32 nmilitarysoul() const;
  inline void set_nmilitarysoul(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 logtype_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 date_;
  ::google::protobuf::int32 medal_;
  ::google::protobuf::int32 oil_;
  ::google::protobuf::int32 credit_;
  ::google::protobuf::int32 honor_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemtype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemcnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > armytype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > armycnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > weaponid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > emblemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > weaponcnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > emblemcnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > admiralid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > admiralcnt_;
  ::google::protobuf::int32 feats_;
  ::google::protobuf::int32 thew_;
  ::google::protobuf::int32 morale_;
  ::google::protobuf::int32 zhangong_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > equipid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > equipcnt_;
  ::google::protobuf::int32 gscore_;
  ::google::protobuf::int32 admiralsoul_;
  ::google::protobuf::int32 cntrscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > admiralletterid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > admirallettercnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > heroletterid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > herolettercnt_;
  ::google::protobuf::int32 nmilitarysoul_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(32 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_BagItemLog* default_instance_;
};
// -------------------------------------------------------------------

class DB_Log : public ::google::protobuf::Message {
 public:
  DB_Log();
  virtual ~DB_Log();
  
  DB_Log(const DB_Log& from);
  
  inline DB_Log& operator=(const DB_Log& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Log& default_instance();
  void Swap(DB_Log* other);
  
  // implements Message ----------------------------------------------
  
  DB_Log* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Log& from);
  void MergeFrom(const DB_Log& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DB_BagItemLog itemLog = 1;
  inline int itemlog_size() const;
  inline void clear_itemlog();
  static const int kItemLogFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_BagItemLog >& itemlog() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_BagItemLog >* mutable_itemlog();
  inline const ::DB_BagItemLog& itemlog(int index) const;
  inline ::DB_BagItemLog* mutable_itemlog(int index);
  inline ::DB_BagItemLog* add_itemlog();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::DB_BagItemLog > itemlog_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Log* default_instance_;
};
// -------------------------------------------------------------------

class DB_BagItem : public ::google::protobuf::Message {
 public:
  DB_BagItem();
  virtual ~DB_BagItem();
  
  DB_BagItem(const DB_BagItem& from);
  
  inline DB_BagItem& operator=(const DB_BagItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_BagItem& default_instance();
  void Swap(DB_BagItem* other);
  
  // implements Message ----------------------------------------------
  
  DB_BagItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_BagItem& from);
  void MergeFrom(const DB_BagItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 itemID = 1 [default = 0];
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);
  
  // optional int32 count = 2 [default = 0];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
  // optional int32 id = 3 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 getTime = 4 [default = 0];
  inline bool has_gettime() const;
  inline void clear_gettime();
  static const int kGetTimeFieldNumber = 4;
  inline ::google::protobuf::int32 gettime() const;
  inline void set_gettime(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 gettime_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_BagItem* default_instance_;
};
// -------------------------------------------------------------------

class DB_Bag : public ::google::protobuf::Message {
 public:
  DB_Bag();
  virtual ~DB_Bag();
  
  DB_Bag(const DB_Bag& from);
  
  inline DB_Bag& operator=(const DB_Bag& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Bag& default_instance();
  void Swap(DB_Bag* other);
  
  // implements Message ----------------------------------------------
  
  DB_Bag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Bag& from);
  void MergeFrom(const DB_Bag& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DB_BagItem bagItem = 1;
  inline int bagitem_size() const;
  inline void clear_bagitem();
  static const int kBagItemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_BagItem >& bagitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_BagItem >* mutable_bagitem();
  inline const ::DB_BagItem& bagitem(int index) const;
  inline ::DB_BagItem* mutable_bagitem(int index);
  inline ::DB_BagItem* add_bagitem();
  
  // optional int32 lastOpenTime = 2 [default = 0];
  inline bool has_lastopentime() const;
  inline void clear_lastopentime();
  static const int kLastOpenTimeFieldNumber = 2;
  inline ::google::protobuf::int32 lastopentime() const;
  inline void set_lastopentime(::google::protobuf::int32 value);
  
  // optional int32 bagLV = 3 [default = 0];
  inline bool has_baglv() const;
  inline void clear_baglv();
  static const int kBagLVFieldNumber = 3;
  inline ::google::protobuf::int32 baglv() const;
  inline void set_baglv(::google::protobuf::int32 value);
  
  // optional int32 bagUseCnt = 4 [default = 0];
  inline bool has_bagusecnt() const;
  inline void clear_bagusecnt();
  static const int kBagUseCntFieldNumber = 4;
  inline ::google::protobuf::int32 bagusecnt() const;
  inline void set_bagusecnt(::google::protobuf::int32 value);
  
  // repeated .DB_BagItem tmpBagItem = 5;
  inline int tmpbagitem_size() const;
  inline void clear_tmpbagitem();
  static const int kTmpBagItemFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_BagItem >& tmpbagitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_BagItem >* mutable_tmpbagitem();
  inline const ::DB_BagItem& tmpbagitem(int index) const;
  inline ::DB_BagItem* mutable_tmpbagitem(int index);
  inline ::DB_BagItem* add_tmpbagitem();
  
  // repeated .DB_BagItem virtualBagItem = 6;
  inline int virtualbagitem_size() const;
  inline void clear_virtualbagitem();
  static const int kVirtualBagItemFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_BagItem >& virtualbagitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_BagItem >* mutable_virtualbagitem();
  inline const ::DB_BagItem& virtualbagitem(int index) const;
  inline ::DB_BagItem* mutable_virtualbagitem(int index);
  inline ::DB_BagItem* add_virtualbagitem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::DB_BagItem > bagitem_;
  ::google::protobuf::int32 lastopentime_;
  ::google::protobuf::int32 baglv_;
  ::google::protobuf::int32 bagusecnt_;
  ::google::protobuf::RepeatedPtrField< ::DB_BagItem > tmpbagitem_;
  ::google::protobuf::RepeatedPtrField< ::DB_BagItem > virtualbagitem_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Bag* default_instance_;
};
// -------------------------------------------------------------------

class DB_MoonCake : public ::google::protobuf::Message {
 public:
  DB_MoonCake();
  virtual ~DB_MoonCake();
  
  DB_MoonCake(const DB_MoonCake& from);
  
  inline DB_MoonCake& operator=(const DB_MoonCake& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_MoonCake& default_instance();
  void Swap(DB_MoonCake* other);
  
  // implements Message ----------------------------------------------
  
  DB_MoonCake* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_MoonCake& from);
  void MergeFrom(const DB_MoonCake& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 moonCakeCnt = 1 [default = 0];
  inline bool has_mooncakecnt() const;
  inline void clear_mooncakecnt();
  static const int kMoonCakeCntFieldNumber = 1;
  inline ::google::protobuf::int32 mooncakecnt() const;
  inline void set_mooncakecnt(::google::protobuf::int32 value);
  
  // optional int32 goldLevel = 2 [default = 0];
  inline bool has_goldlevel() const;
  inline void clear_goldlevel();
  static const int kGoldLevelFieldNumber = 2;
  inline ::google::protobuf::int32 goldlevel() const;
  inline void set_goldlevel(::google::protobuf::int32 value);
  
  // optional int32 silverLevel = 3 [default = 0];
  inline bool has_silverlevel() const;
  inline void clear_silverlevel();
  static const int kSilverLevelFieldNumber = 3;
  inline ::google::protobuf::int32 silverlevel() const;
  inline void set_silverlevel(::google::protobuf::int32 value);
  
  // repeated int64 frdID = 4;
  inline int frdid_size() const;
  inline void clear_frdid();
  static const int kFrdIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >& frdid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >* mutable_frdid();
  inline ::google::protobuf::int64 frdid(int index) const;
  inline void set_frdid(int index, ::google::protobuf::int64 value);
  inline void add_frdid(::google::protobuf::int64 value);
  
  // repeated int32 visitFrdCnt = 5;
  inline int visitfrdcnt_size() const;
  inline void clear_visitfrdcnt();
  static const int kVisitFrdCntFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& visitfrdcnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_visitfrdcnt();
  inline ::google::protobuf::int32 visitfrdcnt(int index) const;
  inline void set_visitfrdcnt(int index, ::google::protobuf::int32 value);
  inline void add_visitfrdcnt(::google::protobuf::int32 value);
  
  // optional int32 dayAccSucCnt = 6 [default = 0];
  inline bool has_dayaccsuccnt() const;
  inline void clear_dayaccsuccnt();
  static const int kDayAccSucCntFieldNumber = 6;
  inline ::google::protobuf::int32 dayaccsuccnt() const;
  inline void set_dayaccsuccnt(::google::protobuf::int32 value);
  
  // repeated int32 getAccRewardCnt = 7;
  inline int getaccrewardcnt_size() const;
  inline void clear_getaccrewardcnt();
  static const int kGetAccRewardCntFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& getaccrewardcnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_getaccrewardcnt();
  inline ::google::protobuf::int32 getaccrewardcnt(int index) const;
  inline void set_getaccrewardcnt(int index, ::google::protobuf::int32 value);
  inline void add_getaccrewardcnt(::google::protobuf::int32 value);
  
  // optional int64 lastLoginTime = 8 [default = 0];
  inline bool has_lastlogintime() const;
  inline void clear_lastlogintime();
  static const int kLastLoginTimeFieldNumber = 8;
  inline ::google::protobuf::int64 lastlogintime() const;
  inline void set_lastlogintime(::google::protobuf::int64 value);
  
  // optional int32 accSucMoonCakeCnt = 9 [default = 0];
  inline bool has_accsucmooncakecnt() const;
  inline void clear_accsucmooncakecnt();
  static const int kAccSucMoonCakeCntFieldNumber = 9;
  inline ::google::protobuf::int32 accsucmooncakecnt() const;
  inline void set_accsucmooncakecnt(::google::protobuf::int32 value);
  
  // optional int32 maxSucMoonCakeCnt = 10 [default = 0];
  inline bool has_maxsucmooncakecnt() const;
  inline void clear_maxsucmooncakecnt();
  static const int kMaxSucMoonCakeCntFieldNumber = 10;
  inline ::google::protobuf::int32 maxsucmooncakecnt() const;
  inline void set_maxsucmooncakecnt(::google::protobuf::int32 value);
  
  // optional int32 activeFlag = 11 [default = 0];
  inline bool has_activeflag() const;
  inline void clear_activeflag();
  static const int kActiveFlagFieldNumber = 11;
  inline ::google::protobuf::int32 activeflag() const;
  inline void set_activeflag(::google::protobuf::int32 value);
  
  // optional int32 dayGetFlag1Cnt = 12 [default = 0];
  inline bool has_daygetflag1cnt() const;
  inline void clear_daygetflag1cnt();
  static const int kDayGetFlag1CntFieldNumber = 12;
  inline ::google::protobuf::int32 daygetflag1cnt() const;
  inline void set_daygetflag1cnt(::google::protobuf::int32 value);
  
  // optional int32 accGetFlag1Cnt = 13 [default = 0];
  inline bool has_accgetflag1cnt() const;
  inline void clear_accgetflag1cnt();
  static const int kAccGetFlag1CntFieldNumber = 13;
  inline ::google::protobuf::int32 accgetflag1cnt() const;
  inline void set_accgetflag1cnt(::google::protobuf::int32 value);
  
  // optional int32 accGetFlag2Cnt = 14 [default = 0];
  inline bool has_accgetflag2cnt() const;
  inline void clear_accgetflag2cnt();
  static const int kAccGetFlag2CntFieldNumber = 14;
  inline ::google::protobuf::int32 accgetflag2cnt() const;
  inline void set_accgetflag2cnt(::google::protobuf::int32 value);
  
  // optional int32 dayGetFlag2Cnt = 15 [default = 0];
  inline bool has_daygetflag2cnt() const;
  inline void clear_daygetflag2cnt();
  static const int kDayGetFlag2CntFieldNumber = 15;
  inline ::google::protobuf::int32 daygetflag2cnt() const;
  inline void set_daygetflag2cnt(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 mooncakecnt_;
  ::google::protobuf::int32 goldlevel_;
  ::google::protobuf::int32 silverlevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > frdid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > visitfrdcnt_;
  ::google::protobuf::int32 dayaccsuccnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > getaccrewardcnt_;
  ::google::protobuf::int64 lastlogintime_;
  ::google::protobuf::int32 accsucmooncakecnt_;
  ::google::protobuf::int32 maxsucmooncakecnt_;
  ::google::protobuf::int32 activeflag_;
  ::google::protobuf::int32 daygetflag1cnt_;
  ::google::protobuf::int32 accgetflag1cnt_;
  ::google::protobuf::int32 accgetflag2cnt_;
  ::google::protobuf::int32 daygetflag2cnt_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_MoonCake* default_instance_;
};
// -------------------------------------------------------------------

class DB_HolidayDraw : public ::google::protobuf::Message {
 public:
  DB_HolidayDraw();
  virtual ~DB_HolidayDraw();
  
  DB_HolidayDraw(const DB_HolidayDraw& from);
  
  inline DB_HolidayDraw& operator=(const DB_HolidayDraw& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_HolidayDraw& default_instance();
  void Swap(DB_HolidayDraw* other);
  
  // implements Message ----------------------------------------------
  
  DB_HolidayDraw* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_HolidayDraw& from);
  void MergeFrom(const DB_HolidayDraw& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 activeFlag = 1 [default = 0];
  inline bool has_activeflag() const;
  inline void clear_activeflag();
  static const int kActiveFlagFieldNumber = 1;
  inline ::google::protobuf::int32 activeflag() const;
  inline void set_activeflag(::google::protobuf::int32 value);
  
  // optional int32 goldLevel = 2 [default = 0];
  inline bool has_goldlevel() const;
  inline void clear_goldlevel();
  static const int kGoldLevelFieldNumber = 2;
  inline ::google::protobuf::int32 goldlevel() const;
  inline void set_goldlevel(::google::protobuf::int32 value);
  
  // optional int32 silverLevel = 3 [default = 0];
  inline bool has_silverlevel() const;
  inline void clear_silverlevel();
  static const int kSilverLevelFieldNumber = 3;
  inline ::google::protobuf::int32 silverlevel() const;
  inline void set_silverlevel(::google::protobuf::int32 value);
  
  // repeated int64 frdID = 4;
  inline int frdid_size() const;
  inline void clear_frdid();
  static const int kFrdIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >& frdid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >* mutable_frdid();
  inline ::google::protobuf::int64 frdid(int index) const;
  inline void set_frdid(int index, ::google::protobuf::int64 value);
  inline void add_frdid(::google::protobuf::int64 value);
  
  // repeated int32 visitFrdCnt = 5;
  inline int visitfrdcnt_size() const;
  inline void clear_visitfrdcnt();
  static const int kVisitFrdCntFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& visitfrdcnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_visitfrdcnt();
  inline ::google::protobuf::int32 visitfrdcnt(int index) const;
  inline void set_visitfrdcnt(int index, ::google::protobuf::int32 value);
  inline void add_visitfrdcnt(::google::protobuf::int32 value);
  
  // optional int32 dayAccSucCnt = 6 [default = 0];
  inline bool has_dayaccsuccnt() const;
  inline void clear_dayaccsuccnt();
  static const int kDayAccSucCntFieldNumber = 6;
  inline ::google::protobuf::int32 dayaccsuccnt() const;
  inline void set_dayaccsuccnt(::google::protobuf::int32 value);
  
  // repeated int32 getAccRewardCnt = 7;
  inline int getaccrewardcnt_size() const;
  inline void clear_getaccrewardcnt();
  static const int kGetAccRewardCntFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& getaccrewardcnt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_getaccrewardcnt();
  inline ::google::protobuf::int32 getaccrewardcnt(int index) const;
  inline void set_getaccrewardcnt(int index, ::google::protobuf::int32 value);
  inline void add_getaccrewardcnt(::google::protobuf::int32 value);
  
  // optional int32 dayGetFlag1Cnt = 8 [default = 0];
  inline bool has_daygetflag1cnt() const;
  inline void clear_daygetflag1cnt();
  static const int kDayGetFlag1CntFieldNumber = 8;
  inline ::google::protobuf::int32 daygetflag1cnt() const;
  inline void set_daygetflag1cnt(::google::protobuf::int32 value);
  
  // optional int32 accGetFlag1Cnt = 9 [default = 0];
  inline bool has_accgetflag1cnt() const;
  inline void clear_accgetflag1cnt();
  static const int kAccGetFlag1CntFieldNumber = 9;
  inline ::google::protobuf::int32 accgetflag1cnt() const;
  inline void set_accgetflag1cnt(::google::protobuf::int32 value);
  
  // optional int32 accGetFlag2Cnt = 10 [default = 0];
  inline bool has_accgetflag2cnt() const;
  inline void clear_accgetflag2cnt();
  static const int kAccGetFlag2CntFieldNumber = 10;
  inline ::google::protobuf::int32 accgetflag2cnt() const;
  inline void set_accgetflag2cnt(::google::protobuf::int32 value);
  
  // optional int32 dayGetFlag2Cnt = 11 [default = 0];
  inline bool has_daygetflag2cnt() const;
  inline void clear_daygetflag2cnt();
  static const int kDayGetFlag2CntFieldNumber = 11;
  inline ::google::protobuf::int32 daygetflag2cnt() const;
  inline void set_daygetflag2cnt(::google::protobuf::int32 value);
  
  // optional int64 lastGetTime = 12 [default = 0];
  inline bool has_lastgettime() const;
  inline void clear_lastgettime();
  static const int kLastGetTimeFieldNumber = 12;
  inline ::google::protobuf::int64 lastgettime() const;
  inline void set_lastgettime(::google::protobuf::int64 value);
  
  // optional int32 dayFreeCnt = 16 [default = 0];
  inline bool has_dayfreecnt() const;
  inline void clear_dayfreecnt();
  static const int kDayFreeCntFieldNumber = 16;
  inline ::google::protobuf::int32 dayfreecnt() const;
  inline void set_dayfreecnt(::google::protobuf::int32 value);
  
  // optional int32 dayCostCreditTime = 17 [default = 0];
  inline bool has_daycostcredittime() const;
  inline void clear_daycostcredittime();
  static const int kDayCostCreditTimeFieldNumber = 17;
  inline ::google::protobuf::int32 daycostcredittime() const;
  inline void set_daycostcredittime(::google::protobuf::int32 value);
  
  // optional bool hasGetRank = 18 [default = false];
  inline bool has_hasgetrank() const;
  inline void clear_hasgetrank();
  static const int kHasGetRankFieldNumber = 18;
  inline bool hasgetrank() const;
  inline void set_hasgetrank(bool value);
  
  // optional int32 dayAgainCnt = 19 [default = 0];
  inline bool has_dayagaincnt() const;
  inline void clear_dayagaincnt();
  static const int kDayAgainCntFieldNumber = 19;
  inline ::google::protobuf::int32 dayagaincnt() const;
  inline void set_dayagaincnt(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 activeflag_;
  ::google::protobuf::int32 goldlevel_;
  ::google::protobuf::int32 silverlevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > frdid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > visitfrdcnt_;
  ::google::protobuf::int32 dayaccsuccnt_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > getaccrewardcnt_;
  ::google::protobuf::int32 daygetflag1cnt_;
  ::google::protobuf::int32 accgetflag1cnt_;
  ::google::protobuf::int32 accgetflag2cnt_;
  ::google::protobuf::int32 daygetflag2cnt_;
  ::google::protobuf::int64 lastgettime_;
  ::google::protobuf::int32 dayfreecnt_;
  ::google::protobuf::int32 daycostcredittime_;
  bool hasgetrank_;
  ::google::protobuf::int32 dayagaincnt_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_HolidayDraw* default_instance_;
};
// -------------------------------------------------------------------

class DB_LeaveMessage_Unit : public ::google::protobuf::Message {
 public:
  DB_LeaveMessage_Unit();
  virtual ~DB_LeaveMessage_Unit();
  
  DB_LeaveMessage_Unit(const DB_LeaveMessage_Unit& from);
  
  inline DB_LeaveMessage_Unit& operator=(const DB_LeaveMessage_Unit& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_LeaveMessage_Unit& default_instance();
  void Swap(DB_LeaveMessage_Unit* other);
  
  // implements Message ----------------------------------------------
  
  DB_LeaveMessage_Unit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_LeaveMessage_Unit& from);
  void MergeFrom(const DB_LeaveMessage_Unit& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 nType = 1 [default = 0];
  inline bool has_ntype() const;
  inline void clear_ntype();
  static const int kNTypeFieldNumber = 1;
  inline ::google::protobuf::int32 ntype() const;
  inline void set_ntype(::google::protobuf::int32 value);
  
  // optional int32 nID = 2 [default = 0];
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIDFieldNumber = 2;
  inline ::google::protobuf::int32 nid() const;
  inline void set_nid(::google::protobuf::int32 value);
  
  // optional string strMsg = 3 [default = ""];
  inline bool has_strmsg() const;
  inline void clear_strmsg();
  static const int kStrMsgFieldNumber = 3;
  inline const ::std::string& strmsg() const;
  inline void set_strmsg(const ::std::string& value);
  inline void set_strmsg(const char* value);
  inline void set_strmsg(const char* value, size_t size);
  inline ::std::string* mutable_strmsg();
  
  // optional uint32 msgtime = 4 [default = 0];
  inline bool has_msgtime() const;
  inline void clear_msgtime();
  static const int kMsgtimeFieldNumber = 4;
  inline ::google::protobuf::uint32 msgtime() const;
  inline void set_msgtime(::google::protobuf::uint32 value);
  
  // optional string strName = 5 [default = ""];
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 5;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  
  // optional string strUid = 6 [default = ""];
  inline bool has_struid() const;
  inline void clear_struid();
  static const int kStrUidFieldNumber = 6;
  inline const ::std::string& struid() const;
  inline void set_struid(const ::std::string& value);
  inline void set_struid(const char* value);
  inline void set_struid(const char* value, size_t size);
  inline ::std::string* mutable_struid();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 ntype_;
  ::google::protobuf::int32 nid_;
  ::std::string* strmsg_;
  static const ::std::string _default_strmsg_;
  ::google::protobuf::uint32 msgtime_;
  ::std::string* strname_;
  static const ::std::string _default_strname_;
  ::std::string* struid_;
  static const ::std::string _default_struid_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_LeaveMessage_Unit* default_instance_;
};
// -------------------------------------------------------------------

class DB_LeaveMessage : public ::google::protobuf::Message {
 public:
  DB_LeaveMessage();
  virtual ~DB_LeaveMessage();
  
  DB_LeaveMessage(const DB_LeaveMessage& from);
  
  inline DB_LeaveMessage& operator=(const DB_LeaveMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_LeaveMessage& default_instance();
  void Swap(DB_LeaveMessage* other);
  
  // implements Message ----------------------------------------------
  
  DB_LeaveMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_LeaveMessage& from);
  void MergeFrom(const DB_LeaveMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 nTimes = 1 [default = 0];
  inline bool has_ntimes() const;
  inline void clear_ntimes();
  static const int kNTimesFieldNumber = 1;
  inline ::google::protobuf::int32 ntimes() const;
  inline void set_ntimes(::google::protobuf::int32 value);
  
  // optional int64 viewtargetuin = 2;
  inline bool has_viewtargetuin() const;
  inline void clear_viewtargetuin();
  static const int kViewtargetuinFieldNumber = 2;
  inline ::google::protobuf::int64 viewtargetuin() const;
  inline void set_viewtargetuin(::google::protobuf::int64 value);
  
  // optional bool bIsNew = 3;
  inline bool has_bisnew() const;
  inline void clear_bisnew();
  static const int kBIsNewFieldNumber = 3;
  inline bool bisnew() const;
  inline void set_bisnew(bool value);
  
  // repeated .DB_LeaveMessage_Unit leavemessagearr = 4;
  inline int leavemessagearr_size() const;
  inline void clear_leavemessagearr();
  static const int kLeavemessagearrFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_LeaveMessage_Unit >& leavemessagearr() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_LeaveMessage_Unit >* mutable_leavemessagearr();
  inline const ::DB_LeaveMessage_Unit& leavemessagearr(int index) const;
  inline ::DB_LeaveMessage_Unit* mutable_leavemessagearr(int index);
  inline ::DB_LeaveMessage_Unit* add_leavemessagearr();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 ntimes_;
  ::google::protobuf::int64 viewtargetuin_;
  bool bisnew_;
  ::google::protobuf::RepeatedPtrField< ::DB_LeaveMessage_Unit > leavemessagearr_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_LeaveMessage* default_instance_;
};
// -------------------------------------------------------------------

class DB_TXMissionData : public ::google::protobuf::Message {
 public:
  DB_TXMissionData();
  virtual ~DB_TXMissionData();
  
  DB_TXMissionData(const DB_TXMissionData& from);
  
  inline DB_TXMissionData& operator=(const DB_TXMissionData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_TXMissionData& default_instance();
  void Swap(DB_TXMissionData* other);
  
  // implements Message ----------------------------------------------
  
  DB_TXMissionData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_TXMissionData& from);
  void MergeFrom(const DB_TXMissionData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string missionid = 1 [default = ""];
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionidFieldNumber = 1;
  inline const ::std::string& missionid() const;
  inline void set_missionid(const ::std::string& value);
  inline void set_missionid(const char* value);
  inline void set_missionid(const char* value, size_t size);
  inline ::std::string* mutable_missionid();
  
  // optional int32 missionstate = 2 [default = -1];
  inline bool has_missionstate() const;
  inline void clear_missionstate();
  static const int kMissionstateFieldNumber = 2;
  inline ::google::protobuf::int32 missionstate() const;
  inline void set_missionstate(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* missionid_;
  static const ::std::string _default_missionid_;
  ::google::protobuf::int32 missionstate_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_TXMissionData* default_instance_;
};
// -------------------------------------------------------------------

class DB_ClientNumStat : public ::google::protobuf::Message {
 public:
  DB_ClientNumStat();
  virtual ~DB_ClientNumStat();
  
  DB_ClientNumStat(const DB_ClientNumStat& from);
  
  inline DB_ClientNumStat& operator=(const DB_ClientNumStat& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_ClientNumStat& default_instance();
  void Swap(DB_ClientNumStat* other);
  
  // implements Message ----------------------------------------------
  
  DB_ClientNumStat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_ClientNumStat& from);
  void MergeFrom(const DB_ClientNumStat& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 dayStatType = 2;
  inline int daystattype_size() const;
  inline void clear_daystattype();
  static const int kDayStatTypeFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& daystattype() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_daystattype();
  inline ::google::protobuf::int32 daystattype(int index) const;
  inline void set_daystattype(int index, ::google::protobuf::int32 value);
  inline void add_daystattype(::google::protobuf::int32 value);
  
  // repeated int32 dayStatNum = 3;
  inline int daystatnum_size() const;
  inline void clear_daystatnum();
  static const int kDayStatNumFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& daystatnum() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_daystatnum();
  inline ::google::protobuf::int32 daystatnum(int index) const;
  inline void set_daystatnum(int index, ::google::protobuf::int32 value);
  inline void add_daystatnum(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > daystattype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > daystatnum_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_ClientNumStat* default_instance_;
};
// -------------------------------------------------------------------

class DB_PokerInfo : public ::google::protobuf::Message {
 public:
  DB_PokerInfo();
  virtual ~DB_PokerInfo();
  
  DB_PokerInfo(const DB_PokerInfo& from);
  
  inline DB_PokerInfo& operator=(const DB_PokerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_PokerInfo& default_instance();
  void Swap(DB_PokerInfo* other);
  
  // implements Message ----------------------------------------------
  
  DB_PokerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_PokerInfo& from);
  void MergeFrom(const DB_PokerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 pokerNo = 1;
  inline bool has_pokerno() const;
  inline void clear_pokerno();
  static const int kPokerNoFieldNumber = 1;
  inline ::google::protobuf::int32 pokerno() const;
  inline void set_pokerno(::google::protobuf::int32 value);
  
  // optional int32 pokerColour = 2;
  inline bool has_pokercolour() const;
  inline void clear_pokercolour();
  static const int kPokerColourFieldNumber = 2;
  inline ::google::protobuf::int32 pokercolour() const;
  inline void set_pokercolour(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 pokerno_;
  ::google::protobuf::int32 pokercolour_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_PokerInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB_CurrPokerInfo : public ::google::protobuf::Message {
 public:
  DB_CurrPokerInfo();
  virtual ~DB_CurrPokerInfo();
  
  DB_CurrPokerInfo(const DB_CurrPokerInfo& from);
  
  inline DB_CurrPokerInfo& operator=(const DB_CurrPokerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_CurrPokerInfo& default_instance();
  void Swap(DB_CurrPokerInfo* other);
  
  // implements Message ----------------------------------------------
  
  DB_CurrPokerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_CurrPokerInfo& from);
  void MergeFrom(const DB_CurrPokerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DB_PokerInfo userPokers = 1;
  inline int userpokers_size() const;
  inline void clear_userpokers();
  static const int kUserPokersFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_PokerInfo >& userpokers() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_PokerInfo >* mutable_userpokers();
  inline const ::DB_PokerInfo& userpokers(int index) const;
  inline ::DB_PokerInfo* mutable_userpokers(int index);
  inline ::DB_PokerInfo* add_userpokers();
  
  // repeated .DB_PokerInfo npcPokers = 2;
  inline int npcpokers_size() const;
  inline void clear_npcpokers();
  static const int kNpcPokersFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_PokerInfo >& npcpokers() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_PokerInfo >* mutable_npcpokers();
  inline const ::DB_PokerInfo& npcpokers(int index) const;
  inline ::DB_PokerInfo* mutable_npcpokers(int index);
  inline ::DB_PokerInfo* add_npcpokers();
  
  // optional int32 userType = 3 [default = 0];
  inline bool has_usertype() const;
  inline void clear_usertype();
  static const int kUserTypeFieldNumber = 3;
  inline ::google::protobuf::int32 usertype() const;
  inline void set_usertype(::google::protobuf::int32 value);
  
  // optional int32 NPCType = 4 [default = 0];
  inline bool has_npctype() const;
  inline void clear_npctype();
  static const int kNPCTypeFieldNumber = 4;
  inline ::google::protobuf::int32 npctype() const;
  inline void set_npctype(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::DB_PokerInfo > userpokers_;
  ::google::protobuf::RepeatedPtrField< ::DB_PokerInfo > npcpokers_;
  ::google::protobuf::int32 usertype_;
  ::google::protobuf::int32 npctype_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_CurrPokerInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB_PokerExchanges : public ::google::protobuf::Message {
 public:
  DB_PokerExchanges();
  virtual ~DB_PokerExchanges();
  
  DB_PokerExchanges(const DB_PokerExchanges& from);
  
  inline DB_PokerExchanges& operator=(const DB_PokerExchanges& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_PokerExchanges& default_instance();
  void Swap(DB_PokerExchanges* other);
  
  // implements Message ----------------------------------------------
  
  DB_PokerExchanges* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_PokerExchanges& from);
  void MergeFrom(const DB_PokerExchanges& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 gift0 = 1 [default = 0];
  inline bool has_gift0() const;
  inline void clear_gift0();
  static const int kGift0FieldNumber = 1;
  inline ::google::protobuf::int32 gift0() const;
  inline void set_gift0(::google::protobuf::int32 value);
  
  // optional int32 gift1 = 2 [default = 0];
  inline bool has_gift1() const;
  inline void clear_gift1();
  static const int kGift1FieldNumber = 2;
  inline ::google::protobuf::int32 gift1() const;
  inline void set_gift1(::google::protobuf::int32 value);
  
  // optional int32 gift2 = 3 [default = 0];
  inline bool has_gift2() const;
  inline void clear_gift2();
  static const int kGift2FieldNumber = 3;
  inline ::google::protobuf::int32 gift2() const;
  inline void set_gift2(::google::protobuf::int32 value);
  
  // optional int32 gift3 = 4 [default = 0];
  inline bool has_gift3() const;
  inline void clear_gift3();
  static const int kGift3FieldNumber = 4;
  inline ::google::protobuf::int32 gift3() const;
  inline void set_gift3(::google::protobuf::int32 value);
  
  // optional int32 gift4 = 5 [default = 0];
  inline bool has_gift4() const;
  inline void clear_gift4();
  static const int kGift4FieldNumber = 5;
  inline ::google::protobuf::int32 gift4() const;
  inline void set_gift4(::google::protobuf::int32 value);
  
  // optional bool isGetRarityGift = 6 [default = false];
  inline bool has_isgetraritygift() const;
  inline void clear_isgetraritygift();
  static const int kIsGetRarityGiftFieldNumber = 6;
  inline bool isgetraritygift() const;
  inline void set_isgetraritygift(bool value);
  
  // optional int32 giftnum0 = 7 [default = 0];
  inline bool has_giftnum0() const;
  inline void clear_giftnum0();
  static const int kGiftnum0FieldNumber = 7;
  inline ::google::protobuf::int32 giftnum0() const;
  inline void set_giftnum0(::google::protobuf::int32 value);
  
  // optional int32 giftnum1 = 8 [default = 0];
  inline bool has_giftnum1() const;
  inline void clear_giftnum1();
  static const int kGiftnum1FieldNumber = 8;
  inline ::google::protobuf::int32 giftnum1() const;
  inline void set_giftnum1(::google::protobuf::int32 value);
  
  // optional int32 giftnum2 = 9 [default = 0];
  inline bool has_giftnum2() const;
  inline void clear_giftnum2();
  static const int kGiftnum2FieldNumber = 9;
  inline ::google::protobuf::int32 giftnum2() const;
  inline void set_giftnum2(::google::protobuf::int32 value);
  
  // optional int32 giftnum3 = 10 [default = 0];
  inline bool has_giftnum3() const;
  inline void clear_giftnum3();
  static const int kGiftnum3FieldNumber = 10;
  inline ::google::protobuf::int32 giftnum3() const;
  inline void set_giftnum3(::google::protobuf::int32 value);
  
  // optional int32 giftnum4 = 11 [default = 0];
  inline bool has_giftnum4() const;
  inline void clear_giftnum4();
  static const int kGiftnum4FieldNumber = 11;
  inline ::google::protobuf::int32 giftnum4() const;
  inline void set_giftnum4(::google::protobuf::int32 value);
  
  // optional int32 refreshExcCnt = 12 [default = 0];
  inline bool has_refreshexccnt() const;
  inline void clear_refreshexccnt();
  static const int kRefreshExcCntFieldNumber = 12;
  inline ::google::protobuf::int32 refreshexccnt() const;
  inline void set_refreshexccnt(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 gift0_;
  ::google::protobuf::int32 gift1_;
  ::google::protobuf::int32 gift2_;
  ::google::protobuf::int32 gift3_;
  ::google::protobuf::int32 gift4_;
  bool isgetraritygift_;
  ::google::protobuf::int32 giftnum0_;
  ::google::protobuf::int32 giftnum1_;
  ::google::protobuf::int32 giftnum2_;
  ::google::protobuf::int32 giftnum3_;
  ::google::protobuf::int32 giftnum4_;
  ::google::protobuf::int32 refreshexccnt_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_PokerExchanges* default_instance_;
};
// -------------------------------------------------------------------

class DB_WorldCupPredictions : public ::google::protobuf::Message {
 public:
  DB_WorldCupPredictions();
  virtual ~DB_WorldCupPredictions();
  
  DB_WorldCupPredictions(const DB_WorldCupPredictions& from);
  
  inline DB_WorldCupPredictions& operator=(const DB_WorldCupPredictions& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_WorldCupPredictions& default_instance();
  void Swap(DB_WorldCupPredictions* other);
  
  // implements Message ----------------------------------------------
  
  DB_WorldCupPredictions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_WorldCupPredictions& from);
  void MergeFrom(const DB_WorldCupPredictions& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool isBet = 1 [default = false];
  inline bool has_isbet() const;
  inline void clear_isbet();
  static const int kIsBetFieldNumber = 1;
  inline bool isbet() const;
  inline void set_isbet(bool value);
  
  // repeated .DB_WCBetInfo betInfo = 2;
  inline int betinfo_size() const;
  inline void clear_betinfo();
  static const int kBetInfoFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_WCBetInfo >& betinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_WCBetInfo >* mutable_betinfo();
  inline const ::DB_WCBetInfo& betinfo(int index) const;
  inline ::DB_WCBetInfo* mutable_betinfo(int index);
  inline ::DB_WCBetInfo* add_betinfo();
  
  // optional int32 nReward = 3 [default = 0];
  inline bool has_nreward() const;
  inline void clear_nreward();
  static const int kNRewardFieldNumber = 3;
  inline ::google::protobuf::int32 nreward() const;
  inline void set_nreward(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool isbet_;
  ::google::protobuf::RepeatedPtrField< ::DB_WCBetInfo > betinfo_;
  ::google::protobuf::int32 nreward_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_WorldCupPredictions* default_instance_;
};
// -------------------------------------------------------------------

class DB_WCBetInfo : public ::google::protobuf::Message {
 public:
  DB_WCBetInfo();
  virtual ~DB_WCBetInfo();
  
  DB_WCBetInfo(const DB_WCBetInfo& from);
  
  inline DB_WCBetInfo& operator=(const DB_WCBetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_WCBetInfo& default_instance();
  void Swap(DB_WCBetInfo* other);
  
  // implements Message ----------------------------------------------
  
  DB_WCBetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_WCBetInfo& from);
  void MergeFrom(const DB_WCBetInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 nType = 1 [default = 0];
  inline bool has_ntype() const;
  inline void clear_ntype();
  static const int kNTypeFieldNumber = 1;
  inline ::google::protobuf::int32 ntype() const;
  inline void set_ntype(::google::protobuf::int32 value);
  
  // optional int32 nJettonNum = 2 [default = 0];
  inline bool has_njettonnum() const;
  inline void clear_njettonnum();
  static const int kNJettonNumFieldNumber = 2;
  inline ::google::protobuf::int32 njettonnum() const;
  inline void set_njettonnum(::google::protobuf::int32 value);
  
  // optional int32 nOdds = 3 [default = 0];
  inline bool has_nodds() const;
  inline void clear_nodds();
  static const int kNOddsFieldNumber = 3;
  inline ::google::protobuf::int32 nodds() const;
  inline void set_nodds(::google::protobuf::int32 value);
  
  // repeated int32 teamID = 4;
  inline int teamid_size() const;
  inline void clear_teamid();
  static const int kTeamIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& teamid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_teamid();
  inline ::google::protobuf::int32 teamid(int index) const;
  inline void set_teamid(int index, ::google::protobuf::int32 value);
  inline void add_teamid(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 ntype_;
  ::google::protobuf::int32 njettonnum_;
  ::google::protobuf::int32 nodds_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > teamid_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_WCBetInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB_CardDuelInfo : public ::google::protobuf::Message {
 public:
  DB_CardDuelInfo();
  virtual ~DB_CardDuelInfo();
  
  DB_CardDuelInfo(const DB_CardDuelInfo& from);
  
  inline DB_CardDuelInfo& operator=(const DB_CardDuelInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_CardDuelInfo& default_instance();
  void Swap(DB_CardDuelInfo* other);
  
  // implements Message ----------------------------------------------
  
  DB_CardDuelInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_CardDuelInfo& from);
  void MergeFrom(const DB_CardDuelInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 myCardType = 1 [default = 0];
  inline bool has_mycardtype() const;
  inline void clear_mycardtype();
  static const int kMyCardTypeFieldNumber = 1;
  inline ::google::protobuf::int32 mycardtype() const;
  inline void set_mycardtype(::google::protobuf::int32 value);
  
  // optional int64 oppID = 2 [default = 0];
  inline bool has_oppid() const;
  inline void clear_oppid();
  static const int kOppIDFieldNumber = 2;
  inline ::google::protobuf::int64 oppid() const;
  inline void set_oppid(::google::protobuf::int64 value);
  
  // optional bool bNpc = 3 [default = false];
  inline bool has_bnpc() const;
  inline void clear_bnpc();
  static const int kBNpcFieldNumber = 3;
  inline bool bnpc() const;
  inline void set_bnpc(bool value);
  
  // optional int32 winNum = 4 [default = 0];
  inline bool has_winnum() const;
  inline void clear_winnum();
  static const int kWinNumFieldNumber = 4;
  inline ::google::protobuf::int32 winnum() const;
  inline void set_winnum(::google::protobuf::int32 value);
  
  // optional bool bMatch = 5 [default = false];
  inline bool has_bmatch() const;
  inline void clear_bmatch();
  static const int kBMatchFieldNumber = 5;
  inline bool bmatch() const;
  inline void set_bmatch(bool value);
  
  // optional int32 addupCredit = 6 [default = 0];
  inline bool has_addupcredit() const;
  inline void clear_addupcredit();
  static const int kAddupCreditFieldNumber = 6;
  inline ::google::protobuf::int32 addupcredit() const;
  inline void set_addupcredit(::google::protobuf::int32 value);
  
  // optional int32 maxwinNum = 7 [default = 0];
  inline bool has_maxwinnum() const;
  inline void clear_maxwinnum();
  static const int kMaxwinNumFieldNumber = 7;
  inline ::google::protobuf::int32 maxwinnum() const;
  inline void set_maxwinnum(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 mycardtype_;
  ::google::protobuf::int64 oppid_;
  bool bnpc_;
  ::google::protobuf::int32 winnum_;
  bool bmatch_;
  ::google::protobuf::int32 addupcredit_;
  ::google::protobuf::int32 maxwinnum_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_CardDuelInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB_MiddleYearGift : public ::google::protobuf::Message {
 public:
  DB_MiddleYearGift();
  virtual ~DB_MiddleYearGift();
  
  DB_MiddleYearGift(const DB_MiddleYearGift& from);
  
  inline DB_MiddleYearGift& operator=(const DB_MiddleYearGift& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_MiddleYearGift& default_instance();
  void Swap(DB_MiddleYearGift* other);
  
  // implements Message ----------------------------------------------
  
  DB_MiddleYearGift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_MiddleYearGift& from);
  void MergeFrom(const DB_MiddleYearGift& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 firstGift = 1 [default = 0];
  inline bool has_firstgift() const;
  inline void clear_firstgift();
  static const int kFirstGiftFieldNumber = 1;
  inline ::google::protobuf::int32 firstgift() const;
  inline void set_firstgift(::google::protobuf::int32 value);
  
  // optional int32 secdGift = 2 [default = 0];
  inline bool has_secdgift() const;
  inline void clear_secdgift();
  static const int kSecdGiftFieldNumber = 2;
  inline ::google::protobuf::int32 secdgift() const;
  inline void set_secdgift(::google::protobuf::int32 value);
  
  // optional int32 nTotalCredit = 3 [default = 0];
  inline bool has_ntotalcredit() const;
  inline void clear_ntotalcredit();
  static const int kNTotalCreditFieldNumber = 3;
  inline ::google::protobuf::int32 ntotalcredit() const;
  inline void set_ntotalcredit(::google::protobuf::int32 value);
  
  // optional int32 nFlag = 4 [default = 0];
  inline bool has_nflag() const;
  inline void clear_nflag();
  static const int kNFlagFieldNumber = 4;
  inline ::google::protobuf::int32 nflag() const;
  inline void set_nflag(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 firstgift_;
  ::google::protobuf::int32 secdgift_;
  ::google::protobuf::int32 ntotalcredit_;
  ::google::protobuf::int32 nflag_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_MiddleYearGift* default_instance_;
};
// -------------------------------------------------------------------

class DB_OpenSNSGift : public ::google::protobuf::Message {
 public:
  DB_OpenSNSGift();
  virtual ~DB_OpenSNSGift();
  
  DB_OpenSNSGift(const DB_OpenSNSGift& from);
  
  inline DB_OpenSNSGift& operator=(const DB_OpenSNSGift& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_OpenSNSGift& default_instance();
  void Swap(DB_OpenSNSGift* other);
  
  // implements Message ----------------------------------------------
  
  DB_OpenSNSGift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_OpenSNSGift& from);
  void MergeFrom(const DB_OpenSNSGift& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 nType = 1 [default = -1];
  inline bool has_ntype() const;
  inline void clear_ntype();
  static const int kNTypeFieldNumber = 1;
  inline ::google::protobuf::int32 ntype() const;
  inline void set_ntype(::google::protobuf::int32 value);
  
  // optional int32 nFlag = 2 [default = 0];
  inline bool has_nflag() const;
  inline void clear_nflag();
  static const int kNFlagFieldNumber = 2;
  inline ::google::protobuf::int32 nflag() const;
  inline void set_nflag(::google::protobuf::int32 value);
  
  // optional int64 nTime = 3 [default = 0];
  inline bool has_ntime() const;
  inline void clear_ntime();
  static const int kNTimeFieldNumber = 3;
  inline ::google::protobuf::int64 ntime() const;
  inline void set_ntime(::google::protobuf::int64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 ntype_;
  ::google::protobuf::int32 nflag_;
  ::google::protobuf::int64 ntime_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_OpenSNSGift* default_instance_;
};
// -------------------------------------------------------------------

class DB_CallBackFriend : public ::google::protobuf::Message {
 public:
  DB_CallBackFriend();
  virtual ~DB_CallBackFriend();
  
  DB_CallBackFriend(const DB_CallBackFriend& from);
  
  inline DB_CallBackFriend& operator=(const DB_CallBackFriend& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_CallBackFriend& default_instance();
  void Swap(DB_CallBackFriend* other);
  
  // implements Message ----------------------------------------------
  
  DB_CallBackFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_CallBackFriend& from);
  void MergeFrom(const DB_CallBackFriend& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string frdplatids = 1;
  inline int frdplatids_size() const;
  inline void clear_frdplatids();
  static const int kFrdplatidsFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& frdplatids() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_frdplatids();
  inline const ::std::string& frdplatids(int index) const;
  inline ::std::string* mutable_frdplatids(int index);
  inline void set_frdplatids(int index, const ::std::string& value);
  inline void set_frdplatids(int index, const char* value);
  inline void set_frdplatids(int index, const char* value, size_t size);
  inline ::std::string* add_frdplatids();
  inline void add_frdplatids(const ::std::string& value);
  inline void add_frdplatids(const char* value);
  inline void add_frdplatids(const char* value, size_t size);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> frdplatids_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_CallBackFriend* default_instance_;
};
// -------------------------------------------------------------------

class DB_AttackCount : public ::google::protobuf::Message {
 public:
  DB_AttackCount();
  virtual ~DB_AttackCount();
  
  DB_AttackCount(const DB_AttackCount& from);
  
  inline DB_AttackCount& operator=(const DB_AttackCount& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_AttackCount& default_instance();
  void Swap(DB_AttackCount* other);
  
  // implements Message ----------------------------------------------
  
  DB_AttackCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_AttackCount& from);
  void MergeFrom(const DB_AttackCount& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);
  
  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 count_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_AttackCount* default_instance_;
};
// -------------------------------------------------------------------

class DB_Science : public ::google::protobuf::Message {
 public:
  DB_Science();
  virtual ~DB_Science();
  
  DB_Science(const DB_Science& from);
  
  inline DB_Science& operator=(const DB_Science& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Science& default_instance();
  void Swap(DB_Science* other);
  
  // implements Message ----------------------------------------------
  
  DB_Science* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Science& from);
  void MergeFrom(const DB_Science& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 recruitlandlevel = 1 [default = 0];
  inline bool has_recruitlandlevel() const;
  inline void clear_recruitlandlevel();
  static const int kRecruitlandlevelFieldNumber = 1;
  inline ::google::protobuf::int32 recruitlandlevel() const;
  inline void set_recruitlandlevel(::google::protobuf::int32 value);
  
  // optional int32 recruitairlevel = 2 [default = 0];
  inline bool has_recruitairlevel() const;
  inline void clear_recruitairlevel();
  static const int kRecruitairlevelFieldNumber = 2;
  inline ::google::protobuf::int32 recruitairlevel() const;
  inline void set_recruitairlevel(::google::protobuf::int32 value);
  
  // optional int32 attacklandlevel = 3 [default = 0];
  inline bool has_attacklandlevel() const;
  inline void clear_attacklandlevel();
  static const int kAttacklandlevelFieldNumber = 3;
  inline ::google::protobuf::int32 attacklandlevel() const;
  inline void set_attacklandlevel(::google::protobuf::int32 value);
  
  // optional int32 extrahonorlevel = 4 [default = 0];
  inline bool has_extrahonorlevel() const;
  inline void clear_extrahonorlevel();
  static const int kExtrahonorlevelFieldNumber = 4;
  inline ::google::protobuf::int32 extrahonorlevel() const;
  inline void set_extrahonorlevel(::google::protobuf::int32 value);
  
  // optional int32 exttimelevel = 5 [default = 0];
  inline bool has_exttimelevel() const;
  inline void clear_exttimelevel();
  static const int kExttimelevelFieldNumber = 5;
  inline ::google::protobuf::int32 exttimelevel() const;
  inline void set_exttimelevel(::google::protobuf::int32 value);
  
  // optional int32 redtimelevel = 6 [default = 0];
  inline bool has_redtimelevel() const;
  inline void clear_redtimelevel();
  static const int kRedtimelevelFieldNumber = 6;
  inline ::google::protobuf::int32 redtimelevel() const;
  inline void set_redtimelevel(::google::protobuf::int32 value);
  
  // optional int32 extres = 7 [default = 0];
  inline bool has_extres() const;
  inline void clear_extres();
  static const int kExtresFieldNumber = 7;
  inline ::google::protobuf::int32 extres() const;
  inline void set_extres(::google::protobuf::int32 value);
  
  // optional int32 redres = 8 [default = 0];
  inline bool has_redres() const;
  inline void clear_redres();
  static const int kRedresFieldNumber = 8;
  inline ::google::protobuf::int32 redres() const;
  inline void set_redres(::google::protobuf::int32 value);
  
  // optional int32 addbuildhp = 9 [default = 0];
  inline bool has_addbuildhp() const;
  inline void clear_addbuildhp();
  static const int kAddbuildhpFieldNumber = 9;
  inline ::google::protobuf::int32 addbuildhp() const;
  inline void set_addbuildhp(::google::protobuf::int32 value);
  
  // optional int32 addgunattack = 10 [default = 0];
  inline bool has_addgunattack() const;
  inline void clear_addgunattack();
  static const int kAddgunattackFieldNumber = 10;
  inline ::google::protobuf::int32 addgunattack() const;
  inline void set_addgunattack(::google::protobuf::int32 value);
  
  // optional int32 addmissileatk = 11 [default = 0];
  inline bool has_addmissileatk() const;
  inline void clear_addmissileatk();
  static const int kAddmissileatkFieldNumber = 11;
  inline ::google::protobuf::int32 addmissileatk() const;
  inline void set_addmissileatk(::google::protobuf::int32 value);
  
  // optional int32 minewarfare = 12 [default = 0];
  inline bool has_minewarfare() const;
  inline void clear_minewarfare();
  static const int kMinewarfareFieldNumber = 12;
  inline ::google::protobuf::int32 minewarfare() const;
  inline void set_minewarfare(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 recruitlandlevel_;
  ::google::protobuf::int32 recruitairlevel_;
  ::google::protobuf::int32 attacklandlevel_;
  ::google::protobuf::int32 extrahonorlevel_;
  ::google::protobuf::int32 exttimelevel_;
  ::google::protobuf::int32 redtimelevel_;
  ::google::protobuf::int32 extres_;
  ::google::protobuf::int32 redres_;
  ::google::protobuf::int32 addbuildhp_;
  ::google::protobuf::int32 addgunattack_;
  ::google::protobuf::int32 addmissileatk_;
  ::google::protobuf::int32 minewarfare_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Science* default_instance_;
};
// -------------------------------------------------------------------

class DB_Effect : public ::google::protobuf::Message {
 public:
  DB_Effect();
  virtual ~DB_Effect();
  
  DB_Effect(const DB_Effect& from);
  
  inline DB_Effect& operator=(const DB_Effect& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Effect& default_instance();
  void Swap(DB_Effect* other);
  
  // implements Message ----------------------------------------------
  
  DB_Effect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Effect& from);
  void MergeFrom(const DB_Effect& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string effects = 2;
  inline int effects_size() const;
  inline void clear_effects();
  static const int kEffectsFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& effects() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_effects();
  inline const ::std::string& effects(int index) const;
  inline ::std::string* mutable_effects(int index);
  inline void set_effects(int index, const ::std::string& value);
  inline void set_effects(int index, const char* value);
  inline void set_effects(int index, const char* value, size_t size);
  inline ::std::string* add_effects();
  inline void add_effects(const ::std::string& value);
  inline void add_effects(const char* value);
  inline void add_effects(const char* value, size_t size);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> effects_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Effect* default_instance_;
};
// -------------------------------------------------------------------

class DB_Officer : public ::google::protobuf::Message {
 public:
  DB_Officer();
  virtual ~DB_Officer();
  
  DB_Officer(const DB_Officer& from);
  
  inline DB_Officer& operator=(const DB_Officer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Officer& default_instance();
  void Swap(DB_Officer* other);
  
  // implements Message ----------------------------------------------
  
  DB_Officer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Officer& from);
  void MergeFrom(const DB_Officer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 officerPosition = 1 [default = 0];
  inline bool has_officerposition() const;
  inline void clear_officerposition();
  static const int kOfficerPositionFieldNumber = 1;
  inline ::google::protobuf::int32 officerposition() const;
  inline void set_officerposition(::google::protobuf::int32 value);
  
  // optional int32 officerRightUseFlag = 2 [default = 0];
  inline bool has_officerrightuseflag() const;
  inline void clear_officerrightuseflag();
  static const int kOfficerRightUseFlagFieldNumber = 2;
  inline ::google::protobuf::int32 officerrightuseflag() const;
  inline void set_officerrightuseflag(::google::protobuf::int32 value);
  
  // optional int32 officerRightEffectFlag = 3 [default = 0];
  inline bool has_officerrighteffectflag() const;
  inline void clear_officerrighteffectflag();
  static const int kOfficerRightEffectFlagFieldNumber = 3;
  inline ::google::protobuf::int32 officerrighteffectflag() const;
  inline void set_officerrighteffectflag(::google::protobuf::int32 value);
  
  // optional int32 updateTime = 4 [default = 0];
  inline bool has_updatetime() const;
  inline void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 4;
  inline ::google::protobuf::int32 updatetime() const;
  inline void set_updatetime(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 officerposition_;
  ::google::protobuf::int32 officerrightuseflag_;
  ::google::protobuf::int32 officerrighteffectflag_;
  ::google::protobuf::int32 updatetime_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Officer* default_instance_;
};
// -------------------------------------------------------------------

class DB_WpcRank : public ::google::protobuf::Message {
 public:
  DB_WpcRank();
  virtual ~DB_WpcRank();
  
  DB_WpcRank(const DB_WpcRank& from);
  
  inline DB_WpcRank& operator=(const DB_WpcRank& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_WpcRank& default_instance();
  void Swap(DB_WpcRank* other);
  
  // implements Message ----------------------------------------------
  
  DB_WpcRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_WpcRank& from);
  void MergeFrom(const DB_WpcRank& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 rightID = 1 [default = 0];
  inline bool has_rightid() const;
  inline void clear_rightid();
  static const int kRightIDFieldNumber = 1;
  inline ::google::protobuf::int32 rightid() const;
  inline void set_rightid(::google::protobuf::int32 value);
  
  // optional int32 updateTime = 2 [default = 0];
  inline bool has_updatetime() const;
  inline void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 2;
  inline ::google::protobuf::int32 updatetime() const;
  inline void set_updatetime(::google::protobuf::int32 value);
  
  // optional int32 searchTime = 3 [default = 0];
  inline bool has_searchtime() const;
  inline void clear_searchtime();
  static const int kSearchTimeFieldNumber = 3;
  inline ::google::protobuf::int32 searchtime() const;
  inline void set_searchtime(::google::protobuf::int32 value);
  
  // optional int32 activeID = 4 [default = 0];
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIDFieldNumber = 4;
  inline ::google::protobuf::int32 activeid() const;
  inline void set_activeid(::google::protobuf::int32 value);
  
  // optional int32 overTimeSearchTime = 5 [default = 0];
  inline bool has_overtimesearchtime() const;
  inline void clear_overtimesearchtime();
  static const int kOverTimeSearchTimeFieldNumber = 5;
  inline ::google::protobuf::int32 overtimesearchtime() const;
  inline void set_overtimesearchtime(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 rightid_;
  ::google::protobuf::int32 updatetime_;
  ::google::protobuf::int32 searchtime_;
  ::google::protobuf::int32 activeid_;
  ::google::protobuf::int32 overtimesearchtime_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_WpcRank* default_instance_;
};
// -------------------------------------------------------------------

class DB_LeagueBtl : public ::google::protobuf::Message {
 public:
  DB_LeagueBtl();
  virtual ~DB_LeagueBtl();
  
  DB_LeagueBtl(const DB_LeagueBtl& from);
  
  inline DB_LeagueBtl& operator=(const DB_LeagueBtl& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_LeagueBtl& default_instance();
  void Swap(DB_LeagueBtl* other);
  
  // implements Message ----------------------------------------------
  
  DB_LeagueBtl* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_LeagueBtl& from);
  void MergeFrom(const DB_LeagueBtl& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 activeID = 1 [default = 0];
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveIDFieldNumber = 1;
  inline ::google::protobuf::int32 activeid() const;
  inline void set_activeid(::google::protobuf::int32 value);
  
  // optional int32 leaguePoint = 2 [default = 0];
  inline bool has_leaguepoint() const;
  inline void clear_leaguepoint();
  static const int kLeaguePointFieldNumber = 2;
  inline ::google::protobuf::int32 leaguepoint() const;
  inline void set_leaguepoint(::google::protobuf::int32 value);
  
  // optional bool rewardGet = 3 [default = false];
  inline bool has_rewardget() const;
  inline void clear_rewardget();
  static const int kRewardGetFieldNumber = 3;
  inline bool rewardget() const;
  inline void set_rewardget(bool value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 activeid_;
  ::google::protobuf::int32 leaguepoint_;
  bool rewardget_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_LeagueBtl* default_instance_;
};
// -------------------------------------------------------------------

class DB_HappylibAward : public ::google::protobuf::Message {
 public:
  DB_HappylibAward();
  virtual ~DB_HappylibAward();
  
  DB_HappylibAward(const DB_HappylibAward& from);
  
  inline DB_HappylibAward& operator=(const DB_HappylibAward& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_HappylibAward& default_instance();
  void Swap(DB_HappylibAward* other);
  
  // implements Message ----------------------------------------------
  
  DB_HappylibAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_HappylibAward& from);
  void MergeFrom(const DB_HappylibAward& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 times = 1;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 1;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);
  
  // repeated int32 awardid = 2;
  inline int awardid_size() const;
  inline void clear_awardid();
  static const int kAwardidFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& awardid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_awardid();
  inline ::google::protobuf::int32 awardid(int index) const;
  inline void set_awardid(int index, ::google::protobuf::int32 value);
  inline void add_awardid(::google::protobuf::int32 value);
  
  // repeated int32 awardnum = 3;
  inline int awardnum_size() const;
  inline void clear_awardnum();
  static const int kAwardnumFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& awardnum() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_awardnum();
  inline ::google::protobuf::int32 awardnum(int index) const;
  inline void set_awardnum(int index, ::google::protobuf::int32 value);
  inline void add_awardnum(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 times_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > awardid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > awardnum_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_HappylibAward* default_instance_;
};
// -------------------------------------------------------------------

class DB_HappyLib : public ::google::protobuf::Message {
 public:
  DB_HappyLib();
  virtual ~DB_HappyLib();
  
  DB_HappyLib(const DB_HappyLib& from);
  
  inline DB_HappyLib& operator=(const DB_HappyLib& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_HappyLib& default_instance();
  void Swap(DB_HappyLib* other);
  
  // implements Message ----------------------------------------------
  
  DB_HappyLib* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_HappyLib& from);
  void MergeFrom(const DB_HappyLib& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 activeend = 1;
  inline bool has_activeend() const;
  inline void clear_activeend();
  static const int kActiveendFieldNumber = 1;
  inline ::google::protobuf::int32 activeend() const;
  inline void set_activeend(::google::protobuf::int32 value);
  
  // optional int32 times = 2;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 2;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);
  
  // optional int32 getaward = 3 [default = 0];
  inline bool has_getaward() const;
  inline void clear_getaward();
  static const int kGetawardFieldNumber = 3;
  inline ::google::protobuf::int32 getaward() const;
  inline void set_getaward(::google::protobuf::int32 value);
  
  // repeated .DB_HappylibAward award = 4;
  inline int award_size() const;
  inline void clear_award();
  static const int kAwardFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_HappylibAward >& award() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_HappylibAward >* mutable_award();
  inline const ::DB_HappylibAward& award(int index) const;
  inline ::DB_HappylibAward* mutable_award(int index);
  inline ::DB_HappylibAward* add_award();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 activeend_;
  ::google::protobuf::int32 times_;
  ::google::protobuf::int32 getaward_;
  ::google::protobuf::RepeatedPtrField< ::DB_HappylibAward > award_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_HappyLib* default_instance_;
};
// -------------------------------------------------------------------

class DB_BossBtlMsg : public ::google::protobuf::Message {
 public:
  DB_BossBtlMsg();
  virtual ~DB_BossBtlMsg();
  
  DB_BossBtlMsg(const DB_BossBtlMsg& from);
  
  inline DB_BossBtlMsg& operator=(const DB_BossBtlMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_BossBtlMsg& default_instance();
  void Swap(DB_BossBtlMsg* other);
  
  // implements Message ----------------------------------------------
  
  DB_BossBtlMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_BossBtlMsg& from);
  void MergeFrom(const DB_BossBtlMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 nBossBtlFlag = 1 [default = 0];
  inline bool has_nbossbtlflag() const;
  inline void clear_nbossbtlflag();
  static const int kNBossBtlFlagFieldNumber = 1;
  inline ::google::protobuf::int32 nbossbtlflag() const;
  inline void set_nbossbtlflag(::google::protobuf::int32 value);
  
  // optional int64 totalDmg = 2 [default = 0];
  inline bool has_totaldmg() const;
  inline void clear_totaldmg();
  static const int kTotalDmgFieldNumber = 2;
  inline ::google::protobuf::int64 totaldmg() const;
  inline void set_totaldmg(::google::protobuf::int64 value);
  
  // optional int32 honorEmbraveCnt = 3;
  inline bool has_honorembravecnt() const;
  inline void clear_honorembravecnt();
  static const int kHonorEmbraveCntFieldNumber = 3;
  inline ::google::protobuf::int32 honorembravecnt() const;
  inline void set_honorembravecnt(::google::protobuf::int32 value);
  
  // optional int32 addAtkPct = 4;
  inline bool has_addatkpct() const;
  inline void clear_addatkpct();
  static const int kAddAtkPctFieldNumber = 4;
  inline ::google::protobuf::int32 addatkpct() const;
  inline void set_addatkpct(::google::protobuf::int32 value);
  
  // optional int32 hasPickReward = 5;
  inline bool has_haspickreward() const;
  inline void clear_haspickreward();
  static const int kHasPickRewardFieldNumber = 5;
  inline ::google::protobuf::int32 haspickreward() const;
  inline void set_haspickreward(::google::protobuf::int32 value);
  
  // repeated bool upList = 6;
  inline int uplist_size() const;
  inline void clear_uplist();
  static const int kUpListFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< bool >& uplist() const
      ;
  inline ::google::protobuf::RepeatedField< bool >* mutable_uplist();
  inline bool uplist(int index) const;
  inline void set_uplist(int index, bool value);
  inline void add_uplist(bool value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 nbossbtlflag_;
  ::google::protobuf::int64 totaldmg_;
  ::google::protobuf::int32 honorembravecnt_;
  ::google::protobuf::int32 addatkpct_;
  ::google::protobuf::int32 haspickreward_;
  ::google::protobuf::RepeatedField< bool > uplist_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_BossBtlMsg* default_instance_;
};
// -------------------------------------------------------------------

class DB_MedalHonorInfo : public ::google::protobuf::Message {
 public:
  DB_MedalHonorInfo();
  virtual ~DB_MedalHonorInfo();
  
  DB_MedalHonorInfo(const DB_MedalHonorInfo& from);
  
  inline DB_MedalHonorInfo& operator=(const DB_MedalHonorInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_MedalHonorInfo& default_instance();
  void Swap(DB_MedalHonorInfo* other);
  
  // implements Message ----------------------------------------------
  
  DB_MedalHonorInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_MedalHonorInfo& from);
  void MergeFrom(const DB_MedalHonorInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 freeCastNum = 1 [default = 50];
  inline bool has_freecastnum() const;
  inline void clear_freecastnum();
  static const int kFreeCastNumFieldNumber = 1;
  inline ::google::protobuf::int32 freecastnum() const;
  inline void set_freecastnum(::google::protobuf::int32 value);
  
  // optional int32 nTokenNum = 2 [default = 0];
  inline bool has_ntokennum() const;
  inline void clear_ntokennum();
  static const int kNTokenNumFieldNumber = 2;
  inline ::google::protobuf::int32 ntokennum() const;
  inline void set_ntokennum(::google::protobuf::int32 value);
  
  // optional int32 decorateType = 3 [default = 0];
  inline bool has_decoratetype() const;
  inline void clear_decoratetype();
  static const int kDecorateTypeFieldNumber = 3;
  inline ::google::protobuf::int32 decoratetype() const;
  inline void set_decoratetype(::google::protobuf::int32 value);
  
  // repeated int32 hallHonorList = 4;
  inline int hallhonorlist_size() const;
  inline void clear_hallhonorlist();
  static const int kHallHonorListFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& hallhonorlist() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_hallhonorlist();
  inline ::google::protobuf::int32 hallhonorlist(int index) const;
  inline void set_hallhonorlist(int index, ::google::protobuf::int32 value);
  inline void add_hallhonorlist(::google::protobuf::int32 value);
  
  // repeated .DB_MedalHonor medalHonorList = 5;
  inline int medalhonorlist_size() const;
  inline void clear_medalhonorlist();
  static const int kMedalHonorListFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_MedalHonor >& medalhonorlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_MedalHonor >* mutable_medalhonorlist();
  inline const ::DB_MedalHonor& medalhonorlist(int index) const;
  inline ::DB_MedalHonor* mutable_medalhonorlist(int index);
  inline ::DB_MedalHonor* add_medalhonorlist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 freecastnum_;
  ::google::protobuf::int32 ntokennum_;
  ::google::protobuf::int32 decoratetype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hallhonorlist_;
  ::google::protobuf::RepeatedPtrField< ::DB_MedalHonor > medalhonorlist_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_MedalHonorInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB_MedalHonor : public ::google::protobuf::Message {
 public:
  DB_MedalHonor();
  virtual ~DB_MedalHonor();
  
  DB_MedalHonor(const DB_MedalHonor& from);
  
  inline DB_MedalHonor& operator=(const DB_MedalHonor& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_MedalHonor& default_instance();
  void Swap(DB_MedalHonor* other);
  
  // implements Message ----------------------------------------------
  
  DB_MedalHonor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_MedalHonor& from);
  void MergeFrom(const DB_MedalHonor& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 nID = 1 [default = 0];
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIDFieldNumber = 1;
  inline ::google::protobuf::int32 nid() const;
  inline void set_nid(::google::protobuf::int32 value);
  
  // optional int32 medalHonorID = 2 [default = 0];
  inline bool has_medalhonorid() const;
  inline void clear_medalhonorid();
  static const int kMedalHonorIDFieldNumber = 2;
  inline ::google::protobuf::int32 medalhonorid() const;
  inline void set_medalhonorid(::google::protobuf::int32 value);
  
  // optional int32 nExp = 3 [default = 0];
  inline bool has_nexp() const;
  inline void clear_nexp();
  static const int kNExpFieldNumber = 3;
  inline ::google::protobuf::int32 nexp() const;
  inline void set_nexp(::google::protobuf::int32 value);
  
  // optional int32 nLV = 4 [default = 0];
  inline bool has_nlv() const;
  inline void clear_nlv();
  static const int kNLVFieldNumber = 4;
  inline ::google::protobuf::int32 nlv() const;
  inline void set_nlv(::google::protobuf::int32 value);
  
  // optional int32 nBagType = 5 [default = 0];
  inline bool has_nbagtype() const;
  inline void clear_nbagtype();
  static const int kNBagTypeFieldNumber = 5;
  inline ::google::protobuf::int32 nbagtype() const;
  inline void set_nbagtype(::google::protobuf::int32 value);
  
  // optional int32 nAdmiralID = 6 [default = 0];
  inline bool has_nadmiralid() const;
  inline void clear_nadmiralid();
  static const int kNAdmiralIDFieldNumber = 6;
  inline ::google::protobuf::int32 nadmiralid() const;
  inline void set_nadmiralid(::google::protobuf::int32 value);
  
  // optional bool bLock = 7 [default = false];
  inline bool has_block() const;
  inline void clear_block();
  static const int kBLockFieldNumber = 7;
  inline bool block() const;
  inline void set_block(bool value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 nid_;
  ::google::protobuf::int32 medalhonorid_;
  ::google::protobuf::int32 nexp_;
  ::google::protobuf::int32 nlv_;
  ::google::protobuf::int32 nbagtype_;
  ::google::protobuf::int32 nadmiralid_;
  bool block_;
  friend void  protobuf_AddDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_AssignDesc_dbinterface_5fsub_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_5fsub_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_MedalHonor* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// DB_UserLiteBase

// optional string userid = 1;
inline bool DB_UserLiteBase::has_userid() const {
  return _has_bit(0);
}
inline void DB_UserLiteBase::clear_userid() {
  if (userid_ != &_default_userid_) {
    userid_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& DB_UserLiteBase::userid() const {
  return *userid_;
}
inline void DB_UserLiteBase::set_userid(const ::std::string& value) {
  _set_bit(0);
  if (userid_ == &_default_userid_) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void DB_UserLiteBase::set_userid(const char* value) {
  _set_bit(0);
  if (userid_ == &_default_userid_) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void DB_UserLiteBase::set_userid(const char* value, size_t size) {
  _set_bit(0);
  if (userid_ == &_default_userid_) {
    userid_ = new ::std::string;
  }
  userid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_UserLiteBase::mutable_userid() {
  _set_bit(0);
  if (userid_ == &_default_userid_) {
    userid_ = new ::std::string;
  }
  return userid_;
}

// repeated string name = 2;
inline int DB_UserLiteBase::name_size() const {
  return name_.size();
}
inline void DB_UserLiteBase::clear_name() {
  name_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_UserLiteBase::name() const {
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_UserLiteBase::mutable_name() {
  return &name_;
}
inline const ::std::string& DB_UserLiteBase::name(int index) const {
  return name_.Get(index);
}
inline ::std::string* DB_UserLiteBase::mutable_name(int index) {
  return name_.Mutable(index);
}
inline void DB_UserLiteBase::set_name(int index, const ::std::string& value) {
  name_.Mutable(index)->assign(value);
}
inline void DB_UserLiteBase::set_name(int index, const char* value) {
  name_.Mutable(index)->assign(value);
}
inline void DB_UserLiteBase::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_UserLiteBase::add_name() {
  return name_.Add();
}
inline void DB_UserLiteBase::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
}
inline void DB_UserLiteBase::add_name(const char* value) {
  name_.Add()->assign(value);
}
inline void DB_UserLiteBase::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string pic = 3;
inline int DB_UserLiteBase::pic_size() const {
  return pic_.size();
}
inline void DB_UserLiteBase::clear_pic() {
  pic_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_UserLiteBase::pic() const {
  return pic_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_UserLiteBase::mutable_pic() {
  return &pic_;
}
inline const ::std::string& DB_UserLiteBase::pic(int index) const {
  return pic_.Get(index);
}
inline ::std::string* DB_UserLiteBase::mutable_pic(int index) {
  return pic_.Mutable(index);
}
inline void DB_UserLiteBase::set_pic(int index, const ::std::string& value) {
  pic_.Mutable(index)->assign(value);
}
inline void DB_UserLiteBase::set_pic(int index, const char* value) {
  pic_.Mutable(index)->assign(value);
}
inline void DB_UserLiteBase::set_pic(int index, const char* value, size_t size) {
  pic_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_UserLiteBase::add_pic() {
  return pic_.Add();
}
inline void DB_UserLiteBase::add_pic(const ::std::string& value) {
  pic_.Add()->assign(value);
}
inline void DB_UserLiteBase::add_pic(const char* value) {
  pic_.Add()->assign(value);
}
inline void DB_UserLiteBase::add_pic(const char* value, size_t size) {
  pic_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// optional int32 level = 4;
inline bool DB_UserLiteBase::has_level() const {
  return _has_bit(3);
}
inline void DB_UserLiteBase::clear_level() {
  level_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_UserLiteBase::level() const {
  return level_;
}
inline void DB_UserLiteBase::set_level(::google::protobuf::int32 value) {
  _set_bit(3);
  level_ = value;
}

// optional uint32 combatValue = 5;
inline bool DB_UserLiteBase::has_combatvalue() const {
  return _has_bit(4);
}
inline void DB_UserLiteBase::clear_combatvalue() {
  combatvalue_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 DB_UserLiteBase::combatvalue() const {
  return combatvalue_;
}
inline void DB_UserLiteBase::set_combatvalue(::google::protobuf::uint32 value) {
  _set_bit(4);
  combatvalue_ = value;
}

// optional bool online = 6;
inline bool DB_UserLiteBase::has_online() const {
  return _has_bit(5);
}
inline void DB_UserLiteBase::clear_online() {
  online_ = false;
  _clear_bit(5);
}
inline bool DB_UserLiteBase::online() const {
  return online_;
}
inline void DB_UserLiteBase::set_online(bool value) {
  _set_bit(5);
  online_ = value;
}

// optional int32 savetime = 7;
inline bool DB_UserLiteBase::has_savetime() const {
  return _has_bit(6);
}
inline void DB_UserLiteBase::clear_savetime() {
  savetime_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_UserLiteBase::savetime() const {
  return savetime_;
}
inline void DB_UserLiteBase::set_savetime(::google::protobuf::int32 value) {
  _set_bit(6);
  savetime_ = value;
}

// optional uint32 nIntegralScore = 8;
inline bool DB_UserLiteBase::has_nintegralscore() const {
  return _has_bit(7);
}
inline void DB_UserLiteBase::clear_nintegralscore() {
  nintegralscore_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 DB_UserLiteBase::nintegralscore() const {
  return nintegralscore_;
}
inline void DB_UserLiteBase::set_nintegralscore(::google::protobuf::uint32 value) {
  _set_bit(7);
  nintegralscore_ = value;
}

// optional int32 countryID = 9 [default = 0];
inline bool DB_UserLiteBase::has_countryid() const {
  return _has_bit(8);
}
inline void DB_UserLiteBase::clear_countryid() {
  countryid_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_UserLiteBase::countryid() const {
  return countryid_;
}
inline void DB_UserLiteBase::set_countryid(::google::protobuf::int32 value) {
  _set_bit(8);
  countryid_ = value;
}

// optional int32 lastLogonTm = 10;
inline bool DB_UserLiteBase::has_lastlogontm() const {
  return _has_bit(9);
}
inline void DB_UserLiteBase::clear_lastlogontm() {
  lastlogontm_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 DB_UserLiteBase::lastlogontm() const {
  return lastlogontm_;
}
inline void DB_UserLiteBase::set_lastlogontm(::google::protobuf::int32 value) {
  _set_bit(9);
  lastlogontm_ = value;
}

// optional int32 officerPosition = 11;
inline bool DB_UserLiteBase::has_officerposition() const {
  return _has_bit(10);
}
inline void DB_UserLiteBase::clear_officerposition() {
  officerposition_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 DB_UserLiteBase::officerposition() const {
  return officerposition_;
}
inline void DB_UserLiteBase::set_officerposition(::google::protobuf::int32 value) {
  _set_bit(10);
  officerposition_ = value;
}

// optional int32 arenaRank = 12;
inline bool DB_UserLiteBase::has_arenarank() const {
  return _has_bit(11);
}
inline void DB_UserLiteBase::clear_arenarank() {
  arenarank_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 DB_UserLiteBase::arenarank() const {
  return arenarank_;
}
inline void DB_UserLiteBase::set_arenarank(::google::protobuf::int32 value) {
  _set_bit(11);
  arenarank_ = value;
}

// optional int32 vipLevel = 13;
inline bool DB_UserLiteBase::has_viplevel() const {
  return _has_bit(12);
}
inline void DB_UserLiteBase::clear_viplevel() {
  viplevel_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 DB_UserLiteBase::viplevel() const {
  return viplevel_;
}
inline void DB_UserLiteBase::set_viplevel(::google::protobuf::int32 value) {
  _set_bit(12);
  viplevel_ = value;
}

// optional int32 vipType = 14;
inline bool DB_UserLiteBase::has_viptype() const {
  return _has_bit(13);
}
inline void DB_UserLiteBase::clear_viptype() {
  viptype_ = 0;
  _clear_bit(13);
}
inline ::google::protobuf::int32 DB_UserLiteBase::viptype() const {
  return viptype_;
}
inline void DB_UserLiteBase::set_viptype(::google::protobuf::int32 value) {
  _set_bit(13);
  viptype_ = value;
}

// optional int32 heroarenacombat = 15;
inline bool DB_UserLiteBase::has_heroarenacombat() const {
  return _has_bit(14);
}
inline void DB_UserLiteBase::clear_heroarenacombat() {
  heroarenacombat_ = 0;
  _clear_bit(14);
}
inline ::google::protobuf::int32 DB_UserLiteBase::heroarenacombat() const {
  return heroarenacombat_;
}
inline void DB_UserLiteBase::set_heroarenacombat(::google::protobuf::int32 value) {
  _set_bit(14);
  heroarenacombat_ = value;
}

// -------------------------------------------------------------------

// DB_CityUserLite

// optional int32 morale = 1 [default = 0];
inline bool DB_CityUserLite::has_morale() const {
  return _has_bit(0);
}
inline void DB_CityUserLite::clear_morale() {
  morale_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_CityUserLite::morale() const {
  return morale_;
}
inline void DB_CityUserLite::set_morale(::google::protobuf::int32 value) {
  _set_bit(0);
  morale_ = value;
}

// -------------------------------------------------------------------

// DB_RegionCityUserLite

// optional int32 morale = 1 [default = 0];
inline bool DB_RegionCityUserLite::has_morale() const {
  return _has_bit(0);
}
inline void DB_RegionCityUserLite::clear_morale() {
  morale_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_RegionCityUserLite::morale() const {
  return morale_;
}
inline void DB_RegionCityUserLite::set_morale(::google::protobuf::int32 value) {
  _set_bit(0);
  morale_ = value;
}

// optional int32 region = 2 [default = 0];
inline bool DB_RegionCityUserLite::has_region() const {
  return _has_bit(1);
}
inline void DB_RegionCityUserLite::clear_region() {
  region_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_RegionCityUserLite::region() const {
  return region_;
}
inline void DB_RegionCityUserLite::set_region(::google::protobuf::int32 value) {
  _set_bit(1);
  region_ = value;
}

// -------------------------------------------------------------------

// DB_GuildUserLite

// optional int32 position = 1;
inline bool DB_GuildUserLite::has_position() const {
  return _has_bit(0);
}
inline void DB_GuildUserLite::clear_position() {
  position_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_GuildUserLite::position() const {
  return position_;
}
inline void DB_GuildUserLite::set_position(::google::protobuf::int32 value) {
  _set_bit(0);
  position_ = value;
}

// optional int32 contribute = 2;
inline bool DB_GuildUserLite::has_contribute() const {
  return _has_bit(1);
}
inline void DB_GuildUserLite::clear_contribute() {
  contribute_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_GuildUserLite::contribute() const {
  return contribute_;
}
inline void DB_GuildUserLite::set_contribute(::google::protobuf::int32 value) {
  _set_bit(1);
  contribute_ = value;
}

// optional int32 totalContribute = 3;
inline bool DB_GuildUserLite::has_totalcontribute() const {
  return _has_bit(2);
}
inline void DB_GuildUserLite::clear_totalcontribute() {
  totalcontribute_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_GuildUserLite::totalcontribute() const {
  return totalcontribute_;
}
inline void DB_GuildUserLite::set_totalcontribute(::google::protobuf::int32 value) {
  _set_bit(2);
  totalcontribute_ = value;
}

// optional int32 addAtkPct = 4;
inline bool DB_GuildUserLite::has_addatkpct() const {
  return _has_bit(3);
}
inline void DB_GuildUserLite::clear_addatkpct() {
  addatkpct_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_GuildUserLite::addatkpct() const {
  return addatkpct_;
}
inline void DB_GuildUserLite::set_addatkpct(::google::protobuf::int32 value) {
  _set_bit(3);
  addatkpct_ = value;
}

// optional int32 addBloodPct = 5;
inline bool DB_GuildUserLite::has_addbloodpct() const {
  return _has_bit(4);
}
inline void DB_GuildUserLite::clear_addbloodpct() {
  addbloodpct_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_GuildUserLite::addbloodpct() const {
  return addbloodpct_;
}
inline void DB_GuildUserLite::set_addbloodpct(::google::protobuf::int32 value) {
  _set_bit(4);
  addbloodpct_ = value;
}

// repeated int32 daycontribute = 6;
inline int DB_GuildUserLite::daycontribute_size() const {
  return daycontribute_.size();
}
inline void DB_GuildUserLite::clear_daycontribute() {
  daycontribute_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_GuildUserLite::daycontribute() const {
  return daycontribute_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_GuildUserLite::mutable_daycontribute() {
  return &daycontribute_;
}
inline ::google::protobuf::int32 DB_GuildUserLite::daycontribute(int index) const {
  return daycontribute_.Get(index);
}
inline void DB_GuildUserLite::set_daycontribute(int index, ::google::protobuf::int32 value) {
  daycontribute_.Set(index, value);
}
inline void DB_GuildUserLite::add_daycontribute(::google::protobuf::int32 value) {
  daycontribute_.Add(value);
}

// optional int32 lastcontributetm = 7;
inline bool DB_GuildUserLite::has_lastcontributetm() const {
  return _has_bit(6);
}
inline void DB_GuildUserLite::clear_lastcontributetm() {
  lastcontributetm_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_GuildUserLite::lastcontributetm() const {
  return lastcontributetm_;
}
inline void DB_GuildUserLite::set_lastcontributetm(::google::protobuf::int32 value) {
  _set_bit(6);
  lastcontributetm_ = value;
}

// optional int32 lastcontidx = 8;
inline bool DB_GuildUserLite::has_lastcontidx() const {
  return _has_bit(7);
}
inline void DB_GuildUserLite::clear_lastcontidx() {
  lastcontidx_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_GuildUserLite::lastcontidx() const {
  return lastcontidx_;
}
inline void DB_GuildUserLite::set_lastcontidx(::google::protobuf::int32 value) {
  _set_bit(7);
  lastcontidx_ = value;
}

// -------------------------------------------------------------------

// DB_StarUserLite

// optional int32 attacktime = 1;
inline bool DB_StarUserLite::has_attacktime() const {
  return _has_bit(0);
}
inline void DB_StarUserLite::clear_attacktime() {
  attacktime_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_StarUserLite::attacktime() const {
  return attacktime_;
}
inline void DB_StarUserLite::set_attacktime(::google::protobuf::int32 value) {
  _set_bit(0);
  attacktime_ = value;
}

// optional int32 userstat = 2;
inline bool DB_StarUserLite::has_userstat() const {
  return _has_bit(1);
}
inline void DB_StarUserLite::clear_userstat() {
  userstat_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_StarUserLite::userstat() const {
  return userstat_;
}
inline void DB_StarUserLite::set_userstat(::google::protobuf::int32 value) {
  _set_bit(1);
  userstat_ = value;
}

// optional int32 safetime = 3;
inline bool DB_StarUserLite::has_safetime() const {
  return _has_bit(2);
}
inline void DB_StarUserLite::clear_safetime() {
  safetime_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_StarUserLite::safetime() const {
  return safetime_;
}
inline void DB_StarUserLite::set_safetime(::google::protobuf::int32 value) {
  _set_bit(2);
  safetime_ = value;
}

// optional int64 totalpercharge = 4;
inline bool DB_StarUserLite::has_totalpercharge() const {
  return _has_bit(3);
}
inline void DB_StarUserLite::clear_totalpercharge() {
  totalpercharge_ = GOOGLE_LONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::int64 DB_StarUserLite::totalpercharge() const {
  return totalpercharge_;
}
inline void DB_StarUserLite::set_totalpercharge(::google::protobuf::int64 value) {
  _set_bit(3);
  totalpercharge_ = value;
}

// optional int32 playeronlinetm = 5;
inline bool DB_StarUserLite::has_playeronlinetm() const {
  return _has_bit(4);
}
inline void DB_StarUserLite::clear_playeronlinetm() {
  playeronlinetm_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_StarUserLite::playeronlinetm() const {
  return playeronlinetm_;
}
inline void DB_StarUserLite::set_playeronlinetm(::google::protobuf::int32 value) {
  _set_bit(4);
  playeronlinetm_ = value;
}

// optional uint32 playerrefreshtm = 6;
inline bool DB_StarUserLite::has_playerrefreshtm() const {
  return _has_bit(5);
}
inline void DB_StarUserLite::clear_playerrefreshtm() {
  playerrefreshtm_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 DB_StarUserLite::playerrefreshtm() const {
  return playerrefreshtm_;
}
inline void DB_StarUserLite::set_playerrefreshtm(::google::protobuf::uint32 value) {
  _set_bit(5);
  playerrefreshtm_ = value;
}

// optional int32 finishCaptureTm = 7;
inline bool DB_StarUserLite::has_finishcapturetm() const {
  return _has_bit(6);
}
inline void DB_StarUserLite::clear_finishcapturetm() {
  finishcapturetm_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_StarUserLite::finishcapturetm() const {
  return finishcapturetm_;
}
inline void DB_StarUserLite::set_finishcapturetm(::google::protobuf::int32 value) {
  _set_bit(6);
  finishcapturetm_ = value;
}

// optional int32 logoutsafetime = 8;
inline bool DB_StarUserLite::has_logoutsafetime() const {
  return _has_bit(7);
}
inline void DB_StarUserLite::clear_logoutsafetime() {
  logoutsafetime_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_StarUserLite::logoutsafetime() const {
  return logoutsafetime_;
}
inline void DB_StarUserLite::set_logoutsafetime(::google::protobuf::int32 value) {
  _set_bit(7);
  logoutsafetime_ = value;
}

// -------------------------------------------------------------------

// DB_UserLite

// optional .DB_UserLiteBase userLite = 1;
inline bool DB_UserLite::has_userlite() const {
  return _has_bit(0);
}
inline void DB_UserLite::clear_userlite() {
  if (userlite_ != NULL) userlite_->::DB_UserLiteBase::Clear();
  _clear_bit(0);
}
inline const ::DB_UserLiteBase& DB_UserLite::userlite() const {
  return userlite_ != NULL ? *userlite_ : *default_instance_->userlite_;
}
inline ::DB_UserLiteBase* DB_UserLite::mutable_userlite() {
  _set_bit(0);
  if (userlite_ == NULL) userlite_ = new ::DB_UserLiteBase;
  return userlite_;
}

// optional .DB_CityUserLite cityLite = 2;
inline bool DB_UserLite::has_citylite() const {
  return _has_bit(1);
}
inline void DB_UserLite::clear_citylite() {
  if (citylite_ != NULL) citylite_->::DB_CityUserLite::Clear();
  _clear_bit(1);
}
inline const ::DB_CityUserLite& DB_UserLite::citylite() const {
  return citylite_ != NULL ? *citylite_ : *default_instance_->citylite_;
}
inline ::DB_CityUserLite* DB_UserLite::mutable_citylite() {
  _set_bit(1);
  if (citylite_ == NULL) citylite_ = new ::DB_CityUserLite;
  return citylite_;
}

// optional .DB_StarUserLite starLite = 3;
inline bool DB_UserLite::has_starlite() const {
  return _has_bit(2);
}
inline void DB_UserLite::clear_starlite() {
  if (starlite_ != NULL) starlite_->::DB_StarUserLite::Clear();
  _clear_bit(2);
}
inline const ::DB_StarUserLite& DB_UserLite::starlite() const {
  return starlite_ != NULL ? *starlite_ : *default_instance_->starlite_;
}
inline ::DB_StarUserLite* DB_UserLite::mutable_starlite() {
  _set_bit(2);
  if (starlite_ == NULL) starlite_ = new ::DB_StarUserLite;
  return starlite_;
}

// optional .DB_GuildUserLite guildLite = 4;
inline bool DB_UserLite::has_guildlite() const {
  return _has_bit(3);
}
inline void DB_UserLite::clear_guildlite() {
  if (guildlite_ != NULL) guildlite_->::DB_GuildUserLite::Clear();
  _clear_bit(3);
}
inline const ::DB_GuildUserLite& DB_UserLite::guildlite() const {
  return guildlite_ != NULL ? *guildlite_ : *default_instance_->guildlite_;
}
inline ::DB_GuildUserLite* DB_UserLite::mutable_guildlite() {
  _set_bit(3);
  if (guildlite_ == NULL) guildlite_ = new ::DB_GuildUserLite;
  return guildlite_;
}

// optional .DB_RegionCityUserLite regionCityLite = 5;
inline bool DB_UserLite::has_regioncitylite() const {
  return _has_bit(4);
}
inline void DB_UserLite::clear_regioncitylite() {
  if (regioncitylite_ != NULL) regioncitylite_->::DB_RegionCityUserLite::Clear();
  _clear_bit(4);
}
inline const ::DB_RegionCityUserLite& DB_UserLite::regioncitylite() const {
  return regioncitylite_ != NULL ? *regioncitylite_ : *default_instance_->regioncitylite_;
}
inline ::DB_RegionCityUserLite* DB_UserLite::mutable_regioncitylite() {
  _set_bit(4);
  if (regioncitylite_ == NULL) regioncitylite_ = new ::DB_RegionCityUserLite;
  return regioncitylite_;
}

// -------------------------------------------------------------------

// DB_Star

// required string userid = 1;
inline bool DB_Star::has_userid() const {
  return _has_bit(0);
}
inline void DB_Star::clear_userid() {
  if (userid_ != &_default_userid_) {
    userid_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& DB_Star::userid() const {
  return *userid_;
}
inline void DB_Star::set_userid(const ::std::string& value) {
  _set_bit(0);
  if (userid_ == &_default_userid_) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void DB_Star::set_userid(const char* value) {
  _set_bit(0);
  if (userid_ == &_default_userid_) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void DB_Star::set_userid(const char* value, size_t size) {
  _set_bit(0);
  if (userid_ == &_default_userid_) {
    userid_ = new ::std::string;
  }
  userid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Star::mutable_userid() {
  _set_bit(0);
  if (userid_ == &_default_userid_) {
    userid_ = new ::std::string;
  }
  return userid_;
}

// repeated string name = 2;
inline int DB_Star::name_size() const {
  return name_.size();
}
inline void DB_Star::clear_name() {
  name_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_Star::name() const {
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_Star::mutable_name() {
  return &name_;
}
inline const ::std::string& DB_Star::name(int index) const {
  return name_.Get(index);
}
inline ::std::string* DB_Star::mutable_name(int index) {
  return name_.Mutable(index);
}
inline void DB_Star::set_name(int index, const ::std::string& value) {
  name_.Mutable(index)->assign(value);
}
inline void DB_Star::set_name(int index, const char* value) {
  name_.Mutable(index)->assign(value);
}
inline void DB_Star::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Star::add_name() {
  return name_.Add();
}
inline void DB_Star::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
}
inline void DB_Star::add_name(const char* value) {
  name_.Add()->assign(value);
}
inline void DB_Star::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string profile_link = 3;
inline int DB_Star::profile_link_size() const {
  return profile_link_.size();
}
inline void DB_Star::clear_profile_link() {
  profile_link_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_Star::profile_link() const {
  return profile_link_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_Star::mutable_profile_link() {
  return &profile_link_;
}
inline const ::std::string& DB_Star::profile_link(int index) const {
  return profile_link_.Get(index);
}
inline ::std::string* DB_Star::mutable_profile_link(int index) {
  return profile_link_.Mutable(index);
}
inline void DB_Star::set_profile_link(int index, const ::std::string& value) {
  profile_link_.Mutable(index)->assign(value);
}
inline void DB_Star::set_profile_link(int index, const char* value) {
  profile_link_.Mutable(index)->assign(value);
}
inline void DB_Star::set_profile_link(int index, const char* value, size_t size) {
  profile_link_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Star::add_profile_link() {
  return profile_link_.Add();
}
inline void DB_Star::add_profile_link(const ::std::string& value) {
  profile_link_.Add()->assign(value);
}
inline void DB_Star::add_profile_link(const char* value) {
  profile_link_.Add()->assign(value);
}
inline void DB_Star::add_profile_link(const char* value, size_t size) {
  profile_link_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// optional int32 level = 4;
inline bool DB_Star::has_level() const {
  return _has_bit(3);
}
inline void DB_Star::clear_level() {
  level_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Star::level() const {
  return level_;
}
inline void DB_Star::set_level(::google::protobuf::int32 value) {
  _set_bit(3);
  level_ = value;
}

// optional int32 safetime = 5;
inline bool DB_Star::has_safetime() const {
  return _has_bit(4);
}
inline void DB_Star::clear_safetime() {
  safetime_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_Star::safetime() const {
  return safetime_;
}
inline void DB_Star::set_safetime(::google::protobuf::int32 value) {
  _set_bit(4);
  safetime_ = value;
}

// optional int32 attacktime = 6;
inline bool DB_Star::has_attacktime() const {
  return _has_bit(5);
}
inline void DB_Star::clear_attacktime() {
  attacktime_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_Star::attacktime() const {
  return attacktime_;
}
inline void DB_Star::set_attacktime(::google::protobuf::int32 value) {
  _set_bit(5);
  attacktime_ = value;
}

// optional bool online = 7;
inline bool DB_Star::has_online() const {
  return _has_bit(6);
}
inline void DB_Star::clear_online() {
  online_ = false;
  _clear_bit(6);
}
inline bool DB_Star::online() const {
  return online_;
}
inline void DB_Star::set_online(bool value) {
  _set_bit(6);
  online_ = value;
}

// optional int32 userstat = 8;
inline bool DB_Star::has_userstat() const {
  return _has_bit(7);
}
inline void DB_Star::clear_userstat() {
  userstat_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_Star::userstat() const {
  return userstat_;
}
inline void DB_Star::set_userstat(::google::protobuf::int32 value) {
  _set_bit(7);
  userstat_ = value;
}

// optional int32 savetime = 9;
inline bool DB_Star::has_savetime() const {
  return _has_bit(8);
}
inline void DB_Star::clear_savetime() {
  savetime_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_Star::savetime() const {
  return savetime_;
}
inline void DB_Star::set_savetime(::google::protobuf::int32 value) {
  _set_bit(8);
  savetime_ = value;
}

// optional int64 totalpercharge = 10;
inline bool DB_Star::has_totalpercharge() const {
  return _has_bit(9);
}
inline void DB_Star::clear_totalpercharge() {
  totalpercharge_ = GOOGLE_LONGLONG(0);
  _clear_bit(9);
}
inline ::google::protobuf::int64 DB_Star::totalpercharge() const {
  return totalpercharge_;
}
inline void DB_Star::set_totalpercharge(::google::protobuf::int64 value) {
  _set_bit(9);
  totalpercharge_ = value;
}

// optional int32 playeronlinetm = 11;
inline bool DB_Star::has_playeronlinetm() const {
  return _has_bit(10);
}
inline void DB_Star::clear_playeronlinetm() {
  playeronlinetm_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 DB_Star::playeronlinetm() const {
  return playeronlinetm_;
}
inline void DB_Star::set_playeronlinetm(::google::protobuf::int32 value) {
  _set_bit(10);
  playeronlinetm_ = value;
}

// optional uint32 playerrefreshtm = 12;
inline bool DB_Star::has_playerrefreshtm() const {
  return _has_bit(11);
}
inline void DB_Star::clear_playerrefreshtm() {
  playerrefreshtm_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 DB_Star::playerrefreshtm() const {
  return playerrefreshtm_;
}
inline void DB_Star::set_playerrefreshtm(::google::protobuf::uint32 value) {
  _set_bit(11);
  playerrefreshtm_ = value;
}

// optional int32 finishCaptureTm = 13;
inline bool DB_Star::has_finishcapturetm() const {
  return _has_bit(12);
}
inline void DB_Star::clear_finishcapturetm() {
  finishcapturetm_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 DB_Star::finishcapturetm() const {
  return finishcapturetm_;
}
inline void DB_Star::set_finishcapturetm(::google::protobuf::int32 value) {
  _set_bit(12);
  finishcapturetm_ = value;
}

// optional uint32 combatPowerValue = 14;
inline bool DB_Star::has_combatpowervalue() const {
  return _has_bit(13);
}
inline void DB_Star::clear_combatpowervalue() {
  combatpowervalue_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 DB_Star::combatpowervalue() const {
  return combatpowervalue_;
}
inline void DB_Star::set_combatpowervalue(::google::protobuf::uint32 value) {
  _set_bit(13);
  combatpowervalue_ = value;
}

// -------------------------------------------------------------------

// DB_BitCache

// repeated int32 bit = 1;
inline int DB_BitCache::bit_size() const {
  return bit_.size();
}
inline void DB_BitCache::clear_bit() {
  bit_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BitCache::bit() const {
  return bit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BitCache::mutable_bit() {
  return &bit_;
}
inline ::google::protobuf::int32 DB_BitCache::bit(int index) const {
  return bit_.Get(index);
}
inline void DB_BitCache::set_bit(int index, ::google::protobuf::int32 value) {
  bit_.Set(index, value);
}
inline void DB_BitCache::add_bit(::google::protobuf::int32 value) {
  bit_.Add(value);
}

// -------------------------------------------------------------------

// DB_BanLogin

// optional bool banlogin = 1 [default = false];
inline bool DB_BanLogin::has_banlogin() const {
  return _has_bit(0);
}
inline void DB_BanLogin::clear_banlogin() {
  banlogin_ = false;
  _clear_bit(0);
}
inline bool DB_BanLogin::banlogin() const {
  return banlogin_;
}
inline void DB_BanLogin::set_banlogin(bool value) {
  _set_bit(0);
  banlogin_ = value;
}

// optional int64 time = 2;
inline bool DB_BanLogin::has_time() const {
  return _has_bit(1);
}
inline void DB_BanLogin::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 DB_BanLogin::time() const {
  return time_;
}
inline void DB_BanLogin::set_time(::google::protobuf::int64 value) {
  _set_bit(1);
  time_ = value;
}

// -------------------------------------------------------------------

// DB_QuestRule

// optional int32 blvl = 1;
inline bool DB_QuestRule::has_blvl() const {
  return _has_bit(0);
}
inline void DB_QuestRule::clear_blvl() {
  blvl_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_QuestRule::blvl() const {
  return blvl_;
}
inline void DB_QuestRule::set_blvl(::google::protobuf::int32 value) {
  _set_bit(0);
  blvl_ = value;
}

// optional int32 brlvl = 2;
inline bool DB_QuestRule::has_brlvl() const {
  return _has_bit(1);
}
inline void DB_QuestRule::clear_brlvl() {
  brlvl_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_QuestRule::brlvl() const {
  return brlvl_;
}
inline void DB_QuestRule::set_brlvl(::google::protobuf::int32 value) {
  _set_bit(1);
  brlvl_ = value;
}

// optional int32 b1lvl = 3;
inline bool DB_QuestRule::has_b1lvl() const {
  return _has_bit(2);
}
inline void DB_QuestRule::clear_b1lvl() {
  b1lvl_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_QuestRule::b1lvl() const {
  return b1lvl_;
}
inline void DB_QuestRule::set_b1lvl(::google::protobuf::int32 value) {
  _set_bit(2);
  b1lvl_ = value;
}

// optional int32 b1count = 4;
inline bool DB_QuestRule::has_b1count() const {
  return _has_bit(3);
}
inline void DB_QuestRule::clear_b1count() {
  b1count_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_QuestRule::b1count() const {
  return b1count_;
}
inline void DB_QuestRule::set_b1count(::google::protobuf::int32 value) {
  _set_bit(3);
  b1count_ = value;
}

// optional int32 b2lvl = 5;
inline bool DB_QuestRule::has_b2lvl() const {
  return _has_bit(4);
}
inline void DB_QuestRule::clear_b2lvl() {
  b2lvl_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_QuestRule::b2lvl() const {
  return b2lvl_;
}
inline void DB_QuestRule::set_b2lvl(::google::protobuf::int32 value) {
  _set_bit(4);
  b2lvl_ = value;
}

// optional int32 b2count = 6;
inline bool DB_QuestRule::has_b2count() const {
  return _has_bit(5);
}
inline void DB_QuestRule::clear_b2count() {
  b2count_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_QuestRule::b2count() const {
  return b2count_;
}
inline void DB_QuestRule::set_b2count(::google::protobuf::int32 value) {
  _set_bit(5);
  b2count_ = value;
}

// optional int32 b3lvl = 7;
inline bool DB_QuestRule::has_b3lvl() const {
  return _has_bit(6);
}
inline void DB_QuestRule::clear_b3lvl() {
  b3lvl_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_QuestRule::b3lvl() const {
  return b3lvl_;
}
inline void DB_QuestRule::set_b3lvl(::google::protobuf::int32 value) {
  _set_bit(6);
  b3lvl_ = value;
}

// optional int32 b4lvl = 8;
inline bool DB_QuestRule::has_b4lvl() const {
  return _has_bit(7);
}
inline void DB_QuestRule::clear_b4lvl() {
  b4lvl_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_QuestRule::b4lvl() const {
  return b4lvl_;
}
inline void DB_QuestRule::set_b4lvl(::google::protobuf::int32 value) {
  _set_bit(7);
  b4lvl_ = value;
}

// optional int32 b5lvl = 9;
inline bool DB_QuestRule::has_b5lvl() const {
  return _has_bit(8);
}
inline void DB_QuestRule::clear_b5lvl() {
  b5lvl_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_QuestRule::b5lvl() const {
  return b5lvl_;
}
inline void DB_QuestRule::set_b5lvl(::google::protobuf::int32 value) {
  _set_bit(8);
  b5lvl_ = value;
}

// optional int32 b6lvl = 10;
inline bool DB_QuestRule::has_b6lvl() const {
  return _has_bit(9);
}
inline void DB_QuestRule::clear_b6lvl() {
  b6lvl_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 DB_QuestRule::b6lvl() const {
  return b6lvl_;
}
inline void DB_QuestRule::set_b6lvl(::google::protobuf::int32 value) {
  _set_bit(9);
  b6lvl_ = value;
}

// optional int32 b6count = 11;
inline bool DB_QuestRule::has_b6count() const {
  return _has_bit(10);
}
inline void DB_QuestRule::clear_b6count() {
  b6count_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 DB_QuestRule::b6count() const {
  return b6count_;
}
inline void DB_QuestRule::set_b6count(::google::protobuf::int32 value) {
  _set_bit(10);
  b6count_ = value;
}

// optional int32 b7lvl = 12;
inline bool DB_QuestRule::has_b7lvl() const {
  return _has_bit(11);
}
inline void DB_QuestRule::clear_b7lvl() {
  b7lvl_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 DB_QuestRule::b7lvl() const {
  return b7lvl_;
}
inline void DB_QuestRule::set_b7lvl(::google::protobuf::int32 value) {
  _set_bit(11);
  b7lvl_ = value;
}

// optional int32 b8lvl = 13;
inline bool DB_QuestRule::has_b8lvl() const {
  return _has_bit(12);
}
inline void DB_QuestRule::clear_b8lvl() {
  b8lvl_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 DB_QuestRule::b8lvl() const {
  return b8lvl_;
}
inline void DB_QuestRule::set_b8lvl(::google::protobuf::int32 value) {
  _set_bit(12);
  b8lvl_ = value;
}

// optional int32 b9lvl = 14;
inline bool DB_QuestRule::has_b9lvl() const {
  return _has_bit(13);
}
inline void DB_QuestRule::clear_b9lvl() {
  b9lvl_ = 0;
  _clear_bit(13);
}
inline ::google::protobuf::int32 DB_QuestRule::b9lvl() const {
  return b9lvl_;
}
inline void DB_QuestRule::set_b9lvl(::google::protobuf::int32 value) {
  _set_bit(13);
  b9lvl_ = value;
}

// optional int32 b10lvl = 15;
inline bool DB_QuestRule::has_b10lvl() const {
  return _has_bit(14);
}
inline void DB_QuestRule::clear_b10lvl() {
  b10lvl_ = 0;
  _clear_bit(14);
}
inline ::google::protobuf::int32 DB_QuestRule::b10lvl() const {
  return b10lvl_;
}
inline void DB_QuestRule::set_b10lvl(::google::protobuf::int32 value) {
  _set_bit(14);
  b10lvl_ = value;
}

// optional int32 b11lvl = 16;
inline bool DB_QuestRule::has_b11lvl() const {
  return _has_bit(15);
}
inline void DB_QuestRule::clear_b11lvl() {
  b11lvl_ = 0;
  _clear_bit(15);
}
inline ::google::protobuf::int32 DB_QuestRule::b11lvl() const {
  return b11lvl_;
}
inline void DB_QuestRule::set_b11lvl(::google::protobuf::int32 value) {
  _set_bit(15);
  b11lvl_ = value;
}

// optional int32 b12lvl = 17;
inline bool DB_QuestRule::has_b12lvl() const {
  return _has_bit(16);
}
inline void DB_QuestRule::clear_b12lvl() {
  b12lvl_ = 0;
  _clear_bit(16);
}
inline ::google::protobuf::int32 DB_QuestRule::b12lvl() const {
  return b12lvl_;
}
inline void DB_QuestRule::set_b12lvl(::google::protobuf::int32 value) {
  _set_bit(16);
  b12lvl_ = value;
}

// optional int32 b13lvl = 18;
inline bool DB_QuestRule::has_b13lvl() const {
  return _has_bit(17);
}
inline void DB_QuestRule::clear_b13lvl() {
  b13lvl_ = 0;
  _clear_bit(17);
}
inline ::google::protobuf::int32 DB_QuestRule::b13lvl() const {
  return b13lvl_;
}
inline void DB_QuestRule::set_b13lvl(::google::protobuf::int32 value) {
  _set_bit(17);
  b13lvl_ = value;
}

// optional int32 b14lvl = 19;
inline bool DB_QuestRule::has_b14lvl() const {
  return _has_bit(18);
}
inline void DB_QuestRule::clear_b14lvl() {
  b14lvl_ = 0;
  _clear_bit(18);
}
inline ::google::protobuf::int32 DB_QuestRule::b14lvl() const {
  return b14lvl_;
}
inline void DB_QuestRule::set_b14lvl(::google::protobuf::int32 value) {
  _set_bit(18);
  b14lvl_ = value;
}

// optional int32 b15lvl = 20;
inline bool DB_QuestRule::has_b15lvl() const {
  return _has_bit(19);
}
inline void DB_QuestRule::clear_b15lvl() {
  b15lvl_ = 0;
  _clear_bit(19);
}
inline ::google::protobuf::int32 DB_QuestRule::b15lvl() const {
  return b15lvl_;
}
inline void DB_QuestRule::set_b15lvl(::google::protobuf::int32 value) {
  _set_bit(19);
  b15lvl_ = value;
}

// optional int32 b16lvl = 21;
inline bool DB_QuestRule::has_b16lvl() const {
  return _has_bit(20);
}
inline void DB_QuestRule::clear_b16lvl() {
  b16lvl_ = 0;
  _clear_bit(20);
}
inline ::google::protobuf::int32 DB_QuestRule::b16lvl() const {
  return b16lvl_;
}
inline void DB_QuestRule::set_b16lvl(::google::protobuf::int32 value) {
  _set_bit(20);
  b16lvl_ = value;
}

// optional int32 b17lvl = 22;
inline bool DB_QuestRule::has_b17lvl() const {
  return _has_bit(21);
}
inline void DB_QuestRule::clear_b17lvl() {
  b17lvl_ = 0;
  _clear_bit(21);
}
inline ::google::protobuf::int32 DB_QuestRule::b17lvl() const {
  return b17lvl_;
}
inline void DB_QuestRule::set_b17lvl(::google::protobuf::int32 value) {
  _set_bit(21);
  b17lvl_ = value;
}

// optional int32 b18lvl = 23;
inline bool DB_QuestRule::has_b18lvl() const {
  return _has_bit(22);
}
inline void DB_QuestRule::clear_b18lvl() {
  b18lvl_ = 0;
  _clear_bit(22);
}
inline ::google::protobuf::int32 DB_QuestRule::b18lvl() const {
  return b18lvl_;
}
inline void DB_QuestRule::set_b18lvl(::google::protobuf::int32 value) {
  _set_bit(22);
  b18lvl_ = value;
}

// optional int32 b19lvl = 24;
inline bool DB_QuestRule::has_b19lvl() const {
  return _has_bit(23);
}
inline void DB_QuestRule::clear_b19lvl() {
  b19lvl_ = 0;
  _clear_bit(23);
}
inline ::google::protobuf::int32 DB_QuestRule::b19lvl() const {
  return b19lvl_;
}
inline void DB_QuestRule::set_b19lvl(::google::protobuf::int32 value) {
  _set_bit(23);
  b19lvl_ = value;
}

// optional int32 b20lvl = 25;
inline bool DB_QuestRule::has_b20lvl() const {
  return _has_bit(24);
}
inline void DB_QuestRule::clear_b20lvl() {
  b20lvl_ = 0;
  _clear_bit(24);
}
inline ::google::protobuf::int32 DB_QuestRule::b20lvl() const {
  return b20lvl_;
}
inline void DB_QuestRule::set_b20lvl(::google::protobuf::int32 value) {
  _set_bit(24);
  b20lvl_ = value;
}

// optional int32 b21lvl = 26;
inline bool DB_QuestRule::has_b21lvl() const {
  return _has_bit(25);
}
inline void DB_QuestRule::clear_b21lvl() {
  b21lvl_ = 0;
  _clear_bit(25);
}
inline ::google::protobuf::int32 DB_QuestRule::b21lvl() const {
  return b21lvl_;
}
inline void DB_QuestRule::set_b21lvl(::google::protobuf::int32 value) {
  _set_bit(25);
  b21lvl_ = value;
}

// optional int32 b22lvl = 27;
inline bool DB_QuestRule::has_b22lvl() const {
  return _has_bit(26);
}
inline void DB_QuestRule::clear_b22lvl() {
  b22lvl_ = 0;
  _clear_bit(26);
}
inline ::google::protobuf::int32 DB_QuestRule::b22lvl() const {
  return b22lvl_;
}
inline void DB_QuestRule::set_b22lvl(::google::protobuf::int32 value) {
  _set_bit(26);
  b22lvl_ = value;
}

// optional int32 b23lvl = 28;
inline bool DB_QuestRule::has_b23lvl() const {
  return _has_bit(27);
}
inline void DB_QuestRule::clear_b23lvl() {
  b23lvl_ = 0;
  _clear_bit(27);
}
inline ::google::protobuf::int32 DB_QuestRule::b23lvl() const {
  return b23lvl_;
}
inline void DB_QuestRule::set_b23lvl(::google::protobuf::int32 value) {
  _set_bit(27);
  b23lvl_ = value;
}

// optional int32 b24lvl = 29;
inline bool DB_QuestRule::has_b24lvl() const {
  return _has_bit(28);
}
inline void DB_QuestRule::clear_b24lvl() {
  b24lvl_ = 0;
  _clear_bit(28);
}
inline ::google::protobuf::int32 DB_QuestRule::b24lvl() const {
  return b24lvl_;
}
inline void DB_QuestRule::set_b24lvl(::google::protobuf::int32 value) {
  _set_bit(28);
  b24lvl_ = value;
}

// optional int32 b25lvl = 30;
inline bool DB_QuestRule::has_b25lvl() const {
  return _has_bit(29);
}
inline void DB_QuestRule::clear_b25lvl() {
  b25lvl_ = 0;
  _clear_bit(29);
}
inline ::google::protobuf::int32 DB_QuestRule::b25lvl() const {
  return b25lvl_;
}
inline void DB_QuestRule::set_b25lvl(::google::protobuf::int32 value) {
  _set_bit(29);
  b25lvl_ = value;
}

// optional int32 b26lvl = 31;
inline bool DB_QuestRule::has_b26lvl() const {
  return _has_bit(30);
}
inline void DB_QuestRule::clear_b26lvl() {
  b26lvl_ = 0;
  _clear_bit(30);
}
inline ::google::protobuf::int32 DB_QuestRule::b26lvl() const {
  return b26lvl_;
}
inline void DB_QuestRule::set_b26lvl(::google::protobuf::int32 value) {
  _set_bit(30);
  b26lvl_ = value;
}

// optional int32 b28lvl = 32;
inline bool DB_QuestRule::has_b28lvl() const {
  return _has_bit(31);
}
inline void DB_QuestRule::clear_b28lvl() {
  b28lvl_ = 0;
  _clear_bit(31);
}
inline ::google::protobuf::int32 DB_QuestRule::b28lvl() const {
  return b28lvl_;
}
inline void DB_QuestRule::set_b28lvl(::google::protobuf::int32 value) {
  _set_bit(31);
  b28lvl_ = value;
}

// optional int32 b29lvl = 33;
inline bool DB_QuestRule::has_b29lvl() const {
  return _has_bit(32);
}
inline void DB_QuestRule::clear_b29lvl() {
  b29lvl_ = 0;
  _clear_bit(32);
}
inline ::google::protobuf::int32 DB_QuestRule::b29lvl() const {
  return b29lvl_;
}
inline void DB_QuestRule::set_b29lvl(::google::protobuf::int32 value) {
  _set_bit(32);
  b29lvl_ = value;
}

// optional int32 b30lvl = 34;
inline bool DB_QuestRule::has_b30lvl() const {
  return _has_bit(33);
}
inline void DB_QuestRule::clear_b30lvl() {
  b30lvl_ = 0;
  _clear_bit(33);
}
inline ::google::protobuf::int32 DB_QuestRule::b30lvl() const {
  return b30lvl_;
}
inline void DB_QuestRule::set_b30lvl(::google::protobuf::int32 value) {
  _set_bit(33);
  b30lvl_ = value;
}

// optional int32 b31lvl = 35;
inline bool DB_QuestRule::has_b31lvl() const {
  return _has_bit(34);
}
inline void DB_QuestRule::clear_b31lvl() {
  b31lvl_ = 0;
  _clear_bit(34);
}
inline ::google::protobuf::int32 DB_QuestRule::b31lvl() const {
  return b31lvl_;
}
inline void DB_QuestRule::set_b31lvl(::google::protobuf::int32 value) {
  _set_bit(34);
  b31lvl_ = value;
}

// optional int32 b33lvl = 36;
inline bool DB_QuestRule::has_b33lvl() const {
  return _has_bit(35);
}
inline void DB_QuestRule::clear_b33lvl() {
  b33lvl_ = 0;
  _clear_bit(35);
}
inline ::google::protobuf::int32 DB_QuestRule::b33lvl() const {
  return b33lvl_;
}
inline void DB_QuestRule::set_b33lvl(::google::protobuf::int32 value) {
  _set_bit(35);
  b33lvl_ = value;
}

// optional int32 lootpicked = 37;
inline bool DB_QuestRule::has_lootpicked() const {
  return _has_bit(36);
}
inline void DB_QuestRule::clear_lootpicked() {
  lootpicked_ = 0;
  _clear_bit(36);
}
inline ::google::protobuf::int32 DB_QuestRule::lootpicked() const {
  return lootpicked_;
}
inline void DB_QuestRule::set_lootpicked(::google::protobuf::int32 value) {
  _set_bit(36);
  lootpicked_ = value;
}

// optional int32 singleclickbank1 = 38;
inline bool DB_QuestRule::has_singleclickbank1() const {
  return _has_bit(37);
}
inline void DB_QuestRule::clear_singleclickbank1() {
  singleclickbank1_ = 0;
  _clear_bit(37);
}
inline ::google::protobuf::int32 DB_QuestRule::singleclickbank1() const {
  return singleclickbank1_;
}
inline void DB_QuestRule::set_singleclickbank1(::google::protobuf::int32 value) {
  _set_bit(37);
  singleclickbank1_ = value;
}

// optional int32 singleclickbank2 = 39;
inline bool DB_QuestRule::has_singleclickbank2() const {
  return _has_bit(38);
}
inline void DB_QuestRule::clear_singleclickbank2() {
  singleclickbank2_ = 0;
  _clear_bit(38);
}
inline ::google::protobuf::int32 DB_QuestRule::singleclickbank2() const {
  return singleclickbank2_;
}
inline void DB_QuestRule::set_singleclickbank2(::google::protobuf::int32 value) {
  _set_bit(38);
  singleclickbank2_ = value;
}

// optional int32 resourcegather1 = 40;
inline bool DB_QuestRule::has_resourcegather1() const {
  return _has_bit(39);
}
inline void DB_QuestRule::clear_resourcegather1() {
  resourcegather1_ = 0;
  _clear_bit(39);
}
inline ::google::protobuf::int32 DB_QuestRule::resourcegather1() const {
  return resourcegather1_;
}
inline void DB_QuestRule::set_resourcegather1(::google::protobuf::int32 value) {
  _set_bit(39);
  resourcegather1_ = value;
}

// optional int32 resourcegather2 = 41;
inline bool DB_QuestRule::has_resourcegather2() const {
  return _has_bit(40);
}
inline void DB_QuestRule::clear_resourcegather2() {
  resourcegather2_ = 0;
  _clear_bit(40);
}
inline ::google::protobuf::int32 DB_QuestRule::resourcegather2() const {
  return resourcegather2_;
}
inline void DB_QuestRule::set_resourcegather2(::google::protobuf::int32 value) {
  _set_bit(40);
  resourcegather2_ = value;
}

// optional int32 worder_count = 42;
inline bool DB_QuestRule::has_worder_count() const {
  return _has_bit(41);
}
inline void DB_QuestRule::clear_worder_count() {
  worder_count_ = 0;
  _clear_bit(41);
}
inline ::google::protobuf::int32 DB_QuestRule::worder_count() const {
  return worder_count_;
}
inline void DB_QuestRule::set_worder_count(::google::protobuf::int32 value) {
  _set_bit(41);
  worder_count_ = value;
}

// optional int32 invasion_repel = 43;
inline bool DB_QuestRule::has_invasion_repel() const {
  return _has_bit(42);
}
inline void DB_QuestRule::clear_invasion_repel() {
  invasion_repel_ = 0;
  _clear_bit(42);
}
inline ::google::protobuf::int32 DB_QuestRule::invasion_repel() const {
  return invasion_repel_;
}
inline void DB_QuestRule::set_invasion_repel(::google::protobuf::int32 value) {
  _set_bit(42);
  invasion_repel_ = value;
}

// optional int32 friendInstalls = 44;
inline bool DB_QuestRule::has_friendinstalls() const {
  return _has_bit(43);
}
inline void DB_QuestRule::clear_friendinstalls() {
  friendinstalls_ = 0;
  _clear_bit(43);
}
inline ::google::protobuf::int32 DB_QuestRule::friendinstalls() const {
  return friendinstalls_;
}
inline void DB_QuestRule::set_friendinstalls(::google::protobuf::int32 value) {
  _set_bit(43);
  friendinstalls_ = value;
}

// optional int32 built = 45;
inline bool DB_QuestRule::has_built() const {
  return _has_bit(44);
}
inline void DB_QuestRule::clear_built() {
  built_ = 0;
  _clear_bit(44);
}
inline ::google::protobuf::int32 DB_QuestRule::built() const {
  return built_;
}
inline void DB_QuestRule::set_built(::google::protobuf::int32 value) {
  _set_bit(44);
  built_ = value;
}

// optional int32 built3 = 46;
inline bool DB_QuestRule::has_built3() const {
  return _has_bit(45);
}
inline void DB_QuestRule::clear_built3() {
  built3_ = 0;
  _clear_bit(45);
}
inline ::google::protobuf::int32 DB_QuestRule::built3() const {
  return built3_;
}
inline void DB_QuestRule::set_built3(::google::protobuf::int32 value) {
  _set_bit(45);
  built3_ = value;
}

// optional int32 built10 = 47;
inline bool DB_QuestRule::has_built10() const {
  return _has_bit(46);
}
inline void DB_QuestRule::clear_built10() {
  built10_ = 0;
  _clear_bit(46);
}
inline ::google::protobuf::int32 DB_QuestRule::built10() const {
  return built10_;
}
inline void DB_QuestRule::set_built10(::google::protobuf::int32 value) {
  _set_bit(46);
  built10_ = value;
}

// optional int32 wallcount = 48;
inline bool DB_QuestRule::has_wallcount() const {
  return _has_bit(47);
}
inline void DB_QuestRule::clear_wallcount() {
  wallcount_ = 0;
  _clear_bit(47);
}
inline ::google::protobuf::int32 DB_QuestRule::wallcount() const {
  return wallcount_;
}
inline void DB_QuestRule::set_wallcount(::google::protobuf::int32 value) {
  _set_bit(47);
  wallcount_ = value;
}

// optional int32 artifacts = 49;
inline bool DB_QuestRule::has_artifacts() const {
  return _has_bit(48);
}
inline void DB_QuestRule::clear_artifacts() {
  artifacts_ = 0;
  _clear_bit(48);
}
inline ::google::protobuf::int32 DB_QuestRule::artifacts() const {
  return artifacts_;
}
inline void DB_QuestRule::set_artifacts(::google::protobuf::int32 value) {
  _set_bit(48);
  artifacts_ = value;
}

// optional int32 doodad = 50;
inline bool DB_QuestRule::has_doodad() const {
  return _has_bit(49);
}
inline void DB_QuestRule::clear_doodad() {
  doodad_ = 0;
  _clear_bit(49);
}
inline ::google::protobuf::int32 DB_QuestRule::doodad() const {
  return doodad_;
}
inline void DB_QuestRule::set_doodad(::google::protobuf::int32 value) {
  _set_bit(49);
  doodad_ = value;
}

// optional int32 bonus_bookmark = 51;
inline bool DB_QuestRule::has_bonus_bookmark() const {
  return _has_bit(50);
}
inline void DB_QuestRule::clear_bonus_bookmark() {
  bonus_bookmark_ = 0;
  _clear_bit(50);
}
inline ::google::protobuf::int32 DB_QuestRule::bonus_bookmark() const {
  return bonus_bookmark_;
}
inline void DB_QuestRule::set_bonus_bookmark(::google::protobuf::int32 value) {
  _set_bit(50);
  bonus_bookmark_ = value;
}

// optional int32 bonus_fan = 52;
inline bool DB_QuestRule::has_bonus_fan() const {
  return _has_bit(51);
}
inline void DB_QuestRule::clear_bonus_fan() {
  bonus_fan_ = 0;
  _clear_bit(51);
}
inline ::google::protobuf::int32 DB_QuestRule::bonus_fan() const {
  return bonus_fan_;
}
inline void DB_QuestRule::set_bonus_fan(::google::protobuf::int32 value) {
  _set_bit(51);
  bonus_fan_ = value;
}

// optional int32 bonus_invites = 53;
inline bool DB_QuestRule::has_bonus_invites() const {
  return _has_bit(52);
}
inline void DB_QuestRule::clear_bonus_invites() {
  bonus_invites_ = 0;
  _clear_bit(52);
}
inline ::google::protobuf::int32 DB_QuestRule::bonus_invites() const {
  return bonus_invites_;
}
inline void DB_QuestRule::set_bonus_invites(::google::protobuf::int32 value) {
  _set_bit(52);
  bonus_invites_ = value;
}

// optional int32 bonus_gifts = 54;
inline bool DB_QuestRule::has_bonus_gifts() const {
  return _has_bit(53);
}
inline void DB_QuestRule::clear_bonus_gifts() {
  bonus_gifts_ = 0;
  _clear_bit(53);
}
inline ::google::protobuf::int32 DB_QuestRule::bonus_gifts() const {
  return bonus_gifts_;
}
inline void DB_QuestRule::set_bonus_gifts(::google::protobuf::int32 value) {
  _set_bit(53);
  bonus_gifts_ = value;
}

// optional int32 _kills = 56;
inline bool DB_QuestRule::has__kills() const {
  return _has_bit(54);
}
inline void DB_QuestRule::clear__kills() {
  _kills_ = 0;
  _clear_bit(54);
}
inline ::google::protobuf::int32 DB_QuestRule::_kills() const {
  return _kills_;
}
inline void DB_QuestRule::set__kills(::google::protobuf::int32 value) {
  _set_bit(54);
  _kills_ = value;
}

// optional int32 _killsInAttack = 57;
inline bool DB_QuestRule::has__killsinattack() const {
  return _has_bit(55);
}
inline void DB_QuestRule::clear__killsinattack() {
  _killsinattack_ = 0;
  _clear_bit(55);
}
inline ::google::protobuf::int32 DB_QuestRule::_killsinattack() const {
  return _killsinattack_;
}
inline void DB_QuestRule::set__killsinattack(::google::protobuf::int32 value) {
  _set_bit(55);
  _killsinattack_ = value;
}

// optional int32 _maxKillsLRS = 58;
inline bool DB_QuestRule::has__maxkillslrs() const {
  return _has_bit(56);
}
inline void DB_QuestRule::clear__maxkillslrs() {
  _maxkillslrs_ = 0;
  _clear_bit(56);
}
inline ::google::protobuf::int32 DB_QuestRule::_maxkillslrs() const {
  return _maxkillslrs_;
}
inline void DB_QuestRule::set__maxkillslrs(::google::protobuf::int32 value) {
  _set_bit(56);
  _maxkillslrs_ = value;
}

// optional int32 _maxFlattenLRS = 59;
inline bool DB_QuestRule::has__maxflattenlrs() const {
  return _has_bit(57);
}
inline void DB_QuestRule::clear__maxflattenlrs() {
  _maxflattenlrs_ = 0;
  _clear_bit(57);
}
inline ::google::protobuf::int32 DB_QuestRule::_maxflattenlrs() const {
  return _maxflattenlrs_;
}
inline void DB_QuestRule::set__maxflattenlrs(::google::protobuf::int32 value) {
  _set_bit(57);
  _maxflattenlrs_ = value;
}

// optional int32 _lrs1 = 60;
inline bool DB_QuestRule::has__lrs1() const {
  return _has_bit(58);
}
inline void DB_QuestRule::clear__lrs1() {
  _lrs1_ = 0;
  _clear_bit(58);
}
inline ::google::protobuf::int32 DB_QuestRule::_lrs1() const {
  return _lrs1_;
}
inline void DB_QuestRule::set__lrs1(::google::protobuf::int32 value) {
  _set_bit(58);
  _lrs1_ = value;
}

// optional int32 _lrs2 = 61;
inline bool DB_QuestRule::has__lrs2() const {
  return _has_bit(59);
}
inline void DB_QuestRule::clear__lrs2() {
  _lrs2_ = 0;
  _clear_bit(59);
}
inline ::google::protobuf::int32 DB_QuestRule::_lrs2() const {
  return _lrs2_;
}
inline void DB_QuestRule::set__lrs2(::google::protobuf::int32 value) {
  _set_bit(59);
  _lrs2_ = value;
}

// optional int32 _lrs3 = 62;
inline bool DB_QuestRule::has__lrs3() const {
  return _has_bit(60);
}
inline void DB_QuestRule::clear__lrs3() {
  _lrs3_ = 0;
  _clear_bit(60);
}
inline ::google::protobuf::int32 DB_QuestRule::_lrs3() const {
  return _lrs3_;
}
inline void DB_QuestRule::set__lrs3(::google::protobuf::int32 value) {
  _set_bit(60);
  _lrs3_ = value;
}

// optional int32 _lrs4 = 63;
inline bool DB_QuestRule::has__lrs4() const {
  return _has_bit(61);
}
inline void DB_QuestRule::clear__lrs4() {
  _lrs4_ = 0;
  _clear_bit(61);
}
inline ::google::protobuf::int32 DB_QuestRule::_lrs4() const {
  return _lrs4_;
}
inline void DB_QuestRule::set__lrs4(::google::protobuf::int32 value) {
  _set_bit(61);
  _lrs4_ = value;
}

// optional int32 _lrs5 = 64;
inline bool DB_QuestRule::has__lrs5() const {
  return _has_bit(62);
}
inline void DB_QuestRule::clear__lrs5() {
  _lrs5_ = 0;
  _clear_bit(62);
}
inline ::google::protobuf::int32 DB_QuestRule::_lrs5() const {
  return _lrs5_;
}
inline void DB_QuestRule::set__lrs5(::google::protobuf::int32 value) {
  _set_bit(62);
  _lrs5_ = value;
}

// optional int32 _lrs6 = 65;
inline bool DB_QuestRule::has__lrs6() const {
  return _has_bit(63);
}
inline void DB_QuestRule::clear__lrs6() {
  _lrs6_ = 0;
  _clear_bit(63);
}
inline ::google::protobuf::int32 DB_QuestRule::_lrs6() const {
  return _lrs6_;
}
inline void DB_QuestRule::set__lrs6(::google::protobuf::int32 value) {
  _set_bit(63);
  _lrs6_ = value;
}

// optional int32 _lrs7 = 66;
inline bool DB_QuestRule::has__lrs7() const {
  return _has_bit(64);
}
inline void DB_QuestRule::clear__lrs7() {
  _lrs7_ = 0;
  _clear_bit(64);
}
inline ::google::protobuf::int32 DB_QuestRule::_lrs7() const {
  return _lrs7_;
}
inline void DB_QuestRule::set__lrs7(::google::protobuf::int32 value) {
  _set_bit(64);
  _lrs7_ = value;
}

// optional int32 _lrs8 = 67;
inline bool DB_QuestRule::has__lrs8() const {
  return _has_bit(65);
}
inline void DB_QuestRule::clear__lrs8() {
  _lrs8_ = 0;
  _clear_bit(65);
}
inline ::google::protobuf::int32 DB_QuestRule::_lrs8() const {
  return _lrs8_;
}
inline void DB_QuestRule::set__lrs8(::google::protobuf::int32 value) {
  _set_bit(65);
  _lrs8_ = value;
}

// optional int32 _lrs9 = 68;
inline bool DB_QuestRule::has__lrs9() const {
  return _has_bit(66);
}
inline void DB_QuestRule::clear__lrs9() {
  _lrs9_ = 0;
  _clear_bit(66);
}
inline ::google::protobuf::int32 DB_QuestRule::_lrs9() const {
  return _lrs9_;
}
inline void DB_QuestRule::set__lrs9(::google::protobuf::int32 value) {
  _set_bit(66);
  _lrs9_ = value;
}

// optional int32 _lrs10 = 69;
inline bool DB_QuestRule::has__lrs10() const {
  return _has_bit(67);
}
inline void DB_QuestRule::clear__lrs10() {
  _lrs10_ = 0;
  _clear_bit(67);
}
inline ::google::protobuf::int32 DB_QuestRule::_lrs10() const {
  return _lrs10_;
}
inline void DB_QuestRule::set__lrs10(::google::protobuf::int32 value) {
  _set_bit(67);
  _lrs10_ = value;
}

// optional int32 _resLoot = 70;
inline bool DB_QuestRule::has__resloot() const {
  return _has_bit(68);
}
inline void DB_QuestRule::clear__resloot() {
  _resloot_ = 0;
  _clear_bit(68);
}
inline ::google::protobuf::int32 DB_QuestRule::_resloot() const {
  return _resloot_;
}
inline void DB_QuestRule::set__resloot(::google::protobuf::int32 value) {
  _set_bit(68);
  _resloot_ = value;
}

// optional int32 _destroy_base = 71;
inline bool DB_QuestRule::has__destroy_base() const {
  return _has_bit(69);
}
inline void DB_QuestRule::clear__destroy_base() {
  _destroy_base_ = 0;
  _clear_bit(69);
}
inline ::google::protobuf::int32 DB_QuestRule::_destroy_base() const {
  return _destroy_base_;
}
inline void DB_QuestRule::set__destroy_base(::google::protobuf::int32 value) {
  _set_bit(69);
  _destroy_base_ = value;
}

// optional int32 _attack_enemy = 72;
inline bool DB_QuestRule::has__attack_enemy() const {
  return _has_bit(70);
}
inline void DB_QuestRule::clear__attack_enemy() {
  _attack_enemy_ = 0;
  _clear_bit(70);
}
inline ::google::protobuf::int32 DB_QuestRule::_attack_enemy() const {
  return _attack_enemy_;
}
inline void DB_QuestRule::set__attack_enemy(::google::protobuf::int32 value) {
  _set_bit(70);
  _attack_enemy_ = value;
}

// optional int32 _qzoneActive = 73;
inline bool DB_QuestRule::has__qzoneactive() const {
  return _has_bit(71);
}
inline void DB_QuestRule::clear__qzoneactive() {
  _qzoneactive_ = 0;
  _clear_bit(71);
}
inline ::google::protobuf::int32 DB_QuestRule::_qzoneactive() const {
  return _qzoneactive_;
}
inline void DB_QuestRule::set__qzoneactive(::google::protobuf::int32 value) {
  _set_bit(71);
  _qzoneactive_ = value;
}

// -------------------------------------------------------------------

// DB_Quest

// optional .DB_QuestRule g = 1;
inline bool DB_Quest::has_g() const {
  return _has_bit(0);
}
inline void DB_Quest::clear_g() {
  if (g_ != NULL) g_->::DB_QuestRule::Clear();
  _clear_bit(0);
}
inline const ::DB_QuestRule& DB_Quest::g() const {
  return g_ != NULL ? *g_ : *default_instance_->g_;
}
inline ::DB_QuestRule* DB_Quest::mutable_g() {
  _set_bit(0);
  if (g_ == NULL) g_ = new ::DB_QuestRule;
  return g_;
}

// repeated string c = 2;
inline int DB_Quest::c_size() const {
  return c_.size();
}
inline void DB_Quest::clear_c() {
  c_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_Quest::c() const {
  return c_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_Quest::mutable_c() {
  return &c_;
}
inline const ::std::string& DB_Quest::c(int index) const {
  return c_.Get(index);
}
inline ::std::string* DB_Quest::mutable_c(int index) {
  return c_.Mutable(index);
}
inline void DB_Quest::set_c(int index, const ::std::string& value) {
  c_.Mutable(index)->assign(value);
}
inline void DB_Quest::set_c(int index, const char* value) {
  c_.Mutable(index)->assign(value);
}
inline void DB_Quest::set_c(int index, const char* value, size_t size) {
  c_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Quest::add_c() {
  return c_.Add();
}
inline void DB_Quest::add_c(const ::std::string& value) {
  c_.Add()->assign(value);
}
inline void DB_Quest::add_c(const char* value) {
  c_.Add()->assign(value);
}
inline void DB_Quest::add_c(const char* value, size_t size) {
  c_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string finished_quest = 17;
inline int DB_Quest::finished_quest_size() const {
  return finished_quest_.size();
}
inline void DB_Quest::clear_finished_quest() {
  finished_quest_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_Quest::finished_quest() const {
  return finished_quest_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_Quest::mutable_finished_quest() {
  return &finished_quest_;
}
inline const ::std::string& DB_Quest::finished_quest(int index) const {
  return finished_quest_.Get(index);
}
inline ::std::string* DB_Quest::mutable_finished_quest(int index) {
  return finished_quest_.Mutable(index);
}
inline void DB_Quest::set_finished_quest(int index, const ::std::string& value) {
  finished_quest_.Mutable(index)->assign(value);
}
inline void DB_Quest::set_finished_quest(int index, const char* value) {
  finished_quest_.Mutable(index)->assign(value);
}
inline void DB_Quest::set_finished_quest(int index, const char* value, size_t size) {
  finished_quest_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Quest::add_finished_quest() {
  return finished_quest_.Add();
}
inline void DB_Quest::add_finished_quest(const ::std::string& value) {
  finished_quest_.Add()->assign(value);
}
inline void DB_Quest::add_finished_quest(const char* value) {
  finished_quest_.Add()->assign(value);
}
inline void DB_Quest::add_finished_quest(const char* value, size_t size) {
  finished_quest_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated int32 finishQuest = 3;
inline int DB_Quest::finishquest_size() const {
  return finishquest_.size();
}
inline void DB_Quest::clear_finishquest() {
  finishquest_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_Quest::finishquest() const {
  return finishquest_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_Quest::mutable_finishquest() {
  return &finishquest_;
}
inline ::google::protobuf::int32 DB_Quest::finishquest(int index) const {
  return finishquest_.Get(index);
}
inline void DB_Quest::set_finishquest(int index, ::google::protobuf::int32 value) {
  finishquest_.Set(index, value);
}
inline void DB_Quest::add_finishquest(::google::protobuf::int32 value) {
  finishquest_.Add(value);
}

// repeated string t1 = 4;
inline int DB_Quest::t1_size() const {
  return t1_.size();
}
inline void DB_Quest::clear_t1() {
  t1_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_Quest::t1() const {
  return t1_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_Quest::mutable_t1() {
  return &t1_;
}
inline const ::std::string& DB_Quest::t1(int index) const {
  return t1_.Get(index);
}
inline ::std::string* DB_Quest::mutable_t1(int index) {
  return t1_.Mutable(index);
}
inline void DB_Quest::set_t1(int index, const ::std::string& value) {
  t1_.Mutable(index)->assign(value);
}
inline void DB_Quest::set_t1(int index, const char* value) {
  t1_.Mutable(index)->assign(value);
}
inline void DB_Quest::set_t1(int index, const char* value, size_t size) {
  t1_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Quest::add_t1() {
  return t1_.Add();
}
inline void DB_Quest::add_t1(const ::std::string& value) {
  t1_.Add()->assign(value);
}
inline void DB_Quest::add_t1(const char* value) {
  t1_.Add()->assign(value);
}
inline void DB_Quest::add_t1(const char* value, size_t size) {
  t1_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string t2 = 5;
inline int DB_Quest::t2_size() const {
  return t2_.size();
}
inline void DB_Quest::clear_t2() {
  t2_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_Quest::t2() const {
  return t2_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_Quest::mutable_t2() {
  return &t2_;
}
inline const ::std::string& DB_Quest::t2(int index) const {
  return t2_.Get(index);
}
inline ::std::string* DB_Quest::mutable_t2(int index) {
  return t2_.Mutable(index);
}
inline void DB_Quest::set_t2(int index, const ::std::string& value) {
  t2_.Mutable(index)->assign(value);
}
inline void DB_Quest::set_t2(int index, const char* value) {
  t2_.Mutable(index)->assign(value);
}
inline void DB_Quest::set_t2(int index, const char* value, size_t size) {
  t2_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Quest::add_t2() {
  return t2_.Add();
}
inline void DB_Quest::add_t2(const ::std::string& value) {
  t2_.Add()->assign(value);
}
inline void DB_Quest::add_t2(const char* value) {
  t2_.Add()->assign(value);
}
inline void DB_Quest::add_t2(const char* value, size_t size) {
  t2_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string t3 = 6;
inline int DB_Quest::t3_size() const {
  return t3_.size();
}
inline void DB_Quest::clear_t3() {
  t3_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_Quest::t3() const {
  return t3_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_Quest::mutable_t3() {
  return &t3_;
}
inline const ::std::string& DB_Quest::t3(int index) const {
  return t3_.Get(index);
}
inline ::std::string* DB_Quest::mutable_t3(int index) {
  return t3_.Mutable(index);
}
inline void DB_Quest::set_t3(int index, const ::std::string& value) {
  t3_.Mutable(index)->assign(value);
}
inline void DB_Quest::set_t3(int index, const char* value) {
  t3_.Mutable(index)->assign(value);
}
inline void DB_Quest::set_t3(int index, const char* value, size_t size) {
  t3_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Quest::add_t3() {
  return t3_.Add();
}
inline void DB_Quest::add_t3(const ::std::string& value) {
  t3_.Add()->assign(value);
}
inline void DB_Quest::add_t3(const char* value) {
  t3_.Add()->assign(value);
}
inline void DB_Quest::add_t3(const char* value, size_t size) {
  t3_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string t4 = 7;
inline int DB_Quest::t4_size() const {
  return t4_.size();
}
inline void DB_Quest::clear_t4() {
  t4_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_Quest::t4() const {
  return t4_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_Quest::mutable_t4() {
  return &t4_;
}
inline const ::std::string& DB_Quest::t4(int index) const {
  return t4_.Get(index);
}
inline ::std::string* DB_Quest::mutable_t4(int index) {
  return t4_.Mutable(index);
}
inline void DB_Quest::set_t4(int index, const ::std::string& value) {
  t4_.Mutable(index)->assign(value);
}
inline void DB_Quest::set_t4(int index, const char* value) {
  t4_.Mutable(index)->assign(value);
}
inline void DB_Quest::set_t4(int index, const char* value, size_t size) {
  t4_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Quest::add_t4() {
  return t4_.Add();
}
inline void DB_Quest::add_t4(const ::std::string& value) {
  t4_.Add()->assign(value);
}
inline void DB_Quest::add_t4(const char* value) {
  t4_.Add()->assign(value);
}
inline void DB_Quest::add_t4(const char* value, size_t size) {
  t4_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// -------------------------------------------------------------------

// DB_AiAttackQueuedArmyInfo

// optional int32 time = 1;
inline bool DB_AiAttackQueuedArmyInfo::has_time() const {
  return _has_bit(0);
}
inline void DB_AiAttackQueuedArmyInfo::clear_time() {
  time_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_AiAttackQueuedArmyInfo::time() const {
  return time_;
}
inline void DB_AiAttackQueuedArmyInfo::set_time(::google::protobuf::int32 value) {
  _set_bit(0);
  time_ = value;
}

// optional int32 type = 2;
inline bool DB_AiAttackQueuedArmyInfo::has_type() const {
  return _has_bit(1);
}
inline void DB_AiAttackQueuedArmyInfo::clear_type() {
  type_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_AiAttackQueuedArmyInfo::type() const {
  return type_;
}
inline void DB_AiAttackQueuedArmyInfo::set_type(::google::protobuf::int32 value) {
  _set_bit(1);
  type_ = value;
}

// optional int32 count = 3;
inline bool DB_AiAttackQueuedArmyInfo::has_count() const {
  return _has_bit(2);
}
inline void DB_AiAttackQueuedArmyInfo::clear_count() {
  count_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_AiAttackQueuedArmyInfo::count() const {
  return count_;
}
inline void DB_AiAttackQueuedArmyInfo::set_count(::google::protobuf::int32 value) {
  _set_bit(2);
  count_ = value;
}

// optional int32 area = 4;
inline bool DB_AiAttackQueuedArmyInfo::has_area() const {
  return _has_bit(3);
}
inline void DB_AiAttackQueuedArmyInfo::clear_area() {
  area_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_AiAttackQueuedArmyInfo::area() const {
  return area_;
}
inline void DB_AiAttackQueuedArmyInfo::set_area(::google::protobuf::int32 value) {
  _set_bit(3);
  area_ = value;
}

// -------------------------------------------------------------------

// DB_AiAttackQueued

// repeated .DB_AiAttackQueuedArmyInfo attack = 1;
inline int DB_AiAttackQueued::attack_size() const {
  return attack_.size();
}
inline void DB_AiAttackQueued::clear_attack() {
  attack_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_AiAttackQueuedArmyInfo >&
DB_AiAttackQueued::attack() const {
  return attack_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_AiAttackQueuedArmyInfo >*
DB_AiAttackQueued::mutable_attack() {
  return &attack_;
}
inline const ::DB_AiAttackQueuedArmyInfo& DB_AiAttackQueued::attack(int index) const {
  return attack_.Get(index);
}
inline ::DB_AiAttackQueuedArmyInfo* DB_AiAttackQueued::mutable_attack(int index) {
  return attack_.Mutable(index);
}
inline ::DB_AiAttackQueuedArmyInfo* DB_AiAttackQueued::add_attack() {
  return attack_.Add();
}

// optional int32 warned = 2;
inline bool DB_AiAttackQueued::has_warned() const {
  return _has_bit(1);
}
inline void DB_AiAttackQueued::clear_warned() {
  warned_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_AiAttackQueued::warned() const {
  return warned_;
}
inline void DB_AiAttackQueued::set_warned(::google::protobuf::int32 value) {
  _set_bit(1);
  warned_ = value;
}

// optional int32 startUnits = 3;
inline bool DB_AiAttackQueued::has_startunits() const {
  return _has_bit(2);
}
inline void DB_AiAttackQueued::clear_startunits() {
  startunits_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_AiAttackQueued::startunits() const {
  return startunits_;
}
inline void DB_AiAttackQueued::set_startunits(::google::protobuf::int32 value) {
  _set_bit(2);
  startunits_ = value;
}

// -------------------------------------------------------------------

// DB_AiAttack

// optional int32 currentid = 1;
inline bool DB_AiAttack::has_currentid() const {
  return _has_bit(0);
}
inline void DB_AiAttack::clear_currentid() {
  currentid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_AiAttack::currentid() const {
  return currentid_;
}
inline void DB_AiAttack::set_currentid(::google::protobuf::int32 value) {
  _set_bit(0);
  currentid_ = value;
}

// optional int32 nextAttack = 2;
inline bool DB_AiAttack::has_nextattack() const {
  return _has_bit(1);
}
inline void DB_AiAttack::clear_nextattack() {
  nextattack_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_AiAttack::nextattack() const {
  return nextattack_;
}
inline void DB_AiAttack::set_nextattack(::google::protobuf::int32 value) {
  _set_bit(1);
  nextattack_ = value;
}

// optional int32 lastattack = 3;
inline bool DB_AiAttack::has_lastattack() const {
  return _has_bit(2);
}
inline void DB_AiAttack::clear_lastattack() {
  lastattack_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_AiAttack::lastattack() const {
  return lastattack_;
}
inline void DB_AiAttack::set_lastattack(::google::protobuf::int32 value) {
  _set_bit(2);
  lastattack_ = value;
}

// optional .DB_AiAttackQueued queued = 4;
inline bool DB_AiAttack::has_queued() const {
  return _has_bit(3);
}
inline void DB_AiAttack::clear_queued() {
  if (queued_ != NULL) queued_->::DB_AiAttackQueued::Clear();
  _clear_bit(3);
}
inline const ::DB_AiAttackQueued& DB_AiAttack::queued() const {
  return queued_ != NULL ? *queued_ : *default_instance_->queued_;
}
inline ::DB_AiAttackQueued* DB_AiAttack::mutable_queued() {
  _set_bit(3);
  if (queued_ == NULL) queued_ = new ::DB_AiAttackQueued;
  return queued_;
}

// -------------------------------------------------------------------

// DB_Troop

// optional int32 id = 1;
inline bool DB_Troop::has_id() const {
  return _has_bit(0);
}
inline void DB_Troop::clear_id() {
  id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Troop::id() const {
  return id_;
}
inline void DB_Troop::set_id(::google::protobuf::int32 value) {
  _set_bit(0);
  id_ = value;
}

// optional int32 health = 2;
inline bool DB_Troop::has_health() const {
  return _has_bit(1);
}
inline void DB_Troop::clear_health() {
  health_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Troop::health() const {
  return health_;
}
inline void DB_Troop::set_health(::google::protobuf::int32 value) {
  _set_bit(1);
  health_ = value;
}

// optional int32 stance = 3;
inline bool DB_Troop::has_stance() const {
  return _has_bit(2);
}
inline void DB_Troop::clear_stance() {
  stance_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Troop::stance() const {
  return stance_;
}
inline void DB_Troop::set_stance(::google::protobuf::int32 value) {
  _set_bit(2);
  stance_ = value;
}

// -------------------------------------------------------------------

// DB_TrapArmy

// optional int32 armytype = 1 [default = 0];
inline bool DB_TrapArmy::has_armytype() const {
  return _has_bit(0);
}
inline void DB_TrapArmy::clear_armytype() {
  armytype_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_TrapArmy::armytype() const {
  return armytype_;
}
inline void DB_TrapArmy::set_armytype(::google::protobuf::int32 value) {
  _set_bit(0);
  armytype_ = value;
}

// optional int32 armynum = 2 [default = 0];
inline bool DB_TrapArmy::has_armynum() const {
  return _has_bit(1);
}
inline void DB_TrapArmy::clear_armynum() {
  armynum_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_TrapArmy::armynum() const {
  return armynum_;
}
inline void DB_TrapArmy::set_armynum(::google::protobuf::int32 value) {
  _set_bit(1);
  armynum_ = value;
}

// -------------------------------------------------------------------

// DB_Trap

// repeated .DB_TrapArmy trapArmy = 1;
inline int DB_Trap::traparmy_size() const {
  return traparmy_.size();
}
inline void DB_Trap::clear_traparmy() {
  traparmy_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_TrapArmy >&
DB_Trap::traparmy() const {
  return traparmy_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_TrapArmy >*
DB_Trap::mutable_traparmy() {
  return &traparmy_;
}
inline const ::DB_TrapArmy& DB_Trap::traparmy(int index) const {
  return traparmy_.Get(index);
}
inline ::DB_TrapArmy* DB_Trap::mutable_traparmy(int index) {
  return traparmy_.Mutable(index);
}
inline ::DB_TrapArmy* DB_Trap::add_traparmy() {
  return traparmy_.Add();
}

// -------------------------------------------------------------------

// DB_Loot

// optional int32 X = 1;
inline bool DB_Loot::has_x() const {
  return _has_bit(0);
}
inline void DB_Loot::clear_x() {
  x_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Loot::x() const {
  return x_;
}
inline void DB_Loot::set_x(::google::protobuf::int32 value) {
  _set_bit(0);
  x_ = value;
}

// optional int32 Y = 2;
inline bool DB_Loot::has_y() const {
  return _has_bit(1);
}
inline void DB_Loot::clear_y() {
  y_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Loot::y() const {
  return y_;
}
inline void DB_Loot::set_y(::google::protobuf::int32 value) {
  _set_bit(1);
  y_ = value;
}

// optional int32 f = 3;
inline bool DB_Loot::has_f() const {
  return _has_bit(2);
}
inline void DB_Loot::clear_f() {
  f_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Loot::f() const {
  return f_;
}
inline void DB_Loot::set_f(::google::protobuf::int32 value) {
  _set_bit(2);
  f_ = value;
}

// optional int32 st = 4;
inline bool DB_Loot::has_st() const {
  return _has_bit(3);
}
inline void DB_Loot::clear_st() {
  st_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Loot::st() const {
  return st_;
}
inline void DB_Loot::set_st(::google::protobuf::int32 value) {
  _set_bit(3);
  st_ = value;
}

// -------------------------------------------------------------------

// DB_LootEquip

// optional int32 type = 1;
inline bool DB_LootEquip::has_type() const {
  return _has_bit(0);
}
inline void DB_LootEquip::clear_type() {
  type_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_LootEquip::type() const {
  return type_;
}
inline void DB_LootEquip::set_type(::google::protobuf::int32 value) {
  _set_bit(0);
  type_ = value;
}

// optional int32 showtype = 2;
inline bool DB_LootEquip::has_showtype() const {
  return _has_bit(1);
}
inline void DB_LootEquip::clear_showtype() {
  showtype_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_LootEquip::showtype() const {
  return showtype_;
}
inline void DB_LootEquip::set_showtype(::google::protobuf::int32 value) {
  _set_bit(1);
  showtype_ = value;
}

// optional int32 time = 3;
inline bool DB_LootEquip::has_time() const {
  return _has_bit(2);
}
inline void DB_LootEquip::clear_time() {
  time_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_LootEquip::time() const {
  return time_;
}
inline void DB_LootEquip::set_time(::google::protobuf::int32 value) {
  _set_bit(2);
  time_ = value;
}

// optional int32 num = 4;
inline bool DB_LootEquip::has_num() const {
  return _has_bit(3);
}
inline void DB_LootEquip::clear_num() {
  num_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_LootEquip::num() const {
  return num_;
}
inline void DB_LootEquip::set_num(::google::protobuf::int32 value) {
  _set_bit(3);
  num_ = value;
}

// optional int32 level = 5;
inline bool DB_LootEquip::has_level() const {
  return _has_bit(4);
}
inline void DB_LootEquip::clear_level() {
  level_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_LootEquip::level() const {
  return level_;
}
inline void DB_LootEquip::set_level(::google::protobuf::int32 value) {
  _set_bit(4);
  level_ = value;
}

// optional int32 herograde = 6;
inline bool DB_LootEquip::has_herograde() const {
  return _has_bit(5);
}
inline void DB_LootEquip::clear_herograde() {
  herograde_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_LootEquip::herograde() const {
  return herograde_;
}
inline void DB_LootEquip::set_herograde(::google::protobuf::int32 value) {
  _set_bit(5);
  herograde_ = value;
}

// -------------------------------------------------------------------

// DB_LootSuperWeapon

// optional int32 useSuperWeaponNum = 1 [default = 0];
inline bool DB_LootSuperWeapon::has_usesuperweaponnum() const {
  return _has_bit(0);
}
inline void DB_LootSuperWeapon::clear_usesuperweaponnum() {
  usesuperweaponnum_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_LootSuperWeapon::usesuperweaponnum() const {
  return usesuperweaponnum_;
}
inline void DB_LootSuperWeapon::set_usesuperweaponnum(::google::protobuf::int32 value) {
  _set_bit(0);
  usesuperweaponnum_ = value;
}

// optional int32 useSuperWeaponID = 2 [default = 0];
inline bool DB_LootSuperWeapon::has_usesuperweaponid() const {
  return _has_bit(1);
}
inline void DB_LootSuperWeapon::clear_usesuperweaponid() {
  usesuperweaponid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_LootSuperWeapon::usesuperweaponid() const {
  return usesuperweaponid_;
}
inline void DB_LootSuperWeapon::set_usesuperweaponid(::google::protobuf::int32 value) {
  _set_bit(1);
  usesuperweaponid_ = value;
}

// optional int32 useTime = 3 [default = 0];
inline bool DB_LootSuperWeapon::has_usetime() const {
  return _has_bit(2);
}
inline void DB_LootSuperWeapon::clear_usetime() {
  usetime_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_LootSuperWeapon::usetime() const {
  return usetime_;
}
inline void DB_LootSuperWeapon::set_usetime(::google::protobuf::int32 value) {
  _set_bit(2);
  usetime_ = value;
}

// -------------------------------------------------------------------

// DB_LootReport

// optional int64 attackID = 1;
inline bool DB_LootReport::has_attackid() const {
  return _has_bit(0);
}
inline void DB_LootReport::clear_attackid() {
  attackid_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 DB_LootReport::attackid() const {
  return attackid_;
}
inline void DB_LootReport::set_attackid(::google::protobuf::int64 value) {
  _set_bit(0);
  attackid_ = value;
}

// optional int64 recoveryID = 2;
inline bool DB_LootReport::has_recoveryid() const {
  return _has_bit(1);
}
inline void DB_LootReport::clear_recoveryid() {
  recoveryid_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 DB_LootReport::recoveryid() const {
  return recoveryid_;
}
inline void DB_LootReport::set_recoveryid(::google::protobuf::int64 value) {
  _set_bit(1);
  recoveryid_ = value;
}

// optional string r1 = 3;
inline bool DB_LootReport::has_r1() const {
  return _has_bit(2);
}
inline void DB_LootReport::clear_r1() {
  if (r1_ != &_default_r1_) {
    r1_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& DB_LootReport::r1() const {
  return *r1_;
}
inline void DB_LootReport::set_r1(const ::std::string& value) {
  _set_bit(2);
  if (r1_ == &_default_r1_) {
    r1_ = new ::std::string;
  }
  r1_->assign(value);
}
inline void DB_LootReport::set_r1(const char* value) {
  _set_bit(2);
  if (r1_ == &_default_r1_) {
    r1_ = new ::std::string;
  }
  r1_->assign(value);
}
inline void DB_LootReport::set_r1(const char* value, size_t size) {
  _set_bit(2);
  if (r1_ == &_default_r1_) {
    r1_ = new ::std::string;
  }
  r1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_LootReport::mutable_r1() {
  _set_bit(2);
  if (r1_ == &_default_r1_) {
    r1_ = new ::std::string;
  }
  return r1_;
}

// optional string r2 = 4;
inline bool DB_LootReport::has_r2() const {
  return _has_bit(3);
}
inline void DB_LootReport::clear_r2() {
  if (r2_ != &_default_r2_) {
    r2_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& DB_LootReport::r2() const {
  return *r2_;
}
inline void DB_LootReport::set_r2(const ::std::string& value) {
  _set_bit(3);
  if (r2_ == &_default_r2_) {
    r2_ = new ::std::string;
  }
  r2_->assign(value);
}
inline void DB_LootReport::set_r2(const char* value) {
  _set_bit(3);
  if (r2_ == &_default_r2_) {
    r2_ = new ::std::string;
  }
  r2_->assign(value);
}
inline void DB_LootReport::set_r2(const char* value, size_t size) {
  _set_bit(3);
  if (r2_ == &_default_r2_) {
    r2_ = new ::std::string;
  }
  r2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_LootReport::mutable_r2() {
  _set_bit(3);
  if (r2_ == &_default_r2_) {
    r2_ = new ::std::string;
  }
  return r2_;
}

// optional string attackName = 5;
inline bool DB_LootReport::has_attackname() const {
  return _has_bit(4);
}
inline void DB_LootReport::clear_attackname() {
  if (attackname_ != &_default_attackname_) {
    attackname_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& DB_LootReport::attackname() const {
  return *attackname_;
}
inline void DB_LootReport::set_attackname(const ::std::string& value) {
  _set_bit(4);
  if (attackname_ == &_default_attackname_) {
    attackname_ = new ::std::string;
  }
  attackname_->assign(value);
}
inline void DB_LootReport::set_attackname(const char* value) {
  _set_bit(4);
  if (attackname_ == &_default_attackname_) {
    attackname_ = new ::std::string;
  }
  attackname_->assign(value);
}
inline void DB_LootReport::set_attackname(const char* value, size_t size) {
  _set_bit(4);
  if (attackname_ == &_default_attackname_) {
    attackname_ = new ::std::string;
  }
  attackname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_LootReport::mutable_attackname() {
  _set_bit(4);
  if (attackname_ == &_default_attackname_) {
    attackname_ = new ::std::string;
  }
  return attackname_;
}

// optional string log = 6;
inline bool DB_LootReport::has_log() const {
  return _has_bit(5);
}
inline void DB_LootReport::clear_log() {
  if (log_ != &_default_log_) {
    log_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& DB_LootReport::log() const {
  return *log_;
}
inline void DB_LootReport::set_log(const ::std::string& value) {
  _set_bit(5);
  if (log_ == &_default_log_) {
    log_ = new ::std::string;
  }
  log_->assign(value);
}
inline void DB_LootReport::set_log(const char* value) {
  _set_bit(5);
  if (log_ == &_default_log_) {
    log_ = new ::std::string;
  }
  log_->assign(value);
}
inline void DB_LootReport::set_log(const char* value, size_t size) {
  _set_bit(5);
  if (log_ == &_default_log_) {
    log_ = new ::std::string;
  }
  log_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_LootReport::mutable_log() {
  _set_bit(5);
  if (log_ == &_default_log_) {
    log_ = new ::std::string;
  }
  return log_;
}

// optional string attacPic = 7;
inline bool DB_LootReport::has_attacpic() const {
  return _has_bit(6);
}
inline void DB_LootReport::clear_attacpic() {
  if (attacpic_ != &_default_attacpic_) {
    attacpic_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& DB_LootReport::attacpic() const {
  return *attacpic_;
}
inline void DB_LootReport::set_attacpic(const ::std::string& value) {
  _set_bit(6);
  if (attacpic_ == &_default_attacpic_) {
    attacpic_ = new ::std::string;
  }
  attacpic_->assign(value);
}
inline void DB_LootReport::set_attacpic(const char* value) {
  _set_bit(6);
  if (attacpic_ == &_default_attacpic_) {
    attacpic_ = new ::std::string;
  }
  attacpic_->assign(value);
}
inline void DB_LootReport::set_attacpic(const char* value, size_t size) {
  _set_bit(6);
  if (attacpic_ == &_default_attacpic_) {
    attacpic_ = new ::std::string;
  }
  attacpic_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_LootReport::mutable_attacpic() {
  _set_bit(6);
  if (attacpic_ == &_default_attacpic_) {
    attacpic_ = new ::std::string;
  }
  return attacpic_;
}

// optional int32 attacktime = 8;
inline bool DB_LootReport::has_attacktime() const {
  return _has_bit(7);
}
inline void DB_LootReport::clear_attacktime() {
  attacktime_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_LootReport::attacktime() const {
  return attacktime_;
}
inline void DB_LootReport::set_attacktime(::google::protobuf::int32 value) {
  _set_bit(7);
  attacktime_ = value;
}

// optional bool hasbalance = 15 [default = false];
inline bool DB_LootReport::has_hasbalance() const {
  return _has_bit(8);
}
inline void DB_LootReport::clear_hasbalance() {
  hasbalance_ = false;
  _clear_bit(8);
}
inline bool DB_LootReport::hasbalance() const {
  return hasbalance_;
}
inline void DB_LootReport::set_hasbalance(bool value) {
  _set_bit(8);
  hasbalance_ = value;
}

// optional int32 damage = 16;
inline bool DB_LootReport::has_damage() const {
  return _has_bit(9);
}
inline void DB_LootReport::clear_damage() {
  damage_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 DB_LootReport::damage() const {
  return damage_;
}
inline void DB_LootReport::set_damage(::google::protobuf::int32 value) {
  _set_bit(9);
  damage_ = value;
}

// optional int32 type = 17;
inline bool DB_LootReport::has_type() const {
  return _has_bit(10);
}
inline void DB_LootReport::clear_type() {
  type_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 DB_LootReport::type() const {
  return type_;
}
inline void DB_LootReport::set_type(::google::protobuf::int32 value) {
  _set_bit(10);
  type_ = value;
}

// optional string defenceName = 18;
inline bool DB_LootReport::has_defencename() const {
  return _has_bit(11);
}
inline void DB_LootReport::clear_defencename() {
  if (defencename_ != &_default_defencename_) {
    defencename_->clear();
  }
  _clear_bit(11);
}
inline const ::std::string& DB_LootReport::defencename() const {
  return *defencename_;
}
inline void DB_LootReport::set_defencename(const ::std::string& value) {
  _set_bit(11);
  if (defencename_ == &_default_defencename_) {
    defencename_ = new ::std::string;
  }
  defencename_->assign(value);
}
inline void DB_LootReport::set_defencename(const char* value) {
  _set_bit(11);
  if (defencename_ == &_default_defencename_) {
    defencename_ = new ::std::string;
  }
  defencename_->assign(value);
}
inline void DB_LootReport::set_defencename(const char* value, size_t size) {
  _set_bit(11);
  if (defencename_ == &_default_defencename_) {
    defencename_ = new ::std::string;
  }
  defencename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_LootReport::mutable_defencename() {
  _set_bit(11);
  if (defencename_ == &_default_defencename_) {
    defencename_ = new ::std::string;
  }
  return defencename_;
}

// optional int32 Attacklevel = 19;
inline bool DB_LootReport::has_attacklevel() const {
  return _has_bit(12);
}
inline void DB_LootReport::clear_attacklevel() {
  attacklevel_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 DB_LootReport::attacklevel() const {
  return attacklevel_;
}
inline void DB_LootReport::set_attacklevel(::google::protobuf::int32 value) {
  _set_bit(12);
  attacklevel_ = value;
}

// optional int32 defencelevel = 20;
inline bool DB_LootReport::has_defencelevel() const {
  return _has_bit(13);
}
inline void DB_LootReport::clear_defencelevel() {
  defencelevel_ = 0;
  _clear_bit(13);
}
inline ::google::protobuf::int32 DB_LootReport::defencelevel() const {
  return defencelevel_;
}
inline void DB_LootReport::set_defencelevel(::google::protobuf::int32 value) {
  _set_bit(13);
  defencelevel_ = value;
}

// optional string attackpic_square = 21;
inline bool DB_LootReport::has_attackpic_square() const {
  return _has_bit(14);
}
inline void DB_LootReport::clear_attackpic_square() {
  if (attackpic_square_ != &_default_attackpic_square_) {
    attackpic_square_->clear();
  }
  _clear_bit(14);
}
inline const ::std::string& DB_LootReport::attackpic_square() const {
  return *attackpic_square_;
}
inline void DB_LootReport::set_attackpic_square(const ::std::string& value) {
  _set_bit(14);
  if (attackpic_square_ == &_default_attackpic_square_) {
    attackpic_square_ = new ::std::string;
  }
  attackpic_square_->assign(value);
}
inline void DB_LootReport::set_attackpic_square(const char* value) {
  _set_bit(14);
  if (attackpic_square_ == &_default_attackpic_square_) {
    attackpic_square_ = new ::std::string;
  }
  attackpic_square_->assign(value);
}
inline void DB_LootReport::set_attackpic_square(const char* value, size_t size) {
  _set_bit(14);
  if (attackpic_square_ == &_default_attackpic_square_) {
    attackpic_square_ = new ::std::string;
  }
  attackpic_square_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_LootReport::mutable_attackpic_square() {
  _set_bit(14);
  if (attackpic_square_ == &_default_attackpic_square_) {
    attackpic_square_ = new ::std::string;
  }
  return attackpic_square_;
}

// optional string defencepic_square = 22;
inline bool DB_LootReport::has_defencepic_square() const {
  return _has_bit(15);
}
inline void DB_LootReport::clear_defencepic_square() {
  if (defencepic_square_ != &_default_defencepic_square_) {
    defencepic_square_->clear();
  }
  _clear_bit(15);
}
inline const ::std::string& DB_LootReport::defencepic_square() const {
  return *defencepic_square_;
}
inline void DB_LootReport::set_defencepic_square(const ::std::string& value) {
  _set_bit(15);
  if (defencepic_square_ == &_default_defencepic_square_) {
    defencepic_square_ = new ::std::string;
  }
  defencepic_square_->assign(value);
}
inline void DB_LootReport::set_defencepic_square(const char* value) {
  _set_bit(15);
  if (defencepic_square_ == &_default_defencepic_square_) {
    defencepic_square_ = new ::std::string;
  }
  defencepic_square_->assign(value);
}
inline void DB_LootReport::set_defencepic_square(const char* value, size_t size) {
  _set_bit(15);
  if (defencepic_square_ == &_default_defencepic_square_) {
    defencepic_square_ = new ::std::string;
  }
  defencepic_square_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_LootReport::mutable_defencepic_square() {
  _set_bit(15);
  if (defencepic_square_ == &_default_defencepic_square_) {
    defencepic_square_ = new ::std::string;
  }
  return defencepic_square_;
}

// optional int32 initdamage = 23;
inline bool DB_LootReport::has_initdamage() const {
  return _has_bit(16);
}
inline void DB_LootReport::clear_initdamage() {
  initdamage_ = 0;
  _clear_bit(16);
}
inline ::google::protobuf::int32 DB_LootReport::initdamage() const {
  return initdamage_;
}
inline void DB_LootReport::set_initdamage(::google::protobuf::int32 value) {
  _set_bit(16);
  initdamage_ = value;
}

// repeated .DB_LootEquip attackequiploot = 24;
inline int DB_LootReport::attackequiploot_size() const {
  return attackequiploot_.size();
}
inline void DB_LootReport::clear_attackequiploot() {
  attackequiploot_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_LootEquip >&
DB_LootReport::attackequiploot() const {
  return attackequiploot_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_LootEquip >*
DB_LootReport::mutable_attackequiploot() {
  return &attackequiploot_;
}
inline const ::DB_LootEquip& DB_LootReport::attackequiploot(int index) const {
  return attackequiploot_.Get(index);
}
inline ::DB_LootEquip* DB_LootReport::mutable_attackequiploot(int index) {
  return attackequiploot_.Mutable(index);
}
inline ::DB_LootEquip* DB_LootReport::add_attackequiploot() {
  return attackequiploot_.Add();
}

// repeated .DB_LootEquip defenceequiploot = 25;
inline int DB_LootReport::defenceequiploot_size() const {
  return defenceequiploot_.size();
}
inline void DB_LootReport::clear_defenceequiploot() {
  defenceequiploot_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_LootEquip >&
DB_LootReport::defenceequiploot() const {
  return defenceequiploot_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_LootEquip >*
DB_LootReport::mutable_defenceequiploot() {
  return &defenceequiploot_;
}
inline const ::DB_LootEquip& DB_LootReport::defenceequiploot(int index) const {
  return defenceequiploot_.Get(index);
}
inline ::DB_LootEquip* DB_LootReport::mutable_defenceequiploot(int index) {
  return defenceequiploot_.Mutable(index);
}
inline ::DB_LootEquip* DB_LootReport::add_defenceequiploot() {
  return defenceequiploot_.Add();
}

// optional int32 honor = 26 [default = 0];
inline bool DB_LootReport::has_honor() const {
  return _has_bit(19);
}
inline void DB_LootReport::clear_honor() {
  honor_ = 0;
  _clear_bit(19);
}
inline ::google::protobuf::int32 DB_LootReport::honor() const {
  return honor_;
}
inline void DB_LootReport::set_honor(::google::protobuf::int32 value) {
  _set_bit(19);
  honor_ = value;
}

// optional bool isStrike = 27 [default = false];
inline bool DB_LootReport::has_isstrike() const {
  return _has_bit(20);
}
inline void DB_LootReport::clear_isstrike() {
  isstrike_ = false;
  _clear_bit(20);
}
inline bool DB_LootReport::isstrike() const {
  return isstrike_;
}
inline void DB_LootReport::set_isstrike(bool value) {
  _set_bit(20);
  isstrike_ = value;
}

// optional int32 feats = 28 [default = 0];
inline bool DB_LootReport::has_feats() const {
  return _has_bit(21);
}
inline void DB_LootReport::clear_feats() {
  feats_ = 0;
  _clear_bit(21);
}
inline ::google::protobuf::int32 DB_LootReport::feats() const {
  return feats_;
}
inline void DB_LootReport::set_feats(::google::protobuf::int32 value) {
  _set_bit(21);
  feats_ = value;
}

// optional bool destroySlaveRoom = 29 [default = false];
inline bool DB_LootReport::has_destroyslaveroom() const {
  return _has_bit(22);
}
inline void DB_LootReport::clear_destroyslaveroom() {
  destroyslaveroom_ = false;
  _clear_bit(22);
}
inline bool DB_LootReport::destroyslaveroom() const {
  return destroyslaveroom_;
}
inline void DB_LootReport::set_destroyslaveroom(bool value) {
  _set_bit(22);
  destroyslaveroom_ = value;
}

// optional int32 adimralExp = 30 [default = 0];
inline bool DB_LootReport::has_adimralexp() const {
  return _has_bit(23);
}
inline void DB_LootReport::clear_adimralexp() {
  adimralexp_ = 0;
  _clear_bit(23);
}
inline ::google::protobuf::int32 DB_LootReport::adimralexp() const {
  return adimralexp_;
}
inline void DB_LootReport::set_adimralexp(::google::protobuf::int32 value) {
  _set_bit(23);
  adimralexp_ = value;
}

// optional int32 defAdimralExp = 31 [default = 0];
inline bool DB_LootReport::has_defadimralexp() const {
  return _has_bit(24);
}
inline void DB_LootReport::clear_defadimralexp() {
  defadimralexp_ = 0;
  _clear_bit(24);
}
inline ::google::protobuf::int32 DB_LootReport::defadimralexp() const {
  return defadimralexp_;
}
inline void DB_LootReport::set_defadimralexp(::google::protobuf::int32 value) {
  _set_bit(24);
  defadimralexp_ = value;
}

// optional int32 warstage = 32 [default = 0];
inline bool DB_LootReport::has_warstage() const {
  return _has_bit(25);
}
inline void DB_LootReport::clear_warstage() {
  warstage_ = 0;
  _clear_bit(25);
}
inline ::google::protobuf::int32 DB_LootReport::warstage() const {
  return warstage_;
}
inline void DB_LootReport::set_warstage(::google::protobuf::int32 value) {
  _set_bit(25);
  warstage_ = value;
}

// optional .DB_LootSuperWeapon superweapon = 33;
inline bool DB_LootReport::has_superweapon() const {
  return _has_bit(26);
}
inline void DB_LootReport::clear_superweapon() {
  if (superweapon_ != NULL) superweapon_->::DB_LootSuperWeapon::Clear();
  _clear_bit(26);
}
inline const ::DB_LootSuperWeapon& DB_LootReport::superweapon() const {
  return superweapon_ != NULL ? *superweapon_ : *default_instance_->superweapon_;
}
inline ::DB_LootSuperWeapon* DB_LootReport::mutable_superweapon() {
  _set_bit(26);
  if (superweapon_ == NULL) superweapon_ = new ::DB_LootSuperWeapon;
  return superweapon_;
}

// optional bool isSuperStorm = 34 [default = false];
inline bool DB_LootReport::has_issuperstorm() const {
  return _has_bit(27);
}
inline void DB_LootReport::clear_issuperstorm() {
  issuperstorm_ = false;
  _clear_bit(27);
}
inline bool DB_LootReport::issuperstorm() const {
  return issuperstorm_;
}
inline void DB_LootReport::set_issuperstorm(bool value) {
  _set_bit(27);
  issuperstorm_ = value;
}

// -------------------------------------------------------------------

// DB_Mushroom

// optional int32 s = 1;
inline bool DB_Mushroom::has_s() const {
  return _has_bit(0);
}
inline void DB_Mushroom::clear_s() {
  s_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Mushroom::s() const {
  return s_;
}
inline void DB_Mushroom::set_s(::google::protobuf::int32 value) {
  _set_bit(0);
  s_ = value;
}

// repeated .DB_Loot l = 2;
inline int DB_Mushroom::l_size() const {
  return l_.size();
}
inline void DB_Mushroom::clear_l() {
  l_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_Loot >&
DB_Mushroom::l() const {
  return l_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_Loot >*
DB_Mushroom::mutable_l() {
  return &l_;
}
inline const ::DB_Loot& DB_Mushroom::l(int index) const {
  return l_.Get(index);
}
inline ::DB_Loot* DB_Mushroom::mutable_l(int index) {
  return l_.Mutable(index);
}
inline ::DB_Loot* DB_Mushroom::add_l() {
  return l_.Add();
}

// -------------------------------------------------------------------

// DB_Stats

// optional int32 mrlsr = 1;
inline bool DB_Stats::has_mrlsr() const {
  return _has_bit(0);
}
inline void DB_Stats::clear_mrlsr() {
  mrlsr_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Stats::mrlsr() const {
  return mrlsr_;
}
inline void DB_Stats::set_mrlsr(::google::protobuf::int32 value) {
  _set_bit(0);
  mrlsr_ = value;
}

// optional int32 mrls = 2;
inline bool DB_Stats::has_mrls() const {
  return _has_bit(1);
}
inline void DB_Stats::clear_mrls() {
  mrls_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Stats::mrls() const {
  return mrls_;
}
inline void DB_Stats::set_mrls(::google::protobuf::int32 value) {
  _set_bit(1);
  mrls_ = value;
}

// optional int32 mrlv = 3;
inline bool DB_Stats::has_mrlv() const {
  return _has_bit(2);
}
inline void DB_Stats::clear_mrlv() {
  mrlv_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Stats::mrlv() const {
  return mrlv_;
}
inline void DB_Stats::set_mrlv(::google::protobuf::int32 value) {
  _set_bit(2);
  mrlv_ = value;
}

// optional int32 mutesfx = 4;
inline bool DB_Stats::has_mutesfx() const {
  return _has_bit(3);
}
inline void DB_Stats::clear_mutesfx() {
  mutesfx_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Stats::mutesfx() const {
  return mutesfx_;
}
inline void DB_Stats::set_mutesfx(::google::protobuf::int32 value) {
  _set_bit(3);
  mutesfx_ = value;
}

// optional int32 mutemusic = 5;
inline bool DB_Stats::has_mutemusic() const {
  return _has_bit(4);
}
inline void DB_Stats::clear_mutemusic() {
  mutemusic_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_Stats::mutemusic() const {
  return mutemusic_;
}
inline void DB_Stats::set_mutemusic(::google::protobuf::int32 value) {
  _set_bit(4);
  mutemusic_ = value;
}

// optional int32 log = 6;
inline bool DB_Stats::has_log() const {
  return _has_bit(5);
}
inline void DB_Stats::clear_log() {
  log_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_Stats::log() const {
  return log_;
}
inline void DB_Stats::set_log(::google::protobuf::int32 value) {
  _set_bit(5);
  log_ = value;
}

// optional int32 s = 7;
inline bool DB_Stats::has_s() const {
  return _has_bit(6);
}
inline void DB_Stats::clear_s() {
  s_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_Stats::s() const {
  return s_;
}
inline void DB_Stats::set_s(::google::protobuf::int32 value) {
  _set_bit(6);
  s_ = value;
}

// optional int32 e_lp = 8;
inline bool DB_Stats::has_e_lp() const {
  return _has_bit(7);
}
inline void DB_Stats::clear_e_lp() {
  e_lp_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_Stats::e_lp() const {
  return e_lp_;
}
inline void DB_Stats::set_e_lp(::google::protobuf::int32 value) {
  _set_bit(7);
  e_lp_ = value;
}

// optional int32 popuprate = 9;
inline bool DB_Stats::has_popuprate() const {
  return _has_bit(8);
}
inline void DB_Stats::clear_popuprate() {
  popuprate_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_Stats::popuprate() const {
  return popuprate_;
}
inline void DB_Stats::set_popuprate(::google::protobuf::int32 value) {
  _set_bit(8);
  popuprate_ = value;
}

// optional int32 CM = 10;
inline bool DB_Stats::has_cm() const {
  return _has_bit(9);
}
inline void DB_Stats::clear_cm() {
  cm_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 DB_Stats::cm() const {
  return cm_;
}
inline void DB_Stats::set_cm(::google::protobuf::int32 value) {
  _set_bit(9);
  cm_ = value;
}

// optional int32 tip = 11;
inline bool DB_Stats::has_tip() const {
  return _has_bit(10);
}
inline void DB_Stats::clear_tip() {
  tip_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 DB_Stats::tip() const {
  return tip_;
}
inline void DB_Stats::set_tip(::google::protobuf::int32 value) {
  _set_bit(10);
  tip_ = value;
}

// optional int32 updateid = 12;
inline bool DB_Stats::has_updateid() const {
  return _has_bit(11);
}
inline void DB_Stats::clear_updateid() {
  updateid_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 DB_Stats::updateid() const {
  return updateid_;
}
inline void DB_Stats::set_updateid(::google::protobuf::int32 value) {
  _set_bit(11);
  updateid_ = value;
}

// optional int32 reinforcements = 13;
inline bool DB_Stats::has_reinforcements() const {
  return _has_bit(12);
}
inline void DB_Stats::clear_reinforcements() {
  reinforcements_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 DB_Stats::reinforcements() const {
  return reinforcements_;
}
inline void DB_Stats::set_reinforcements(::google::protobuf::int32 value) {
  _set_bit(12);
  reinforcements_ = value;
}

// optional int32 reinforcements_state = 14;
inline bool DB_Stats::has_reinforcements_state() const {
  return _has_bit(13);
}
inline void DB_Stats::clear_reinforcements_state() {
  reinforcements_state_ = 0;
  _clear_bit(13);
}
inline ::google::protobuf::int32 DB_Stats::reinforcements_state() const {
  return reinforcements_state_;
}
inline void DB_Stats::set_reinforcements_state(::google::protobuf::int32 value) {
  _set_bit(13);
  reinforcements_state_ = value;
}

// optional int32 savetime = 15;
inline bool DB_Stats::has_savetime() const {
  return _has_bit(14);
}
inline void DB_Stats::clear_savetime() {
  savetime_ = 0;
  _clear_bit(14);
}
inline ::google::protobuf::int32 DB_Stats::savetime() const {
  return savetime_;
}
inline void DB_Stats::set_savetime(::google::protobuf::int32 value) {
  _set_bit(14);
  savetime_ = value;
}

// optional int32 reinforcementsTime = 16;
inline bool DB_Stats::has_reinforcementstime() const {
  return _has_bit(15);
}
inline void DB_Stats::clear_reinforcementstime() {
  reinforcementstime_ = 0;
  _clear_bit(15);
}
inline ::google::protobuf::int32 DB_Stats::reinforcementstime() const {
  return reinforcementstime_;
}
inline void DB_Stats::set_reinforcementstime(::google::protobuf::int32 value) {
  _set_bit(15);
  reinforcementstime_ = value;
}

// optional int32 settings_vo = 17 [default = 1];
inline bool DB_Stats::has_settings_vo() const {
  return _has_bit(16);
}
inline void DB_Stats::clear_settings_vo() {
  settings_vo_ = 1;
  _clear_bit(16);
}
inline ::google::protobuf::int32 DB_Stats::settings_vo() const {
  return settings_vo_;
}
inline void DB_Stats::set_settings_vo(::google::protobuf::int32 value) {
  _set_bit(16);
  settings_vo_ = value;
}

// optional int32 settings_bodies = 18 [default = 1];
inline bool DB_Stats::has_settings_bodies() const {
  return _has_bit(17);
}
inline void DB_Stats::clear_settings_bodies() {
  settings_bodies_ = 1;
  _clear_bit(17);
}
inline ::google::protobuf::int32 DB_Stats::settings_bodies() const {
  return settings_bodies_;
}
inline void DB_Stats::set_settings_bodies(::google::protobuf::int32 value) {
  _set_bit(17);
  settings_bodies_ = value;
}

// optional int32 settings_vehicles = 19 [default = 1];
inline bool DB_Stats::has_settings_vehicles() const {
  return _has_bit(18);
}
inline void DB_Stats::clear_settings_vehicles() {
  settings_vehicles_ = 1;
  _clear_bit(18);
}
inline ::google::protobuf::int32 DB_Stats::settings_vehicles() const {
  return settings_vehicles_;
}
inline void DB_Stats::set_settings_vehicles(::google::protobuf::int32 value) {
  _set_bit(18);
  settings_vehicles_ = value;
}

// optional int32 settings_admiral = 20 [default = 1];
inline bool DB_Stats::has_settings_admiral() const {
  return _has_bit(19);
}
inline void DB_Stats::clear_settings_admiral() {
  settings_admiral_ = 1;
  _clear_bit(19);
}
inline ::google::protobuf::int32 DB_Stats::settings_admiral() const {
  return settings_admiral_;
}
inline void DB_Stats::set_settings_admiral(::google::protobuf::int32 value) {
  _set_bit(19);
  settings_admiral_ = value;
}

// optional bool settings_lowfps = 21 [default = false];
inline bool DB_Stats::has_settings_lowfps() const {
  return _has_bit(20);
}
inline void DB_Stats::clear_settings_lowfps() {
  settings_lowfps_ = false;
  _clear_bit(20);
}
inline bool DB_Stats::settings_lowfps() const {
  return settings_lowfps_;
}
inline void DB_Stats::set_settings_lowfps(bool value) {
  _set_bit(20);
  settings_lowfps_ = value;
}

// -------------------------------------------------------------------

// DB_UpgradeArmy

// optional int32 armyType = 1;
inline bool DB_UpgradeArmy::has_armytype() const {
  return _has_bit(0);
}
inline void DB_UpgradeArmy::clear_armytype() {
  armytype_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_UpgradeArmy::armytype() const {
  return armytype_;
}
inline void DB_UpgradeArmy::set_armytype(::google::protobuf::int32 value) {
  _set_bit(0);
  armytype_ = value;
}

// optional int32 level = 2;
inline bool DB_UpgradeArmy::has_level() const {
  return _has_bit(1);
}
inline void DB_UpgradeArmy::clear_level() {
  level_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_UpgradeArmy::level() const {
  return level_;
}
inline void DB_UpgradeArmy::set_level(::google::protobuf::int32 value) {
  _set_bit(1);
  level_ = value;
}

// optional int32 finishTime = 3 [default = 0];
inline bool DB_UpgradeArmy::has_finishtime() const {
  return _has_bit(2);
}
inline void DB_UpgradeArmy::clear_finishtime() {
  finishtime_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_UpgradeArmy::finishtime() const {
  return finishtime_;
}
inline void DB_UpgradeArmy::set_finishtime(::google::protobuf::int32 value) {
  _set_bit(2);
  finishtime_ = value;
}

// optional int32 ExtraBldTime = 4 [default = 0];
inline bool DB_UpgradeArmy::has_extrabldtime() const {
  return _has_bit(3);
}
inline void DB_UpgradeArmy::clear_extrabldtime() {
  extrabldtime_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_UpgradeArmy::extrabldtime() const {
  return extrabldtime_;
}
inline void DB_UpgradeArmy::set_extrabldtime(::google::protobuf::int32 value) {
  _set_bit(3);
  extrabldtime_ = value;
}

// optional int32 ExtraUpTime = 5 [default = 0];
inline bool DB_UpgradeArmy::has_extrauptime() const {
  return _has_bit(4);
}
inline void DB_UpgradeArmy::clear_extrauptime() {
  extrauptime_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_UpgradeArmy::extrauptime() const {
  return extrauptime_;
}
inline void DB_UpgradeArmy::set_extrauptime(::google::protobuf::int32 value) {
  _set_bit(4);
  extrauptime_ = value;
}

// -------------------------------------------------------------------

// DB_UnlockArmy

// optional int32 armyType = 1;
inline bool DB_UnlockArmy::has_armytype() const {
  return _has_bit(0);
}
inline void DB_UnlockArmy::clear_armytype() {
  armytype_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_UnlockArmy::armytype() const {
  return armytype_;
}
inline void DB_UnlockArmy::set_armytype(::google::protobuf::int32 value) {
  _set_bit(0);
  armytype_ = value;
}

// optional int32 level = 2;
inline bool DB_UnlockArmy::has_level() const {
  return _has_bit(1);
}
inline void DB_UnlockArmy::clear_level() {
  level_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_UnlockArmy::level() const {
  return level_;
}
inline void DB_UnlockArmy::set_level(::google::protobuf::int32 value) {
  _set_bit(1);
  level_ = value;
}

// -------------------------------------------------------------------

// DB_Academy

// optional string type = 1;
inline bool DB_Academy::has_type() const {
  return _has_bit(0);
}
inline void DB_Academy::clear_type() {
  if (type_ != &_default_type_) {
    type_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& DB_Academy::type() const {
  return *type_;
}
inline void DB_Academy::set_type(const ::std::string& value) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void DB_Academy::set_type(const char* value) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void DB_Academy::set_type(const char* value, size_t size) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Academy::mutable_type() {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  return type_;
}

// optional int32 l = 2;
inline bool DB_Academy::has_l() const {
  return _has_bit(1);
}
inline void DB_Academy::clear_l() {
  l_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Academy::l() const {
  return l_;
}
inline void DB_Academy::set_l(::google::protobuf::int32 value) {
  _set_bit(1);
  l_ = value;
}

// optional int32 t = 3;
inline bool DB_Academy::has_t() const {
  return _has_bit(2);
}
inline void DB_Academy::clear_t() {
  t_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Academy::t() const {
  return t_;
}
inline void DB_Academy::set_t(::google::protobuf::int32 value) {
  _set_bit(2);
  t_ = value;
}

// optional int32 savetime = 4;
inline bool DB_Academy::has_savetime() const {
  return _has_bit(3);
}
inline void DB_Academy::clear_savetime() {
  savetime_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Academy::savetime() const {
  return savetime_;
}
inline void DB_Academy::set_savetime(::google::protobuf::int32 value) {
  _set_bit(3);
  savetime_ = value;
}

// -------------------------------------------------------------------

// DB_Monsterbaiter

// repeated int32 queue = 1;
inline int DB_Monsterbaiter::queue_size() const {
  return queue_.size();
}
inline void DB_Monsterbaiter::clear_queue() {
  queue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_Monsterbaiter::queue() const {
  return queue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_Monsterbaiter::mutable_queue() {
  return &queue_;
}
inline ::google::protobuf::int32 DB_Monsterbaiter::queue(int index) const {
  return queue_.Get(index);
}
inline void DB_Monsterbaiter::set_queue(int index, ::google::protobuf::int32 value) {
  queue_.Set(index, value);
}
inline void DB_Monsterbaiter::add_queue(::google::protobuf::int32 value) {
  queue_.Add(value);
}

// optional int32 musk = 2;
inline bool DB_Monsterbaiter::has_musk() const {
  return _has_bit(1);
}
inline void DB_Monsterbaiter::clear_musk() {
  musk_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Monsterbaiter::musk() const {
  return musk_;
}
inline void DB_Monsterbaiter::set_musk(::google::protobuf::int32 value) {
  _set_bit(1);
  musk_ = value;
}

// optional int32 angle = 3;
inline bool DB_Monsterbaiter::has_angle() const {
  return _has_bit(2);
}
inline void DB_Monsterbaiter::clear_angle() {
  angle_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Monsterbaiter::angle() const {
  return angle_;
}
inline void DB_Monsterbaiter::set_angle(::google::protobuf::int32 value) {
  _set_bit(2);
  angle_ = value;
}

// optional int32 startTime = 4 [default = 0];
inline bool DB_Monsterbaiter::has_starttime() const {
  return _has_bit(3);
}
inline void DB_Monsterbaiter::clear_starttime() {
  starttime_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Monsterbaiter::starttime() const {
  return starttime_;
}
inline void DB_Monsterbaiter::set_starttime(::google::protobuf::int32 value) {
  _set_bit(3);
  starttime_ = value;
}

// -------------------------------------------------------------------

// DB_Locker

// optional string name = 1;
inline bool DB_Locker::has_name() const {
  return _has_bit(0);
}
inline void DB_Locker::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& DB_Locker::name() const {
  return *name_;
}
inline void DB_Locker::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DB_Locker::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DB_Locker::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Locker::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional int32 t = 2;
inline bool DB_Locker::has_t() const {
  return _has_bit(1);
}
inline void DB_Locker::clear_t() {
  t_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Locker::t() const {
  return t_;
}
inline void DB_Locker::set_t(::google::protobuf::int32 value) {
  _set_bit(1);
  t_ = value;
}

// optional string s = 3;
inline bool DB_Locker::has_s() const {
  return _has_bit(2);
}
inline void DB_Locker::clear_s() {
  if (s_ != &_default_s_) {
    s_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& DB_Locker::s() const {
  return *s_;
}
inline void DB_Locker::set_s(const ::std::string& value) {
  _set_bit(2);
  if (s_ == &_default_s_) {
    s_ = new ::std::string;
  }
  s_->assign(value);
}
inline void DB_Locker::set_s(const char* value) {
  _set_bit(2);
  if (s_ == &_default_s_) {
    s_ = new ::std::string;
  }
  s_->assign(value);
}
inline void DB_Locker::set_s(const char* value, size_t size) {
  _set_bit(2);
  if (s_ == &_default_s_) {
    s_ = new ::std::string;
  }
  s_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Locker::mutable_s() {
  _set_bit(2);
  if (s_ == &_default_s_) {
    s_ = new ::std::string;
  }
  return s_;
}

// optional string e = 4;
inline bool DB_Locker::has_e() const {
  return _has_bit(3);
}
inline void DB_Locker::clear_e() {
  if (e_ != &_default_e_) {
    e_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& DB_Locker::e() const {
  return *e_;
}
inline void DB_Locker::set_e(const ::std::string& value) {
  _set_bit(3);
  if (e_ == &_default_e_) {
    e_ = new ::std::string;
  }
  e_->assign(value);
}
inline void DB_Locker::set_e(const char* value) {
  _set_bit(3);
  if (e_ == &_default_e_) {
    e_ = new ::std::string;
  }
  e_->assign(value);
}
inline void DB_Locker::set_e(const char* value, size_t size) {
  _set_bit(3);
  if (e_ == &_default_e_) {
    e_ = new ::std::string;
  }
  e_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Locker::mutable_e() {
  _set_bit(3);
  if (e_ == &_default_e_) {
    e_ = new ::std::string;
  }
  return e_;
}

// -------------------------------------------------------------------

// DB_Army

// optional int32 type = 1;
inline bool DB_Army::has_type() const {
  return _has_bit(0);
}
inline void DB_Army::clear_type() {
  type_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Army::type() const {
  return type_;
}
inline void DB_Army::set_type(::google::protobuf::int32 value) {
  _set_bit(0);
  type_ = value;
}

// optional int32 X = 2;
inline bool DB_Army::has_x() const {
  return _has_bit(1);
}
inline void DB_Army::clear_x() {
  x_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Army::x() const {
  return x_;
}
inline void DB_Army::set_x(::google::protobuf::int32 value) {
  _set_bit(1);
  x_ = value;
}

// optional int32 Y = 3;
inline bool DB_Army::has_y() const {
  return _has_bit(2);
}
inline void DB_Army::clear_y() {
  y_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Army::y() const {
  return y_;
}
inline void DB_Army::set_y(::google::protobuf::int32 value) {
  _set_bit(2);
  y_ = value;
}

// optional int32 angle = 4;
inline bool DB_Army::has_angle() const {
  return _has_bit(3);
}
inline void DB_Army::clear_angle() {
  angle_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Army::angle() const {
  return angle_;
}
inline void DB_Army::set_angle(::google::protobuf::int32 value) {
  _set_bit(3);
  angle_ = value;
}

// optional int32 health = 5;
inline bool DB_Army::has_health() const {
  return _has_bit(4);
}
inline void DB_Army::clear_health() {
  health_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_Army::health() const {
  return health_;
}
inline void DB_Army::set_health(::google::protobuf::int32 value) {
  _set_bit(4);
  health_ = value;
}

// optional int32 stance = 6;
inline bool DB_Army::has_stance() const {
  return _has_bit(5);
}
inline void DB_Army::clear_stance() {
  stance_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_Army::stance() const {
  return stance_;
}
inline void DB_Army::set_stance(::google::protobuf::int32 value) {
  _set_bit(5);
  stance_ = value;
}

// optional int32 id = 7 [default = 0];
inline bool DB_Army::has_id() const {
  return _has_bit(6);
}
inline void DB_Army::clear_id() {
  id_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_Army::id() const {
  return id_;
}
inline void DB_Army::set_id(::google::protobuf::int32 value) {
  _set_bit(6);
  id_ = value;
}

// optional int32 delstate = 8 [default = 0];
inline bool DB_Army::has_delstate() const {
  return _has_bit(7);
}
inline void DB_Army::clear_delstate() {
  delstate_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_Army::delstate() const {
  return delstate_;
}
inline void DB_Army::set_delstate(::google::protobuf::int32 value) {
  _set_bit(7);
  delstate_ = value;
}

// optional int32 campstate = 9 [default = 0];
inline bool DB_Army::has_campstate() const {
  return _has_bit(8);
}
inline void DB_Army::clear_campstate() {
  campstate_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_Army::campstate() const {
  return campstate_;
}
inline void DB_Army::set_campstate(::google::protobuf::int32 value) {
  _set_bit(8);
  campstate_ = value;
}

// optional int32 grade = 10 [default = 0];
inline bool DB_Army::has_grade() const {
  return _has_bit(9);
}
inline void DB_Army::clear_grade() {
  grade_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 DB_Army::grade() const {
  return grade_;
}
inline void DB_Army::set_grade(::google::protobuf::int32 value) {
  _set_bit(9);
  grade_ = value;
}

// -------------------------------------------------------------------

// DB_Book

// optional int32 id = 1 [default = 0];
inline bool DB_Book::has_id() const {
  return _has_bit(0);
}
inline void DB_Book::clear_id() {
  id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Book::id() const {
  return id_;
}
inline void DB_Book::set_id(::google::protobuf::int32 value) {
  _set_bit(0);
  id_ = value;
}

// optional int32 bookID = 2 [default = 0];
inline bool DB_Book::has_bookid() const {
  return _has_bit(1);
}
inline void DB_Book::clear_bookid() {
  bookid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Book::bookid() const {
  return bookid_;
}
inline void DB_Book::set_bookid(::google::protobuf::int32 value) {
  _set_bit(1);
  bookid_ = value;
}

// optional int32 level = 3 [default = 0];
inline bool DB_Book::has_level() const {
  return _has_bit(2);
}
inline void DB_Book::clear_level() {
  level_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Book::level() const {
  return level_;
}
inline void DB_Book::set_level(::google::protobuf::int32 value) {
  _set_bit(2);
  level_ = value;
}

// optional int32 lock = 4 [default = 0];
inline bool DB_Book::has_lock() const {
  return _has_bit(3);
}
inline void DB_Book::clear_lock() {
  lock_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Book::lock() const {
  return lock_;
}
inline void DB_Book::set_lock(::google::protobuf::int32 value) {
  _set_bit(3);
  lock_ = value;
}

// optional int32 exp = 5 [default = 0];
inline bool DB_Book::has_exp() const {
  return _has_bit(4);
}
inline void DB_Book::clear_exp() {
  exp_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_Book::exp() const {
  return exp_;
}
inline void DB_Book::set_exp(::google::protobuf::int32 value) {
  _set_bit(4);
  exp_ = value;
}

// optional int32 bagType = 6 [default = 0];
inline bool DB_Book::has_bagtype() const {
  return _has_bit(5);
}
inline void DB_Book::clear_bagtype() {
  bagtype_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_Book::bagtype() const {
  return bagtype_;
}
inline void DB_Book::set_bagtype(::google::protobuf::int32 value) {
  _set_bit(5);
  bagtype_ = value;
}

// -------------------------------------------------------------------

// DB_Emblem

// optional int32 emblemID = 1 [default = 0];
inline bool DB_Emblem::has_emblemid() const {
  return _has_bit(0);
}
inline void DB_Emblem::clear_emblemid() {
  emblemid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Emblem::emblemid() const {
  return emblemid_;
}
inline void DB_Emblem::set_emblemid(::google::protobuf::int32 value) {
  _set_bit(0);
  emblemid_ = value;
}

// optional int32 count = 2 [default = 0];
inline bool DB_Emblem::has_count() const {
  return _has_bit(1);
}
inline void DB_Emblem::clear_count() {
  count_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Emblem::count() const {
  return count_;
}
inline void DB_Emblem::set_count(::google::protobuf::int32 value) {
  _set_bit(1);
  count_ = value;
}

// -------------------------------------------------------------------

// DB_EmblemNew

// optional int32 id = 1 [default = 0];
inline bool DB_EmblemNew::has_id() const {
  return _has_bit(0);
}
inline void DB_EmblemNew::clear_id() {
  id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_EmblemNew::id() const {
  return id_;
}
inline void DB_EmblemNew::set_id(::google::protobuf::int32 value) {
  _set_bit(0);
  id_ = value;
}

// optional int32 emblemID = 2 [default = 0];
inline bool DB_EmblemNew::has_emblemid() const {
  return _has_bit(1);
}
inline void DB_EmblemNew::clear_emblemid() {
  emblemid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_EmblemNew::emblemid() const {
  return emblemid_;
}
inline void DB_EmblemNew::set_emblemid(::google::protobuf::int32 value) {
  _set_bit(1);
  emblemid_ = value;
}

// optional int32 lock = 4 [default = 0];
inline bool DB_EmblemNew::has_lock() const {
  return _has_bit(2);
}
inline void DB_EmblemNew::clear_lock() {
  lock_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_EmblemNew::lock() const {
  return lock_;
}
inline void DB_EmblemNew::set_lock(::google::protobuf::int32 value) {
  _set_bit(2);
  lock_ = value;
}

// optional int32 exp = 5 [default = 0];
inline bool DB_EmblemNew::has_exp() const {
  return _has_bit(3);
}
inline void DB_EmblemNew::clear_exp() {
  exp_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_EmblemNew::exp() const {
  return exp_;
}
inline void DB_EmblemNew::set_exp(::google::protobuf::int32 value) {
  _set_bit(3);
  exp_ = value;
}

// optional int32 bagType = 6 [default = 0];
inline bool DB_EmblemNew::has_bagtype() const {
  return _has_bit(4);
}
inline void DB_EmblemNew::clear_bagtype() {
  bagtype_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_EmblemNew::bagtype() const {
  return bagtype_;
}
inline void DB_EmblemNew::set_bagtype(::google::protobuf::int32 value) {
  _set_bit(4);
  bagtype_ = value;
}

// optional int32 useFlag = 7 [default = 0];
inline bool DB_EmblemNew::has_useflag() const {
  return _has_bit(5);
}
inline void DB_EmblemNew::clear_useflag() {
  useflag_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_EmblemNew::useflag() const {
  return useflag_;
}
inline void DB_EmblemNew::set_useflag(::google::protobuf::int32 value) {
  _set_bit(5);
  useflag_ = value;
}

// -------------------------------------------------------------------

// DB_WeaponCom

// optional int32 id = 1 [default = 0];
inline bool DB_WeaponCom::has_id() const {
  return _has_bit(0);
}
inline void DB_WeaponCom::clear_id() {
  id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_WeaponCom::id() const {
  return id_;
}
inline void DB_WeaponCom::set_id(::google::protobuf::int32 value) {
  _set_bit(0);
  id_ = value;
}

// optional int32 comID = 2 [default = 0];
inline bool DB_WeaponCom::has_comid() const {
  return _has_bit(1);
}
inline void DB_WeaponCom::clear_comid() {
  comid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_WeaponCom::comid() const {
  return comid_;
}
inline void DB_WeaponCom::set_comid(::google::protobuf::int32 value) {
  _set_bit(1);
  comid_ = value;
}

// optional int32 level = 3 [default = 0];
inline bool DB_WeaponCom::has_level() const {
  return _has_bit(2);
}
inline void DB_WeaponCom::clear_level() {
  level_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_WeaponCom::level() const {
  return level_;
}
inline void DB_WeaponCom::set_level(::google::protobuf::int32 value) {
  _set_bit(2);
  level_ = value;
}

// optional int32 lock = 4 [default = 0];
inline bool DB_WeaponCom::has_lock() const {
  return _has_bit(3);
}
inline void DB_WeaponCom::clear_lock() {
  lock_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_WeaponCom::lock() const {
  return lock_;
}
inline void DB_WeaponCom::set_lock(::google::protobuf::int32 value) {
  _set_bit(3);
  lock_ = value;
}

// optional int32 exp = 5 [default = 0];
inline bool DB_WeaponCom::has_exp() const {
  return _has_bit(4);
}
inline void DB_WeaponCom::clear_exp() {
  exp_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_WeaponCom::exp() const {
  return exp_;
}
inline void DB_WeaponCom::set_exp(::google::protobuf::int32 value) {
  _set_bit(4);
  exp_ = value;
}

// optional int32 bagType = 6 [default = 0];
inline bool DB_WeaponCom::has_bagtype() const {
  return _has_bit(5);
}
inline void DB_WeaponCom::clear_bagtype() {
  bagtype_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_WeaponCom::bagtype() const {
  return bagtype_;
}
inline void DB_WeaponCom::set_bagtype(::google::protobuf::int32 value) {
  _set_bit(5);
  bagtype_ = value;
}

// optional int32 grade = 7 [default = 0];
inline bool DB_WeaponCom::has_grade() const {
  return _has_bit(6);
}
inline void DB_WeaponCom::clear_grade() {
  grade_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_WeaponCom::grade() const {
  return grade_;
}
inline void DB_WeaponCom::set_grade(::google::protobuf::int32 value) {
  _set_bit(6);
  grade_ = value;
}

// optional int32 extraType = 8 [default = 0];
inline bool DB_WeaponCom::has_extratype() const {
  return _has_bit(7);
}
inline void DB_WeaponCom::clear_extratype() {
  extratype_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_WeaponCom::extratype() const {
  return extratype_;
}
inline void DB_WeaponCom::set_extratype(::google::protobuf::int32 value) {
  _set_bit(7);
  extratype_ = value;
}

// -------------------------------------------------------------------

// DB_WeaponCenter

// repeated int32 sceneID = 1;
inline int DB_WeaponCenter::sceneid_size() const {
  return sceneid_.size();
}
inline void DB_WeaponCenter::clear_sceneid() {
  sceneid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::sceneid() const {
  return sceneid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_sceneid() {
  return &sceneid_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::sceneid(int index) const {
  return sceneid_.Get(index);
}
inline void DB_WeaponCenter::set_sceneid(int index, ::google::protobuf::int32 value) {
  sceneid_.Set(index, value);
}
inline void DB_WeaponCenter::add_sceneid(::google::protobuf::int32 value) {
  sceneid_.Add(value);
}

// repeated int32 freeExploreCnt = 2;
inline int DB_WeaponCenter::freeexplorecnt_size() const {
  return freeexplorecnt_.size();
}
inline void DB_WeaponCenter::clear_freeexplorecnt() {
  freeexplorecnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::freeexplorecnt() const {
  return freeexplorecnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_freeexplorecnt() {
  return &freeexplorecnt_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::freeexplorecnt(int index) const {
  return freeexplorecnt_.Get(index);
}
inline void DB_WeaponCenter::set_freeexplorecnt(int index, ::google::protobuf::int32 value) {
  freeexplorecnt_.Set(index, value);
}
inline void DB_WeaponCenter::add_freeexplorecnt(::google::protobuf::int32 value) {
  freeexplorecnt_.Add(value);
}

// repeated int32 finishExpTime = 3;
inline int DB_WeaponCenter::finishexptime_size() const {
  return finishexptime_.size();
}
inline void DB_WeaponCenter::clear_finishexptime() {
  finishexptime_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::finishexptime() const {
  return finishexptime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_finishexptime() {
  return &finishexptime_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::finishexptime(int index) const {
  return finishexptime_.Get(index);
}
inline void DB_WeaponCenter::set_finishexptime(int index, ::google::protobuf::int32 value) {
  finishexptime_.Set(index, value);
}
inline void DB_WeaponCenter::add_finishexptime(::google::protobuf::int32 value) {
  finishexptime_.Add(value);
}

// repeated int32 baseCom = 4;
inline int DB_WeaponCenter::basecom_size() const {
  return basecom_.size();
}
inline void DB_WeaponCenter::clear_basecom() {
  basecom_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::basecom() const {
  return basecom_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_basecom() {
  return &basecom_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::basecom(int index) const {
  return basecom_.Get(index);
}
inline void DB_WeaponCenter::set_basecom(int index, ::google::protobuf::int32 value) {
  basecom_.Set(index, value);
}
inline void DB_WeaponCenter::add_basecom(::google::protobuf::int32 value) {
  basecom_.Add(value);
}

// repeated int32 armyCom = 5;
inline int DB_WeaponCenter::armycom_size() const {
  return armycom_.size();
}
inline void DB_WeaponCenter::clear_armycom() {
  armycom_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::armycom() const {
  return armycom_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_armycom() {
  return &armycom_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::armycom(int index) const {
  return armycom_.Get(index);
}
inline void DB_WeaponCenter::set_armycom(int index, ::google::protobuf::int32 value) {
  armycom_.Set(index, value);
}
inline void DB_WeaponCenter::add_armycom(::google::protobuf::int32 value) {
  armycom_.Add(value);
}

// repeated int32 tankCom = 6;
inline int DB_WeaponCenter::tankcom_size() const {
  return tankcom_.size();
}
inline void DB_WeaponCenter::clear_tankcom() {
  tankcom_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::tankcom() const {
  return tankcom_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_tankcom() {
  return &tankcom_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::tankcom(int index) const {
  return tankcom_.Get(index);
}
inline void DB_WeaponCenter::set_tankcom(int index, ::google::protobuf::int32 value) {
  tankcom_.Set(index, value);
}
inline void DB_WeaponCenter::add_tankcom(::google::protobuf::int32 value) {
  tankcom_.Add(value);
}

// repeated int32 planeCom = 7;
inline int DB_WeaponCenter::planecom_size() const {
  return planecom_.size();
}
inline void DB_WeaponCenter::clear_planecom() {
  planecom_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::planecom() const {
  return planecom_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_planecom() {
  return &planecom_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::planecom(int index) const {
  return planecom_.Get(index);
}
inline void DB_WeaponCenter::set_planecom(int index, ::google::protobuf::int32 value) {
  planecom_.Set(index, value);
}
inline void DB_WeaponCenter::add_planecom(::google::protobuf::int32 value) {
  planecom_.Add(value);
}

// repeated .DB_WeaponCom wpcCom = 8;
inline int DB_WeaponCenter::wpccom_size() const {
  return wpccom_.size();
}
inline void DB_WeaponCenter::clear_wpccom() {
  wpccom_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_WeaponCom >&
DB_WeaponCenter::wpccom() const {
  return wpccom_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_WeaponCom >*
DB_WeaponCenter::mutable_wpccom() {
  return &wpccom_;
}
inline const ::DB_WeaponCom& DB_WeaponCenter::wpccom(int index) const {
  return wpccom_.Get(index);
}
inline ::DB_WeaponCom* DB_WeaponCenter::mutable_wpccom(int index) {
  return wpccom_.Mutable(index);
}
inline ::DB_WeaponCom* DB_WeaponCenter::add_wpccom() {
  return wpccom_.Add();
}

// repeated .DB_Emblem wpcEmblem = 9;
inline int DB_WeaponCenter::wpcemblem_size() const {
  return wpcemblem_.size();
}
inline void DB_WeaponCenter::clear_wpcemblem() {
  wpcemblem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_Emblem >&
DB_WeaponCenter::wpcemblem() const {
  return wpcemblem_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_Emblem >*
DB_WeaponCenter::mutable_wpcemblem() {
  return &wpcemblem_;
}
inline const ::DB_Emblem& DB_WeaponCenter::wpcemblem(int index) const {
  return wpcemblem_.Get(index);
}
inline ::DB_Emblem* DB_WeaponCenter::mutable_wpcemblem(int index) {
  return wpcemblem_.Mutable(index);
}
inline ::DB_Emblem* DB_WeaponCenter::add_wpcemblem() {
  return wpcemblem_.Add();
}

// repeated int32 earthTowerEmblem = 10;
inline int DB_WeaponCenter::earthtoweremblem_size() const {
  return earthtoweremblem_.size();
}
inline void DB_WeaponCenter::clear_earthtoweremblem() {
  earthtoweremblem_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::earthtoweremblem() const {
  return earthtoweremblem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_earthtoweremblem() {
  return &earthtoweremblem_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::earthtoweremblem(int index) const {
  return earthtoweremblem_.Get(index);
}
inline void DB_WeaponCenter::set_earthtoweremblem(int index, ::google::protobuf::int32 value) {
  earthtoweremblem_.Set(index, value);
}
inline void DB_WeaponCenter::add_earthtoweremblem(::google::protobuf::int32 value) {
  earthtoweremblem_.Add(value);
}

// repeated int32 airTowerEmblem = 11;
inline int DB_WeaponCenter::airtoweremblem_size() const {
  return airtoweremblem_.size();
}
inline void DB_WeaponCenter::clear_airtoweremblem() {
  airtoweremblem_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::airtoweremblem() const {
  return airtoweremblem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_airtoweremblem() {
  return &airtoweremblem_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::airtoweremblem(int index) const {
  return airtoweremblem_.Get(index);
}
inline void DB_WeaponCenter::set_airtoweremblem(int index, ::google::protobuf::int32 value) {
  airtoweremblem_.Set(index, value);
}
inline void DB_WeaponCenter::add_airtoweremblem(::google::protobuf::int32 value) {
  airtoweremblem_.Add(value);
}

// repeated int32 otherEmblem = 12;
inline int DB_WeaponCenter::otheremblem_size() const {
  return otheremblem_.size();
}
inline void DB_WeaponCenter::clear_otheremblem() {
  otheremblem_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::otheremblem() const {
  return otheremblem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_otheremblem() {
  return &otheremblem_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::otheremblem(int index) const {
  return otheremblem_.Get(index);
}
inline void DB_WeaponCenter::set_otheremblem(int index, ::google::protobuf::int32 value) {
  otheremblem_.Set(index, value);
}
inline void DB_WeaponCenter::add_otheremblem(::google::protobuf::int32 value) {
  otheremblem_.Add(value);
}

// repeated .DB_EmblemNew wpcEmblemNew = 13;
inline int DB_WeaponCenter::wpcemblemnew_size() const {
  return wpcemblemnew_.size();
}
inline void DB_WeaponCenter::clear_wpcemblemnew() {
  wpcemblemnew_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_EmblemNew >&
DB_WeaponCenter::wpcemblemnew() const {
  return wpcemblemnew_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_EmblemNew >*
DB_WeaponCenter::mutable_wpcemblemnew() {
  return &wpcemblemnew_;
}
inline const ::DB_EmblemNew& DB_WeaponCenter::wpcemblemnew(int index) const {
  return wpcemblemnew_.Get(index);
}
inline ::DB_EmblemNew* DB_WeaponCenter::mutable_wpcemblemnew(int index) {
  return wpcemblemnew_.Mutable(index);
}
inline ::DB_EmblemNew* DB_WeaponCenter::add_wpcemblemnew() {
  return wpcemblemnew_.Add();
}

// repeated int32 gunTurretEmblem = 14;
inline int DB_WeaponCenter::gunturretemblem_size() const {
  return gunturretemblem_.size();
}
inline void DB_WeaponCenter::clear_gunturretemblem() {
  gunturretemblem_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::gunturretemblem() const {
  return gunturretemblem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_gunturretemblem() {
  return &gunturretemblem_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::gunturretemblem(int index) const {
  return gunturretemblem_.Get(index);
}
inline void DB_WeaponCenter::set_gunturretemblem(int index, ::google::protobuf::int32 value) {
  gunturretemblem_.Set(index, value);
}
inline void DB_WeaponCenter::add_gunturretemblem(::google::protobuf::int32 value) {
  gunturretemblem_.Add(value);
}

// repeated int32 mortarTowerEmblem = 15;
inline int DB_WeaponCenter::mortartoweremblem_size() const {
  return mortartoweremblem_.size();
}
inline void DB_WeaponCenter::clear_mortartoweremblem() {
  mortartoweremblem_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::mortartoweremblem() const {
  return mortartoweremblem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_mortartoweremblem() {
  return &mortartoweremblem_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::mortartoweremblem(int index) const {
  return mortartoweremblem_.Get(index);
}
inline void DB_WeaponCenter::set_mortartoweremblem(int index, ::google::protobuf::int32 value) {
  mortartoweremblem_.Set(index, value);
}
inline void DB_WeaponCenter::add_mortartoweremblem(::google::protobuf::int32 value) {
  mortartoweremblem_.Add(value);
}

// repeated int32 otherbldEmblem = 16;
inline int DB_WeaponCenter::otherbldemblem_size() const {
  return otherbldemblem_.size();
}
inline void DB_WeaponCenter::clear_otherbldemblem() {
  otherbldemblem_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::otherbldemblem() const {
  return otherbldemblem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_otherbldemblem() {
  return &otherbldemblem_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::otherbldemblem(int index) const {
  return otherbldemblem_.Get(index);
}
inline void DB_WeaponCenter::set_otherbldemblem(int index, ::google::protobuf::int32 value) {
  otherbldemblem_.Set(index, value);
}
inline void DB_WeaponCenter::add_otherbldemblem(::google::protobuf::int32 value) {
  otherbldemblem_.Add(value);
}

// repeated .DB_Book wpcBook = 17;
inline int DB_WeaponCenter::wpcbook_size() const {
  return wpcbook_.size();
}
inline void DB_WeaponCenter::clear_wpcbook() {
  wpcbook_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_Book >&
DB_WeaponCenter::wpcbook() const {
  return wpcbook_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_Book >*
DB_WeaponCenter::mutable_wpcbook() {
  return &wpcbook_;
}
inline const ::DB_Book& DB_WeaponCenter::wpcbook(int index) const {
  return wpcbook_.Get(index);
}
inline ::DB_Book* DB_WeaponCenter::mutable_wpcbook(int index) {
  return wpcbook_.Mutable(index);
}
inline ::DB_Book* DB_WeaponCenter::add_wpcbook() {
  return wpcbook_.Add();
}

// repeated int32 admiralBook = 18;
inline int DB_WeaponCenter::admiralbook_size() const {
  return admiralbook_.size();
}
inline void DB_WeaponCenter::clear_admiralbook() {
  admiralbook_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::admiralbook() const {
  return admiralbook_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_admiralbook() {
  return &admiralbook_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::admiralbook(int index) const {
  return admiralbook_.Get(index);
}
inline void DB_WeaponCenter::set_admiralbook(int index, ::google::protobuf::int32 value) {
  admiralbook_.Set(index, value);
}
inline void DB_WeaponCenter::add_admiralbook(::google::protobuf::int32 value) {
  admiralbook_.Add(value);
}

// repeated int32 laserTowerEmblem = 19;
inline int DB_WeaponCenter::lasertoweremblem_size() const {
  return lasertoweremblem_.size();
}
inline void DB_WeaponCenter::clear_lasertoweremblem() {
  lasertoweremblem_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::lasertoweremblem() const {
  return lasertoweremblem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_lasertoweremblem() {
  return &lasertoweremblem_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::lasertoweremblem(int index) const {
  return lasertoweremblem_.Get(index);
}
inline void DB_WeaponCenter::set_lasertoweremblem(int index, ::google::protobuf::int32 value) {
  lasertoweremblem_.Set(index, value);
}
inline void DB_WeaponCenter::add_lasertoweremblem(::google::protobuf::int32 value) {
  lasertoweremblem_.Add(value);
}

// repeated int32 heroCom = 20;
inline int DB_WeaponCenter::herocom_size() const {
  return herocom_.size();
}
inline void DB_WeaponCenter::clear_herocom() {
  herocom_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::herocom() const {
  return herocom_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_herocom() {
  return &herocom_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::herocom(int index) const {
  return herocom_.Get(index);
}
inline void DB_WeaponCenter::set_herocom(int index, ::google::protobuf::int32 value) {
  herocom_.Set(index, value);
}
inline void DB_WeaponCenter::add_herocom(::google::protobuf::int32 value) {
  herocom_.Add(value);
}

// optional .DB_WeaponExtraWpcInfo unlockExtraNum = 21;
inline bool DB_WeaponCenter::has_unlockextranum() const {
  return _has_bit(20);
}
inline void DB_WeaponCenter::clear_unlockextranum() {
  if (unlockextranum_ != NULL) unlockextranum_->::DB_WeaponExtraWpcInfo::Clear();
  _clear_bit(20);
}
inline const ::DB_WeaponExtraWpcInfo& DB_WeaponCenter::unlockextranum() const {
  return unlockextranum_ != NULL ? *unlockextranum_ : *default_instance_->unlockextranum_;
}
inline ::DB_WeaponExtraWpcInfo* DB_WeaponCenter::mutable_unlockextranum() {
  _set_bit(20);
  if (unlockextranum_ == NULL) unlockextranum_ = new ::DB_WeaponExtraWpcInfo;
  return unlockextranum_;
}

// optional .DB_WeaponExtraWpcInfo turnOnNum = 22;
inline bool DB_WeaponCenter::has_turnonnum() const {
  return _has_bit(21);
}
inline void DB_WeaponCenter::clear_turnonnum() {
  if (turnonnum_ != NULL) turnonnum_->::DB_WeaponExtraWpcInfo::Clear();
  _clear_bit(21);
}
inline const ::DB_WeaponExtraWpcInfo& DB_WeaponCenter::turnonnum() const {
  return turnonnum_ != NULL ? *turnonnum_ : *default_instance_->turnonnum_;
}
inline ::DB_WeaponExtraWpcInfo* DB_WeaponCenter::mutable_turnonnum() {
  _set_bit(21);
  if (turnonnum_ == NULL) turnonnum_ = new ::DB_WeaponExtraWpcInfo;
  return turnonnum_;
}

// optional .DB_WeaponExtraEmblemInfo unlockEmblemNum = 23;
inline bool DB_WeaponCenter::has_unlockemblemnum() const {
  return _has_bit(22);
}
inline void DB_WeaponCenter::clear_unlockemblemnum() {
  if (unlockemblemnum_ != NULL) unlockemblemnum_->::DB_WeaponExtraEmblemInfo::Clear();
  _clear_bit(22);
}
inline const ::DB_WeaponExtraEmblemInfo& DB_WeaponCenter::unlockemblemnum() const {
  return unlockemblemnum_ != NULL ? *unlockemblemnum_ : *default_instance_->unlockemblemnum_;
}
inline ::DB_WeaponExtraEmblemInfo* DB_WeaponCenter::mutable_unlockemblemnum() {
  _set_bit(22);
  if (unlockemblemnum_ == NULL) unlockemblemnum_ = new ::DB_WeaponExtraEmblemInfo;
  return unlockemblemnum_;
}

// repeated int32 giantCanonEmblem = 24;
inline int DB_WeaponCenter::giantcanonemblem_size() const {
  return giantcanonemblem_.size();
}
inline void DB_WeaponCenter::clear_giantcanonemblem() {
  giantcanonemblem_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::giantcanonemblem() const {
  return giantcanonemblem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_giantcanonemblem() {
  return &giantcanonemblem_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::giantcanonemblem(int index) const {
  return giantcanonemblem_.Get(index);
}
inline void DB_WeaponCenter::set_giantcanonemblem(int index, ::google::protobuf::int32 value) {
  giantcanonemblem_.Set(index, value);
}
inline void DB_WeaponCenter::add_giantcanonemblem(::google::protobuf::int32 value) {
  giantcanonemblem_.Add(value);
}

// repeated .DB_Jammer wpcJammer = 25;
inline int DB_WeaponCenter::wpcjammer_size() const {
  return wpcjammer_.size();
}
inline void DB_WeaponCenter::clear_wpcjammer() {
  wpcjammer_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_Jammer >&
DB_WeaponCenter::wpcjammer() const {
  return wpcjammer_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_Jammer >*
DB_WeaponCenter::mutable_wpcjammer() {
  return &wpcjammer_;
}
inline const ::DB_Jammer& DB_WeaponCenter::wpcjammer(int index) const {
  return wpcjammer_.Get(index);
}
inline ::DB_Jammer* DB_WeaponCenter::mutable_wpcjammer(int index) {
  return wpcjammer_.Mutable(index);
}
inline ::DB_Jammer* DB_WeaponCenter::add_wpcjammer() {
  return wpcjammer_.Add();
}

// repeated int32 baseJammer = 26;
inline int DB_WeaponCenter::basejammer_size() const {
  return basejammer_.size();
}
inline void DB_WeaponCenter::clear_basejammer() {
  basejammer_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::basejammer() const {
  return basejammer_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_basejammer() {
  return &basejammer_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::basejammer(int index) const {
  return basejammer_.Get(index);
}
inline void DB_WeaponCenter::set_basejammer(int index, ::google::protobuf::int32 value) {
  basejammer_.Set(index, value);
}
inline void DB_WeaponCenter::add_basejammer(::google::protobuf::int32 value) {
  basejammer_.Add(value);
}

// repeated int32 armyJammer = 27;
inline int DB_WeaponCenter::armyjammer_size() const {
  return armyjammer_.size();
}
inline void DB_WeaponCenter::clear_armyjammer() {
  armyjammer_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WeaponCenter::armyjammer() const {
  return armyjammer_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WeaponCenter::mutable_armyjammer() {
  return &armyjammer_;
}
inline ::google::protobuf::int32 DB_WeaponCenter::armyjammer(int index) const {
  return armyjammer_.Get(index);
}
inline void DB_WeaponCenter::set_armyjammer(int index, ::google::protobuf::int32 value) {
  armyjammer_.Set(index, value);
}
inline void DB_WeaponCenter::add_armyjammer(::google::protobuf::int32 value) {
  armyjammer_.Add(value);
}

// -------------------------------------------------------------------

// DB_Jammer

// optional int32 id = 1 [default = 0];
inline bool DB_Jammer::has_id() const {
  return _has_bit(0);
}
inline void DB_Jammer::clear_id() {
  id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Jammer::id() const {
  return id_;
}
inline void DB_Jammer::set_id(::google::protobuf::int32 value) {
  _set_bit(0);
  id_ = value;
}

// optional int32 jammerID = 2 [default = 0];
inline bool DB_Jammer::has_jammerid() const {
  return _has_bit(1);
}
inline void DB_Jammer::clear_jammerid() {
  jammerid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Jammer::jammerid() const {
  return jammerid_;
}
inline void DB_Jammer::set_jammerid(::google::protobuf::int32 value) {
  _set_bit(1);
  jammerid_ = value;
}

// optional int32 level = 3 [default = 0];
inline bool DB_Jammer::has_level() const {
  return _has_bit(2);
}
inline void DB_Jammer::clear_level() {
  level_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Jammer::level() const {
  return level_;
}
inline void DB_Jammer::set_level(::google::protobuf::int32 value) {
  _set_bit(2);
  level_ = value;
}

// optional bool bLock = 4 [default = false];
inline bool DB_Jammer::has_block() const {
  return _has_bit(3);
}
inline void DB_Jammer::clear_block() {
  block_ = false;
  _clear_bit(3);
}
inline bool DB_Jammer::block() const {
  return block_;
}
inline void DB_Jammer::set_block(bool value) {
  _set_bit(3);
  block_ = value;
}

// optional int32 exp = 5 [default = 0];
inline bool DB_Jammer::has_exp() const {
  return _has_bit(4);
}
inline void DB_Jammer::clear_exp() {
  exp_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_Jammer::exp() const {
  return exp_;
}
inline void DB_Jammer::set_exp(::google::protobuf::int32 value) {
  _set_bit(4);
  exp_ = value;
}

// optional int32 bagType = 6 [default = 0];
inline bool DB_Jammer::has_bagtype() const {
  return _has_bit(5);
}
inline void DB_Jammer::clear_bagtype() {
  bagtype_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_Jammer::bagtype() const {
  return bagtype_;
}
inline void DB_Jammer::set_bagtype(::google::protobuf::int32 value) {
  _set_bit(5);
  bagtype_ = value;
}

// -------------------------------------------------------------------

// DB_WeaponExtraWpcInfo

// optional int32 extraBaseComNum = 1 [default = 0];
inline bool DB_WeaponExtraWpcInfo::has_extrabasecomnum() const {
  return _has_bit(0);
}
inline void DB_WeaponExtraWpcInfo::clear_extrabasecomnum() {
  extrabasecomnum_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_WeaponExtraWpcInfo::extrabasecomnum() const {
  return extrabasecomnum_;
}
inline void DB_WeaponExtraWpcInfo::set_extrabasecomnum(::google::protobuf::int32 value) {
  _set_bit(0);
  extrabasecomnum_ = value;
}

// optional int32 extraArmyComNum = 2 [default = 0];
inline bool DB_WeaponExtraWpcInfo::has_extraarmycomnum() const {
  return _has_bit(1);
}
inline void DB_WeaponExtraWpcInfo::clear_extraarmycomnum() {
  extraarmycomnum_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_WeaponExtraWpcInfo::extraarmycomnum() const {
  return extraarmycomnum_;
}
inline void DB_WeaponExtraWpcInfo::set_extraarmycomnum(::google::protobuf::int32 value) {
  _set_bit(1);
  extraarmycomnum_ = value;
}

// optional int32 extraTankComNum = 3 [default = 0];
inline bool DB_WeaponExtraWpcInfo::has_extratankcomnum() const {
  return _has_bit(2);
}
inline void DB_WeaponExtraWpcInfo::clear_extratankcomnum() {
  extratankcomnum_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_WeaponExtraWpcInfo::extratankcomnum() const {
  return extratankcomnum_;
}
inline void DB_WeaponExtraWpcInfo::set_extratankcomnum(::google::protobuf::int32 value) {
  _set_bit(2);
  extratankcomnum_ = value;
}

// optional int32 extraPlaneComNum = 4 [default = 0];
inline bool DB_WeaponExtraWpcInfo::has_extraplanecomnum() const {
  return _has_bit(3);
}
inline void DB_WeaponExtraWpcInfo::clear_extraplanecomnum() {
  extraplanecomnum_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_WeaponExtraWpcInfo::extraplanecomnum() const {
  return extraplanecomnum_;
}
inline void DB_WeaponExtraWpcInfo::set_extraplanecomnum(::google::protobuf::int32 value) {
  _set_bit(3);
  extraplanecomnum_ = value;
}

// optional int32 extraHeroComNum = 5 [default = 0];
inline bool DB_WeaponExtraWpcInfo::has_extraherocomnum() const {
  return _has_bit(4);
}
inline void DB_WeaponExtraWpcInfo::clear_extraherocomnum() {
  extraherocomnum_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_WeaponExtraWpcInfo::extraherocomnum() const {
  return extraherocomnum_;
}
inline void DB_WeaponExtraWpcInfo::set_extraherocomnum(::google::protobuf::int32 value) {
  _set_bit(4);
  extraherocomnum_ = value;
}

// -------------------------------------------------------------------

// DB_WeaponExtraEmblemInfo

// optional int32 earthEmblemCnt = 1 [default = 0];
inline bool DB_WeaponExtraEmblemInfo::has_earthemblemcnt() const {
  return _has_bit(0);
}
inline void DB_WeaponExtraEmblemInfo::clear_earthemblemcnt() {
  earthemblemcnt_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_WeaponExtraEmblemInfo::earthemblemcnt() const {
  return earthemblemcnt_;
}
inline void DB_WeaponExtraEmblemInfo::set_earthemblemcnt(::google::protobuf::int32 value) {
  _set_bit(0);
  earthemblemcnt_ = value;
}

// optional int32 airEmblemCnt = 2 [default = 0];
inline bool DB_WeaponExtraEmblemInfo::has_airemblemcnt() const {
  return _has_bit(1);
}
inline void DB_WeaponExtraEmblemInfo::clear_airemblemcnt() {
  airemblemcnt_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_WeaponExtraEmblemInfo::airemblemcnt() const {
  return airemblemcnt_;
}
inline void DB_WeaponExtraEmblemInfo::set_airemblemcnt(::google::protobuf::int32 value) {
  _set_bit(1);
  airemblemcnt_ = value;
}

// optional int32 baseEmblemCnt = 3 [default = 0];
inline bool DB_WeaponExtraEmblemInfo::has_baseemblemcnt() const {
  return _has_bit(2);
}
inline void DB_WeaponExtraEmblemInfo::clear_baseemblemcnt() {
  baseemblemcnt_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_WeaponExtraEmblemInfo::baseemblemcnt() const {
  return baseemblemcnt_;
}
inline void DB_WeaponExtraEmblemInfo::set_baseemblemcnt(::google::protobuf::int32 value) {
  _set_bit(2);
  baseemblemcnt_ = value;
}

// optional int32 lasertowerEmblemCnt = 4 [default = 0];
inline bool DB_WeaponExtraEmblemInfo::has_lasertoweremblemcnt() const {
  return _has_bit(3);
}
inline void DB_WeaponExtraEmblemInfo::clear_lasertoweremblemcnt() {
  lasertoweremblemcnt_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_WeaponExtraEmblemInfo::lasertoweremblemcnt() const {
  return lasertoweremblemcnt_;
}
inline void DB_WeaponExtraEmblemInfo::set_lasertoweremblemcnt(::google::protobuf::int32 value) {
  _set_bit(3);
  lasertoweremblemcnt_ = value;
}

// optional int32 giantcanonEmblemCnt = 5 [default = 0];
inline bool DB_WeaponExtraEmblemInfo::has_giantcanonemblemcnt() const {
  return _has_bit(4);
}
inline void DB_WeaponExtraEmblemInfo::clear_giantcanonemblemcnt() {
  giantcanonemblemcnt_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_WeaponExtraEmblemInfo::giantcanonemblemcnt() const {
  return giantcanonemblemcnt_;
}
inline void DB_WeaponExtraEmblemInfo::set_giantcanonemblemcnt(::google::protobuf::int32 value) {
  _set_bit(4);
  giantcanonemblemcnt_ = value;
}

// -------------------------------------------------------------------

// DB_CaptureBase

// optional int64 baseID = 1 [default = 0];
inline bool DB_CaptureBase::has_baseid() const {
  return _has_bit(0);
}
inline void DB_CaptureBase::clear_baseid() {
  baseid_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 DB_CaptureBase::baseid() const {
  return baseid_;
}
inline void DB_CaptureBase::set_baseid(::google::protobuf::int64 value) {
  _set_bit(0);
  baseid_ = value;
}

// optional string name = 2;
inline bool DB_CaptureBase::has_name() const {
  return _has_bit(1);
}
inline void DB_CaptureBase::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& DB_CaptureBase::name() const {
  return *name_;
}
inline void DB_CaptureBase::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DB_CaptureBase::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DB_CaptureBase::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_CaptureBase::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional string pic = 3;
inline bool DB_CaptureBase::has_pic() const {
  return _has_bit(2);
}
inline void DB_CaptureBase::clear_pic() {
  if (pic_ != &_default_pic_) {
    pic_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& DB_CaptureBase::pic() const {
  return *pic_;
}
inline void DB_CaptureBase::set_pic(const ::std::string& value) {
  _set_bit(2);
  if (pic_ == &_default_pic_) {
    pic_ = new ::std::string;
  }
  pic_->assign(value);
}
inline void DB_CaptureBase::set_pic(const char* value) {
  _set_bit(2);
  if (pic_ == &_default_pic_) {
    pic_ = new ::std::string;
  }
  pic_->assign(value);
}
inline void DB_CaptureBase::set_pic(const char* value, size_t size) {
  _set_bit(2);
  if (pic_ == &_default_pic_) {
    pic_ = new ::std::string;
  }
  pic_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_CaptureBase::mutable_pic() {
  _set_bit(2);
  if (pic_ == &_default_pic_) {
    pic_ = new ::std::string;
  }
  return pic_;
}

// optional int32 level = 4 [default = 0];
inline bool DB_CaptureBase::has_level() const {
  return _has_bit(3);
}
inline void DB_CaptureBase::clear_level() {
  level_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_CaptureBase::level() const {
  return level_;
}
inline void DB_CaptureBase::set_level(::google::protobuf::int32 value) {
  _set_bit(3);
  level_ = value;
}

// optional int32 finishCaptureTm = 5 [default = 0];
inline bool DB_CaptureBase::has_finishcapturetm() const {
  return _has_bit(4);
}
inline void DB_CaptureBase::clear_finishcapturetm() {
  finishcapturetm_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_CaptureBase::finishcapturetm() const {
  return finishcapturetm_;
}
inline void DB_CaptureBase::set_finishcapturetm(::google::protobuf::int32 value) {
  _set_bit(4);
  finishcapturetm_ = value;
}

// optional int32 srcType = 6 [default = 0];
inline bool DB_CaptureBase::has_srctype() const {
  return _has_bit(5);
}
inline void DB_CaptureBase::clear_srctype() {
  srctype_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_CaptureBase::srctype() const {
  return srctype_;
}
inline void DB_CaptureBase::set_srctype(::google::protobuf::int32 value) {
  _set_bit(5);
  srctype_ = value;
}

// optional int32 pickResTime = 7 [default = 0];
inline bool DB_CaptureBase::has_pickrestime() const {
  return _has_bit(6);
}
inline void DB_CaptureBase::clear_pickrestime() {
  pickrestime_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_CaptureBase::pickrestime() const {
  return pickrestime_;
}
inline void DB_CaptureBase::set_pickrestime(::google::protobuf::int32 value) {
  _set_bit(6);
  pickrestime_ = value;
}

// optional bool lossUser = 8 [default = false];
inline bool DB_CaptureBase::has_lossuser() const {
  return _has_bit(7);
}
inline void DB_CaptureBase::clear_lossuser() {
  lossuser_ = false;
  _clear_bit(7);
}
inline bool DB_CaptureBase::lossuser() const {
  return lossuser_;
}
inline void DB_CaptureBase::set_lossuser(bool value) {
  _set_bit(7);
  lossuser_ = value;
}

// -------------------------------------------------------------------

// DB_SlaveRoom

// optional int32 dayRescueCnt = 1 [default = 0];
inline bool DB_SlaveRoom::has_dayrescuecnt() const {
  return _has_bit(0);
}
inline void DB_SlaveRoom::clear_dayrescuecnt() {
  dayrescuecnt_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_SlaveRoom::dayrescuecnt() const {
  return dayrescuecnt_;
}
inline void DB_SlaveRoom::set_dayrescuecnt(::google::protobuf::int32 value) {
  _set_bit(0);
  dayrescuecnt_ = value;
}

// optional int32 dayCapturedCnt = 2 [default = 0];
inline bool DB_SlaveRoom::has_daycapturedcnt() const {
  return _has_bit(1);
}
inline void DB_SlaveRoom::clear_daycapturedcnt() {
  daycapturedcnt_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_SlaveRoom::daycapturedcnt() const {
  return daycapturedcnt_;
}
inline void DB_SlaveRoom::set_daycapturedcnt(::google::protobuf::int32 value) {
  _set_bit(1);
  daycapturedcnt_ = value;
}

// optional .DB_CaptureBase capturedInfo = 3;
inline bool DB_SlaveRoom::has_capturedinfo() const {
  return _has_bit(2);
}
inline void DB_SlaveRoom::clear_capturedinfo() {
  if (capturedinfo_ != NULL) capturedinfo_->::DB_CaptureBase::Clear();
  _clear_bit(2);
}
inline const ::DB_CaptureBase& DB_SlaveRoom::capturedinfo() const {
  return capturedinfo_ != NULL ? *capturedinfo_ : *default_instance_->capturedinfo_;
}
inline ::DB_CaptureBase* DB_SlaveRoom::mutable_capturedinfo() {
  _set_bit(2);
  if (capturedinfo_ == NULL) capturedinfo_ = new ::DB_CaptureBase;
  return capturedinfo_;
}

// repeated .DB_CaptureBase captureBase = 4;
inline int DB_SlaveRoom::capturebase_size() const {
  return capturebase_.size();
}
inline void DB_SlaveRoom::clear_capturebase() {
  capturebase_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_CaptureBase >&
DB_SlaveRoom::capturebase() const {
  return capturebase_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_CaptureBase >*
DB_SlaveRoom::mutable_capturebase() {
  return &capturebase_;
}
inline const ::DB_CaptureBase& DB_SlaveRoom::capturebase(int index) const {
  return capturebase_.Get(index);
}
inline ::DB_CaptureBase* DB_SlaveRoom::mutable_capturebase(int index) {
  return capturebase_.Mutable(index);
}
inline ::DB_CaptureBase* DB_SlaveRoom::add_capturebase() {
  return capturebase_.Add();
}

// optional int32 prcMedal = 5 [default = 0];
inline bool DB_SlaveRoom::has_prcmedal() const {
  return _has_bit(4);
}
inline void DB_SlaveRoom::clear_prcmedal() {
  prcmedal_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_SlaveRoom::prcmedal() const {
  return prcmedal_;
}
inline void DB_SlaveRoom::set_prcmedal(::google::protobuf::int32 value) {
  _set_bit(4);
  prcmedal_ = value;
}

// optional int32 prcOil = 6 [default = 0];
inline bool DB_SlaveRoom::has_prcoil() const {
  return _has_bit(5);
}
inline void DB_SlaveRoom::clear_prcoil() {
  prcoil_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_SlaveRoom::prcoil() const {
  return prcoil_;
}
inline void DB_SlaveRoom::set_prcoil(::google::protobuf::int32 value) {
  _set_bit(5);
  prcoil_ = value;
}

// optional int32 prcHonor = 7 [default = 0];
inline bool DB_SlaveRoom::has_prchonor() const {
  return _has_bit(6);
}
inline void DB_SlaveRoom::clear_prchonor() {
  prchonor_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_SlaveRoom::prchonor() const {
  return prchonor_;
}
inline void DB_SlaveRoom::set_prchonor(::google::protobuf::int32 value) {
  _set_bit(6);
  prchonor_ = value;
}

// optional int32 prcFeats = 8 [default = 0];
inline bool DB_SlaveRoom::has_prcfeats() const {
  return _has_bit(7);
}
inline void DB_SlaveRoom::clear_prcfeats() {
  prcfeats_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_SlaveRoom::prcfeats() const {
  return prcfeats_;
}
inline void DB_SlaveRoom::set_prcfeats(::google::protobuf::int32 value) {
  _set_bit(7);
  prcfeats_ = value;
}

// -------------------------------------------------------------------

// DB_NPCActive

// repeated int32 dayWinNPCID = 1;
inline int DB_NPCActive::daywinnpcid_size() const {
  return daywinnpcid_.size();
}
inline void DB_NPCActive::clear_daywinnpcid() {
  daywinnpcid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_NPCActive::daywinnpcid() const {
  return daywinnpcid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_NPCActive::mutable_daywinnpcid() {
  return &daywinnpcid_;
}
inline ::google::protobuf::int32 DB_NPCActive::daywinnpcid(int index) const {
  return daywinnpcid_.Get(index);
}
inline void DB_NPCActive::set_daywinnpcid(int index, ::google::protobuf::int32 value) {
  daywinnpcid_.Set(index, value);
}
inline void DB_NPCActive::add_daywinnpcid(::google::protobuf::int32 value) {
  daywinnpcid_.Add(value);
}

// repeated int32 dayLostNPCID = 2;
inline int DB_NPCActive::daylostnpcid_size() const {
  return daylostnpcid_.size();
}
inline void DB_NPCActive::clear_daylostnpcid() {
  daylostnpcid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_NPCActive::daylostnpcid() const {
  return daylostnpcid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_NPCActive::mutable_daylostnpcid() {
  return &daylostnpcid_;
}
inline ::google::protobuf::int32 DB_NPCActive::daylostnpcid(int index) const {
  return daylostnpcid_.Get(index);
}
inline void DB_NPCActive::set_daylostnpcid(int index, ::google::protobuf::int32 value) {
  daylostnpcid_.Set(index, value);
}
inline void DB_NPCActive::add_daylostnpcid(::google::protobuf::int32 value) {
  daylostnpcid_.Add(value);
}

// repeated int32 dayGetItemID = 3;
inline int DB_NPCActive::daygetitemid_size() const {
  return daygetitemid_.size();
}
inline void DB_NPCActive::clear_daygetitemid() {
  daygetitemid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_NPCActive::daygetitemid() const {
  return daygetitemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_NPCActive::mutable_daygetitemid() {
  return &daygetitemid_;
}
inline ::google::protobuf::int32 DB_NPCActive::daygetitemid(int index) const {
  return daygetitemid_.Get(index);
}
inline void DB_NPCActive::set_daygetitemid(int index, ::google::protobuf::int32 value) {
  daygetitemid_.Set(index, value);
}
inline void DB_NPCActive::add_daygetitemid(::google::protobuf::int32 value) {
  daygetitemid_.Add(value);
}

// -------------------------------------------------------------------

// DB_BaseDefNPC

// optional int32 bestScore = 1;
inline bool DB_BaseDefNPC::has_bestscore() const {
  return _has_bit(0);
}
inline void DB_BaseDefNPC::clear_bestscore() {
  bestscore_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_BaseDefNPC::bestscore() const {
  return bestscore_;
}
inline void DB_BaseDefNPC::set_bestscore(::google::protobuf::int32 value) {
  _set_bit(0);
  bestscore_ = value;
}

// optional int32 dayDefCnt = 2;
inline bool DB_BaseDefNPC::has_daydefcnt() const {
  return _has_bit(1);
}
inline void DB_BaseDefNPC::clear_daydefcnt() {
  daydefcnt_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_BaseDefNPC::daydefcnt() const {
  return daydefcnt_;
}
inline void DB_BaseDefNPC::set_daydefcnt(::google::protobuf::int32 value) {
  _set_bit(1);
  daydefcnt_ = value;
}

// optional int32 leftStakeCnt = 3;
inline bool DB_BaseDefNPC::has_leftstakecnt() const {
  return _has_bit(2);
}
inline void DB_BaseDefNPC::clear_leftstakecnt() {
  leftstakecnt_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_BaseDefNPC::leftstakecnt() const {
  return leftstakecnt_;
}
inline void DB_BaseDefNPC::set_leftstakecnt(::google::protobuf::int32 value) {
  _set_bit(2);
  leftstakecnt_ = value;
}

// repeated int32 showItemLst = 4;
inline int DB_BaseDefNPC::showitemlst_size() const {
  return showitemlst_.size();
}
inline void DB_BaseDefNPC::clear_showitemlst() {
  showitemlst_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BaseDefNPC::showitemlst() const {
  return showitemlst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BaseDefNPC::mutable_showitemlst() {
  return &showitemlst_;
}
inline ::google::protobuf::int32 DB_BaseDefNPC::showitemlst(int index) const {
  return showitemlst_.Get(index);
}
inline void DB_BaseDefNPC::set_showitemlst(int index, ::google::protobuf::int32 value) {
  showitemlst_.Set(index, value);
}
inline void DB_BaseDefNPC::add_showitemlst(::google::protobuf::int32 value) {
  showitemlst_.Add(value);
}

// repeated int32 showItemCnt = 5;
inline int DB_BaseDefNPC::showitemcnt_size() const {
  return showitemcnt_.size();
}
inline void DB_BaseDefNPC::clear_showitemcnt() {
  showitemcnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BaseDefNPC::showitemcnt() const {
  return showitemcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BaseDefNPC::mutable_showitemcnt() {
  return &showitemcnt_;
}
inline ::google::protobuf::int32 DB_BaseDefNPC::showitemcnt(int index) const {
  return showitemcnt_.Get(index);
}
inline void DB_BaseDefNPC::set_showitemcnt(int index, ::google::protobuf::int32 value) {
  showitemcnt_.Set(index, value);
}
inline void DB_BaseDefNPC::add_showitemcnt(::google::protobuf::int32 value) {
  showitemcnt_.Add(value);
}

// repeated int32 stakeItemLst = 6;
inline int DB_BaseDefNPC::stakeitemlst_size() const {
  return stakeitemlst_.size();
}
inline void DB_BaseDefNPC::clear_stakeitemlst() {
  stakeitemlst_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BaseDefNPC::stakeitemlst() const {
  return stakeitemlst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BaseDefNPC::mutable_stakeitemlst() {
  return &stakeitemlst_;
}
inline ::google::protobuf::int32 DB_BaseDefNPC::stakeitemlst(int index) const {
  return stakeitemlst_.Get(index);
}
inline void DB_BaseDefNPC::set_stakeitemlst(int index, ::google::protobuf::int32 value) {
  stakeitemlst_.Set(index, value);
}
inline void DB_BaseDefNPC::add_stakeitemlst(::google::protobuf::int32 value) {
  stakeitemlst_.Add(value);
}

// repeated int32 stakeItemCnt = 7;
inline int DB_BaseDefNPC::stakeitemcnt_size() const {
  return stakeitemcnt_.size();
}
inline void DB_BaseDefNPC::clear_stakeitemcnt() {
  stakeitemcnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BaseDefNPC::stakeitemcnt() const {
  return stakeitemcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BaseDefNPC::mutable_stakeitemcnt() {
  return &stakeitemcnt_;
}
inline ::google::protobuf::int32 DB_BaseDefNPC::stakeitemcnt(int index) const {
  return stakeitemcnt_.Get(index);
}
inline void DB_BaseDefNPC::set_stakeitemcnt(int index, ::google::protobuf::int32 value) {
  stakeitemcnt_.Set(index, value);
}
inline void DB_BaseDefNPC::add_stakeitemcnt(::google::protobuf::int32 value) {
  stakeitemcnt_.Add(value);
}

// optional int32 lastNPCID = 8;
inline bool DB_BaseDefNPC::has_lastnpcid() const {
  return _has_bit(7);
}
inline void DB_BaseDefNPC::clear_lastnpcid() {
  lastnpcid_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_BaseDefNPC::lastnpcid() const {
  return lastnpcid_;
}
inline void DB_BaseDefNPC::set_lastnpcid(::google::protobuf::int32 value) {
  _set_bit(7);
  lastnpcid_ = value;
}

// -------------------------------------------------------------------

// DB_AdmiralSkill

// optional int32 id = 1 [default = 0];
inline bool DB_AdmiralSkill::has_id() const {
  return _has_bit(0);
}
inline void DB_AdmiralSkill::clear_id() {
  id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_AdmiralSkill::id() const {
  return id_;
}
inline void DB_AdmiralSkill::set_id(::google::protobuf::int32 value) {
  _set_bit(0);
  id_ = value;
}

// optional int32 skillID = 2 [default = 0];
inline bool DB_AdmiralSkill::has_skillid() const {
  return _has_bit(1);
}
inline void DB_AdmiralSkill::clear_skillid() {
  skillid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_AdmiralSkill::skillid() const {
  return skillid_;
}
inline void DB_AdmiralSkill::set_skillid(::google::protobuf::int32 value) {
  _set_bit(1);
  skillid_ = value;
}

// optional bool initSkill = 3 [default = false];
inline bool DB_AdmiralSkill::has_initskill() const {
  return _has_bit(2);
}
inline void DB_AdmiralSkill::clear_initskill() {
  initskill_ = false;
  _clear_bit(2);
}
inline bool DB_AdmiralSkill::initskill() const {
  return initskill_;
}
inline void DB_AdmiralSkill::set_initskill(bool value) {
  _set_bit(2);
  initskill_ = value;
}

// optional int32 level = 4 [default = 1];
inline bool DB_AdmiralSkill::has_level() const {
  return _has_bit(3);
}
inline void DB_AdmiralSkill::clear_level() {
  level_ = 1;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_AdmiralSkill::level() const {
  return level_;
}
inline void DB_AdmiralSkill::set_level(::google::protobuf::int32 value) {
  _set_bit(3);
  level_ = value;
}

// optional int32 exp = 5 [default = 0];
inline bool DB_AdmiralSkill::has_exp() const {
  return _has_bit(4);
}
inline void DB_AdmiralSkill::clear_exp() {
  exp_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_AdmiralSkill::exp() const {
  return exp_;
}
inline void DB_AdmiralSkill::set_exp(::google::protobuf::int32 value) {
  _set_bit(4);
  exp_ = value;
}

// -------------------------------------------------------------------

// DB_AdmiralSkillData

// optional int32 skillID = 1 [default = 0];
inline bool DB_AdmiralSkillData::has_skillid() const {
  return _has_bit(0);
}
inline void DB_AdmiralSkillData::clear_skillid() {
  skillid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_AdmiralSkillData::skillid() const {
  return skillid_;
}
inline void DB_AdmiralSkillData::set_skillid(::google::protobuf::int32 value) {
  _set_bit(0);
  skillid_ = value;
}

// optional int32 level = 2 [default = 1];
inline bool DB_AdmiralSkillData::has_level() const {
  return _has_bit(1);
}
inline void DB_AdmiralSkillData::clear_level() {
  level_ = 1;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_AdmiralSkillData::level() const {
  return level_;
}
inline void DB_AdmiralSkillData::set_level(::google::protobuf::int32 value) {
  _set_bit(1);
  level_ = value;
}

// optional int32 exp = 3 [default = 0];
inline bool DB_AdmiralSkillData::has_exp() const {
  return _has_bit(2);
}
inline void DB_AdmiralSkillData::clear_exp() {
  exp_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_AdmiralSkillData::exp() const {
  return exp_;
}
inline void DB_AdmiralSkillData::set_exp(::google::protobuf::int32 value) {
  _set_bit(2);
  exp_ = value;
}

// -------------------------------------------------------------------

// DB_AdmiralTrainLV

// optional int32 level = 1 [default = 0];
inline bool DB_AdmiralTrainLV::has_level() const {
  return _has_bit(0);
}
inline void DB_AdmiralTrainLV::clear_level() {
  level_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_AdmiralTrainLV::level() const {
  return level_;
}
inline void DB_AdmiralTrainLV::set_level(::google::protobuf::int32 value) {
  _set_bit(0);
  level_ = value;
}

// optional int32 cnt = 2 [default = 0];
inline bool DB_AdmiralTrainLV::has_cnt() const {
  return _has_bit(1);
}
inline void DB_AdmiralTrainLV::clear_cnt() {
  cnt_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_AdmiralTrainLV::cnt() const {
  return cnt_;
}
inline void DB_AdmiralTrainLV::set_cnt(::google::protobuf::int32 value) {
  _set_bit(1);
  cnt_ = value;
}

// -------------------------------------------------------------------

// DB_AdmiralLetter

// optional int32 letterID = 1 [default = 0];
inline bool DB_AdmiralLetter::has_letterid() const {
  return _has_bit(0);
}
inline void DB_AdmiralLetter::clear_letterid() {
  letterid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_AdmiralLetter::letterid() const {
  return letterid_;
}
inline void DB_AdmiralLetter::set_letterid(::google::protobuf::int32 value) {
  _set_bit(0);
  letterid_ = value;
}

// optional int32 count = 2 [default = 0];
inline bool DB_AdmiralLetter::has_count() const {
  return _has_bit(1);
}
inline void DB_AdmiralLetter::clear_count() {
  count_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_AdmiralLetter::count() const {
  return count_;
}
inline void DB_AdmiralLetter::set_count(::google::protobuf::int32 value) {
  _set_bit(1);
  count_ = value;
}

// -------------------------------------------------------------------

// DB_AdmiralEquip

// repeated int32 equipID = 1;
inline int DB_AdmiralEquip::equipid_size() const {
  return equipid_.size();
}
inline void DB_AdmiralEquip::clear_equipid() {
  equipid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_AdmiralEquip::equipid() const {
  return equipid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_AdmiralEquip::mutable_equipid() {
  return &equipid_;
}
inline ::google::protobuf::int32 DB_AdmiralEquip::equipid(int index) const {
  return equipid_.Get(index);
}
inline void DB_AdmiralEquip::set_equipid(int index, ::google::protobuf::int32 value) {
  equipid_.Set(index, value);
}
inline void DB_AdmiralEquip::add_equipid(::google::protobuf::int32 value) {
  equipid_.Add(value);
}

// -------------------------------------------------------------------

// DB_Admiral

// optional int32 admiralId = 1 [default = 0];
inline bool DB_Admiral::has_admiralid() const {
  return _has_bit(0);
}
inline void DB_Admiral::clear_admiralid() {
  admiralid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Admiral::admiralid() const {
  return admiralid_;
}
inline void DB_Admiral::set_admiralid(::google::protobuf::int32 value) {
  _set_bit(0);
  admiralid_ = value;
}

// optional int32 level = 2 [default = 0];
inline bool DB_Admiral::has_level() const {
  return _has_bit(1);
}
inline void DB_Admiral::clear_level() {
  level_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Admiral::level() const {
  return level_;
}
inline void DB_Admiral::set_level(::google::protobuf::int32 value) {
  _set_bit(1);
  level_ = value;
}

// optional int32 exp = 3 [default = 0];
inline bool DB_Admiral::has_exp() const {
  return _has_bit(2);
}
inline void DB_Admiral::clear_exp() {
  exp_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Admiral::exp() const {
  return exp_;
}
inline void DB_Admiral::set_exp(::google::protobuf::int32 value) {
  _set_bit(2);
  exp_ = value;
}

// optional int32 useType = 4 [default = 0];
inline bool DB_Admiral::has_usetype() const {
  return _has_bit(3);
}
inline void DB_Admiral::clear_usetype() {
  usetype_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Admiral::usetype() const {
  return usetype_;
}
inline void DB_Admiral::set_usetype(::google::protobuf::int32 value) {
  _set_bit(3);
  usetype_ = value;
}

// optional int32 addAtk = 5 [default = 0];
inline bool DB_Admiral::has_addatk() const {
  return _has_bit(4);
}
inline void DB_Admiral::clear_addatk() {
  addatk_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_Admiral::addatk() const {
  return addatk_;
}
inline void DB_Admiral::set_addatk(::google::protobuf::int32 value) {
  _set_bit(4);
  addatk_ = value;
}

// optional int32 addHP = 6 [default = 0];
inline bool DB_Admiral::has_addhp() const {
  return _has_bit(5);
}
inline void DB_Admiral::clear_addhp() {
  addhp_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_Admiral::addhp() const {
  return addhp_;
}
inline void DB_Admiral::set_addhp(::google::protobuf::int32 value) {
  _set_bit(5);
  addhp_ = value;
}

// optional int32 addDef = 7 [default = 0];
inline bool DB_Admiral::has_adddef() const {
  return _has_bit(6);
}
inline void DB_Admiral::clear_adddef() {
  adddef_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_Admiral::adddef() const {
  return adddef_;
}
inline void DB_Admiral::set_adddef(::google::protobuf::int32 value) {
  _set_bit(6);
  adddef_ = value;
}

// optional int32 addCrt = 8 [default = 0];
inline bool DB_Admiral::has_addcrt() const {
  return _has_bit(7);
}
inline void DB_Admiral::clear_addcrt() {
  addcrt_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_Admiral::addcrt() const {
  return addcrt_;
}
inline void DB_Admiral::set_addcrt(::google::protobuf::int32 value) {
  _set_bit(7);
  addcrt_ = value;
}

// optional int32 finalAtk = 9 [default = 0];
inline bool DB_Admiral::has_finalatk() const {
  return _has_bit(8);
}
inline void DB_Admiral::clear_finalatk() {
  finalatk_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_Admiral::finalatk() const {
  return finalatk_;
}
inline void DB_Admiral::set_finalatk(::google::protobuf::int32 value) {
  _set_bit(8);
  finalatk_ = value;
}

// optional int32 finalHP = 10 [default = 0];
inline bool DB_Admiral::has_finalhp() const {
  return _has_bit(9);
}
inline void DB_Admiral::clear_finalhp() {
  finalhp_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 DB_Admiral::finalhp() const {
  return finalhp_;
}
inline void DB_Admiral::set_finalhp(::google::protobuf::int32 value) {
  _set_bit(9);
  finalhp_ = value;
}

// optional int32 finalDef = 11 [default = 0];
inline bool DB_Admiral::has_finaldef() const {
  return _has_bit(10);
}
inline void DB_Admiral::clear_finaldef() {
  finaldef_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 DB_Admiral::finaldef() const {
  return finaldef_;
}
inline void DB_Admiral::set_finaldef(::google::protobuf::int32 value) {
  _set_bit(10);
  finaldef_ = value;
}

// optional int32 finalCrt = 12 [default = 0];
inline bool DB_Admiral::has_finalcrt() const {
  return _has_bit(11);
}
inline void DB_Admiral::clear_finalcrt() {
  finalcrt_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 DB_Admiral::finalcrt() const {
  return finalcrt_;
}
inline void DB_Admiral::set_finalcrt(::google::protobuf::int32 value) {
  _set_bit(11);
  finalcrt_ = value;
}

// repeated int32 skillID = 13;
inline int DB_Admiral::skillid_size() const {
  return skillid_.size();
}
inline void DB_Admiral::clear_skillid() {
  skillid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_Admiral::skillid() const {
  return skillid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_Admiral::mutable_skillid() {
  return &skillid_;
}
inline ::google::protobuf::int32 DB_Admiral::skillid(int index) const {
  return skillid_.Get(index);
}
inline void DB_Admiral::set_skillid(int index, ::google::protobuf::int32 value) {
  skillid_.Set(index, value);
}
inline void DB_Admiral::add_skillid(::google::protobuf::int32 value) {
  skillid_.Add(value);
}

// optional .DB_AdmiralTrainLV trainLV = 15;
inline bool DB_Admiral::has_trainlv() const {
  return _has_bit(13);
}
inline void DB_Admiral::clear_trainlv() {
  if (trainlv_ != NULL) trainlv_->::DB_AdmiralTrainLV::Clear();
  _clear_bit(13);
}
inline const ::DB_AdmiralTrainLV& DB_Admiral::trainlv() const {
  return trainlv_ != NULL ? *trainlv_ : *default_instance_->trainlv_;
}
inline ::DB_AdmiralTrainLV* DB_Admiral::mutable_trainlv() {
  _set_bit(13);
  if (trainlv_ == NULL) trainlv_ = new ::DB_AdmiralTrainLV;
  return trainlv_;
}

// optional int32 useSoulCnt = 16 [default = 0];
inline bool DB_Admiral::has_usesoulcnt() const {
  return _has_bit(14);
}
inline void DB_Admiral::clear_usesoulcnt() {
  usesoulcnt_ = 0;
  _clear_bit(14);
}
inline ::google::protobuf::int32 DB_Admiral::usesoulcnt() const {
  return usesoulcnt_;
}
inline void DB_Admiral::set_usesoulcnt(::google::protobuf::int32 value) {
  _set_bit(14);
  usesoulcnt_ = value;
}

// optional int32 score = 17 [default = 0];
inline bool DB_Admiral::has_score() const {
  return _has_bit(15);
}
inline void DB_Admiral::clear_score() {
  score_ = 0;
  _clear_bit(15);
}
inline ::google::protobuf::int32 DB_Admiral::score() const {
  return score_;
}
inline void DB_Admiral::set_score(::google::protobuf::int32 value) {
  _set_bit(15);
  score_ = value;
}

// optional .DB_AdmiralSkillData initSkill = 18;
inline bool DB_Admiral::has_initskill() const {
  return _has_bit(16);
}
inline void DB_Admiral::clear_initskill() {
  if (initskill_ != NULL) initskill_->::DB_AdmiralSkillData::Clear();
  _clear_bit(16);
}
inline const ::DB_AdmiralSkillData& DB_Admiral::initskill() const {
  return initskill_ != NULL ? *initskill_ : *default_instance_->initskill_;
}
inline ::DB_AdmiralSkillData* DB_Admiral::mutable_initskill() {
  _set_bit(16);
  if (initskill_ == NULL) initskill_ = new ::DB_AdmiralSkillData;
  return initskill_;
}

// optional .DB_AdmiralEquip equip = 19;
inline bool DB_Admiral::has_equip() const {
  return _has_bit(17);
}
inline void DB_Admiral::clear_equip() {
  if (equip_ != NULL) equip_->::DB_AdmiralEquip::Clear();
  _clear_bit(17);
}
inline const ::DB_AdmiralEquip& DB_Admiral::equip() const {
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
inline ::DB_AdmiralEquip* DB_Admiral::mutable_equip() {
  _set_bit(17);
  if (equip_ == NULL) equip_ = new ::DB_AdmiralEquip;
  return equip_;
}

// optional int32 buffTime = 20;
inline bool DB_Admiral::has_bufftime() const {
  return _has_bit(18);
}
inline void DB_Admiral::clear_bufftime() {
  bufftime_ = 0;
  _clear_bit(18);
}
inline ::google::protobuf::int32 DB_Admiral::bufftime() const {
  return bufftime_;
}
inline void DB_Admiral::set_bufftime(::google::protobuf::int32 value) {
  _set_bit(18);
  bufftime_ = value;
}

// repeated int32 medalhonorList = 21;
inline int DB_Admiral::medalhonorlist_size() const {
  return medalhonorlist_.size();
}
inline void DB_Admiral::clear_medalhonorlist() {
  medalhonorlist_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_Admiral::medalhonorlist() const {
  return medalhonorlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_Admiral::mutable_medalhonorlist() {
  return &medalhonorlist_;
}
inline ::google::protobuf::int32 DB_Admiral::medalhonorlist(int index) const {
  return medalhonorlist_.Get(index);
}
inline void DB_Admiral::set_medalhonorlist(int index, ::google::protobuf::int32 value) {
  medalhonorlist_.Set(index, value);
}
inline void DB_Admiral::add_medalhonorlist(::google::protobuf::int32 value) {
  medalhonorlist_.Add(value);
}

// -------------------------------------------------------------------

// DB_AdmiralInfo

// repeated .DB_Admiral admiral = 1;
inline int DB_AdmiralInfo::admiral_size() const {
  return admiral_.size();
}
inline void DB_AdmiralInfo::clear_admiral() {
  admiral_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_Admiral >&
DB_AdmiralInfo::admiral() const {
  return admiral_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_Admiral >*
DB_AdmiralInfo::mutable_admiral() {
  return &admiral_;
}
inline const ::DB_Admiral& DB_AdmiralInfo::admiral(int index) const {
  return admiral_.Get(index);
}
inline ::DB_Admiral* DB_AdmiralInfo::mutable_admiral(int index) {
  return admiral_.Mutable(index);
}
inline ::DB_Admiral* DB_AdmiralInfo::add_admiral() {
  return admiral_.Add();
}

// optional int32 soul = 2 [default = 0];
inline bool DB_AdmiralInfo::has_soul() const {
  return _has_bit(1);
}
inline void DB_AdmiralInfo::clear_soul() {
  soul_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_AdmiralInfo::soul() const {
  return soul_;
}
inline void DB_AdmiralInfo::set_soul(::google::protobuf::int32 value) {
  _set_bit(1);
  soul_ = value;
}

// optional bool hasSendAdmiral = 3 [default = false];
inline bool DB_AdmiralInfo::has_hassendadmiral() const {
  return _has_bit(2);
}
inline void DB_AdmiralInfo::clear_hassendadmiral() {
  hassendadmiral_ = false;
  _clear_bit(2);
}
inline bool DB_AdmiralInfo::hassendadmiral() const {
  return hassendadmiral_;
}
inline void DB_AdmiralInfo::set_hassendadmiral(bool value) {
  _set_bit(2);
  hassendadmiral_ = value;
}

// repeated int32 sendID = 4;
inline int DB_AdmiralInfo::sendid_size() const {
  return sendid_.size();
}
inline void DB_AdmiralInfo::clear_sendid() {
  sendid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_AdmiralInfo::sendid() const {
  return sendid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_AdmiralInfo::mutable_sendid() {
  return &sendid_;
}
inline ::google::protobuf::int32 DB_AdmiralInfo::sendid(int index) const {
  return sendid_.Get(index);
}
inline void DB_AdmiralInfo::set_sendid(int index, ::google::protobuf::int32 value) {
  sendid_.Set(index, value);
}
inline void DB_AdmiralInfo::add_sendid(::google::protobuf::int32 value) {
  sendid_.Add(value);
}

// optional bool hasCreditVisit = 5 [default = false];
inline bool DB_AdmiralInfo::has_hascreditvisit() const {
  return _has_bit(4);
}
inline void DB_AdmiralInfo::clear_hascreditvisit() {
  hascreditvisit_ = false;
  _clear_bit(4);
}
inline bool DB_AdmiralInfo::hascreditvisit() const {
  return hascreditvisit_;
}
inline void DB_AdmiralInfo::set_hascreditvisit(bool value) {
  _set_bit(4);
  hascreditvisit_ = value;
}

// repeated int32 freeVisitCnt = 6;
inline int DB_AdmiralInfo::freevisitcnt_size() const {
  return freevisitcnt_.size();
}
inline void DB_AdmiralInfo::clear_freevisitcnt() {
  freevisitcnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_AdmiralInfo::freevisitcnt() const {
  return freevisitcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_AdmiralInfo::mutable_freevisitcnt() {
  return &freevisitcnt_;
}
inline ::google::protobuf::int32 DB_AdmiralInfo::freevisitcnt(int index) const {
  return freevisitcnt_.Get(index);
}
inline void DB_AdmiralInfo::set_freevisitcnt(int index, ::google::protobuf::int32 value) {
  freevisitcnt_.Set(index, value);
}
inline void DB_AdmiralInfo::add_freevisitcnt(::google::protobuf::int32 value) {
  freevisitcnt_.Add(value);
}

// repeated int32 finishVisitTime = 7;
inline int DB_AdmiralInfo::finishvisittime_size() const {
  return finishvisittime_.size();
}
inline void DB_AdmiralInfo::clear_finishvisittime() {
  finishvisittime_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_AdmiralInfo::finishvisittime() const {
  return finishvisittime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_AdmiralInfo::mutable_finishvisittime() {
  return &finishvisittime_;
}
inline ::google::protobuf::int32 DB_AdmiralInfo::finishvisittime(int index) const {
  return finishvisittime_.Get(index);
}
inline void DB_AdmiralInfo::set_finishvisittime(int index, ::google::protobuf::int32 value) {
  finishvisittime_.Set(index, value);
}
inline void DB_AdmiralInfo::add_finishvisittime(::google::protobuf::int32 value) {
  finishvisittime_.Add(value);
}

// repeated .DB_AdmiralSkill skill = 8;
inline int DB_AdmiralInfo::skill_size() const {
  return skill_.size();
}
inline void DB_AdmiralInfo::clear_skill() {
  skill_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_AdmiralSkill >&
DB_AdmiralInfo::skill() const {
  return skill_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_AdmiralSkill >*
DB_AdmiralInfo::mutable_skill() {
  return &skill_;
}
inline const ::DB_AdmiralSkill& DB_AdmiralInfo::skill(int index) const {
  return skill_.Get(index);
}
inline ::DB_AdmiralSkill* DB_AdmiralInfo::mutable_skill(int index) {
  return skill_.Mutable(index);
}
inline ::DB_AdmiralSkill* DB_AdmiralInfo::add_skill() {
  return skill_.Add();
}

// repeated int32 collectLst = 9;
inline int DB_AdmiralInfo::collectlst_size() const {
  return collectlst_.size();
}
inline void DB_AdmiralInfo::clear_collectlst() {
  collectlst_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_AdmiralInfo::collectlst() const {
  return collectlst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_AdmiralInfo::mutable_collectlst() {
  return &collectlst_;
}
inline ::google::protobuf::int32 DB_AdmiralInfo::collectlst(int index) const {
  return collectlst_.Get(index);
}
inline void DB_AdmiralInfo::set_collectlst(int index, ::google::protobuf::int32 value) {
  collectlst_.Set(index, value);
}
inline void DB_AdmiralInfo::add_collectlst(::google::protobuf::int32 value) {
  collectlst_.Add(value);
}

// optional int32 shenjiangExchangeCnt = 10 [default = 0];
inline bool DB_AdmiralInfo::has_shenjiangexchangecnt() const {
  return _has_bit(9);
}
inline void DB_AdmiralInfo::clear_shenjiangexchangecnt() {
  shenjiangexchangecnt_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 DB_AdmiralInfo::shenjiangexchangecnt() const {
  return shenjiangexchangecnt_;
}
inline void DB_AdmiralInfo::set_shenjiangexchangecnt(::google::protobuf::int32 value) {
  _set_bit(9);
  shenjiangexchangecnt_ = value;
}

// repeated .DB_AdmiralLetter admiralletter = 11;
inline int DB_AdmiralInfo::admiralletter_size() const {
  return admiralletter_.size();
}
inline void DB_AdmiralInfo::clear_admiralletter() {
  admiralletter_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_AdmiralLetter >&
DB_AdmiralInfo::admiralletter() const {
  return admiralletter_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_AdmiralLetter >*
DB_AdmiralInfo::mutable_admiralletter() {
  return &admiralletter_;
}
inline const ::DB_AdmiralLetter& DB_AdmiralInfo::admiralletter(int index) const {
  return admiralletter_.Get(index);
}
inline ::DB_AdmiralLetter* DB_AdmiralInfo::mutable_admiralletter(int index) {
  return admiralletter_.Mutable(index);
}
inline ::DB_AdmiralLetter* DB_AdmiralInfo::add_admiralletter() {
  return admiralletter_.Add();
}

// -------------------------------------------------------------------

// DB_HeroLetter

// optional int32 letterID = 1 [default = 0];
inline bool DB_HeroLetter::has_letterid() const {
  return _has_bit(0);
}
inline void DB_HeroLetter::clear_letterid() {
  letterid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_HeroLetter::letterid() const {
  return letterid_;
}
inline void DB_HeroLetter::set_letterid(::google::protobuf::int32 value) {
  _set_bit(0);
  letterid_ = value;
}

// optional int32 count = 2 [default = 0];
inline bool DB_HeroLetter::has_count() const {
  return _has_bit(1);
}
inline void DB_HeroLetter::clear_count() {
  count_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_HeroLetter::count() const {
  return count_;
}
inline void DB_HeroLetter::set_count(::google::protobuf::int32 value) {
  _set_bit(1);
  count_ = value;
}

// -------------------------------------------------------------------

// DB_HeroSkillData

// optional int32 skillID = 1 [default = 0];
inline bool DB_HeroSkillData::has_skillid() const {
  return _has_bit(0);
}
inline void DB_HeroSkillData::clear_skillid() {
  skillid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_HeroSkillData::skillid() const {
  return skillid_;
}
inline void DB_HeroSkillData::set_skillid(::google::protobuf::int32 value) {
  _set_bit(0);
  skillid_ = value;
}

// optional int32 level = 2 [default = 1];
inline bool DB_HeroSkillData::has_level() const {
  return _has_bit(1);
}
inline void DB_HeroSkillData::clear_level() {
  level_ = 1;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_HeroSkillData::level() const {
  return level_;
}
inline void DB_HeroSkillData::set_level(::google::protobuf::int32 value) {
  _set_bit(1);
  level_ = value;
}

// -------------------------------------------------------------------

// DB_HeroAtkData

// optional int32 X = 2;
inline bool DB_HeroAtkData::has_x() const {
  return _has_bit(0);
}
inline void DB_HeroAtkData::clear_x() {
  x_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_HeroAtkData::x() const {
  return x_;
}
inline void DB_HeroAtkData::set_x(::google::protobuf::int32 value) {
  _set_bit(0);
  x_ = value;
}

// optional int32 Y = 3;
inline bool DB_HeroAtkData::has_y() const {
  return _has_bit(1);
}
inline void DB_HeroAtkData::clear_y() {
  y_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_HeroAtkData::y() const {
  return y_;
}
inline void DB_HeroAtkData::set_y(::google::protobuf::int32 value) {
  _set_bit(1);
  y_ = value;
}

// optional int32 angle = 4;
inline bool DB_HeroAtkData::has_angle() const {
  return _has_bit(2);
}
inline void DB_HeroAtkData::clear_angle() {
  angle_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_HeroAtkData::angle() const {
  return angle_;
}
inline void DB_HeroAtkData::set_angle(::google::protobuf::int32 value) {
  _set_bit(2);
  angle_ = value;
}

// optional int32 health = 5;
inline bool DB_HeroAtkData::has_health() const {
  return _has_bit(3);
}
inline void DB_HeroAtkData::clear_health() {
  health_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_HeroAtkData::health() const {
  return health_;
}
inline void DB_HeroAtkData::set_health(::google::protobuf::int32 value) {
  _set_bit(3);
  health_ = value;
}

// optional int32 stance = 6;
inline bool DB_HeroAtkData::has_stance() const {
  return _has_bit(4);
}
inline void DB_HeroAtkData::clear_stance() {
  stance_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_HeroAtkData::stance() const {
  return stance_;
}
inline void DB_HeroAtkData::set_stance(::google::protobuf::int32 value) {
  _set_bit(4);
  stance_ = value;
}

// -------------------------------------------------------------------

// DB_Hero

// optional int32 heroId = 1 [default = 0];
inline bool DB_Hero::has_heroid() const {
  return _has_bit(0);
}
inline void DB_Hero::clear_heroid() {
  heroid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Hero::heroid() const {
  return heroid_;
}
inline void DB_Hero::set_heroid(::google::protobuf::int32 value) {
  _set_bit(0);
  heroid_ = value;
}

// optional int32 level = 2 [default = 0];
inline bool DB_Hero::has_level() const {
  return _has_bit(1);
}
inline void DB_Hero::clear_level() {
  level_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Hero::level() const {
  return level_;
}
inline void DB_Hero::set_level(::google::protobuf::int32 value) {
  _set_bit(1);
  level_ = value;
}

// optional int32 grade = 3 [default = 0];
inline bool DB_Hero::has_grade() const {
  return _has_bit(2);
}
inline void DB_Hero::clear_grade() {
  grade_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Hero::grade() const {
  return grade_;
}
inline void DB_Hero::set_grade(::google::protobuf::int32 value) {
  _set_bit(2);
  grade_ = value;
}

// optional int32 levelexp = 4 [default = 0];
inline bool DB_Hero::has_levelexp() const {
  return _has_bit(3);
}
inline void DB_Hero::clear_levelexp() {
  levelexp_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Hero::levelexp() const {
  return levelexp_;
}
inline void DB_Hero::set_levelexp(::google::protobuf::int32 value) {
  _set_bit(3);
  levelexp_ = value;
}

// optional int32 gradeexp = 5 [default = 0];
inline bool DB_Hero::has_gradeexp() const {
  return _has_bit(4);
}
inline void DB_Hero::clear_gradeexp() {
  gradeexp_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_Hero::gradeexp() const {
  return gradeexp_;
}
inline void DB_Hero::set_gradeexp(::google::protobuf::int32 value) {
  _set_bit(4);
  gradeexp_ = value;
}

// optional .DB_HeroSkillData initSkill = 6;
inline bool DB_Hero::has_initskill() const {
  return _has_bit(5);
}
inline void DB_Hero::clear_initskill() {
  if (initskill_ != NULL) initskill_->::DB_HeroSkillData::Clear();
  _clear_bit(5);
}
inline const ::DB_HeroSkillData& DB_Hero::initskill() const {
  return initskill_ != NULL ? *initskill_ : *default_instance_->initskill_;
}
inline ::DB_HeroSkillData* DB_Hero::mutable_initskill() {
  _set_bit(5);
  if (initskill_ == NULL) initskill_ = new ::DB_HeroSkillData;
  return initskill_;
}

// optional .DB_HeroAtkData atkData = 7;
inline bool DB_Hero::has_atkdata() const {
  return _has_bit(6);
}
inline void DB_Hero::clear_atkdata() {
  if (atkdata_ != NULL) atkdata_->::DB_HeroAtkData::Clear();
  _clear_bit(6);
}
inline const ::DB_HeroAtkData& DB_Hero::atkdata() const {
  return atkdata_ != NULL ? *atkdata_ : *default_instance_->atkdata_;
}
inline ::DB_HeroAtkData* DB_Hero::mutable_atkdata() {
  _set_bit(6);
  if (atkdata_ == NULL) atkdata_ = new ::DB_HeroAtkData;
  return atkdata_;
}

// optional int32 recoverhptm = 8 [default = 0];
inline bool DB_Hero::has_recoverhptm() const {
  return _has_bit(7);
}
inline void DB_Hero::clear_recoverhptm() {
  recoverhptm_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_Hero::recoverhptm() const {
  return recoverhptm_;
}
inline void DB_Hero::set_recoverhptm(::google::protobuf::int32 value) {
  _set_bit(7);
  recoverhptm_ = value;
}

// -------------------------------------------------------------------

// DB_UpgradeHero

// optional int32 herotype = 1;
inline bool DB_UpgradeHero::has_herotype() const {
  return _has_bit(0);
}
inline void DB_UpgradeHero::clear_herotype() {
  herotype_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_UpgradeHero::herotype() const {
  return herotype_;
}
inline void DB_UpgradeHero::set_herotype(::google::protobuf::int32 value) {
  _set_bit(0);
  herotype_ = value;
}

// optional int32 finishTime = 2 [default = 0];
inline bool DB_UpgradeHero::has_finishtime() const {
  return _has_bit(1);
}
inline void DB_UpgradeHero::clear_finishtime() {
  finishtime_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_UpgradeHero::finishtime() const {
  return finishtime_;
}
inline void DB_UpgradeHero::set_finishtime(::google::protobuf::int32 value) {
  _set_bit(1);
  finishtime_ = value;
}

// -------------------------------------------------------------------

// DB_HeroInfo

// repeated .DB_Hero hero = 1;
inline int DB_HeroInfo::hero_size() const {
  return hero_.size();
}
inline void DB_HeroInfo::clear_hero() {
  hero_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_Hero >&
DB_HeroInfo::hero() const {
  return hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_Hero >*
DB_HeroInfo::mutable_hero() {
  return &hero_;
}
inline const ::DB_Hero& DB_HeroInfo::hero(int index) const {
  return hero_.Get(index);
}
inline ::DB_Hero* DB_HeroInfo::mutable_hero(int index) {
  return hero_.Mutable(index);
}
inline ::DB_Hero* DB_HeroInfo::add_hero() {
  return hero_.Add();
}

// repeated .DB_HeroLetter heroletter = 2;
inline int DB_HeroInfo::heroletter_size() const {
  return heroletter_.size();
}
inline void DB_HeroInfo::clear_heroletter() {
  heroletter_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_HeroLetter >&
DB_HeroInfo::heroletter() const {
  return heroletter_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_HeroLetter >*
DB_HeroInfo::mutable_heroletter() {
  return &heroletter_;
}
inline const ::DB_HeroLetter& DB_HeroInfo::heroletter(int index) const {
  return heroletter_.Get(index);
}
inline ::DB_HeroLetter* DB_HeroInfo::mutable_heroletter(int index) {
  return heroletter_.Mutable(index);
}
inline ::DB_HeroLetter* DB_HeroInfo::add_heroletter() {
  return heroletter_.Add();
}

// repeated int32 freeVisitCnt = 3;
inline int DB_HeroInfo::freevisitcnt_size() const {
  return freevisitcnt_.size();
}
inline void DB_HeroInfo::clear_freevisitcnt() {
  freevisitcnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_HeroInfo::freevisitcnt() const {
  return freevisitcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_HeroInfo::mutable_freevisitcnt() {
  return &freevisitcnt_;
}
inline ::google::protobuf::int32 DB_HeroInfo::freevisitcnt(int index) const {
  return freevisitcnt_.Get(index);
}
inline void DB_HeroInfo::set_freevisitcnt(int index, ::google::protobuf::int32 value) {
  freevisitcnt_.Set(index, value);
}
inline void DB_HeroInfo::add_freevisitcnt(::google::protobuf::int32 value) {
  freevisitcnt_.Add(value);
}

// repeated int32 finishVisitTime = 4;
inline int DB_HeroInfo::finishvisittime_size() const {
  return finishvisittime_.size();
}
inline void DB_HeroInfo::clear_finishvisittime() {
  finishvisittime_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_HeroInfo::finishvisittime() const {
  return finishvisittime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_HeroInfo::mutable_finishvisittime() {
  return &finishvisittime_;
}
inline ::google::protobuf::int32 DB_HeroInfo::finishvisittime(int index) const {
  return finishvisittime_.Get(index);
}
inline void DB_HeroInfo::set_finishvisittime(int index, ::google::protobuf::int32 value) {
  finishvisittime_.Set(index, value);
}
inline void DB_HeroInfo::add_finishvisittime(::google::protobuf::int32 value) {
  finishvisittime_.Add(value);
}

// repeated int32 collectLst = 5;
inline int DB_HeroInfo::collectlst_size() const {
  return collectlst_.size();
}
inline void DB_HeroInfo::clear_collectlst() {
  collectlst_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_HeroInfo::collectlst() const {
  return collectlst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_HeroInfo::mutable_collectlst() {
  return &collectlst_;
}
inline ::google::protobuf::int32 DB_HeroInfo::collectlst(int index) const {
  return collectlst_.Get(index);
}
inline void DB_HeroInfo::set_collectlst(int index, ::google::protobuf::int32 value) {
  collectlst_.Set(index, value);
}
inline void DB_HeroInfo::add_collectlst(::google::protobuf::int32 value) {
  collectlst_.Add(value);
}

// optional bool hasSendhero = 6 [default = false];
inline bool DB_HeroInfo::has_hassendhero() const {
  return _has_bit(5);
}
inline void DB_HeroInfo::clear_hassendhero() {
  hassendhero_ = false;
  _clear_bit(5);
}
inline bool DB_HeroInfo::hassendhero() const {
  return hassendhero_;
}
inline void DB_HeroInfo::set_hassendhero(bool value) {
  _set_bit(5);
  hassendhero_ = value;
}

// repeated int32 sendID = 7;
inline int DB_HeroInfo::sendid_size() const {
  return sendid_.size();
}
inline void DB_HeroInfo::clear_sendid() {
  sendid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_HeroInfo::sendid() const {
  return sendid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_HeroInfo::mutable_sendid() {
  return &sendid_;
}
inline ::google::protobuf::int32 DB_HeroInfo::sendid(int index) const {
  return sendid_.Get(index);
}
inline void DB_HeroInfo::set_sendid(int index, ::google::protobuf::int32 value) {
  sendid_.Set(index, value);
}
inline void DB_HeroInfo::add_sendid(::google::protobuf::int32 value) {
  sendid_.Add(value);
}

// optional bool hasCreditVisit = 8 [default = false];
inline bool DB_HeroInfo::has_hascreditvisit() const {
  return _has_bit(7);
}
inline void DB_HeroInfo::clear_hascreditvisit() {
  hascreditvisit_ = false;
  _clear_bit(7);
}
inline bool DB_HeroInfo::hascreditvisit() const {
  return hascreditvisit_;
}
inline void DB_HeroInfo::set_hascreditvisit(bool value) {
  _set_bit(7);
  hascreditvisit_ = value;
}

// repeated .DB_UpgradeHero heroupgrade = 9;
inline int DB_HeroInfo::heroupgrade_size() const {
  return heroupgrade_.size();
}
inline void DB_HeroInfo::clear_heroupgrade() {
  heroupgrade_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_UpgradeHero >&
DB_HeroInfo::heroupgrade() const {
  return heroupgrade_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_UpgradeHero >*
DB_HeroInfo::mutable_heroupgrade() {
  return &heroupgrade_;
}
inline const ::DB_UpgradeHero& DB_HeroInfo::heroupgrade(int index) const {
  return heroupgrade_.Get(index);
}
inline ::DB_UpgradeHero* DB_HeroInfo::mutable_heroupgrade(int index) {
  return heroupgrade_.Mutable(index);
}
inline ::DB_UpgradeHero* DB_HeroInfo::add_heroupgrade() {
  return heroupgrade_.Add();
}

// repeated int32 heroAtkLst = 10;
inline int DB_HeroInfo::heroatklst_size() const {
  return heroatklst_.size();
}
inline void DB_HeroInfo::clear_heroatklst() {
  heroatklst_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_HeroInfo::heroatklst() const {
  return heroatklst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_HeroInfo::mutable_heroatklst() {
  return &heroatklst_;
}
inline ::google::protobuf::int32 DB_HeroInfo::heroatklst(int index) const {
  return heroatklst_.Get(index);
}
inline void DB_HeroInfo::set_heroatklst(int index, ::google::protobuf::int32 value) {
  heroatklst_.Set(index, value);
}
inline void DB_HeroInfo::add_heroatklst(::google::protobuf::int32 value) {
  heroatklst_.Add(value);
}

// repeated int32 heroDefLst = 11;
inline int DB_HeroInfo::herodeflst_size() const {
  return herodeflst_.size();
}
inline void DB_HeroInfo::clear_herodeflst() {
  herodeflst_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_HeroInfo::herodeflst() const {
  return herodeflst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_HeroInfo::mutable_herodeflst() {
  return &herodeflst_;
}
inline ::google::protobuf::int32 DB_HeroInfo::herodeflst(int index) const {
  return herodeflst_.Get(index);
}
inline void DB_HeroInfo::set_herodeflst(int index, ::google::protobuf::int32 value) {
  herodeflst_.Set(index, value);
}
inline void DB_HeroInfo::add_herodeflst(::google::protobuf::int32 value) {
  herodeflst_.Add(value);
}

// repeated int32 heroAutoLst = 12;
inline int DB_HeroInfo::heroautolst_size() const {
  return heroautolst_.size();
}
inline void DB_HeroInfo::clear_heroautolst() {
  heroautolst_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_HeroInfo::heroautolst() const {
  return heroautolst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_HeroInfo::mutable_heroautolst() {
  return &heroautolst_;
}
inline ::google::protobuf::int32 DB_HeroInfo::heroautolst(int index) const {
  return heroautolst_.Get(index);
}
inline void DB_HeroInfo::set_heroautolst(int index, ::google::protobuf::int32 value) {
  heroautolst_.Set(index, value);
}
inline void DB_HeroInfo::add_heroautolst(::google::protobuf::int32 value) {
  heroautolst_.Add(value);
}

// repeated int32 heroarenaLst = 13;
inline int DB_HeroInfo::heroarenalst_size() const {
  return heroarenalst_.size();
}
inline void DB_HeroInfo::clear_heroarenalst() {
  heroarenalst_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_HeroInfo::heroarenalst() const {
  return heroarenalst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_HeroInfo::mutable_heroarenalst() {
  return &heroarenalst_;
}
inline ::google::protobuf::int32 DB_HeroInfo::heroarenalst(int index) const {
  return heroarenalst_.Get(index);
}
inline void DB_HeroInfo::set_heroarenalst(int index, ::google::protobuf::int32 value) {
  heroarenalst_.Set(index, value);
}
inline void DB_HeroInfo::add_heroarenalst(::google::protobuf::int32 value) {
  heroarenalst_.Add(value);
}

// optional int32 nAtkPartnerNum = 14;
inline bool DB_HeroInfo::has_natkpartnernum() const {
  return _has_bit(13);
}
inline void DB_HeroInfo::clear_natkpartnernum() {
  natkpartnernum_ = 0;
  _clear_bit(13);
}
inline ::google::protobuf::int32 DB_HeroInfo::natkpartnernum() const {
  return natkpartnernum_;
}
inline void DB_HeroInfo::set_natkpartnernum(::google::protobuf::int32 value) {
  _set_bit(13);
  natkpartnernum_ = value;
}

// optional int32 nDefPartnerNum = 15;
inline bool DB_HeroInfo::has_ndefpartnernum() const {
  return _has_bit(14);
}
inline void DB_HeroInfo::clear_ndefpartnernum() {
  ndefpartnernum_ = 0;
  _clear_bit(14);
}
inline ::google::protobuf::int32 DB_HeroInfo::ndefpartnernum() const {
  return ndefpartnernum_;
}
inline void DB_HeroInfo::set_ndefpartnernum(::google::protobuf::int32 value) {
  _set_bit(14);
  ndefpartnernum_ = value;
}

// optional int32 nAutoPartnerNum = 16;
inline bool DB_HeroInfo::has_nautopartnernum() const {
  return _has_bit(15);
}
inline void DB_HeroInfo::clear_nautopartnernum() {
  nautopartnernum_ = 0;
  _clear_bit(15);
}
inline ::google::protobuf::int32 DB_HeroInfo::nautopartnernum() const {
  return nautopartnernum_;
}
inline void DB_HeroInfo::set_nautopartnernum(::google::protobuf::int32 value) {
  _set_bit(15);
  nautopartnernum_ = value;
}

// -------------------------------------------------------------------

// DB_Flag

// optional int32 music = 1;
inline bool DB_Flag::has_music() const {
  return _has_bit(0);
}
inline void DB_Flag::clear_music() {
  music_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Flag::music() const {
  return music_;
}
inline void DB_Flag::set_music(::google::protobuf::int32 value) {
  _set_bit(0);
  music_ = value;
}

// optional int32 effect = 2;
inline bool DB_Flag::has_effect() const {
  return _has_bit(1);
}
inline void DB_Flag::clear_effect() {
  effect_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Flag::effect() const {
  return effect_;
}
inline void DB_Flag::set_effect(::google::protobuf::int32 value) {
  _set_bit(1);
  effect_ = value;
}

// optional int32 quality = 3;
inline bool DB_Flag::has_quality() const {
  return _has_bit(2);
}
inline void DB_Flag::clear_quality() {
  quality_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Flag::quality() const {
  return quality_;
}
inline void DB_Flag::set_quality(::google::protobuf::int32 value) {
  _set_bit(2);
  quality_ = value;
}

// optional int32 allianceWelcome = 4;
inline bool DB_Flag::has_alliancewelcome() const {
  return _has_bit(3);
}
inline void DB_Flag::clear_alliancewelcome() {
  alliancewelcome_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Flag::alliancewelcome() const {
  return alliancewelcome_;
}
inline void DB_Flag::set_alliancewelcome(::google::protobuf::int32 value) {
  _set_bit(3);
  alliancewelcome_ = value;
}

// -------------------------------------------------------------------

// DB_Storedata

// optional string type = 1;
inline bool DB_Storedata::has_type() const {
  return _has_bit(0);
}
inline void DB_Storedata::clear_type() {
  if (type_ != &_default_type_) {
    type_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& DB_Storedata::type() const {
  return *type_;
}
inline void DB_Storedata::set_type(const ::std::string& value) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void DB_Storedata::set_type(const char* value) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void DB_Storedata::set_type(const char* value, size_t size) {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Storedata::mutable_type() {
  _set_bit(0);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  return type_;
}

// optional int32 q = 2;
inline bool DB_Storedata::has_q() const {
  return _has_bit(1);
}
inline void DB_Storedata::clear_q() {
  q_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Storedata::q() const {
  return q_;
}
inline void DB_Storedata::set_q(::google::protobuf::int32 value) {
  _set_bit(1);
  q_ = value;
}

// optional int32 s = 3;
inline bool DB_Storedata::has_s() const {
  return _has_bit(2);
}
inline void DB_Storedata::clear_s() {
  s_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Storedata::s() const {
  return s_;
}
inline void DB_Storedata::set_s(::google::protobuf::int32 value) {
  _set_bit(2);
  s_ = value;
}

// optional int32 e = 4;
inline bool DB_Storedata::has_e() const {
  return _has_bit(3);
}
inline void DB_Storedata::clear_e() {
  e_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Storedata::e() const {
  return e_;
}
inline void DB_Storedata::set_e(::google::protobuf::int32 value) {
  _set_bit(3);
  e_ = value;
}

// -------------------------------------------------------------------

// DB_EnemyStar

// optional int64 enemyID = 1;
inline bool DB_EnemyStar::has_enemyid() const {
  return _has_bit(0);
}
inline void DB_EnemyStar::clear_enemyid() {
  enemyid_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 DB_EnemyStar::enemyid() const {
  return enemyid_;
}
inline void DB_EnemyStar::set_enemyid(::google::protobuf::int64 value) {
  _set_bit(0);
  enemyid_ = value;
}

// optional int64 attactCnt = 2;
inline bool DB_EnemyStar::has_attactcnt() const {
  return _has_bit(1);
}
inline void DB_EnemyStar::clear_attactcnt() {
  attactcnt_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 DB_EnemyStar::attactcnt() const {
  return attactcnt_;
}
inline void DB_EnemyStar::set_attactcnt(::google::protobuf::int64 value) {
  _set_bit(1);
  attactcnt_ = value;
}

// optional int64 recoveryCnt = 3;
inline bool DB_EnemyStar::has_recoverycnt() const {
  return _has_bit(2);
}
inline void DB_EnemyStar::clear_recoverycnt() {
  recoverycnt_ = GOOGLE_LONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::int64 DB_EnemyStar::recoverycnt() const {
  return recoverycnt_;
}
inline void DB_EnemyStar::set_recoverycnt(::google::protobuf::int64 value) {
  _set_bit(2);
  recoverycnt_ = value;
}

// optional int32 attacktime = 4;
inline bool DB_EnemyStar::has_attacktime() const {
  return _has_bit(3);
}
inline void DB_EnemyStar::clear_attacktime() {
  attacktime_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_EnemyStar::attacktime() const {
  return attacktime_;
}
inline void DB_EnemyStar::set_attacktime(::google::protobuf::int32 value) {
  _set_bit(3);
  attacktime_ = value;
}

// optional int32 countdown = 5 [default = 0];
inline bool DB_EnemyStar::has_countdown() const {
  return _has_bit(4);
}
inline void DB_EnemyStar::clear_countdown() {
  countdown_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_EnemyStar::countdown() const {
  return countdown_;
}
inline void DB_EnemyStar::set_countdown(::google::protobuf::int32 value) {
  _set_bit(4);
  countdown_ = value;
}

// -------------------------------------------------------------------

// DB_GiftFrdInfo

// optional int64 friendID = 1;
inline bool DB_GiftFrdInfo::has_friendid() const {
  return _has_bit(0);
}
inline void DB_GiftFrdInfo::clear_friendid() {
  friendid_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 DB_GiftFrdInfo::friendid() const {
  return friendid_;
}
inline void DB_GiftFrdInfo::set_friendid(::google::protobuf::int64 value) {
  _set_bit(0);
  friendid_ = value;
}

// optional string frdOpenID = 2;
inline bool DB_GiftFrdInfo::has_frdopenid() const {
  return _has_bit(1);
}
inline void DB_GiftFrdInfo::clear_frdopenid() {
  if (frdopenid_ != &_default_frdopenid_) {
    frdopenid_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& DB_GiftFrdInfo::frdopenid() const {
  return *frdopenid_;
}
inline void DB_GiftFrdInfo::set_frdopenid(const ::std::string& value) {
  _set_bit(1);
  if (frdopenid_ == &_default_frdopenid_) {
    frdopenid_ = new ::std::string;
  }
  frdopenid_->assign(value);
}
inline void DB_GiftFrdInfo::set_frdopenid(const char* value) {
  _set_bit(1);
  if (frdopenid_ == &_default_frdopenid_) {
    frdopenid_ = new ::std::string;
  }
  frdopenid_->assign(value);
}
inline void DB_GiftFrdInfo::set_frdopenid(const char* value, size_t size) {
  _set_bit(1);
  if (frdopenid_ == &_default_frdopenid_) {
    frdopenid_ = new ::std::string;
  }
  frdopenid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_GiftFrdInfo::mutable_frdopenid() {
  _set_bit(1);
  if (frdopenid_ == &_default_frdopenid_) {
    frdopenid_ = new ::std::string;
  }
  return frdopenid_;
}

// optional int32 messageID = 3;
inline bool DB_GiftFrdInfo::has_messageid() const {
  return _has_bit(2);
}
inline void DB_GiftFrdInfo::clear_messageid() {
  messageid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_GiftFrdInfo::messageid() const {
  return messageid_;
}
inline void DB_GiftFrdInfo::set_messageid(::google::protobuf::int32 value) {
  _set_bit(2);
  messageid_ = value;
}

// optional int32 giftID = 4 [default = 0];
inline bool DB_GiftFrdInfo::has_giftid() const {
  return _has_bit(3);
}
inline void DB_GiftFrdInfo::clear_giftid() {
  giftid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_GiftFrdInfo::giftid() const {
  return giftid_;
}
inline void DB_GiftFrdInfo::set_giftid(::google::protobuf::int32 value) {
  _set_bit(3);
  giftid_ = value;
}

// optional int64 getTime = 5 [default = 0];
inline bool DB_GiftFrdInfo::has_gettime() const {
  return _has_bit(4);
}
inline void DB_GiftFrdInfo::clear_gettime() {
  gettime_ = GOOGLE_LONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::int64 DB_GiftFrdInfo::gettime() const {
  return gettime_;
}
inline void DB_GiftFrdInfo::set_gettime(::google::protobuf::int64 value) {
  _set_bit(4);
  gettime_ = value;
}

// optional int32 giftType = 6 [default = 0];
inline bool DB_GiftFrdInfo::has_gifttype() const {
  return _has_bit(5);
}
inline void DB_GiftFrdInfo::clear_gifttype() {
  gifttype_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_GiftFrdInfo::gifttype() const {
  return gifttype_;
}
inline void DB_GiftFrdInfo::set_gifttype(::google::protobuf::int32 value) {
  _set_bit(5);
  gifttype_ = value;
}

// -------------------------------------------------------------------

// DB_NewComerGiftList

// optional int32 newComerGiftID = 1;
inline bool DB_NewComerGiftList::has_newcomergiftid() const {
  return _has_bit(0);
}
inline void DB_NewComerGiftList::clear_newcomergiftid() {
  newcomergiftid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_NewComerGiftList::newcomergiftid() const {
  return newcomergiftid_;
}
inline void DB_NewComerGiftList::set_newcomergiftid(::google::protobuf::int32 value) {
  _set_bit(0);
  newcomergiftid_ = value;
}

// optional int32 newComerGiftGain = 2;
inline bool DB_NewComerGiftList::has_newcomergiftgain() const {
  return _has_bit(1);
}
inline void DB_NewComerGiftList::clear_newcomergiftgain() {
  newcomergiftgain_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_NewComerGiftList::newcomergiftgain() const {
  return newcomergiftgain_;
}
inline void DB_NewComerGiftList::set_newcomergiftgain(::google::protobuf::int32 value) {
  _set_bit(1);
  newcomergiftgain_ = value;
}

// -------------------------------------------------------------------

// DB_GiftInfo

// repeated string daySendFrdIDLst = 1;
inline int DB_GiftInfo::daysendfrdidlst_size() const {
  return daysendfrdidlst_.size();
}
inline void DB_GiftInfo::clear_daysendfrdidlst() {
  daysendfrdidlst_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_GiftInfo::daysendfrdidlst() const {
  return daysendfrdidlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_GiftInfo::mutable_daysendfrdidlst() {
  return &daysendfrdidlst_;
}
inline const ::std::string& DB_GiftInfo::daysendfrdidlst(int index) const {
  return daysendfrdidlst_.Get(index);
}
inline ::std::string* DB_GiftInfo::mutable_daysendfrdidlst(int index) {
  return daysendfrdidlst_.Mutable(index);
}
inline void DB_GiftInfo::set_daysendfrdidlst(int index, const ::std::string& value) {
  daysendfrdidlst_.Mutable(index)->assign(value);
}
inline void DB_GiftInfo::set_daysendfrdidlst(int index, const char* value) {
  daysendfrdidlst_.Mutable(index)->assign(value);
}
inline void DB_GiftInfo::set_daysendfrdidlst(int index, const char* value, size_t size) {
  daysendfrdidlst_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_GiftInfo::add_daysendfrdidlst() {
  return daysendfrdidlst_.Add();
}
inline void DB_GiftInfo::add_daysendfrdidlst(const ::std::string& value) {
  daysendfrdidlst_.Add()->assign(value);
}
inline void DB_GiftInfo::add_daysendfrdidlst(const char* value) {
  daysendfrdidlst_.Add()->assign(value);
}
inline void DB_GiftInfo::add_daysendfrdidlst(const char* value, size_t size) {
  daysendfrdidlst_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string dayAskFrdIDLst = 2;
inline int DB_GiftInfo::dayaskfrdidlst_size() const {
  return dayaskfrdidlst_.size();
}
inline void DB_GiftInfo::clear_dayaskfrdidlst() {
  dayaskfrdidlst_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_GiftInfo::dayaskfrdidlst() const {
  return dayaskfrdidlst_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_GiftInfo::mutable_dayaskfrdidlst() {
  return &dayaskfrdidlst_;
}
inline const ::std::string& DB_GiftInfo::dayaskfrdidlst(int index) const {
  return dayaskfrdidlst_.Get(index);
}
inline ::std::string* DB_GiftInfo::mutable_dayaskfrdidlst(int index) {
  return dayaskfrdidlst_.Mutable(index);
}
inline void DB_GiftInfo::set_dayaskfrdidlst(int index, const ::std::string& value) {
  dayaskfrdidlst_.Mutable(index)->assign(value);
}
inline void DB_GiftInfo::set_dayaskfrdidlst(int index, const char* value) {
  dayaskfrdidlst_.Mutable(index)->assign(value);
}
inline void DB_GiftInfo::set_dayaskfrdidlst(int index, const char* value, size_t size) {
  dayaskfrdidlst_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_GiftInfo::add_dayaskfrdidlst() {
  return dayaskfrdidlst_.Add();
}
inline void DB_GiftInfo::add_dayaskfrdidlst(const ::std::string& value) {
  dayaskfrdidlst_.Add()->assign(value);
}
inline void DB_GiftInfo::add_dayaskfrdidlst(const char* value) {
  dayaskfrdidlst_.Add()->assign(value);
}
inline void DB_GiftInfo::add_dayaskfrdidlst(const char* value, size_t size) {
  dayaskfrdidlst_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// optional int32 dayGetGift2BagCnt = 3;
inline bool DB_GiftInfo::has_daygetgift2bagcnt() const {
  return _has_bit(2);
}
inline void DB_GiftInfo::clear_daygetgift2bagcnt() {
  daygetgift2bagcnt_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_GiftInfo::daygetgift2bagcnt() const {
  return daygetgift2bagcnt_;
}
inline void DB_GiftInfo::set_daygetgift2bagcnt(::google::protobuf::int32 value) {
  _set_bit(2);
  daygetgift2bagcnt_ = value;
}

// optional int32 dayAskGift2BagCnt = 4;
inline bool DB_GiftInfo::has_dayaskgift2bagcnt() const {
  return _has_bit(3);
}
inline void DB_GiftInfo::clear_dayaskgift2bagcnt() {
  dayaskgift2bagcnt_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_GiftInfo::dayaskgift2bagcnt() const {
  return dayaskgift2bagcnt_;
}
inline void DB_GiftInfo::set_dayaskgift2bagcnt(::google::protobuf::int32 value) {
  _set_bit(3);
  dayaskgift2bagcnt_ = value;
}

// optional int32 dayGetGiftCnt = 5;
inline bool DB_GiftInfo::has_daygetgiftcnt() const {
  return _has_bit(4);
}
inline void DB_GiftInfo::clear_daygetgiftcnt() {
  daygetgiftcnt_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_GiftInfo::daygetgiftcnt() const {
  return daygetgiftcnt_;
}
inline void DB_GiftInfo::set_daygetgiftcnt(::google::protobuf::int32 value) {
  _set_bit(4);
  daygetgiftcnt_ = value;
}

// optional int32 dayResendGiftCnt = 6;
inline bool DB_GiftInfo::has_dayresendgiftcnt() const {
  return _has_bit(5);
}
inline void DB_GiftInfo::clear_dayresendgiftcnt() {
  dayresendgiftcnt_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_GiftInfo::dayresendgiftcnt() const {
  return dayresendgiftcnt_;
}
inline void DB_GiftInfo::set_dayresendgiftcnt(::google::protobuf::int32 value) {
  _set_bit(5);
  dayresendgiftcnt_ = value;
}

// repeated .DB_GiftFrdInfo getGiftInfo = 7;
inline int DB_GiftInfo::getgiftinfo_size() const {
  return getgiftinfo_.size();
}
inline void DB_GiftInfo::clear_getgiftinfo() {
  getgiftinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_GiftFrdInfo >&
DB_GiftInfo::getgiftinfo() const {
  return getgiftinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_GiftFrdInfo >*
DB_GiftInfo::mutable_getgiftinfo() {
  return &getgiftinfo_;
}
inline const ::DB_GiftFrdInfo& DB_GiftInfo::getgiftinfo(int index) const {
  return getgiftinfo_.Get(index);
}
inline ::DB_GiftFrdInfo* DB_GiftInfo::mutable_getgiftinfo(int index) {
  return getgiftinfo_.Mutable(index);
}
inline ::DB_GiftFrdInfo* DB_GiftInfo::add_getgiftinfo() {
  return getgiftinfo_.Add();
}

// repeated .DB_GiftFrdInfo finishGiftInfo = 8;
inline int DB_GiftInfo::finishgiftinfo_size() const {
  return finishgiftinfo_.size();
}
inline void DB_GiftInfo::clear_finishgiftinfo() {
  finishgiftinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_GiftFrdInfo >&
DB_GiftInfo::finishgiftinfo() const {
  return finishgiftinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_GiftFrdInfo >*
DB_GiftInfo::mutable_finishgiftinfo() {
  return &finishgiftinfo_;
}
inline const ::DB_GiftFrdInfo& DB_GiftInfo::finishgiftinfo(int index) const {
  return finishgiftinfo_.Get(index);
}
inline ::DB_GiftFrdInfo* DB_GiftInfo::mutable_finishgiftinfo(int index) {
  return finishgiftinfo_.Mutable(index);
}
inline ::DB_GiftFrdInfo* DB_GiftInfo::add_finishgiftinfo() {
  return finishgiftinfo_.Add();
}

// optional int32 msgIdx = 9 [default = 0];
inline bool DB_GiftInfo::has_msgidx() const {
  return _has_bit(8);
}
inline void DB_GiftInfo::clear_msgidx() {
  msgidx_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_GiftInfo::msgidx() const {
  return msgidx_;
}
inline void DB_GiftInfo::set_msgidx(::google::protobuf::int32 value) {
  _set_bit(8);
  msgidx_ = value;
}

// optional int64 lastLoginTime = 10 [default = 0];
inline bool DB_GiftInfo::has_lastlogintime() const {
  return _has_bit(9);
}
inline void DB_GiftInfo::clear_lastlogintime() {
  lastlogintime_ = GOOGLE_LONGLONG(0);
  _clear_bit(9);
}
inline ::google::protobuf::int64 DB_GiftInfo::lastlogintime() const {
  return lastlogintime_;
}
inline void DB_GiftInfo::set_lastlogintime(::google::protobuf::int64 value) {
  _set_bit(9);
  lastlogintime_ = value;
}

// optional int32 daySendGiftCnt = 11;
inline bool DB_GiftInfo::has_daysendgiftcnt() const {
  return _has_bit(10);
}
inline void DB_GiftInfo::clear_daysendgiftcnt() {
  daysendgiftcnt_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 DB_GiftInfo::daysendgiftcnt() const {
  return daysendgiftcnt_;
}
inline void DB_GiftInfo::set_daysendgiftcnt(::google::protobuf::int32 value) {
  _set_bit(10);
  daysendgiftcnt_ = value;
}

// repeated .DB_NewComerGiftList newComerGiftList = 12;
inline int DB_GiftInfo::newcomergiftlist_size() const {
  return newcomergiftlist_.size();
}
inline void DB_GiftInfo::clear_newcomergiftlist() {
  newcomergiftlist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_NewComerGiftList >&
DB_GiftInfo::newcomergiftlist() const {
  return newcomergiftlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_NewComerGiftList >*
DB_GiftInfo::mutable_newcomergiftlist() {
  return &newcomergiftlist_;
}
inline const ::DB_NewComerGiftList& DB_GiftInfo::newcomergiftlist(int index) const {
  return newcomergiftlist_.Get(index);
}
inline ::DB_NewComerGiftList* DB_GiftInfo::mutable_newcomergiftlist(int index) {
  return newcomergiftlist_.Mutable(index);
}
inline ::DB_NewComerGiftList* DB_GiftInfo::add_newcomergiftlist() {
  return newcomergiftlist_.Add();
}

// -------------------------------------------------------------------

// DB_DayAtkUser

// optional int64 dayAtkUserID = 1 [default = 0];
inline bool DB_DayAtkUser::has_dayatkuserid() const {
  return _has_bit(0);
}
inline void DB_DayAtkUser::clear_dayatkuserid() {
  dayatkuserid_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 DB_DayAtkUser::dayatkuserid() const {
  return dayatkuserid_;
}
inline void DB_DayAtkUser::set_dayatkuserid(::google::protobuf::int64 value) {
  _set_bit(0);
  dayatkuserid_ = value;
}

// optional int64 dayAtkUserCnt = 2 [default = 0];
inline bool DB_DayAtkUser::has_dayatkusercnt() const {
  return _has_bit(1);
}
inline void DB_DayAtkUser::clear_dayatkusercnt() {
  dayatkusercnt_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 DB_DayAtkUser::dayatkusercnt() const {
  return dayatkusercnt_;
}
inline void DB_DayAtkUser::set_dayatkusercnt(::google::protobuf::int64 value) {
  _set_bit(1);
  dayatkusercnt_ = value;
}

// -------------------------------------------------------------------

// DB_UserStar

// repeated int64 enemyID = 1;
inline int DB_UserStar::enemyid_size() const {
  return enemyid_.size();
}
inline void DB_UserStar::clear_enemyid() {
  enemyid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DB_UserStar::enemyid() const {
  return enemyid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DB_UserStar::mutable_enemyid() {
  return &enemyid_;
}
inline ::google::protobuf::int64 DB_UserStar::enemyid(int index) const {
  return enemyid_.Get(index);
}
inline void DB_UserStar::set_enemyid(int index, ::google::protobuf::int64 value) {
  enemyid_.Set(index, value);
}
inline void DB_UserStar::add_enemyid(::google::protobuf::int64 value) {
  enemyid_.Add(value);
}

// repeated int64 attactCnt = 2;
inline int DB_UserStar::attactcnt_size() const {
  return attactcnt_.size();
}
inline void DB_UserStar::clear_attactcnt() {
  attactcnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DB_UserStar::attactcnt() const {
  return attactcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DB_UserStar::mutable_attactcnt() {
  return &attactcnt_;
}
inline ::google::protobuf::int64 DB_UserStar::attactcnt(int index) const {
  return attactcnt_.Get(index);
}
inline void DB_UserStar::set_attactcnt(int index, ::google::protobuf::int64 value) {
  attactcnt_.Set(index, value);
}
inline void DB_UserStar::add_attactcnt(::google::protobuf::int64 value) {
  attactcnt_.Add(value);
}

// repeated int64 recoveryCnt = 3;
inline int DB_UserStar::recoverycnt_size() const {
  return recoverycnt_.size();
}
inline void DB_UserStar::clear_recoverycnt() {
  recoverycnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DB_UserStar::recoverycnt() const {
  return recoverycnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DB_UserStar::mutable_recoverycnt() {
  return &recoverycnt_;
}
inline ::google::protobuf::int64 DB_UserStar::recoverycnt(int index) const {
  return recoverycnt_.Get(index);
}
inline void DB_UserStar::set_recoverycnt(int index, ::google::protobuf::int64 value) {
  recoverycnt_.Set(index, value);
}
inline void DB_UserStar::add_recoverycnt(::google::protobuf::int64 value) {
  recoverycnt_.Add(value);
}

// repeated .DB_EnemyStar EnemyList = 4;
inline int DB_UserStar::enemylist_size() const {
  return enemylist_.size();
}
inline void DB_UserStar::clear_enemylist() {
  enemylist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_EnemyStar >&
DB_UserStar::enemylist() const {
  return enemylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_EnemyStar >*
DB_UserStar::mutable_enemylist() {
  return &enemylist_;
}
inline const ::DB_EnemyStar& DB_UserStar::enemylist(int index) const {
  return enemylist_.Get(index);
}
inline ::DB_EnemyStar* DB_UserStar::mutable_enemylist(int index) {
  return enemylist_.Mutable(index);
}
inline ::DB_EnemyStar* DB_UserStar::add_enemylist() {
  return enemylist_.Add();
}

// repeated .DB_DayAtkUser dayAtkInfo = 5;
inline int DB_UserStar::dayatkinfo_size() const {
  return dayatkinfo_.size();
}
inline void DB_UserStar::clear_dayatkinfo() {
  dayatkinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_DayAtkUser >&
DB_UserStar::dayatkinfo() const {
  return dayatkinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_DayAtkUser >*
DB_UserStar::mutable_dayatkinfo() {
  return &dayatkinfo_;
}
inline const ::DB_DayAtkUser& DB_UserStar::dayatkinfo(int index) const {
  return dayatkinfo_.Get(index);
}
inline ::DB_DayAtkUser* DB_UserStar::mutable_dayatkinfo(int index) {
  return dayatkinfo_.Mutable(index);
}
inline ::DB_DayAtkUser* DB_UserStar::add_dayatkinfo() {
  return dayatkinfo_.Add();
}

// optional int32 dayDestroySlaveRoomCnt = 6 [default = 0];
inline bool DB_UserStar::has_daydestroyslaveroomcnt() const {
  return _has_bit(5);
}
inline void DB_UserStar::clear_daydestroyslaveroomcnt() {
  daydestroyslaveroomcnt_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_UserStar::daydestroyslaveroomcnt() const {
  return daydestroyslaveroomcnt_;
}
inline void DB_UserStar::set_daydestroyslaveroomcnt(::google::protobuf::int32 value) {
  _set_bit(5);
  daydestroyslaveroomcnt_ = value;
}

// optional int32 dayAtkCount = 7 [default = 0];
inline bool DB_UserStar::has_dayatkcount() const {
  return _has_bit(6);
}
inline void DB_UserStar::clear_dayatkcount() {
  dayatkcount_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_UserStar::dayatkcount() const {
  return dayatkcount_;
}
inline void DB_UserStar::set_dayatkcount(::google::protobuf::int32 value) {
  _set_bit(6);
  dayatkcount_ = value;
}

// optional int32 dayDefCount = 8 [default = 0];
inline bool DB_UserStar::has_daydefcount() const {
  return _has_bit(7);
}
inline void DB_UserStar::clear_daydefcount() {
  daydefcount_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_UserStar::daydefcount() const {
  return daydefcount_;
}
inline void DB_UserStar::set_daydefcount(::google::protobuf::int32 value) {
  _set_bit(7);
  daydefcount_ = value;
}

// optional int32 sprweaponhurtednum = 9 [default = 0];
inline bool DB_UserStar::has_sprweaponhurtednum() const {
  return _has_bit(8);
}
inline void DB_UserStar::clear_sprweaponhurtednum() {
  sprweaponhurtednum_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_UserStar::sprweaponhurtednum() const {
  return sprweaponhurtednum_;
}
inline void DB_UserStar::set_sprweaponhurtednum(::google::protobuf::int32 value) {
  _set_bit(8);
  sprweaponhurtednum_ = value;
}

// optional int32 sprweaponhurtedtime = 10 [default = 0];
inline bool DB_UserStar::has_sprweaponhurtedtime() const {
  return _has_bit(9);
}
inline void DB_UserStar::clear_sprweaponhurtedtime() {
  sprweaponhurtedtime_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 DB_UserStar::sprweaponhurtedtime() const {
  return sprweaponhurtedtime_;
}
inline void DB_UserStar::set_sprweaponhurtedtime(::google::protobuf::int32 value) {
  _set_bit(9);
  sprweaponhurtedtime_ = value;
}

// -------------------------------------------------------------------

// DB_DefenseActivityNode

// optional int32 activityid = 1 [default = 0];
inline bool DB_DefenseActivityNode::has_activityid() const {
  return _has_bit(0);
}
inline void DB_DefenseActivityNode::clear_activityid() {
  activityid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_DefenseActivityNode::activityid() const {
  return activityid_;
}
inline void DB_DefenseActivityNode::set_activityid(::google::protobuf::int32 value) {
  _set_bit(0);
  activityid_ = value;
}

// optional int32 activitycut = 2 [default = 0];
inline bool DB_DefenseActivityNode::has_activitycut() const {
  return _has_bit(1);
}
inline void DB_DefenseActivityNode::clear_activitycut() {
  activitycut_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_DefenseActivityNode::activitycut() const {
  return activitycut_;
}
inline void DB_DefenseActivityNode::set_activitycut(::google::protobuf::int32 value) {
  _set_bit(1);
  activitycut_ = value;
}

// repeated bool awardlist = 3;
inline int DB_DefenseActivityNode::awardlist_size() const {
  return awardlist_.size();
}
inline void DB_DefenseActivityNode::clear_awardlist() {
  awardlist_.Clear();
}
inline const ::google::protobuf::RepeatedField< bool >&
DB_DefenseActivityNode::awardlist() const {
  return awardlist_;
}
inline ::google::protobuf::RepeatedField< bool >*
DB_DefenseActivityNode::mutable_awardlist() {
  return &awardlist_;
}
inline bool DB_DefenseActivityNode::awardlist(int index) const {
  return awardlist_.Get(index);
}
inline void DB_DefenseActivityNode::set_awardlist(int index, bool value) {
  awardlist_.Set(index, value);
}
inline void DB_DefenseActivityNode::add_awardlist(bool value) {
  awardlist_.Add(value);
}

// optional int32 lstcustomtime = 4 [default = -1];
inline bool DB_DefenseActivityNode::has_lstcustomtime() const {
  return _has_bit(3);
}
inline void DB_DefenseActivityNode::clear_lstcustomtime() {
  lstcustomtime_ = -1;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_DefenseActivityNode::lstcustomtime() const {
  return lstcustomtime_;
}
inline void DB_DefenseActivityNode::set_lstcustomtime(::google::protobuf::int32 value) {
  _set_bit(3);
  lstcustomtime_ = value;
}

// -------------------------------------------------------------------

// DB_DefenseActivity

// optional .DB_DefenseActivityNode activities = 1;
inline bool DB_DefenseActivity::has_activities() const {
  return _has_bit(0);
}
inline void DB_DefenseActivity::clear_activities() {
  if (activities_ != NULL) activities_->::DB_DefenseActivityNode::Clear();
  _clear_bit(0);
}
inline const ::DB_DefenseActivityNode& DB_DefenseActivity::activities() const {
  return activities_ != NULL ? *activities_ : *default_instance_->activities_;
}
inline ::DB_DefenseActivityNode* DB_DefenseActivity::mutable_activities() {
  _set_bit(0);
  if (activities_ == NULL) activities_ = new ::DB_DefenseActivityNode;
  return activities_;
}

// -------------------------------------------------------------------

// DB_DefenseHonor

// optional int64 lastdefencehonorid = 1 [default = 0];
inline bool DB_DefenseHonor::has_lastdefencehonorid() const {
  return _has_bit(0);
}
inline void DB_DefenseHonor::clear_lastdefencehonorid() {
  lastdefencehonorid_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 DB_DefenseHonor::lastdefencehonorid() const {
  return lastdefencehonorid_;
}
inline void DB_DefenseHonor::set_lastdefencehonorid(::google::protobuf::int64 value) {
  _set_bit(0);
  lastdefencehonorid_ = value;
}

// optional int32 gaindefencehornorcnt = 2 [default = 0];
inline bool DB_DefenseHonor::has_gaindefencehornorcnt() const {
  return _has_bit(1);
}
inline void DB_DefenseHonor::clear_gaindefencehornorcnt() {
  gaindefencehornorcnt_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_DefenseHonor::gaindefencehornorcnt() const {
  return gaindefencehornorcnt_;
}
inline void DB_DefenseHonor::set_gaindefencehornorcnt(::google::protobuf::int32 value) {
  _set_bit(1);
  gaindefencehornorcnt_ = value;
}

// -------------------------------------------------------------------

// DB_BuffUnit

// optional int32 bufftype = 1;
inline bool DB_BuffUnit::has_bufftype() const {
  return _has_bit(0);
}
inline void DB_BuffUnit::clear_bufftype() {
  bufftype_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_BuffUnit::bufftype() const {
  return bufftype_;
}
inline void DB_BuffUnit::set_bufftype(::google::protobuf::int32 value) {
  _set_bit(0);
  bufftype_ = value;
}

// optional uint32 buffEndTime = 2;
inline bool DB_BuffUnit::has_buffendtime() const {
  return _has_bit(1);
}
inline void DB_BuffUnit::clear_buffendtime() {
  buffendtime_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 DB_BuffUnit::buffendtime() const {
  return buffendtime_;
}
inline void DB_BuffUnit::set_buffendtime(::google::protobuf::uint32 value) {
  _set_bit(1);
  buffendtime_ = value;
}

// -------------------------------------------------------------------

// DB_BuffData

// repeated .DB_BuffUnit bufflist = 1;
inline int DB_BuffData::bufflist_size() const {
  return bufflist_.size();
}
inline void DB_BuffData::clear_bufflist() {
  bufflist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_BuffUnit >&
DB_BuffData::bufflist() const {
  return bufflist_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_BuffUnit >*
DB_BuffData::mutable_bufflist() {
  return &bufflist_;
}
inline const ::DB_BuffUnit& DB_BuffData::bufflist(int index) const {
  return bufflist_.Get(index);
}
inline ::DB_BuffUnit* DB_BuffData::mutable_bufflist(int index) {
  return bufflist_.Mutable(index);
}
inline ::DB_BuffUnit* DB_BuffData::add_bufflist() {
  return bufflist_.Add();
}

// -------------------------------------------------------------------

// DB_BagItemLog

// optional int32 logType = 1 [default = 0];
inline bool DB_BagItemLog::has_logtype() const {
  return _has_bit(0);
}
inline void DB_BagItemLog::clear_logtype() {
  logtype_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_BagItemLog::logtype() const {
  return logtype_;
}
inline void DB_BagItemLog::set_logtype(::google::protobuf::int32 value) {
  _set_bit(0);
  logtype_ = value;
}

// optional int32 itemID = 2 [default = 0];
inline bool DB_BagItemLog::has_itemid() const {
  return _has_bit(1);
}
inline void DB_BagItemLog::clear_itemid() {
  itemid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_BagItemLog::itemid() const {
  return itemid_;
}
inline void DB_BagItemLog::set_itemid(::google::protobuf::int32 value) {
  _set_bit(1);
  itemid_ = value;
}

// optional int32 count = 3 [default = 0];
inline bool DB_BagItemLog::has_count() const {
  return _has_bit(2);
}
inline void DB_BagItemLog::clear_count() {
  count_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_BagItemLog::count() const {
  return count_;
}
inline void DB_BagItemLog::set_count(::google::protobuf::int32 value) {
  _set_bit(2);
  count_ = value;
}

// optional int32 date = 4 [default = 0];
inline bool DB_BagItemLog::has_date() const {
  return _has_bit(3);
}
inline void DB_BagItemLog::clear_date() {
  date_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_BagItemLog::date() const {
  return date_;
}
inline void DB_BagItemLog::set_date(::google::protobuf::int32 value) {
  _set_bit(3);
  date_ = value;
}

// optional int32 medal = 5 [default = 0];
inline bool DB_BagItemLog::has_medal() const {
  return _has_bit(4);
}
inline void DB_BagItemLog::clear_medal() {
  medal_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_BagItemLog::medal() const {
  return medal_;
}
inline void DB_BagItemLog::set_medal(::google::protobuf::int32 value) {
  _set_bit(4);
  medal_ = value;
}

// optional int32 oil = 6 [default = 0];
inline bool DB_BagItemLog::has_oil() const {
  return _has_bit(5);
}
inline void DB_BagItemLog::clear_oil() {
  oil_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_BagItemLog::oil() const {
  return oil_;
}
inline void DB_BagItemLog::set_oil(::google::protobuf::int32 value) {
  _set_bit(5);
  oil_ = value;
}

// optional int32 credit = 7 [default = 0];
inline bool DB_BagItemLog::has_credit() const {
  return _has_bit(6);
}
inline void DB_BagItemLog::clear_credit() {
  credit_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_BagItemLog::credit() const {
  return credit_;
}
inline void DB_BagItemLog::set_credit(::google::protobuf::int32 value) {
  _set_bit(6);
  credit_ = value;
}

// optional int32 honor = 8 [default = 0];
inline bool DB_BagItemLog::has_honor() const {
  return _has_bit(7);
}
inline void DB_BagItemLog::clear_honor() {
  honor_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_BagItemLog::honor() const {
  return honor_;
}
inline void DB_BagItemLog::set_honor(::google::protobuf::int32 value) {
  _set_bit(7);
  honor_ = value;
}

// repeated int32 itemType = 9;
inline int DB_BagItemLog::itemtype_size() const {
  return itemtype_.size();
}
inline void DB_BagItemLog::clear_itemtype() {
  itemtype_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BagItemLog::itemtype() const {
  return itemtype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BagItemLog::mutable_itemtype() {
  return &itemtype_;
}
inline ::google::protobuf::int32 DB_BagItemLog::itemtype(int index) const {
  return itemtype_.Get(index);
}
inline void DB_BagItemLog::set_itemtype(int index, ::google::protobuf::int32 value) {
  itemtype_.Set(index, value);
}
inline void DB_BagItemLog::add_itemtype(::google::protobuf::int32 value) {
  itemtype_.Add(value);
}

// repeated int32 itemCnt = 10;
inline int DB_BagItemLog::itemcnt_size() const {
  return itemcnt_.size();
}
inline void DB_BagItemLog::clear_itemcnt() {
  itemcnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BagItemLog::itemcnt() const {
  return itemcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BagItemLog::mutable_itemcnt() {
  return &itemcnt_;
}
inline ::google::protobuf::int32 DB_BagItemLog::itemcnt(int index) const {
  return itemcnt_.Get(index);
}
inline void DB_BagItemLog::set_itemcnt(int index, ::google::protobuf::int32 value) {
  itemcnt_.Set(index, value);
}
inline void DB_BagItemLog::add_itemcnt(::google::protobuf::int32 value) {
  itemcnt_.Add(value);
}

// repeated int32 armyType = 11;
inline int DB_BagItemLog::armytype_size() const {
  return armytype_.size();
}
inline void DB_BagItemLog::clear_armytype() {
  armytype_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BagItemLog::armytype() const {
  return armytype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BagItemLog::mutable_armytype() {
  return &armytype_;
}
inline ::google::protobuf::int32 DB_BagItemLog::armytype(int index) const {
  return armytype_.Get(index);
}
inline void DB_BagItemLog::set_armytype(int index, ::google::protobuf::int32 value) {
  armytype_.Set(index, value);
}
inline void DB_BagItemLog::add_armytype(::google::protobuf::int32 value) {
  armytype_.Add(value);
}

// repeated int32 armyCnt = 12;
inline int DB_BagItemLog::armycnt_size() const {
  return armycnt_.size();
}
inline void DB_BagItemLog::clear_armycnt() {
  armycnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BagItemLog::armycnt() const {
  return armycnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BagItemLog::mutable_armycnt() {
  return &armycnt_;
}
inline ::google::protobuf::int32 DB_BagItemLog::armycnt(int index) const {
  return armycnt_.Get(index);
}
inline void DB_BagItemLog::set_armycnt(int index, ::google::protobuf::int32 value) {
  armycnt_.Set(index, value);
}
inline void DB_BagItemLog::add_armycnt(::google::protobuf::int32 value) {
  armycnt_.Add(value);
}

// repeated int32 weaponID = 13;
inline int DB_BagItemLog::weaponid_size() const {
  return weaponid_.size();
}
inline void DB_BagItemLog::clear_weaponid() {
  weaponid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BagItemLog::weaponid() const {
  return weaponid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BagItemLog::mutable_weaponid() {
  return &weaponid_;
}
inline ::google::protobuf::int32 DB_BagItemLog::weaponid(int index) const {
  return weaponid_.Get(index);
}
inline void DB_BagItemLog::set_weaponid(int index, ::google::protobuf::int32 value) {
  weaponid_.Set(index, value);
}
inline void DB_BagItemLog::add_weaponid(::google::protobuf::int32 value) {
  weaponid_.Add(value);
}

// repeated int32 emblemID = 14;
inline int DB_BagItemLog::emblemid_size() const {
  return emblemid_.size();
}
inline void DB_BagItemLog::clear_emblemid() {
  emblemid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BagItemLog::emblemid() const {
  return emblemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BagItemLog::mutable_emblemid() {
  return &emblemid_;
}
inline ::google::protobuf::int32 DB_BagItemLog::emblemid(int index) const {
  return emblemid_.Get(index);
}
inline void DB_BagItemLog::set_emblemid(int index, ::google::protobuf::int32 value) {
  emblemid_.Set(index, value);
}
inline void DB_BagItemLog::add_emblemid(::google::protobuf::int32 value) {
  emblemid_.Add(value);
}

// repeated int32 weaponCnt = 15;
inline int DB_BagItemLog::weaponcnt_size() const {
  return weaponcnt_.size();
}
inline void DB_BagItemLog::clear_weaponcnt() {
  weaponcnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BagItemLog::weaponcnt() const {
  return weaponcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BagItemLog::mutable_weaponcnt() {
  return &weaponcnt_;
}
inline ::google::protobuf::int32 DB_BagItemLog::weaponcnt(int index) const {
  return weaponcnt_.Get(index);
}
inline void DB_BagItemLog::set_weaponcnt(int index, ::google::protobuf::int32 value) {
  weaponcnt_.Set(index, value);
}
inline void DB_BagItemLog::add_weaponcnt(::google::protobuf::int32 value) {
  weaponcnt_.Add(value);
}

// repeated int32 emblemCnt = 16;
inline int DB_BagItemLog::emblemcnt_size() const {
  return emblemcnt_.size();
}
inline void DB_BagItemLog::clear_emblemcnt() {
  emblemcnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BagItemLog::emblemcnt() const {
  return emblemcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BagItemLog::mutable_emblemcnt() {
  return &emblemcnt_;
}
inline ::google::protobuf::int32 DB_BagItemLog::emblemcnt(int index) const {
  return emblemcnt_.Get(index);
}
inline void DB_BagItemLog::set_emblemcnt(int index, ::google::protobuf::int32 value) {
  emblemcnt_.Set(index, value);
}
inline void DB_BagItemLog::add_emblemcnt(::google::protobuf::int32 value) {
  emblemcnt_.Add(value);
}

// repeated int32 admiralID = 17;
inline int DB_BagItemLog::admiralid_size() const {
  return admiralid_.size();
}
inline void DB_BagItemLog::clear_admiralid() {
  admiralid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BagItemLog::admiralid() const {
  return admiralid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BagItemLog::mutable_admiralid() {
  return &admiralid_;
}
inline ::google::protobuf::int32 DB_BagItemLog::admiralid(int index) const {
  return admiralid_.Get(index);
}
inline void DB_BagItemLog::set_admiralid(int index, ::google::protobuf::int32 value) {
  admiralid_.Set(index, value);
}
inline void DB_BagItemLog::add_admiralid(::google::protobuf::int32 value) {
  admiralid_.Add(value);
}

// repeated int32 admiralCnt = 18;
inline int DB_BagItemLog::admiralcnt_size() const {
  return admiralcnt_.size();
}
inline void DB_BagItemLog::clear_admiralcnt() {
  admiralcnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BagItemLog::admiralcnt() const {
  return admiralcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BagItemLog::mutable_admiralcnt() {
  return &admiralcnt_;
}
inline ::google::protobuf::int32 DB_BagItemLog::admiralcnt(int index) const {
  return admiralcnt_.Get(index);
}
inline void DB_BagItemLog::set_admiralcnt(int index, ::google::protobuf::int32 value) {
  admiralcnt_.Set(index, value);
}
inline void DB_BagItemLog::add_admiralcnt(::google::protobuf::int32 value) {
  admiralcnt_.Add(value);
}

// optional int32 feats = 19;
inline bool DB_BagItemLog::has_feats() const {
  return _has_bit(18);
}
inline void DB_BagItemLog::clear_feats() {
  feats_ = 0;
  _clear_bit(18);
}
inline ::google::protobuf::int32 DB_BagItemLog::feats() const {
  return feats_;
}
inline void DB_BagItemLog::set_feats(::google::protobuf::int32 value) {
  _set_bit(18);
  feats_ = value;
}

// optional int32 thew = 20;
inline bool DB_BagItemLog::has_thew() const {
  return _has_bit(19);
}
inline void DB_BagItemLog::clear_thew() {
  thew_ = 0;
  _clear_bit(19);
}
inline ::google::protobuf::int32 DB_BagItemLog::thew() const {
  return thew_;
}
inline void DB_BagItemLog::set_thew(::google::protobuf::int32 value) {
  _set_bit(19);
  thew_ = value;
}

// optional int32 morale = 21;
inline bool DB_BagItemLog::has_morale() const {
  return _has_bit(20);
}
inline void DB_BagItemLog::clear_morale() {
  morale_ = 0;
  _clear_bit(20);
}
inline ::google::protobuf::int32 DB_BagItemLog::morale() const {
  return morale_;
}
inline void DB_BagItemLog::set_morale(::google::protobuf::int32 value) {
  _set_bit(20);
  morale_ = value;
}

// optional int32 zhangong = 22;
inline bool DB_BagItemLog::has_zhangong() const {
  return _has_bit(21);
}
inline void DB_BagItemLog::clear_zhangong() {
  zhangong_ = 0;
  _clear_bit(21);
}
inline ::google::protobuf::int32 DB_BagItemLog::zhangong() const {
  return zhangong_;
}
inline void DB_BagItemLog::set_zhangong(::google::protobuf::int32 value) {
  _set_bit(21);
  zhangong_ = value;
}

// repeated int32 equipID = 23;
inline int DB_BagItemLog::equipid_size() const {
  return equipid_.size();
}
inline void DB_BagItemLog::clear_equipid() {
  equipid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BagItemLog::equipid() const {
  return equipid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BagItemLog::mutable_equipid() {
  return &equipid_;
}
inline ::google::protobuf::int32 DB_BagItemLog::equipid(int index) const {
  return equipid_.Get(index);
}
inline void DB_BagItemLog::set_equipid(int index, ::google::protobuf::int32 value) {
  equipid_.Set(index, value);
}
inline void DB_BagItemLog::add_equipid(::google::protobuf::int32 value) {
  equipid_.Add(value);
}

// repeated int32 equipCnt = 24;
inline int DB_BagItemLog::equipcnt_size() const {
  return equipcnt_.size();
}
inline void DB_BagItemLog::clear_equipcnt() {
  equipcnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BagItemLog::equipcnt() const {
  return equipcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BagItemLog::mutable_equipcnt() {
  return &equipcnt_;
}
inline ::google::protobuf::int32 DB_BagItemLog::equipcnt(int index) const {
  return equipcnt_.Get(index);
}
inline void DB_BagItemLog::set_equipcnt(int index, ::google::protobuf::int32 value) {
  equipcnt_.Set(index, value);
}
inline void DB_BagItemLog::add_equipcnt(::google::protobuf::int32 value) {
  equipcnt_.Add(value);
}

// optional int32 gScore = 25;
inline bool DB_BagItemLog::has_gscore() const {
  return _has_bit(24);
}
inline void DB_BagItemLog::clear_gscore() {
  gscore_ = 0;
  _clear_bit(24);
}
inline ::google::protobuf::int32 DB_BagItemLog::gscore() const {
  return gscore_;
}
inline void DB_BagItemLog::set_gscore(::google::protobuf::int32 value) {
  _set_bit(24);
  gscore_ = value;
}

// optional int32 admiralsoul = 26;
inline bool DB_BagItemLog::has_admiralsoul() const {
  return _has_bit(25);
}
inline void DB_BagItemLog::clear_admiralsoul() {
  admiralsoul_ = 0;
  _clear_bit(25);
}
inline ::google::protobuf::int32 DB_BagItemLog::admiralsoul() const {
  return admiralsoul_;
}
inline void DB_BagItemLog::set_admiralsoul(::google::protobuf::int32 value) {
  _set_bit(25);
  admiralsoul_ = value;
}

// optional int32 cntrScore = 27 [default = 0];
inline bool DB_BagItemLog::has_cntrscore() const {
  return _has_bit(26);
}
inline void DB_BagItemLog::clear_cntrscore() {
  cntrscore_ = 0;
  _clear_bit(26);
}
inline ::google::protobuf::int32 DB_BagItemLog::cntrscore() const {
  return cntrscore_;
}
inline void DB_BagItemLog::set_cntrscore(::google::protobuf::int32 value) {
  _set_bit(26);
  cntrscore_ = value;
}

// repeated int32 admiralLetterID = 28;
inline int DB_BagItemLog::admiralletterid_size() const {
  return admiralletterid_.size();
}
inline void DB_BagItemLog::clear_admiralletterid() {
  admiralletterid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BagItemLog::admiralletterid() const {
  return admiralletterid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BagItemLog::mutable_admiralletterid() {
  return &admiralletterid_;
}
inline ::google::protobuf::int32 DB_BagItemLog::admiralletterid(int index) const {
  return admiralletterid_.Get(index);
}
inline void DB_BagItemLog::set_admiralletterid(int index, ::google::protobuf::int32 value) {
  admiralletterid_.Set(index, value);
}
inline void DB_BagItemLog::add_admiralletterid(::google::protobuf::int32 value) {
  admiralletterid_.Add(value);
}

// repeated int32 admiralLetterCnt = 29;
inline int DB_BagItemLog::admirallettercnt_size() const {
  return admirallettercnt_.size();
}
inline void DB_BagItemLog::clear_admirallettercnt() {
  admirallettercnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BagItemLog::admirallettercnt() const {
  return admirallettercnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BagItemLog::mutable_admirallettercnt() {
  return &admirallettercnt_;
}
inline ::google::protobuf::int32 DB_BagItemLog::admirallettercnt(int index) const {
  return admirallettercnt_.Get(index);
}
inline void DB_BagItemLog::set_admirallettercnt(int index, ::google::protobuf::int32 value) {
  admirallettercnt_.Set(index, value);
}
inline void DB_BagItemLog::add_admirallettercnt(::google::protobuf::int32 value) {
  admirallettercnt_.Add(value);
}

// repeated int32 heroLetterID = 30;
inline int DB_BagItemLog::heroletterid_size() const {
  return heroletterid_.size();
}
inline void DB_BagItemLog::clear_heroletterid() {
  heroletterid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BagItemLog::heroletterid() const {
  return heroletterid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BagItemLog::mutable_heroletterid() {
  return &heroletterid_;
}
inline ::google::protobuf::int32 DB_BagItemLog::heroletterid(int index) const {
  return heroletterid_.Get(index);
}
inline void DB_BagItemLog::set_heroletterid(int index, ::google::protobuf::int32 value) {
  heroletterid_.Set(index, value);
}
inline void DB_BagItemLog::add_heroletterid(::google::protobuf::int32 value) {
  heroletterid_.Add(value);
}

// repeated int32 heroLetterCnt = 31;
inline int DB_BagItemLog::herolettercnt_size() const {
  return herolettercnt_.size();
}
inline void DB_BagItemLog::clear_herolettercnt() {
  herolettercnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BagItemLog::herolettercnt() const {
  return herolettercnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BagItemLog::mutable_herolettercnt() {
  return &herolettercnt_;
}
inline ::google::protobuf::int32 DB_BagItemLog::herolettercnt(int index) const {
  return herolettercnt_.Get(index);
}
inline void DB_BagItemLog::set_herolettercnt(int index, ::google::protobuf::int32 value) {
  herolettercnt_.Set(index, value);
}
inline void DB_BagItemLog::add_herolettercnt(::google::protobuf::int32 value) {
  herolettercnt_.Add(value);
}

// optional int32 nMilitarySoul = 32;
inline bool DB_BagItemLog::has_nmilitarysoul() const {
  return _has_bit(31);
}
inline void DB_BagItemLog::clear_nmilitarysoul() {
  nmilitarysoul_ = 0;
  _clear_bit(31);
}
inline ::google::protobuf::int32 DB_BagItemLog::nmilitarysoul() const {
  return nmilitarysoul_;
}
inline void DB_BagItemLog::set_nmilitarysoul(::google::protobuf::int32 value) {
  _set_bit(31);
  nmilitarysoul_ = value;
}

// -------------------------------------------------------------------

// DB_Log

// repeated .DB_BagItemLog itemLog = 1;
inline int DB_Log::itemlog_size() const {
  return itemlog_.size();
}
inline void DB_Log::clear_itemlog() {
  itemlog_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_BagItemLog >&
DB_Log::itemlog() const {
  return itemlog_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_BagItemLog >*
DB_Log::mutable_itemlog() {
  return &itemlog_;
}
inline const ::DB_BagItemLog& DB_Log::itemlog(int index) const {
  return itemlog_.Get(index);
}
inline ::DB_BagItemLog* DB_Log::mutable_itemlog(int index) {
  return itemlog_.Mutable(index);
}
inline ::DB_BagItemLog* DB_Log::add_itemlog() {
  return itemlog_.Add();
}

// -------------------------------------------------------------------

// DB_BagItem

// optional int32 itemID = 1 [default = 0];
inline bool DB_BagItem::has_itemid() const {
  return _has_bit(0);
}
inline void DB_BagItem::clear_itemid() {
  itemid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_BagItem::itemid() const {
  return itemid_;
}
inline void DB_BagItem::set_itemid(::google::protobuf::int32 value) {
  _set_bit(0);
  itemid_ = value;
}

// optional int32 count = 2 [default = 0];
inline bool DB_BagItem::has_count() const {
  return _has_bit(1);
}
inline void DB_BagItem::clear_count() {
  count_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_BagItem::count() const {
  return count_;
}
inline void DB_BagItem::set_count(::google::protobuf::int32 value) {
  _set_bit(1);
  count_ = value;
}

// optional int32 id = 3 [default = 0];
inline bool DB_BagItem::has_id() const {
  return _has_bit(2);
}
inline void DB_BagItem::clear_id() {
  id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_BagItem::id() const {
  return id_;
}
inline void DB_BagItem::set_id(::google::protobuf::int32 value) {
  _set_bit(2);
  id_ = value;
}

// optional int32 getTime = 4 [default = 0];
inline bool DB_BagItem::has_gettime() const {
  return _has_bit(3);
}
inline void DB_BagItem::clear_gettime() {
  gettime_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_BagItem::gettime() const {
  return gettime_;
}
inline void DB_BagItem::set_gettime(::google::protobuf::int32 value) {
  _set_bit(3);
  gettime_ = value;
}

// -------------------------------------------------------------------

// DB_Bag

// repeated .DB_BagItem bagItem = 1;
inline int DB_Bag::bagitem_size() const {
  return bagitem_.size();
}
inline void DB_Bag::clear_bagitem() {
  bagitem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_BagItem >&
DB_Bag::bagitem() const {
  return bagitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_BagItem >*
DB_Bag::mutable_bagitem() {
  return &bagitem_;
}
inline const ::DB_BagItem& DB_Bag::bagitem(int index) const {
  return bagitem_.Get(index);
}
inline ::DB_BagItem* DB_Bag::mutable_bagitem(int index) {
  return bagitem_.Mutable(index);
}
inline ::DB_BagItem* DB_Bag::add_bagitem() {
  return bagitem_.Add();
}

// optional int32 lastOpenTime = 2 [default = 0];
inline bool DB_Bag::has_lastopentime() const {
  return _has_bit(1);
}
inline void DB_Bag::clear_lastopentime() {
  lastopentime_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Bag::lastopentime() const {
  return lastopentime_;
}
inline void DB_Bag::set_lastopentime(::google::protobuf::int32 value) {
  _set_bit(1);
  lastopentime_ = value;
}

// optional int32 bagLV = 3 [default = 0];
inline bool DB_Bag::has_baglv() const {
  return _has_bit(2);
}
inline void DB_Bag::clear_baglv() {
  baglv_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Bag::baglv() const {
  return baglv_;
}
inline void DB_Bag::set_baglv(::google::protobuf::int32 value) {
  _set_bit(2);
  baglv_ = value;
}

// optional int32 bagUseCnt = 4 [default = 0];
inline bool DB_Bag::has_bagusecnt() const {
  return _has_bit(3);
}
inline void DB_Bag::clear_bagusecnt() {
  bagusecnt_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Bag::bagusecnt() const {
  return bagusecnt_;
}
inline void DB_Bag::set_bagusecnt(::google::protobuf::int32 value) {
  _set_bit(3);
  bagusecnt_ = value;
}

// repeated .DB_BagItem tmpBagItem = 5;
inline int DB_Bag::tmpbagitem_size() const {
  return tmpbagitem_.size();
}
inline void DB_Bag::clear_tmpbagitem() {
  tmpbagitem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_BagItem >&
DB_Bag::tmpbagitem() const {
  return tmpbagitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_BagItem >*
DB_Bag::mutable_tmpbagitem() {
  return &tmpbagitem_;
}
inline const ::DB_BagItem& DB_Bag::tmpbagitem(int index) const {
  return tmpbagitem_.Get(index);
}
inline ::DB_BagItem* DB_Bag::mutable_tmpbagitem(int index) {
  return tmpbagitem_.Mutable(index);
}
inline ::DB_BagItem* DB_Bag::add_tmpbagitem() {
  return tmpbagitem_.Add();
}

// repeated .DB_BagItem virtualBagItem = 6;
inline int DB_Bag::virtualbagitem_size() const {
  return virtualbagitem_.size();
}
inline void DB_Bag::clear_virtualbagitem() {
  virtualbagitem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_BagItem >&
DB_Bag::virtualbagitem() const {
  return virtualbagitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_BagItem >*
DB_Bag::mutable_virtualbagitem() {
  return &virtualbagitem_;
}
inline const ::DB_BagItem& DB_Bag::virtualbagitem(int index) const {
  return virtualbagitem_.Get(index);
}
inline ::DB_BagItem* DB_Bag::mutable_virtualbagitem(int index) {
  return virtualbagitem_.Mutable(index);
}
inline ::DB_BagItem* DB_Bag::add_virtualbagitem() {
  return virtualbagitem_.Add();
}

// -------------------------------------------------------------------

// DB_MoonCake

// optional int32 moonCakeCnt = 1 [default = 0];
inline bool DB_MoonCake::has_mooncakecnt() const {
  return _has_bit(0);
}
inline void DB_MoonCake::clear_mooncakecnt() {
  mooncakecnt_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_MoonCake::mooncakecnt() const {
  return mooncakecnt_;
}
inline void DB_MoonCake::set_mooncakecnt(::google::protobuf::int32 value) {
  _set_bit(0);
  mooncakecnt_ = value;
}

// optional int32 goldLevel = 2 [default = 0];
inline bool DB_MoonCake::has_goldlevel() const {
  return _has_bit(1);
}
inline void DB_MoonCake::clear_goldlevel() {
  goldlevel_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_MoonCake::goldlevel() const {
  return goldlevel_;
}
inline void DB_MoonCake::set_goldlevel(::google::protobuf::int32 value) {
  _set_bit(1);
  goldlevel_ = value;
}

// optional int32 silverLevel = 3 [default = 0];
inline bool DB_MoonCake::has_silverlevel() const {
  return _has_bit(2);
}
inline void DB_MoonCake::clear_silverlevel() {
  silverlevel_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_MoonCake::silverlevel() const {
  return silverlevel_;
}
inline void DB_MoonCake::set_silverlevel(::google::protobuf::int32 value) {
  _set_bit(2);
  silverlevel_ = value;
}

// repeated int64 frdID = 4;
inline int DB_MoonCake::frdid_size() const {
  return frdid_.size();
}
inline void DB_MoonCake::clear_frdid() {
  frdid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DB_MoonCake::frdid() const {
  return frdid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DB_MoonCake::mutable_frdid() {
  return &frdid_;
}
inline ::google::protobuf::int64 DB_MoonCake::frdid(int index) const {
  return frdid_.Get(index);
}
inline void DB_MoonCake::set_frdid(int index, ::google::protobuf::int64 value) {
  frdid_.Set(index, value);
}
inline void DB_MoonCake::add_frdid(::google::protobuf::int64 value) {
  frdid_.Add(value);
}

// repeated int32 visitFrdCnt = 5;
inline int DB_MoonCake::visitfrdcnt_size() const {
  return visitfrdcnt_.size();
}
inline void DB_MoonCake::clear_visitfrdcnt() {
  visitfrdcnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_MoonCake::visitfrdcnt() const {
  return visitfrdcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_MoonCake::mutable_visitfrdcnt() {
  return &visitfrdcnt_;
}
inline ::google::protobuf::int32 DB_MoonCake::visitfrdcnt(int index) const {
  return visitfrdcnt_.Get(index);
}
inline void DB_MoonCake::set_visitfrdcnt(int index, ::google::protobuf::int32 value) {
  visitfrdcnt_.Set(index, value);
}
inline void DB_MoonCake::add_visitfrdcnt(::google::protobuf::int32 value) {
  visitfrdcnt_.Add(value);
}

// optional int32 dayAccSucCnt = 6 [default = 0];
inline bool DB_MoonCake::has_dayaccsuccnt() const {
  return _has_bit(5);
}
inline void DB_MoonCake::clear_dayaccsuccnt() {
  dayaccsuccnt_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_MoonCake::dayaccsuccnt() const {
  return dayaccsuccnt_;
}
inline void DB_MoonCake::set_dayaccsuccnt(::google::protobuf::int32 value) {
  _set_bit(5);
  dayaccsuccnt_ = value;
}

// repeated int32 getAccRewardCnt = 7;
inline int DB_MoonCake::getaccrewardcnt_size() const {
  return getaccrewardcnt_.size();
}
inline void DB_MoonCake::clear_getaccrewardcnt() {
  getaccrewardcnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_MoonCake::getaccrewardcnt() const {
  return getaccrewardcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_MoonCake::mutable_getaccrewardcnt() {
  return &getaccrewardcnt_;
}
inline ::google::protobuf::int32 DB_MoonCake::getaccrewardcnt(int index) const {
  return getaccrewardcnt_.Get(index);
}
inline void DB_MoonCake::set_getaccrewardcnt(int index, ::google::protobuf::int32 value) {
  getaccrewardcnt_.Set(index, value);
}
inline void DB_MoonCake::add_getaccrewardcnt(::google::protobuf::int32 value) {
  getaccrewardcnt_.Add(value);
}

// optional int64 lastLoginTime = 8 [default = 0];
inline bool DB_MoonCake::has_lastlogintime() const {
  return _has_bit(7);
}
inline void DB_MoonCake::clear_lastlogintime() {
  lastlogintime_ = GOOGLE_LONGLONG(0);
  _clear_bit(7);
}
inline ::google::protobuf::int64 DB_MoonCake::lastlogintime() const {
  return lastlogintime_;
}
inline void DB_MoonCake::set_lastlogintime(::google::protobuf::int64 value) {
  _set_bit(7);
  lastlogintime_ = value;
}

// optional int32 accSucMoonCakeCnt = 9 [default = 0];
inline bool DB_MoonCake::has_accsucmooncakecnt() const {
  return _has_bit(8);
}
inline void DB_MoonCake::clear_accsucmooncakecnt() {
  accsucmooncakecnt_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_MoonCake::accsucmooncakecnt() const {
  return accsucmooncakecnt_;
}
inline void DB_MoonCake::set_accsucmooncakecnt(::google::protobuf::int32 value) {
  _set_bit(8);
  accsucmooncakecnt_ = value;
}

// optional int32 maxSucMoonCakeCnt = 10 [default = 0];
inline bool DB_MoonCake::has_maxsucmooncakecnt() const {
  return _has_bit(9);
}
inline void DB_MoonCake::clear_maxsucmooncakecnt() {
  maxsucmooncakecnt_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 DB_MoonCake::maxsucmooncakecnt() const {
  return maxsucmooncakecnt_;
}
inline void DB_MoonCake::set_maxsucmooncakecnt(::google::protobuf::int32 value) {
  _set_bit(9);
  maxsucmooncakecnt_ = value;
}

// optional int32 activeFlag = 11 [default = 0];
inline bool DB_MoonCake::has_activeflag() const {
  return _has_bit(10);
}
inline void DB_MoonCake::clear_activeflag() {
  activeflag_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 DB_MoonCake::activeflag() const {
  return activeflag_;
}
inline void DB_MoonCake::set_activeflag(::google::protobuf::int32 value) {
  _set_bit(10);
  activeflag_ = value;
}

// optional int32 dayGetFlag1Cnt = 12 [default = 0];
inline bool DB_MoonCake::has_daygetflag1cnt() const {
  return _has_bit(11);
}
inline void DB_MoonCake::clear_daygetflag1cnt() {
  daygetflag1cnt_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 DB_MoonCake::daygetflag1cnt() const {
  return daygetflag1cnt_;
}
inline void DB_MoonCake::set_daygetflag1cnt(::google::protobuf::int32 value) {
  _set_bit(11);
  daygetflag1cnt_ = value;
}

// optional int32 accGetFlag1Cnt = 13 [default = 0];
inline bool DB_MoonCake::has_accgetflag1cnt() const {
  return _has_bit(12);
}
inline void DB_MoonCake::clear_accgetflag1cnt() {
  accgetflag1cnt_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 DB_MoonCake::accgetflag1cnt() const {
  return accgetflag1cnt_;
}
inline void DB_MoonCake::set_accgetflag1cnt(::google::protobuf::int32 value) {
  _set_bit(12);
  accgetflag1cnt_ = value;
}

// optional int32 accGetFlag2Cnt = 14 [default = 0];
inline bool DB_MoonCake::has_accgetflag2cnt() const {
  return _has_bit(13);
}
inline void DB_MoonCake::clear_accgetflag2cnt() {
  accgetflag2cnt_ = 0;
  _clear_bit(13);
}
inline ::google::protobuf::int32 DB_MoonCake::accgetflag2cnt() const {
  return accgetflag2cnt_;
}
inline void DB_MoonCake::set_accgetflag2cnt(::google::protobuf::int32 value) {
  _set_bit(13);
  accgetflag2cnt_ = value;
}

// optional int32 dayGetFlag2Cnt = 15 [default = 0];
inline bool DB_MoonCake::has_daygetflag2cnt() const {
  return _has_bit(14);
}
inline void DB_MoonCake::clear_daygetflag2cnt() {
  daygetflag2cnt_ = 0;
  _clear_bit(14);
}
inline ::google::protobuf::int32 DB_MoonCake::daygetflag2cnt() const {
  return daygetflag2cnt_;
}
inline void DB_MoonCake::set_daygetflag2cnt(::google::protobuf::int32 value) {
  _set_bit(14);
  daygetflag2cnt_ = value;
}

// -------------------------------------------------------------------

// DB_HolidayDraw

// optional int32 activeFlag = 1 [default = 0];
inline bool DB_HolidayDraw::has_activeflag() const {
  return _has_bit(0);
}
inline void DB_HolidayDraw::clear_activeflag() {
  activeflag_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_HolidayDraw::activeflag() const {
  return activeflag_;
}
inline void DB_HolidayDraw::set_activeflag(::google::protobuf::int32 value) {
  _set_bit(0);
  activeflag_ = value;
}

// optional int32 goldLevel = 2 [default = 0];
inline bool DB_HolidayDraw::has_goldlevel() const {
  return _has_bit(1);
}
inline void DB_HolidayDraw::clear_goldlevel() {
  goldlevel_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_HolidayDraw::goldlevel() const {
  return goldlevel_;
}
inline void DB_HolidayDraw::set_goldlevel(::google::protobuf::int32 value) {
  _set_bit(1);
  goldlevel_ = value;
}

// optional int32 silverLevel = 3 [default = 0];
inline bool DB_HolidayDraw::has_silverlevel() const {
  return _has_bit(2);
}
inline void DB_HolidayDraw::clear_silverlevel() {
  silverlevel_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_HolidayDraw::silverlevel() const {
  return silverlevel_;
}
inline void DB_HolidayDraw::set_silverlevel(::google::protobuf::int32 value) {
  _set_bit(2);
  silverlevel_ = value;
}

// repeated int64 frdID = 4;
inline int DB_HolidayDraw::frdid_size() const {
  return frdid_.size();
}
inline void DB_HolidayDraw::clear_frdid() {
  frdid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DB_HolidayDraw::frdid() const {
  return frdid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DB_HolidayDraw::mutable_frdid() {
  return &frdid_;
}
inline ::google::protobuf::int64 DB_HolidayDraw::frdid(int index) const {
  return frdid_.Get(index);
}
inline void DB_HolidayDraw::set_frdid(int index, ::google::protobuf::int64 value) {
  frdid_.Set(index, value);
}
inline void DB_HolidayDraw::add_frdid(::google::protobuf::int64 value) {
  frdid_.Add(value);
}

// repeated int32 visitFrdCnt = 5;
inline int DB_HolidayDraw::visitfrdcnt_size() const {
  return visitfrdcnt_.size();
}
inline void DB_HolidayDraw::clear_visitfrdcnt() {
  visitfrdcnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_HolidayDraw::visitfrdcnt() const {
  return visitfrdcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_HolidayDraw::mutable_visitfrdcnt() {
  return &visitfrdcnt_;
}
inline ::google::protobuf::int32 DB_HolidayDraw::visitfrdcnt(int index) const {
  return visitfrdcnt_.Get(index);
}
inline void DB_HolidayDraw::set_visitfrdcnt(int index, ::google::protobuf::int32 value) {
  visitfrdcnt_.Set(index, value);
}
inline void DB_HolidayDraw::add_visitfrdcnt(::google::protobuf::int32 value) {
  visitfrdcnt_.Add(value);
}

// optional int32 dayAccSucCnt = 6 [default = 0];
inline bool DB_HolidayDraw::has_dayaccsuccnt() const {
  return _has_bit(5);
}
inline void DB_HolidayDraw::clear_dayaccsuccnt() {
  dayaccsuccnt_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_HolidayDraw::dayaccsuccnt() const {
  return dayaccsuccnt_;
}
inline void DB_HolidayDraw::set_dayaccsuccnt(::google::protobuf::int32 value) {
  _set_bit(5);
  dayaccsuccnt_ = value;
}

// repeated int32 getAccRewardCnt = 7;
inline int DB_HolidayDraw::getaccrewardcnt_size() const {
  return getaccrewardcnt_.size();
}
inline void DB_HolidayDraw::clear_getaccrewardcnt() {
  getaccrewardcnt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_HolidayDraw::getaccrewardcnt() const {
  return getaccrewardcnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_HolidayDraw::mutable_getaccrewardcnt() {
  return &getaccrewardcnt_;
}
inline ::google::protobuf::int32 DB_HolidayDraw::getaccrewardcnt(int index) const {
  return getaccrewardcnt_.Get(index);
}
inline void DB_HolidayDraw::set_getaccrewardcnt(int index, ::google::protobuf::int32 value) {
  getaccrewardcnt_.Set(index, value);
}
inline void DB_HolidayDraw::add_getaccrewardcnt(::google::protobuf::int32 value) {
  getaccrewardcnt_.Add(value);
}

// optional int32 dayGetFlag1Cnt = 8 [default = 0];
inline bool DB_HolidayDraw::has_daygetflag1cnt() const {
  return _has_bit(7);
}
inline void DB_HolidayDraw::clear_daygetflag1cnt() {
  daygetflag1cnt_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_HolidayDraw::daygetflag1cnt() const {
  return daygetflag1cnt_;
}
inline void DB_HolidayDraw::set_daygetflag1cnt(::google::protobuf::int32 value) {
  _set_bit(7);
  daygetflag1cnt_ = value;
}

// optional int32 accGetFlag1Cnt = 9 [default = 0];
inline bool DB_HolidayDraw::has_accgetflag1cnt() const {
  return _has_bit(8);
}
inline void DB_HolidayDraw::clear_accgetflag1cnt() {
  accgetflag1cnt_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_HolidayDraw::accgetflag1cnt() const {
  return accgetflag1cnt_;
}
inline void DB_HolidayDraw::set_accgetflag1cnt(::google::protobuf::int32 value) {
  _set_bit(8);
  accgetflag1cnt_ = value;
}

// optional int32 accGetFlag2Cnt = 10 [default = 0];
inline bool DB_HolidayDraw::has_accgetflag2cnt() const {
  return _has_bit(9);
}
inline void DB_HolidayDraw::clear_accgetflag2cnt() {
  accgetflag2cnt_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 DB_HolidayDraw::accgetflag2cnt() const {
  return accgetflag2cnt_;
}
inline void DB_HolidayDraw::set_accgetflag2cnt(::google::protobuf::int32 value) {
  _set_bit(9);
  accgetflag2cnt_ = value;
}

// optional int32 dayGetFlag2Cnt = 11 [default = 0];
inline bool DB_HolidayDraw::has_daygetflag2cnt() const {
  return _has_bit(10);
}
inline void DB_HolidayDraw::clear_daygetflag2cnt() {
  daygetflag2cnt_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 DB_HolidayDraw::daygetflag2cnt() const {
  return daygetflag2cnt_;
}
inline void DB_HolidayDraw::set_daygetflag2cnt(::google::protobuf::int32 value) {
  _set_bit(10);
  daygetflag2cnt_ = value;
}

// optional int64 lastGetTime = 12 [default = 0];
inline bool DB_HolidayDraw::has_lastgettime() const {
  return _has_bit(11);
}
inline void DB_HolidayDraw::clear_lastgettime() {
  lastgettime_ = GOOGLE_LONGLONG(0);
  _clear_bit(11);
}
inline ::google::protobuf::int64 DB_HolidayDraw::lastgettime() const {
  return lastgettime_;
}
inline void DB_HolidayDraw::set_lastgettime(::google::protobuf::int64 value) {
  _set_bit(11);
  lastgettime_ = value;
}

// optional int32 dayFreeCnt = 16 [default = 0];
inline bool DB_HolidayDraw::has_dayfreecnt() const {
  return _has_bit(12);
}
inline void DB_HolidayDraw::clear_dayfreecnt() {
  dayfreecnt_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 DB_HolidayDraw::dayfreecnt() const {
  return dayfreecnt_;
}
inline void DB_HolidayDraw::set_dayfreecnt(::google::protobuf::int32 value) {
  _set_bit(12);
  dayfreecnt_ = value;
}

// optional int32 dayCostCreditTime = 17 [default = 0];
inline bool DB_HolidayDraw::has_daycostcredittime() const {
  return _has_bit(13);
}
inline void DB_HolidayDraw::clear_daycostcredittime() {
  daycostcredittime_ = 0;
  _clear_bit(13);
}
inline ::google::protobuf::int32 DB_HolidayDraw::daycostcredittime() const {
  return daycostcredittime_;
}
inline void DB_HolidayDraw::set_daycostcredittime(::google::protobuf::int32 value) {
  _set_bit(13);
  daycostcredittime_ = value;
}

// optional bool hasGetRank = 18 [default = false];
inline bool DB_HolidayDraw::has_hasgetrank() const {
  return _has_bit(14);
}
inline void DB_HolidayDraw::clear_hasgetrank() {
  hasgetrank_ = false;
  _clear_bit(14);
}
inline bool DB_HolidayDraw::hasgetrank() const {
  return hasgetrank_;
}
inline void DB_HolidayDraw::set_hasgetrank(bool value) {
  _set_bit(14);
  hasgetrank_ = value;
}

// optional int32 dayAgainCnt = 19 [default = 0];
inline bool DB_HolidayDraw::has_dayagaincnt() const {
  return _has_bit(15);
}
inline void DB_HolidayDraw::clear_dayagaincnt() {
  dayagaincnt_ = 0;
  _clear_bit(15);
}
inline ::google::protobuf::int32 DB_HolidayDraw::dayagaincnt() const {
  return dayagaincnt_;
}
inline void DB_HolidayDraw::set_dayagaincnt(::google::protobuf::int32 value) {
  _set_bit(15);
  dayagaincnt_ = value;
}

// -------------------------------------------------------------------

// DB_LeaveMessage_Unit

// optional int32 nType = 1 [default = 0];
inline bool DB_LeaveMessage_Unit::has_ntype() const {
  return _has_bit(0);
}
inline void DB_LeaveMessage_Unit::clear_ntype() {
  ntype_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_LeaveMessage_Unit::ntype() const {
  return ntype_;
}
inline void DB_LeaveMessage_Unit::set_ntype(::google::protobuf::int32 value) {
  _set_bit(0);
  ntype_ = value;
}

// optional int32 nID = 2 [default = 0];
inline bool DB_LeaveMessage_Unit::has_nid() const {
  return _has_bit(1);
}
inline void DB_LeaveMessage_Unit::clear_nid() {
  nid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_LeaveMessage_Unit::nid() const {
  return nid_;
}
inline void DB_LeaveMessage_Unit::set_nid(::google::protobuf::int32 value) {
  _set_bit(1);
  nid_ = value;
}

// optional string strMsg = 3 [default = ""];
inline bool DB_LeaveMessage_Unit::has_strmsg() const {
  return _has_bit(2);
}
inline void DB_LeaveMessage_Unit::clear_strmsg() {
  if (strmsg_ != &_default_strmsg_) {
    strmsg_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& DB_LeaveMessage_Unit::strmsg() const {
  return *strmsg_;
}
inline void DB_LeaveMessage_Unit::set_strmsg(const ::std::string& value) {
  _set_bit(2);
  if (strmsg_ == &_default_strmsg_) {
    strmsg_ = new ::std::string;
  }
  strmsg_->assign(value);
}
inline void DB_LeaveMessage_Unit::set_strmsg(const char* value) {
  _set_bit(2);
  if (strmsg_ == &_default_strmsg_) {
    strmsg_ = new ::std::string;
  }
  strmsg_->assign(value);
}
inline void DB_LeaveMessage_Unit::set_strmsg(const char* value, size_t size) {
  _set_bit(2);
  if (strmsg_ == &_default_strmsg_) {
    strmsg_ = new ::std::string;
  }
  strmsg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_LeaveMessage_Unit::mutable_strmsg() {
  _set_bit(2);
  if (strmsg_ == &_default_strmsg_) {
    strmsg_ = new ::std::string;
  }
  return strmsg_;
}

// optional uint32 msgtime = 4 [default = 0];
inline bool DB_LeaveMessage_Unit::has_msgtime() const {
  return _has_bit(3);
}
inline void DB_LeaveMessage_Unit::clear_msgtime() {
  msgtime_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 DB_LeaveMessage_Unit::msgtime() const {
  return msgtime_;
}
inline void DB_LeaveMessage_Unit::set_msgtime(::google::protobuf::uint32 value) {
  _set_bit(3);
  msgtime_ = value;
}

// optional string strName = 5 [default = ""];
inline bool DB_LeaveMessage_Unit::has_strname() const {
  return _has_bit(4);
}
inline void DB_LeaveMessage_Unit::clear_strname() {
  if (strname_ != &_default_strname_) {
    strname_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& DB_LeaveMessage_Unit::strname() const {
  return *strname_;
}
inline void DB_LeaveMessage_Unit::set_strname(const ::std::string& value) {
  _set_bit(4);
  if (strname_ == &_default_strname_) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void DB_LeaveMessage_Unit::set_strname(const char* value) {
  _set_bit(4);
  if (strname_ == &_default_strname_) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void DB_LeaveMessage_Unit::set_strname(const char* value, size_t size) {
  _set_bit(4);
  if (strname_ == &_default_strname_) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_LeaveMessage_Unit::mutable_strname() {
  _set_bit(4);
  if (strname_ == &_default_strname_) {
    strname_ = new ::std::string;
  }
  return strname_;
}

// optional string strUid = 6 [default = ""];
inline bool DB_LeaveMessage_Unit::has_struid() const {
  return _has_bit(5);
}
inline void DB_LeaveMessage_Unit::clear_struid() {
  if (struid_ != &_default_struid_) {
    struid_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& DB_LeaveMessage_Unit::struid() const {
  return *struid_;
}
inline void DB_LeaveMessage_Unit::set_struid(const ::std::string& value) {
  _set_bit(5);
  if (struid_ == &_default_struid_) {
    struid_ = new ::std::string;
  }
  struid_->assign(value);
}
inline void DB_LeaveMessage_Unit::set_struid(const char* value) {
  _set_bit(5);
  if (struid_ == &_default_struid_) {
    struid_ = new ::std::string;
  }
  struid_->assign(value);
}
inline void DB_LeaveMessage_Unit::set_struid(const char* value, size_t size) {
  _set_bit(5);
  if (struid_ == &_default_struid_) {
    struid_ = new ::std::string;
  }
  struid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_LeaveMessage_Unit::mutable_struid() {
  _set_bit(5);
  if (struid_ == &_default_struid_) {
    struid_ = new ::std::string;
  }
  return struid_;
}

// -------------------------------------------------------------------

// DB_LeaveMessage

// optional int32 nTimes = 1 [default = 0];
inline bool DB_LeaveMessage::has_ntimes() const {
  return _has_bit(0);
}
inline void DB_LeaveMessage::clear_ntimes() {
  ntimes_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_LeaveMessage::ntimes() const {
  return ntimes_;
}
inline void DB_LeaveMessage::set_ntimes(::google::protobuf::int32 value) {
  _set_bit(0);
  ntimes_ = value;
}

// optional int64 viewtargetuin = 2;
inline bool DB_LeaveMessage::has_viewtargetuin() const {
  return _has_bit(1);
}
inline void DB_LeaveMessage::clear_viewtargetuin() {
  viewtargetuin_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 DB_LeaveMessage::viewtargetuin() const {
  return viewtargetuin_;
}
inline void DB_LeaveMessage::set_viewtargetuin(::google::protobuf::int64 value) {
  _set_bit(1);
  viewtargetuin_ = value;
}

// optional bool bIsNew = 3;
inline bool DB_LeaveMessage::has_bisnew() const {
  return _has_bit(2);
}
inline void DB_LeaveMessage::clear_bisnew() {
  bisnew_ = false;
  _clear_bit(2);
}
inline bool DB_LeaveMessage::bisnew() const {
  return bisnew_;
}
inline void DB_LeaveMessage::set_bisnew(bool value) {
  _set_bit(2);
  bisnew_ = value;
}

// repeated .DB_LeaveMessage_Unit leavemessagearr = 4;
inline int DB_LeaveMessage::leavemessagearr_size() const {
  return leavemessagearr_.size();
}
inline void DB_LeaveMessage::clear_leavemessagearr() {
  leavemessagearr_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_LeaveMessage_Unit >&
DB_LeaveMessage::leavemessagearr() const {
  return leavemessagearr_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_LeaveMessage_Unit >*
DB_LeaveMessage::mutable_leavemessagearr() {
  return &leavemessagearr_;
}
inline const ::DB_LeaveMessage_Unit& DB_LeaveMessage::leavemessagearr(int index) const {
  return leavemessagearr_.Get(index);
}
inline ::DB_LeaveMessage_Unit* DB_LeaveMessage::mutable_leavemessagearr(int index) {
  return leavemessagearr_.Mutable(index);
}
inline ::DB_LeaveMessage_Unit* DB_LeaveMessage::add_leavemessagearr() {
  return leavemessagearr_.Add();
}

// -------------------------------------------------------------------

// DB_TXMissionData

// optional string missionid = 1 [default = ""];
inline bool DB_TXMissionData::has_missionid() const {
  return _has_bit(0);
}
inline void DB_TXMissionData::clear_missionid() {
  if (missionid_ != &_default_missionid_) {
    missionid_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& DB_TXMissionData::missionid() const {
  return *missionid_;
}
inline void DB_TXMissionData::set_missionid(const ::std::string& value) {
  _set_bit(0);
  if (missionid_ == &_default_missionid_) {
    missionid_ = new ::std::string;
  }
  missionid_->assign(value);
}
inline void DB_TXMissionData::set_missionid(const char* value) {
  _set_bit(0);
  if (missionid_ == &_default_missionid_) {
    missionid_ = new ::std::string;
  }
  missionid_->assign(value);
}
inline void DB_TXMissionData::set_missionid(const char* value, size_t size) {
  _set_bit(0);
  if (missionid_ == &_default_missionid_) {
    missionid_ = new ::std::string;
  }
  missionid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_TXMissionData::mutable_missionid() {
  _set_bit(0);
  if (missionid_ == &_default_missionid_) {
    missionid_ = new ::std::string;
  }
  return missionid_;
}

// optional int32 missionstate = 2 [default = -1];
inline bool DB_TXMissionData::has_missionstate() const {
  return _has_bit(1);
}
inline void DB_TXMissionData::clear_missionstate() {
  missionstate_ = -1;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_TXMissionData::missionstate() const {
  return missionstate_;
}
inline void DB_TXMissionData::set_missionstate(::google::protobuf::int32 value) {
  _set_bit(1);
  missionstate_ = value;
}

// -------------------------------------------------------------------

// DB_ClientNumStat

// repeated int32 dayStatType = 2;
inline int DB_ClientNumStat::daystattype_size() const {
  return daystattype_.size();
}
inline void DB_ClientNumStat::clear_daystattype() {
  daystattype_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_ClientNumStat::daystattype() const {
  return daystattype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_ClientNumStat::mutable_daystattype() {
  return &daystattype_;
}
inline ::google::protobuf::int32 DB_ClientNumStat::daystattype(int index) const {
  return daystattype_.Get(index);
}
inline void DB_ClientNumStat::set_daystattype(int index, ::google::protobuf::int32 value) {
  daystattype_.Set(index, value);
}
inline void DB_ClientNumStat::add_daystattype(::google::protobuf::int32 value) {
  daystattype_.Add(value);
}

// repeated int32 dayStatNum = 3;
inline int DB_ClientNumStat::daystatnum_size() const {
  return daystatnum_.size();
}
inline void DB_ClientNumStat::clear_daystatnum() {
  daystatnum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_ClientNumStat::daystatnum() const {
  return daystatnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_ClientNumStat::mutable_daystatnum() {
  return &daystatnum_;
}
inline ::google::protobuf::int32 DB_ClientNumStat::daystatnum(int index) const {
  return daystatnum_.Get(index);
}
inline void DB_ClientNumStat::set_daystatnum(int index, ::google::protobuf::int32 value) {
  daystatnum_.Set(index, value);
}
inline void DB_ClientNumStat::add_daystatnum(::google::protobuf::int32 value) {
  daystatnum_.Add(value);
}

// -------------------------------------------------------------------

// DB_PokerInfo

// optional int32 pokerNo = 1;
inline bool DB_PokerInfo::has_pokerno() const {
  return _has_bit(0);
}
inline void DB_PokerInfo::clear_pokerno() {
  pokerno_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_PokerInfo::pokerno() const {
  return pokerno_;
}
inline void DB_PokerInfo::set_pokerno(::google::protobuf::int32 value) {
  _set_bit(0);
  pokerno_ = value;
}

// optional int32 pokerColour = 2;
inline bool DB_PokerInfo::has_pokercolour() const {
  return _has_bit(1);
}
inline void DB_PokerInfo::clear_pokercolour() {
  pokercolour_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_PokerInfo::pokercolour() const {
  return pokercolour_;
}
inline void DB_PokerInfo::set_pokercolour(::google::protobuf::int32 value) {
  _set_bit(1);
  pokercolour_ = value;
}

// -------------------------------------------------------------------

// DB_CurrPokerInfo

// repeated .DB_PokerInfo userPokers = 1;
inline int DB_CurrPokerInfo::userpokers_size() const {
  return userpokers_.size();
}
inline void DB_CurrPokerInfo::clear_userpokers() {
  userpokers_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_PokerInfo >&
DB_CurrPokerInfo::userpokers() const {
  return userpokers_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_PokerInfo >*
DB_CurrPokerInfo::mutable_userpokers() {
  return &userpokers_;
}
inline const ::DB_PokerInfo& DB_CurrPokerInfo::userpokers(int index) const {
  return userpokers_.Get(index);
}
inline ::DB_PokerInfo* DB_CurrPokerInfo::mutable_userpokers(int index) {
  return userpokers_.Mutable(index);
}
inline ::DB_PokerInfo* DB_CurrPokerInfo::add_userpokers() {
  return userpokers_.Add();
}

// repeated .DB_PokerInfo npcPokers = 2;
inline int DB_CurrPokerInfo::npcpokers_size() const {
  return npcpokers_.size();
}
inline void DB_CurrPokerInfo::clear_npcpokers() {
  npcpokers_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_PokerInfo >&
DB_CurrPokerInfo::npcpokers() const {
  return npcpokers_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_PokerInfo >*
DB_CurrPokerInfo::mutable_npcpokers() {
  return &npcpokers_;
}
inline const ::DB_PokerInfo& DB_CurrPokerInfo::npcpokers(int index) const {
  return npcpokers_.Get(index);
}
inline ::DB_PokerInfo* DB_CurrPokerInfo::mutable_npcpokers(int index) {
  return npcpokers_.Mutable(index);
}
inline ::DB_PokerInfo* DB_CurrPokerInfo::add_npcpokers() {
  return npcpokers_.Add();
}

// optional int32 userType = 3 [default = 0];
inline bool DB_CurrPokerInfo::has_usertype() const {
  return _has_bit(2);
}
inline void DB_CurrPokerInfo::clear_usertype() {
  usertype_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_CurrPokerInfo::usertype() const {
  return usertype_;
}
inline void DB_CurrPokerInfo::set_usertype(::google::protobuf::int32 value) {
  _set_bit(2);
  usertype_ = value;
}

// optional int32 NPCType = 4 [default = 0];
inline bool DB_CurrPokerInfo::has_npctype() const {
  return _has_bit(3);
}
inline void DB_CurrPokerInfo::clear_npctype() {
  npctype_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_CurrPokerInfo::npctype() const {
  return npctype_;
}
inline void DB_CurrPokerInfo::set_npctype(::google::protobuf::int32 value) {
  _set_bit(3);
  npctype_ = value;
}

// -------------------------------------------------------------------

// DB_PokerExchanges

// optional int32 gift0 = 1 [default = 0];
inline bool DB_PokerExchanges::has_gift0() const {
  return _has_bit(0);
}
inline void DB_PokerExchanges::clear_gift0() {
  gift0_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_PokerExchanges::gift0() const {
  return gift0_;
}
inline void DB_PokerExchanges::set_gift0(::google::protobuf::int32 value) {
  _set_bit(0);
  gift0_ = value;
}

// optional int32 gift1 = 2 [default = 0];
inline bool DB_PokerExchanges::has_gift1() const {
  return _has_bit(1);
}
inline void DB_PokerExchanges::clear_gift1() {
  gift1_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_PokerExchanges::gift1() const {
  return gift1_;
}
inline void DB_PokerExchanges::set_gift1(::google::protobuf::int32 value) {
  _set_bit(1);
  gift1_ = value;
}

// optional int32 gift2 = 3 [default = 0];
inline bool DB_PokerExchanges::has_gift2() const {
  return _has_bit(2);
}
inline void DB_PokerExchanges::clear_gift2() {
  gift2_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_PokerExchanges::gift2() const {
  return gift2_;
}
inline void DB_PokerExchanges::set_gift2(::google::protobuf::int32 value) {
  _set_bit(2);
  gift2_ = value;
}

// optional int32 gift3 = 4 [default = 0];
inline bool DB_PokerExchanges::has_gift3() const {
  return _has_bit(3);
}
inline void DB_PokerExchanges::clear_gift3() {
  gift3_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_PokerExchanges::gift3() const {
  return gift3_;
}
inline void DB_PokerExchanges::set_gift3(::google::protobuf::int32 value) {
  _set_bit(3);
  gift3_ = value;
}

// optional int32 gift4 = 5 [default = 0];
inline bool DB_PokerExchanges::has_gift4() const {
  return _has_bit(4);
}
inline void DB_PokerExchanges::clear_gift4() {
  gift4_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_PokerExchanges::gift4() const {
  return gift4_;
}
inline void DB_PokerExchanges::set_gift4(::google::protobuf::int32 value) {
  _set_bit(4);
  gift4_ = value;
}

// optional bool isGetRarityGift = 6 [default = false];
inline bool DB_PokerExchanges::has_isgetraritygift() const {
  return _has_bit(5);
}
inline void DB_PokerExchanges::clear_isgetraritygift() {
  isgetraritygift_ = false;
  _clear_bit(5);
}
inline bool DB_PokerExchanges::isgetraritygift() const {
  return isgetraritygift_;
}
inline void DB_PokerExchanges::set_isgetraritygift(bool value) {
  _set_bit(5);
  isgetraritygift_ = value;
}

// optional int32 giftnum0 = 7 [default = 0];
inline bool DB_PokerExchanges::has_giftnum0() const {
  return _has_bit(6);
}
inline void DB_PokerExchanges::clear_giftnum0() {
  giftnum0_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_PokerExchanges::giftnum0() const {
  return giftnum0_;
}
inline void DB_PokerExchanges::set_giftnum0(::google::protobuf::int32 value) {
  _set_bit(6);
  giftnum0_ = value;
}

// optional int32 giftnum1 = 8 [default = 0];
inline bool DB_PokerExchanges::has_giftnum1() const {
  return _has_bit(7);
}
inline void DB_PokerExchanges::clear_giftnum1() {
  giftnum1_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_PokerExchanges::giftnum1() const {
  return giftnum1_;
}
inline void DB_PokerExchanges::set_giftnum1(::google::protobuf::int32 value) {
  _set_bit(7);
  giftnum1_ = value;
}

// optional int32 giftnum2 = 9 [default = 0];
inline bool DB_PokerExchanges::has_giftnum2() const {
  return _has_bit(8);
}
inline void DB_PokerExchanges::clear_giftnum2() {
  giftnum2_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_PokerExchanges::giftnum2() const {
  return giftnum2_;
}
inline void DB_PokerExchanges::set_giftnum2(::google::protobuf::int32 value) {
  _set_bit(8);
  giftnum2_ = value;
}

// optional int32 giftnum3 = 10 [default = 0];
inline bool DB_PokerExchanges::has_giftnum3() const {
  return _has_bit(9);
}
inline void DB_PokerExchanges::clear_giftnum3() {
  giftnum3_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 DB_PokerExchanges::giftnum3() const {
  return giftnum3_;
}
inline void DB_PokerExchanges::set_giftnum3(::google::protobuf::int32 value) {
  _set_bit(9);
  giftnum3_ = value;
}

// optional int32 giftnum4 = 11 [default = 0];
inline bool DB_PokerExchanges::has_giftnum4() const {
  return _has_bit(10);
}
inline void DB_PokerExchanges::clear_giftnum4() {
  giftnum4_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 DB_PokerExchanges::giftnum4() const {
  return giftnum4_;
}
inline void DB_PokerExchanges::set_giftnum4(::google::protobuf::int32 value) {
  _set_bit(10);
  giftnum4_ = value;
}

// optional int32 refreshExcCnt = 12 [default = 0];
inline bool DB_PokerExchanges::has_refreshexccnt() const {
  return _has_bit(11);
}
inline void DB_PokerExchanges::clear_refreshexccnt() {
  refreshexccnt_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 DB_PokerExchanges::refreshexccnt() const {
  return refreshexccnt_;
}
inline void DB_PokerExchanges::set_refreshexccnt(::google::protobuf::int32 value) {
  _set_bit(11);
  refreshexccnt_ = value;
}

// -------------------------------------------------------------------

// DB_WorldCupPredictions

// optional bool isBet = 1 [default = false];
inline bool DB_WorldCupPredictions::has_isbet() const {
  return _has_bit(0);
}
inline void DB_WorldCupPredictions::clear_isbet() {
  isbet_ = false;
  _clear_bit(0);
}
inline bool DB_WorldCupPredictions::isbet() const {
  return isbet_;
}
inline void DB_WorldCupPredictions::set_isbet(bool value) {
  _set_bit(0);
  isbet_ = value;
}

// repeated .DB_WCBetInfo betInfo = 2;
inline int DB_WorldCupPredictions::betinfo_size() const {
  return betinfo_.size();
}
inline void DB_WorldCupPredictions::clear_betinfo() {
  betinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_WCBetInfo >&
DB_WorldCupPredictions::betinfo() const {
  return betinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_WCBetInfo >*
DB_WorldCupPredictions::mutable_betinfo() {
  return &betinfo_;
}
inline const ::DB_WCBetInfo& DB_WorldCupPredictions::betinfo(int index) const {
  return betinfo_.Get(index);
}
inline ::DB_WCBetInfo* DB_WorldCupPredictions::mutable_betinfo(int index) {
  return betinfo_.Mutable(index);
}
inline ::DB_WCBetInfo* DB_WorldCupPredictions::add_betinfo() {
  return betinfo_.Add();
}

// optional int32 nReward = 3 [default = 0];
inline bool DB_WorldCupPredictions::has_nreward() const {
  return _has_bit(2);
}
inline void DB_WorldCupPredictions::clear_nreward() {
  nreward_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_WorldCupPredictions::nreward() const {
  return nreward_;
}
inline void DB_WorldCupPredictions::set_nreward(::google::protobuf::int32 value) {
  _set_bit(2);
  nreward_ = value;
}

// -------------------------------------------------------------------

// DB_WCBetInfo

// optional int32 nType = 1 [default = 0];
inline bool DB_WCBetInfo::has_ntype() const {
  return _has_bit(0);
}
inline void DB_WCBetInfo::clear_ntype() {
  ntype_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_WCBetInfo::ntype() const {
  return ntype_;
}
inline void DB_WCBetInfo::set_ntype(::google::protobuf::int32 value) {
  _set_bit(0);
  ntype_ = value;
}

// optional int32 nJettonNum = 2 [default = 0];
inline bool DB_WCBetInfo::has_njettonnum() const {
  return _has_bit(1);
}
inline void DB_WCBetInfo::clear_njettonnum() {
  njettonnum_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_WCBetInfo::njettonnum() const {
  return njettonnum_;
}
inline void DB_WCBetInfo::set_njettonnum(::google::protobuf::int32 value) {
  _set_bit(1);
  njettonnum_ = value;
}

// optional int32 nOdds = 3 [default = 0];
inline bool DB_WCBetInfo::has_nodds() const {
  return _has_bit(2);
}
inline void DB_WCBetInfo::clear_nodds() {
  nodds_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_WCBetInfo::nodds() const {
  return nodds_;
}
inline void DB_WCBetInfo::set_nodds(::google::protobuf::int32 value) {
  _set_bit(2);
  nodds_ = value;
}

// repeated int32 teamID = 4;
inline int DB_WCBetInfo::teamid_size() const {
  return teamid_.size();
}
inline void DB_WCBetInfo::clear_teamid() {
  teamid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_WCBetInfo::teamid() const {
  return teamid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_WCBetInfo::mutable_teamid() {
  return &teamid_;
}
inline ::google::protobuf::int32 DB_WCBetInfo::teamid(int index) const {
  return teamid_.Get(index);
}
inline void DB_WCBetInfo::set_teamid(int index, ::google::protobuf::int32 value) {
  teamid_.Set(index, value);
}
inline void DB_WCBetInfo::add_teamid(::google::protobuf::int32 value) {
  teamid_.Add(value);
}

// -------------------------------------------------------------------

// DB_CardDuelInfo

// optional int32 myCardType = 1 [default = 0];
inline bool DB_CardDuelInfo::has_mycardtype() const {
  return _has_bit(0);
}
inline void DB_CardDuelInfo::clear_mycardtype() {
  mycardtype_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_CardDuelInfo::mycardtype() const {
  return mycardtype_;
}
inline void DB_CardDuelInfo::set_mycardtype(::google::protobuf::int32 value) {
  _set_bit(0);
  mycardtype_ = value;
}

// optional int64 oppID = 2 [default = 0];
inline bool DB_CardDuelInfo::has_oppid() const {
  return _has_bit(1);
}
inline void DB_CardDuelInfo::clear_oppid() {
  oppid_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 DB_CardDuelInfo::oppid() const {
  return oppid_;
}
inline void DB_CardDuelInfo::set_oppid(::google::protobuf::int64 value) {
  _set_bit(1);
  oppid_ = value;
}

// optional bool bNpc = 3 [default = false];
inline bool DB_CardDuelInfo::has_bnpc() const {
  return _has_bit(2);
}
inline void DB_CardDuelInfo::clear_bnpc() {
  bnpc_ = false;
  _clear_bit(2);
}
inline bool DB_CardDuelInfo::bnpc() const {
  return bnpc_;
}
inline void DB_CardDuelInfo::set_bnpc(bool value) {
  _set_bit(2);
  bnpc_ = value;
}

// optional int32 winNum = 4 [default = 0];
inline bool DB_CardDuelInfo::has_winnum() const {
  return _has_bit(3);
}
inline void DB_CardDuelInfo::clear_winnum() {
  winnum_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_CardDuelInfo::winnum() const {
  return winnum_;
}
inline void DB_CardDuelInfo::set_winnum(::google::protobuf::int32 value) {
  _set_bit(3);
  winnum_ = value;
}

// optional bool bMatch = 5 [default = false];
inline bool DB_CardDuelInfo::has_bmatch() const {
  return _has_bit(4);
}
inline void DB_CardDuelInfo::clear_bmatch() {
  bmatch_ = false;
  _clear_bit(4);
}
inline bool DB_CardDuelInfo::bmatch() const {
  return bmatch_;
}
inline void DB_CardDuelInfo::set_bmatch(bool value) {
  _set_bit(4);
  bmatch_ = value;
}

// optional int32 addupCredit = 6 [default = 0];
inline bool DB_CardDuelInfo::has_addupcredit() const {
  return _has_bit(5);
}
inline void DB_CardDuelInfo::clear_addupcredit() {
  addupcredit_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_CardDuelInfo::addupcredit() const {
  return addupcredit_;
}
inline void DB_CardDuelInfo::set_addupcredit(::google::protobuf::int32 value) {
  _set_bit(5);
  addupcredit_ = value;
}

// optional int32 maxwinNum = 7 [default = 0];
inline bool DB_CardDuelInfo::has_maxwinnum() const {
  return _has_bit(6);
}
inline void DB_CardDuelInfo::clear_maxwinnum() {
  maxwinnum_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_CardDuelInfo::maxwinnum() const {
  return maxwinnum_;
}
inline void DB_CardDuelInfo::set_maxwinnum(::google::protobuf::int32 value) {
  _set_bit(6);
  maxwinnum_ = value;
}

// -------------------------------------------------------------------

// DB_MiddleYearGift

// optional int32 firstGift = 1 [default = 0];
inline bool DB_MiddleYearGift::has_firstgift() const {
  return _has_bit(0);
}
inline void DB_MiddleYearGift::clear_firstgift() {
  firstgift_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_MiddleYearGift::firstgift() const {
  return firstgift_;
}
inline void DB_MiddleYearGift::set_firstgift(::google::protobuf::int32 value) {
  _set_bit(0);
  firstgift_ = value;
}

// optional int32 secdGift = 2 [default = 0];
inline bool DB_MiddleYearGift::has_secdgift() const {
  return _has_bit(1);
}
inline void DB_MiddleYearGift::clear_secdgift() {
  secdgift_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_MiddleYearGift::secdgift() const {
  return secdgift_;
}
inline void DB_MiddleYearGift::set_secdgift(::google::protobuf::int32 value) {
  _set_bit(1);
  secdgift_ = value;
}

// optional int32 nTotalCredit = 3 [default = 0];
inline bool DB_MiddleYearGift::has_ntotalcredit() const {
  return _has_bit(2);
}
inline void DB_MiddleYearGift::clear_ntotalcredit() {
  ntotalcredit_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_MiddleYearGift::ntotalcredit() const {
  return ntotalcredit_;
}
inline void DB_MiddleYearGift::set_ntotalcredit(::google::protobuf::int32 value) {
  _set_bit(2);
  ntotalcredit_ = value;
}

// optional int32 nFlag = 4 [default = 0];
inline bool DB_MiddleYearGift::has_nflag() const {
  return _has_bit(3);
}
inline void DB_MiddleYearGift::clear_nflag() {
  nflag_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_MiddleYearGift::nflag() const {
  return nflag_;
}
inline void DB_MiddleYearGift::set_nflag(::google::protobuf::int32 value) {
  _set_bit(3);
  nflag_ = value;
}

// -------------------------------------------------------------------

// DB_OpenSNSGift

// optional int32 nType = 1 [default = -1];
inline bool DB_OpenSNSGift::has_ntype() const {
  return _has_bit(0);
}
inline void DB_OpenSNSGift::clear_ntype() {
  ntype_ = -1;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_OpenSNSGift::ntype() const {
  return ntype_;
}
inline void DB_OpenSNSGift::set_ntype(::google::protobuf::int32 value) {
  _set_bit(0);
  ntype_ = value;
}

// optional int32 nFlag = 2 [default = 0];
inline bool DB_OpenSNSGift::has_nflag() const {
  return _has_bit(1);
}
inline void DB_OpenSNSGift::clear_nflag() {
  nflag_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_OpenSNSGift::nflag() const {
  return nflag_;
}
inline void DB_OpenSNSGift::set_nflag(::google::protobuf::int32 value) {
  _set_bit(1);
  nflag_ = value;
}

// optional int64 nTime = 3 [default = 0];
inline bool DB_OpenSNSGift::has_ntime() const {
  return _has_bit(2);
}
inline void DB_OpenSNSGift::clear_ntime() {
  ntime_ = GOOGLE_LONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::int64 DB_OpenSNSGift::ntime() const {
  return ntime_;
}
inline void DB_OpenSNSGift::set_ntime(::google::protobuf::int64 value) {
  _set_bit(2);
  ntime_ = value;
}

// -------------------------------------------------------------------

// DB_CallBackFriend

// repeated string frdplatids = 1;
inline int DB_CallBackFriend::frdplatids_size() const {
  return frdplatids_.size();
}
inline void DB_CallBackFriend::clear_frdplatids() {
  frdplatids_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_CallBackFriend::frdplatids() const {
  return frdplatids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_CallBackFriend::mutable_frdplatids() {
  return &frdplatids_;
}
inline const ::std::string& DB_CallBackFriend::frdplatids(int index) const {
  return frdplatids_.Get(index);
}
inline ::std::string* DB_CallBackFriend::mutable_frdplatids(int index) {
  return frdplatids_.Mutable(index);
}
inline void DB_CallBackFriend::set_frdplatids(int index, const ::std::string& value) {
  frdplatids_.Mutable(index)->assign(value);
}
inline void DB_CallBackFriend::set_frdplatids(int index, const char* value) {
  frdplatids_.Mutable(index)->assign(value);
}
inline void DB_CallBackFriend::set_frdplatids(int index, const char* value, size_t size) {
  frdplatids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_CallBackFriend::add_frdplatids() {
  return frdplatids_.Add();
}
inline void DB_CallBackFriend::add_frdplatids(const ::std::string& value) {
  frdplatids_.Add()->assign(value);
}
inline void DB_CallBackFriend::add_frdplatids(const char* value) {
  frdplatids_.Add()->assign(value);
}
inline void DB_CallBackFriend::add_frdplatids(const char* value, size_t size) {
  frdplatids_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// -------------------------------------------------------------------

// DB_AttackCount

// required int64 uid = 1;
inline bool DB_AttackCount::has_uid() const {
  return _has_bit(0);
}
inline void DB_AttackCount::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 DB_AttackCount::uid() const {
  return uid_;
}
inline void DB_AttackCount::set_uid(::google::protobuf::int64 value) {
  _set_bit(0);
  uid_ = value;
}

// optional int32 count = 2;
inline bool DB_AttackCount::has_count() const {
  return _has_bit(1);
}
inline void DB_AttackCount::clear_count() {
  count_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_AttackCount::count() const {
  return count_;
}
inline void DB_AttackCount::set_count(::google::protobuf::int32 value) {
  _set_bit(1);
  count_ = value;
}

// -------------------------------------------------------------------

// DB_Science

// optional int32 recruitlandlevel = 1 [default = 0];
inline bool DB_Science::has_recruitlandlevel() const {
  return _has_bit(0);
}
inline void DB_Science::clear_recruitlandlevel() {
  recruitlandlevel_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Science::recruitlandlevel() const {
  return recruitlandlevel_;
}
inline void DB_Science::set_recruitlandlevel(::google::protobuf::int32 value) {
  _set_bit(0);
  recruitlandlevel_ = value;
}

// optional int32 recruitairlevel = 2 [default = 0];
inline bool DB_Science::has_recruitairlevel() const {
  return _has_bit(1);
}
inline void DB_Science::clear_recruitairlevel() {
  recruitairlevel_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Science::recruitairlevel() const {
  return recruitairlevel_;
}
inline void DB_Science::set_recruitairlevel(::google::protobuf::int32 value) {
  _set_bit(1);
  recruitairlevel_ = value;
}

// optional int32 attacklandlevel = 3 [default = 0];
inline bool DB_Science::has_attacklandlevel() const {
  return _has_bit(2);
}
inline void DB_Science::clear_attacklandlevel() {
  attacklandlevel_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Science::attacklandlevel() const {
  return attacklandlevel_;
}
inline void DB_Science::set_attacklandlevel(::google::protobuf::int32 value) {
  _set_bit(2);
  attacklandlevel_ = value;
}

// optional int32 extrahonorlevel = 4 [default = 0];
inline bool DB_Science::has_extrahonorlevel() const {
  return _has_bit(3);
}
inline void DB_Science::clear_extrahonorlevel() {
  extrahonorlevel_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Science::extrahonorlevel() const {
  return extrahonorlevel_;
}
inline void DB_Science::set_extrahonorlevel(::google::protobuf::int32 value) {
  _set_bit(3);
  extrahonorlevel_ = value;
}

// optional int32 exttimelevel = 5 [default = 0];
inline bool DB_Science::has_exttimelevel() const {
  return _has_bit(4);
}
inline void DB_Science::clear_exttimelevel() {
  exttimelevel_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_Science::exttimelevel() const {
  return exttimelevel_;
}
inline void DB_Science::set_exttimelevel(::google::protobuf::int32 value) {
  _set_bit(4);
  exttimelevel_ = value;
}

// optional int32 redtimelevel = 6 [default = 0];
inline bool DB_Science::has_redtimelevel() const {
  return _has_bit(5);
}
inline void DB_Science::clear_redtimelevel() {
  redtimelevel_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_Science::redtimelevel() const {
  return redtimelevel_;
}
inline void DB_Science::set_redtimelevel(::google::protobuf::int32 value) {
  _set_bit(5);
  redtimelevel_ = value;
}

// optional int32 extres = 7 [default = 0];
inline bool DB_Science::has_extres() const {
  return _has_bit(6);
}
inline void DB_Science::clear_extres() {
  extres_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_Science::extres() const {
  return extres_;
}
inline void DB_Science::set_extres(::google::protobuf::int32 value) {
  _set_bit(6);
  extres_ = value;
}

// optional int32 redres = 8 [default = 0];
inline bool DB_Science::has_redres() const {
  return _has_bit(7);
}
inline void DB_Science::clear_redres() {
  redres_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_Science::redres() const {
  return redres_;
}
inline void DB_Science::set_redres(::google::protobuf::int32 value) {
  _set_bit(7);
  redres_ = value;
}

// optional int32 addbuildhp = 9 [default = 0];
inline bool DB_Science::has_addbuildhp() const {
  return _has_bit(8);
}
inline void DB_Science::clear_addbuildhp() {
  addbuildhp_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_Science::addbuildhp() const {
  return addbuildhp_;
}
inline void DB_Science::set_addbuildhp(::google::protobuf::int32 value) {
  _set_bit(8);
  addbuildhp_ = value;
}

// optional int32 addgunattack = 10 [default = 0];
inline bool DB_Science::has_addgunattack() const {
  return _has_bit(9);
}
inline void DB_Science::clear_addgunattack() {
  addgunattack_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 DB_Science::addgunattack() const {
  return addgunattack_;
}
inline void DB_Science::set_addgunattack(::google::protobuf::int32 value) {
  _set_bit(9);
  addgunattack_ = value;
}

// optional int32 addmissileatk = 11 [default = 0];
inline bool DB_Science::has_addmissileatk() const {
  return _has_bit(10);
}
inline void DB_Science::clear_addmissileatk() {
  addmissileatk_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 DB_Science::addmissileatk() const {
  return addmissileatk_;
}
inline void DB_Science::set_addmissileatk(::google::protobuf::int32 value) {
  _set_bit(10);
  addmissileatk_ = value;
}

// optional int32 minewarfare = 12 [default = 0];
inline bool DB_Science::has_minewarfare() const {
  return _has_bit(11);
}
inline void DB_Science::clear_minewarfare() {
  minewarfare_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 DB_Science::minewarfare() const {
  return minewarfare_;
}
inline void DB_Science::set_minewarfare(::google::protobuf::int32 value) {
  _set_bit(11);
  minewarfare_ = value;
}

// -------------------------------------------------------------------

// DB_Effect

// repeated string effects = 2;
inline int DB_Effect::effects_size() const {
  return effects_.size();
}
inline void DB_Effect::clear_effects() {
  effects_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_Effect::effects() const {
  return effects_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_Effect::mutable_effects() {
  return &effects_;
}
inline const ::std::string& DB_Effect::effects(int index) const {
  return effects_.Get(index);
}
inline ::std::string* DB_Effect::mutable_effects(int index) {
  return effects_.Mutable(index);
}
inline void DB_Effect::set_effects(int index, const ::std::string& value) {
  effects_.Mutable(index)->assign(value);
}
inline void DB_Effect::set_effects(int index, const char* value) {
  effects_.Mutable(index)->assign(value);
}
inline void DB_Effect::set_effects(int index, const char* value, size_t size) {
  effects_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_Effect::add_effects() {
  return effects_.Add();
}
inline void DB_Effect::add_effects(const ::std::string& value) {
  effects_.Add()->assign(value);
}
inline void DB_Effect::add_effects(const char* value) {
  effects_.Add()->assign(value);
}
inline void DB_Effect::add_effects(const char* value, size_t size) {
  effects_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// -------------------------------------------------------------------

// DB_Officer

// optional int32 officerPosition = 1 [default = 0];
inline bool DB_Officer::has_officerposition() const {
  return _has_bit(0);
}
inline void DB_Officer::clear_officerposition() {
  officerposition_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Officer::officerposition() const {
  return officerposition_;
}
inline void DB_Officer::set_officerposition(::google::protobuf::int32 value) {
  _set_bit(0);
  officerposition_ = value;
}

// optional int32 officerRightUseFlag = 2 [default = 0];
inline bool DB_Officer::has_officerrightuseflag() const {
  return _has_bit(1);
}
inline void DB_Officer::clear_officerrightuseflag() {
  officerrightuseflag_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Officer::officerrightuseflag() const {
  return officerrightuseflag_;
}
inline void DB_Officer::set_officerrightuseflag(::google::protobuf::int32 value) {
  _set_bit(1);
  officerrightuseflag_ = value;
}

// optional int32 officerRightEffectFlag = 3 [default = 0];
inline bool DB_Officer::has_officerrighteffectflag() const {
  return _has_bit(2);
}
inline void DB_Officer::clear_officerrighteffectflag() {
  officerrighteffectflag_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Officer::officerrighteffectflag() const {
  return officerrighteffectflag_;
}
inline void DB_Officer::set_officerrighteffectflag(::google::protobuf::int32 value) {
  _set_bit(2);
  officerrighteffectflag_ = value;
}

// optional int32 updateTime = 4 [default = 0];
inline bool DB_Officer::has_updatetime() const {
  return _has_bit(3);
}
inline void DB_Officer::clear_updatetime() {
  updatetime_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Officer::updatetime() const {
  return updatetime_;
}
inline void DB_Officer::set_updatetime(::google::protobuf::int32 value) {
  _set_bit(3);
  updatetime_ = value;
}

// -------------------------------------------------------------------

// DB_WpcRank

// optional int32 rightID = 1 [default = 0];
inline bool DB_WpcRank::has_rightid() const {
  return _has_bit(0);
}
inline void DB_WpcRank::clear_rightid() {
  rightid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_WpcRank::rightid() const {
  return rightid_;
}
inline void DB_WpcRank::set_rightid(::google::protobuf::int32 value) {
  _set_bit(0);
  rightid_ = value;
}

// optional int32 updateTime = 2 [default = 0];
inline bool DB_WpcRank::has_updatetime() const {
  return _has_bit(1);
}
inline void DB_WpcRank::clear_updatetime() {
  updatetime_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_WpcRank::updatetime() const {
  return updatetime_;
}
inline void DB_WpcRank::set_updatetime(::google::protobuf::int32 value) {
  _set_bit(1);
  updatetime_ = value;
}

// optional int32 searchTime = 3 [default = 0];
inline bool DB_WpcRank::has_searchtime() const {
  return _has_bit(2);
}
inline void DB_WpcRank::clear_searchtime() {
  searchtime_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_WpcRank::searchtime() const {
  return searchtime_;
}
inline void DB_WpcRank::set_searchtime(::google::protobuf::int32 value) {
  _set_bit(2);
  searchtime_ = value;
}

// optional int32 activeID = 4 [default = 0];
inline bool DB_WpcRank::has_activeid() const {
  return _has_bit(3);
}
inline void DB_WpcRank::clear_activeid() {
  activeid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_WpcRank::activeid() const {
  return activeid_;
}
inline void DB_WpcRank::set_activeid(::google::protobuf::int32 value) {
  _set_bit(3);
  activeid_ = value;
}

// optional int32 overTimeSearchTime = 5 [default = 0];
inline bool DB_WpcRank::has_overtimesearchtime() const {
  return _has_bit(4);
}
inline void DB_WpcRank::clear_overtimesearchtime() {
  overtimesearchtime_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_WpcRank::overtimesearchtime() const {
  return overtimesearchtime_;
}
inline void DB_WpcRank::set_overtimesearchtime(::google::protobuf::int32 value) {
  _set_bit(4);
  overtimesearchtime_ = value;
}

// -------------------------------------------------------------------

// DB_LeagueBtl

// optional int32 activeID = 1 [default = 0];
inline bool DB_LeagueBtl::has_activeid() const {
  return _has_bit(0);
}
inline void DB_LeagueBtl::clear_activeid() {
  activeid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_LeagueBtl::activeid() const {
  return activeid_;
}
inline void DB_LeagueBtl::set_activeid(::google::protobuf::int32 value) {
  _set_bit(0);
  activeid_ = value;
}

// optional int32 leaguePoint = 2 [default = 0];
inline bool DB_LeagueBtl::has_leaguepoint() const {
  return _has_bit(1);
}
inline void DB_LeagueBtl::clear_leaguepoint() {
  leaguepoint_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_LeagueBtl::leaguepoint() const {
  return leaguepoint_;
}
inline void DB_LeagueBtl::set_leaguepoint(::google::protobuf::int32 value) {
  _set_bit(1);
  leaguepoint_ = value;
}

// optional bool rewardGet = 3 [default = false];
inline bool DB_LeagueBtl::has_rewardget() const {
  return _has_bit(2);
}
inline void DB_LeagueBtl::clear_rewardget() {
  rewardget_ = false;
  _clear_bit(2);
}
inline bool DB_LeagueBtl::rewardget() const {
  return rewardget_;
}
inline void DB_LeagueBtl::set_rewardget(bool value) {
  _set_bit(2);
  rewardget_ = value;
}

// -------------------------------------------------------------------

// DB_HappylibAward

// optional int32 times = 1;
inline bool DB_HappylibAward::has_times() const {
  return _has_bit(0);
}
inline void DB_HappylibAward::clear_times() {
  times_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_HappylibAward::times() const {
  return times_;
}
inline void DB_HappylibAward::set_times(::google::protobuf::int32 value) {
  _set_bit(0);
  times_ = value;
}

// repeated int32 awardid = 2;
inline int DB_HappylibAward::awardid_size() const {
  return awardid_.size();
}
inline void DB_HappylibAward::clear_awardid() {
  awardid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_HappylibAward::awardid() const {
  return awardid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_HappylibAward::mutable_awardid() {
  return &awardid_;
}
inline ::google::protobuf::int32 DB_HappylibAward::awardid(int index) const {
  return awardid_.Get(index);
}
inline void DB_HappylibAward::set_awardid(int index, ::google::protobuf::int32 value) {
  awardid_.Set(index, value);
}
inline void DB_HappylibAward::add_awardid(::google::protobuf::int32 value) {
  awardid_.Add(value);
}

// repeated int32 awardnum = 3;
inline int DB_HappylibAward::awardnum_size() const {
  return awardnum_.size();
}
inline void DB_HappylibAward::clear_awardnum() {
  awardnum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_HappylibAward::awardnum() const {
  return awardnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_HappylibAward::mutable_awardnum() {
  return &awardnum_;
}
inline ::google::protobuf::int32 DB_HappylibAward::awardnum(int index) const {
  return awardnum_.Get(index);
}
inline void DB_HappylibAward::set_awardnum(int index, ::google::protobuf::int32 value) {
  awardnum_.Set(index, value);
}
inline void DB_HappylibAward::add_awardnum(::google::protobuf::int32 value) {
  awardnum_.Add(value);
}

// -------------------------------------------------------------------

// DB_HappyLib

// optional int32 activeend = 1;
inline bool DB_HappyLib::has_activeend() const {
  return _has_bit(0);
}
inline void DB_HappyLib::clear_activeend() {
  activeend_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_HappyLib::activeend() const {
  return activeend_;
}
inline void DB_HappyLib::set_activeend(::google::protobuf::int32 value) {
  _set_bit(0);
  activeend_ = value;
}

// optional int32 times = 2;
inline bool DB_HappyLib::has_times() const {
  return _has_bit(1);
}
inline void DB_HappyLib::clear_times() {
  times_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_HappyLib::times() const {
  return times_;
}
inline void DB_HappyLib::set_times(::google::protobuf::int32 value) {
  _set_bit(1);
  times_ = value;
}

// optional int32 getaward = 3 [default = 0];
inline bool DB_HappyLib::has_getaward() const {
  return _has_bit(2);
}
inline void DB_HappyLib::clear_getaward() {
  getaward_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_HappyLib::getaward() const {
  return getaward_;
}
inline void DB_HappyLib::set_getaward(::google::protobuf::int32 value) {
  _set_bit(2);
  getaward_ = value;
}

// repeated .DB_HappylibAward award = 4;
inline int DB_HappyLib::award_size() const {
  return award_.size();
}
inline void DB_HappyLib::clear_award() {
  award_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_HappylibAward >&
DB_HappyLib::award() const {
  return award_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_HappylibAward >*
DB_HappyLib::mutable_award() {
  return &award_;
}
inline const ::DB_HappylibAward& DB_HappyLib::award(int index) const {
  return award_.Get(index);
}
inline ::DB_HappylibAward* DB_HappyLib::mutable_award(int index) {
  return award_.Mutable(index);
}
inline ::DB_HappylibAward* DB_HappyLib::add_award() {
  return award_.Add();
}

// -------------------------------------------------------------------

// DB_BossBtlMsg

// optional int32 nBossBtlFlag = 1 [default = 0];
inline bool DB_BossBtlMsg::has_nbossbtlflag() const {
  return _has_bit(0);
}
inline void DB_BossBtlMsg::clear_nbossbtlflag() {
  nbossbtlflag_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_BossBtlMsg::nbossbtlflag() const {
  return nbossbtlflag_;
}
inline void DB_BossBtlMsg::set_nbossbtlflag(::google::protobuf::int32 value) {
  _set_bit(0);
  nbossbtlflag_ = value;
}

// optional int64 totalDmg = 2 [default = 0];
inline bool DB_BossBtlMsg::has_totaldmg() const {
  return _has_bit(1);
}
inline void DB_BossBtlMsg::clear_totaldmg() {
  totaldmg_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 DB_BossBtlMsg::totaldmg() const {
  return totaldmg_;
}
inline void DB_BossBtlMsg::set_totaldmg(::google::protobuf::int64 value) {
  _set_bit(1);
  totaldmg_ = value;
}

// optional int32 honorEmbraveCnt = 3;
inline bool DB_BossBtlMsg::has_honorembravecnt() const {
  return _has_bit(2);
}
inline void DB_BossBtlMsg::clear_honorembravecnt() {
  honorembravecnt_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_BossBtlMsg::honorembravecnt() const {
  return honorembravecnt_;
}
inline void DB_BossBtlMsg::set_honorembravecnt(::google::protobuf::int32 value) {
  _set_bit(2);
  honorembravecnt_ = value;
}

// optional int32 addAtkPct = 4;
inline bool DB_BossBtlMsg::has_addatkpct() const {
  return _has_bit(3);
}
inline void DB_BossBtlMsg::clear_addatkpct() {
  addatkpct_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_BossBtlMsg::addatkpct() const {
  return addatkpct_;
}
inline void DB_BossBtlMsg::set_addatkpct(::google::protobuf::int32 value) {
  _set_bit(3);
  addatkpct_ = value;
}

// optional int32 hasPickReward = 5;
inline bool DB_BossBtlMsg::has_haspickreward() const {
  return _has_bit(4);
}
inline void DB_BossBtlMsg::clear_haspickreward() {
  haspickreward_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_BossBtlMsg::haspickreward() const {
  return haspickreward_;
}
inline void DB_BossBtlMsg::set_haspickreward(::google::protobuf::int32 value) {
  _set_bit(4);
  haspickreward_ = value;
}

// repeated bool upList = 6;
inline int DB_BossBtlMsg::uplist_size() const {
  return uplist_.size();
}
inline void DB_BossBtlMsg::clear_uplist() {
  uplist_.Clear();
}
inline const ::google::protobuf::RepeatedField< bool >&
DB_BossBtlMsg::uplist() const {
  return uplist_;
}
inline ::google::protobuf::RepeatedField< bool >*
DB_BossBtlMsg::mutable_uplist() {
  return &uplist_;
}
inline bool DB_BossBtlMsg::uplist(int index) const {
  return uplist_.Get(index);
}
inline void DB_BossBtlMsg::set_uplist(int index, bool value) {
  uplist_.Set(index, value);
}
inline void DB_BossBtlMsg::add_uplist(bool value) {
  uplist_.Add(value);
}

// -------------------------------------------------------------------

// DB_MedalHonorInfo

// optional int32 freeCastNum = 1 [default = 50];
inline bool DB_MedalHonorInfo::has_freecastnum() const {
  return _has_bit(0);
}
inline void DB_MedalHonorInfo::clear_freecastnum() {
  freecastnum_ = 50;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_MedalHonorInfo::freecastnum() const {
  return freecastnum_;
}
inline void DB_MedalHonorInfo::set_freecastnum(::google::protobuf::int32 value) {
  _set_bit(0);
  freecastnum_ = value;
}

// optional int32 nTokenNum = 2 [default = 0];
inline bool DB_MedalHonorInfo::has_ntokennum() const {
  return _has_bit(1);
}
inline void DB_MedalHonorInfo::clear_ntokennum() {
  ntokennum_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_MedalHonorInfo::ntokennum() const {
  return ntokennum_;
}
inline void DB_MedalHonorInfo::set_ntokennum(::google::protobuf::int32 value) {
  _set_bit(1);
  ntokennum_ = value;
}

// optional int32 decorateType = 3 [default = 0];
inline bool DB_MedalHonorInfo::has_decoratetype() const {
  return _has_bit(2);
}
inline void DB_MedalHonorInfo::clear_decoratetype() {
  decoratetype_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_MedalHonorInfo::decoratetype() const {
  return decoratetype_;
}
inline void DB_MedalHonorInfo::set_decoratetype(::google::protobuf::int32 value) {
  _set_bit(2);
  decoratetype_ = value;
}

// repeated int32 hallHonorList = 4;
inline int DB_MedalHonorInfo::hallhonorlist_size() const {
  return hallhonorlist_.size();
}
inline void DB_MedalHonorInfo::clear_hallhonorlist() {
  hallhonorlist_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_MedalHonorInfo::hallhonorlist() const {
  return hallhonorlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_MedalHonorInfo::mutable_hallhonorlist() {
  return &hallhonorlist_;
}
inline ::google::protobuf::int32 DB_MedalHonorInfo::hallhonorlist(int index) const {
  return hallhonorlist_.Get(index);
}
inline void DB_MedalHonorInfo::set_hallhonorlist(int index, ::google::protobuf::int32 value) {
  hallhonorlist_.Set(index, value);
}
inline void DB_MedalHonorInfo::add_hallhonorlist(::google::protobuf::int32 value) {
  hallhonorlist_.Add(value);
}

// repeated .DB_MedalHonor medalHonorList = 5;
inline int DB_MedalHonorInfo::medalhonorlist_size() const {
  return medalhonorlist_.size();
}
inline void DB_MedalHonorInfo::clear_medalhonorlist() {
  medalhonorlist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_MedalHonor >&
DB_MedalHonorInfo::medalhonorlist() const {
  return medalhonorlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_MedalHonor >*
DB_MedalHonorInfo::mutable_medalhonorlist() {
  return &medalhonorlist_;
}
inline const ::DB_MedalHonor& DB_MedalHonorInfo::medalhonorlist(int index) const {
  return medalhonorlist_.Get(index);
}
inline ::DB_MedalHonor* DB_MedalHonorInfo::mutable_medalhonorlist(int index) {
  return medalhonorlist_.Mutable(index);
}
inline ::DB_MedalHonor* DB_MedalHonorInfo::add_medalhonorlist() {
  return medalhonorlist_.Add();
}

// -------------------------------------------------------------------

// DB_MedalHonor

// optional int32 nID = 1 [default = 0];
inline bool DB_MedalHonor::has_nid() const {
  return _has_bit(0);
}
inline void DB_MedalHonor::clear_nid() {
  nid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_MedalHonor::nid() const {
  return nid_;
}
inline void DB_MedalHonor::set_nid(::google::protobuf::int32 value) {
  _set_bit(0);
  nid_ = value;
}

// optional int32 medalHonorID = 2 [default = 0];
inline bool DB_MedalHonor::has_medalhonorid() const {
  return _has_bit(1);
}
inline void DB_MedalHonor::clear_medalhonorid() {
  medalhonorid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_MedalHonor::medalhonorid() const {
  return medalhonorid_;
}
inline void DB_MedalHonor::set_medalhonorid(::google::protobuf::int32 value) {
  _set_bit(1);
  medalhonorid_ = value;
}

// optional int32 nExp = 3 [default = 0];
inline bool DB_MedalHonor::has_nexp() const {
  return _has_bit(2);
}
inline void DB_MedalHonor::clear_nexp() {
  nexp_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_MedalHonor::nexp() const {
  return nexp_;
}
inline void DB_MedalHonor::set_nexp(::google::protobuf::int32 value) {
  _set_bit(2);
  nexp_ = value;
}

// optional int32 nLV = 4 [default = 0];
inline bool DB_MedalHonor::has_nlv() const {
  return _has_bit(3);
}
inline void DB_MedalHonor::clear_nlv() {
  nlv_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_MedalHonor::nlv() const {
  return nlv_;
}
inline void DB_MedalHonor::set_nlv(::google::protobuf::int32 value) {
  _set_bit(3);
  nlv_ = value;
}

// optional int32 nBagType = 5 [default = 0];
inline bool DB_MedalHonor::has_nbagtype() const {
  return _has_bit(4);
}
inline void DB_MedalHonor::clear_nbagtype() {
  nbagtype_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_MedalHonor::nbagtype() const {
  return nbagtype_;
}
inline void DB_MedalHonor::set_nbagtype(::google::protobuf::int32 value) {
  _set_bit(4);
  nbagtype_ = value;
}

// optional int32 nAdmiralID = 6 [default = 0];
inline bool DB_MedalHonor::has_nadmiralid() const {
  return _has_bit(5);
}
inline void DB_MedalHonor::clear_nadmiralid() {
  nadmiralid_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_MedalHonor::nadmiralid() const {
  return nadmiralid_;
}
inline void DB_MedalHonor::set_nadmiralid(::google::protobuf::int32 value) {
  _set_bit(5);
  nadmiralid_ = value;
}

// optional bool bLock = 7 [default = false];
inline bool DB_MedalHonor::has_block() const {
  return _has_bit(6);
}
inline void DB_MedalHonor::clear_block() {
  block_ = false;
  _clear_bit(6);
}
inline bool DB_MedalHonor::block() const {
  return block_;
}
inline void DB_MedalHonor::set_block(bool value) {
  _set_bit(6);
  block_ = value;
}


#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_dbinterface_5fsub_2eproto__INCLUDED
