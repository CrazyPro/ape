// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_dbinterface_2eproto__INCLUDED
#define PROTOBUF_dbinterface_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "dbinterface_sub.pb.h"

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_dbinterface_2eproto();
void protobuf_AssignDesc_dbinterface_2eproto();
void protobuf_ShutdownFile_dbinterface_2eproto();

class DB_Model;
class DB_State;
class DB_PlanetLiteInfo;
class DB_Galaxy;
class DB_Item;
class DB_Hangar;
class DB_GameUnit;
class DB_Planet;
class DB_NPC;
class DB_SocialItem;
class DB_Player;
class DB_DailyLogon;
class DB_ActiveContinueLogon;
class DB_User;
class DB_GlobalStarInfo;

// ===================================================================

class DB_Model : public ::google::protobuf::Message {
 public:
  DB_Model();
  virtual ~DB_Model();
  
  DB_Model(const DB_Model& from);
  
  inline DB_Model& operator=(const DB_Model& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Model& default_instance();
  void Swap(DB_Model* other);
  
  // implements Message ----------------------------------------------
  
  DB_Model* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Model& from);
  void MergeFrom(const DB_Model& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int64 coins = 2;
  inline bool has_coins() const;
  inline void clear_coins();
  static const int kCoinsFieldNumber = 2;
  inline ::google::protobuf::int64 coins() const;
  inline void set_coins(::google::protobuf::int64 value);
  
  // optional int64 minerals = 3;
  inline bool has_minerals() const;
  inline void clear_minerals();
  static const int kMineralsFieldNumber = 3;
  inline ::google::protobuf::int64 minerals() const;
  inline void set_minerals(::google::protobuf::int64 value);
  
  // optional int64 coinsTotal = 4;
  inline bool has_coinstotal() const;
  inline void clear_coinstotal();
  static const int kCoinsTotalFieldNumber = 4;
  inline ::google::protobuf::int64 coinstotal() const;
  inline void set_coinstotal(::google::protobuf::int64 value);
  
  // optional int64 mineralsTotal = 5;
  inline bool has_mineralstotal() const;
  inline void clear_mineralstotal();
  static const int kMineralsTotalFieldNumber = 5;
  inline ::google::protobuf::int64 mineralstotal() const;
  inline void set_mineralstotal(::google::protobuf::int64 value);
  
  // optional int32 score = 6;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 6;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);
  
  // optional int32 exp = 7;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 7;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
  // optional int32 cash = 8;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 8;
  inline ::google::protobuf::int32 cash() const;
  inline void set_cash(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 level_;
  ::google::protobuf::int64 coins_;
  ::google::protobuf::int64 minerals_;
  ::google::protobuf::int64 coinstotal_;
  ::google::protobuf::int64 mineralstotal_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 cash_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Model* default_instance_;
};
// -------------------------------------------------------------------

class DB_State : public ::google::protobuf::Message {
 public:
  DB_State();
  virtual ~DB_State();
  
  DB_State(const DB_State& from);
  
  inline DB_State& operator=(const DB_State& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_State& default_instance();
  void Swap(DB_State* other);
  
  // implements Message ----------------------------------------------
  
  DB_State* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_State& from);
  void MergeFrom(const DB_State& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 tutorialCompleted = 1;
  inline bool has_tutorialcompleted() const;
  inline void clear_tutorialcompleted();
  static const int kTutorialCompletedFieldNumber = 1;
  inline ::google::protobuf::int32 tutorialcompleted() const;
  inline void set_tutorialcompleted(::google::protobuf::int32 value);
  
  // optional int32 dmgProtectionTimeLeft = 2;
  inline bool has_dmgprotectiontimeleft() const;
  inline void clear_dmgprotectiontimeleft();
  static const int kDmgProtectionTimeLeftFieldNumber = 2;
  inline ::google::protobuf::int32 dmgprotectiontimeleft() const;
  inline void set_dmgprotectiontimeleft(::google::protobuf::int32 value);
  
  // optional int32 dmgProtectionTimeTotal = 3;
  inline bool has_dmgprotectiontimetotal() const;
  inline void clear_dmgprotectiontimetotal();
  static const int kDmgProtectionTimeTotalFieldNumber = 3;
  inline ::google::protobuf::int32 dmgprotectiontimetotal() const;
  inline void set_dmgprotectiontimetotal(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 tutorialcompleted_;
  ::google::protobuf::int32 dmgprotectiontimeleft_;
  ::google::protobuf::int32 dmgprotectiontimetotal_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_State* default_instance_;
};
// -------------------------------------------------------------------

class DB_PlanetLiteInfo : public ::google::protobuf::Message {
 public:
  DB_PlanetLiteInfo();
  virtual ~DB_PlanetLiteInfo();
  
  DB_PlanetLiteInfo(const DB_PlanetLiteInfo& from);
  
  inline DB_PlanetLiteInfo& operator=(const DB_PlanetLiteInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_PlanetLiteInfo& default_instance();
  void Swap(DB_PlanetLiteInfo* other);
  
  // implements Message ----------------------------------------------
  
  DB_PlanetLiteInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_PlanetLiteInfo& from);
  void MergeFrom(const DB_PlanetLiteInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);
  
  // optional int64 planetId = 2;
  inline bool has_planetid() const;
  inline void clear_planetid();
  static const int kPlanetIdFieldNumber = 2;
  inline ::google::protobuf::int64 planetid() const;
  inline void set_planetid(::google::protobuf::int64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int64 planetid_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_PlanetLiteInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB_Galaxy : public ::google::protobuf::Message {
 public:
  DB_Galaxy();
  virtual ~DB_Galaxy();
  
  DB_Galaxy(const DB_Galaxy& from);
  
  inline DB_Galaxy& operator=(const DB_Galaxy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Galaxy& default_instance();
  void Swap(DB_Galaxy* other);
  
  // implements Message ----------------------------------------------
  
  DB_Galaxy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Galaxy& from);
  void MergeFrom(const DB_Galaxy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline ::google::protobuf::int32 name() const;
  inline void set_name(::google::protobuf::int32 value);
  
  // optional int32 x = 4;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 4;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);
  
  // optional int32 y = 5;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 5;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);
  
  // repeated .DB_PlanetLiteInfo lite = 6;
  inline int lite_size() const;
  inline void clear_lite();
  static const int kLiteFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_PlanetLiteInfo >& lite() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_PlanetLiteInfo >* mutable_lite();
  inline const ::DB_PlanetLiteInfo& lite(int index) const;
  inline ::DB_PlanetLiteInfo* mutable_lite(int index);
  inline ::DB_PlanetLiteInfo* add_lite();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 name_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::RepeatedPtrField< ::DB_PlanetLiteInfo > lite_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Galaxy* default_instance_;
};
// -------------------------------------------------------------------

class DB_Item : public ::google::protobuf::Message {
 public:
  DB_Item();
  virtual ~DB_Item();
  
  DB_Item(const DB_Item& from);
  
  inline DB_Item& operator=(const DB_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Item& default_instance();
  void Swap(DB_Item* other);
  
  // implements Message ----------------------------------------------
  
  DB_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Item& from);
  void MergeFrom(const DB_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 sid = 1;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 1;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // optional int32 sku = 2;
  inline bool has_sku() const;
  inline void clear_sku();
  static const int kSkuFieldNumber = 2;
  inline ::google::protobuf::int32 sku() const;
  inline void set_sku(::google::protobuf::int32 value);
  
  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 upgradeId = 4;
  inline bool has_upgradeid() const;
  inline void clear_upgradeid();
  static const int kUpgradeIdFieldNumber = 4;
  inline ::google::protobuf::int32 upgradeid() const;
  inline void set_upgradeid(::google::protobuf::int32 value);
  
  // optional int32 isFlipped = 5;
  inline bool has_isflipped() const;
  inline void clear_isflipped();
  static const int kIsFlippedFieldNumber = 5;
  inline ::google::protobuf::int32 isflipped() const;
  inline void set_isflipped(::google::protobuf::int32 value);
  
  // optional int32 energyPercent = 6;
  inline bool has_energypercent() const;
  inline void clear_energypercent();
  static const int kEnergyPercentFieldNumber = 6;
  inline ::google::protobuf::int32 energypercent() const;
  inline void set_energypercent(::google::protobuf::int32 value);
  
  // optional int32 energy = 7;
  inline bool has_energy() const;
  inline void clear_energy();
  static const int kEnergyFieldNumber = 7;
  inline ::google::protobuf::int32 energy() const;
  inline void set_energy(::google::protobuf::int32 value);
  
  // optional int32 x = 8;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 8;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);
  
  // optional int32 y = 9;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 9;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);
  
  // optional int32 state = 10;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 10;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);
  
  // optional int32 time = 11;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 11;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);
  
  // optional int32 incomeToRestore = 12;
  inline bool has_incometorestore() const;
  inline void clear_incometorestore();
  static const int kIncomeToRestoreFieldNumber = 12;
  inline ::google::protobuf::int32 incometorestore() const;
  inline void set_incometorestore(::google::protobuf::int32 value);
  
  // optional int32 repairing = 13;
  inline bool has_repairing() const;
  inline void clear_repairing();
  static const int kRepairingFieldNumber = 13;
  inline ::google::protobuf::int32 repairing() const;
  inline void set_repairing(::google::protobuf::int32 value);
  
  // optional int64 repairStart = 14;
  inline bool has_repairstart() const;
  inline void clear_repairstart();
  static const int kRepairStartFieldNumber = 14;
  inline ::google::protobuf::int64 repairstart() const;
  inline void set_repairstart(::google::protobuf::int64 value);
  
  // optional int64 updateAt = 15;
  inline bool has_updateat() const;
  inline void clear_updateat();
  static const int kUpdateAtFieldNumber = 15;
  inline ::google::protobuf::int64 updateat() const;
  inline void set_updateat(::google::protobuf::int64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 sku_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 upgradeid_;
  ::google::protobuf::int32 isflipped_;
  ::google::protobuf::int32 energypercent_;
  ::google::protobuf::int32 energy_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 incometorestore_;
  ::google::protobuf::int32 repairing_;
  ::google::protobuf::int64 repairstart_;
  ::google::protobuf::int64 updateat_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Item* default_instance_;
};
// -------------------------------------------------------------------

class DB_Hangar : public ::google::protobuf::Message {
 public:
  DB_Hangar();
  virtual ~DB_Hangar();
  
  DB_Hangar(const DB_Hangar& from);
  
  inline DB_Hangar& operator=(const DB_Hangar& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Hangar& default_instance();
  void Swap(DB_Hangar* other);
  
  // implements Message ----------------------------------------------
  
  DB_Hangar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Hangar& from);
  void MergeFrom(const DB_Hangar& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 sid = 1;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 1;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // optional int32 sku = 2;
  inline bool has_sku() const;
  inline void clear_sku();
  static const int kSkuFieldNumber = 2;
  inline ::google::protobuf::int32 sku() const;
  inline void set_sku(::google::protobuf::int32 value);
  
  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 sku_;
  ::google::protobuf::int32 num_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Hangar* default_instance_;
};
// -------------------------------------------------------------------

class DB_GameUnit : public ::google::protobuf::Message {
 public:
  DB_GameUnit();
  virtual ~DB_GameUnit();
  
  DB_GameUnit(const DB_GameUnit& from);
  
  inline DB_GameUnit& operator=(const DB_GameUnit& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_GameUnit& default_instance();
  void Swap(DB_GameUnit* other);
  
  // implements Message ----------------------------------------------
  
  DB_GameUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_GameUnit& from);
  void MergeFrom(const DB_GameUnit& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 sku = 1;
  inline bool has_sku() const;
  inline void clear_sku();
  static const int kSkuFieldNumber = 1;
  inline ::google::protobuf::int32 sku() const;
  inline void set_sku(::google::protobuf::int32 value);
  
  // optional int32 unlock = 2;
  inline bool has_unlock() const;
  inline void clear_unlock();
  static const int kUnlockFieldNumber = 2;
  inline ::google::protobuf::int32 unlock() const;
  inline void set_unlock(::google::protobuf::int32 value);
  
  // optional int32 upgradeId = 3;
  inline bool has_upgradeid() const;
  inline void clear_upgradeid();
  static const int kUpgradeIdFieldNumber = 3;
  inline ::google::protobuf::int32 upgradeid() const;
  inline void set_upgradeid(::google::protobuf::int32 value);
  
  // optional int32 timeLeft = 4;
  inline bool has_timeleft() const;
  inline void clear_timeleft();
  static const int kTimeLeftFieldNumber = 4;
  inline ::google::protobuf::int32 timeleft() const;
  inline void set_timeleft(::google::protobuf::int32 value);
  
  // optional int64 updateAt = 5;
  inline bool has_updateat() const;
  inline void clear_updateat();
  static const int kUpdateAtFieldNumber = 5;
  inline ::google::protobuf::int64 updateat() const;
  inline void set_updateat(::google::protobuf::int64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sku_;
  ::google::protobuf::int32 unlock_;
  ::google::protobuf::int32 upgradeid_;
  ::google::protobuf::int32 timeleft_;
  ::google::protobuf::int64 updateat_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_GameUnit* default_instance_;
};
// -------------------------------------------------------------------

class DB_Planet : public ::google::protobuf::Message {
 public:
  DB_Planet();
  virtual ~DB_Planet();
  
  DB_Planet(const DB_Planet& from);
  
  inline DB_Planet& operator=(const DB_Planet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Planet& default_instance();
  void Swap(DB_Planet* other);
  
  // implements Message ----------------------------------------------
  
  DB_Planet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Planet& from);
  void MergeFrom(const DB_Planet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 HQLevel = 3;
  inline bool has_hqlevel() const;
  inline void clear_hqlevel();
  static const int kHQLevelFieldNumber = 3;
  inline ::google::protobuf::int32 hqlevel() const;
  inline void set_hqlevel(::google::protobuf::int32 value);
  
  // optional int32 Droids = 4;
  inline bool has_droids() const;
  inline void clear_droids();
  static const int kDroidsFieldNumber = 4;
  inline ::google::protobuf::int32 droids() const;
  inline void set_droids(::google::protobuf::int32 value);
  
  // optional int32 DroidInUse = 5;
  inline bool has_droidinuse() const;
  inline void clear_droidinuse();
  static const int kDroidInUseFieldNumber = 5;
  inline ::google::protobuf::int32 droidinuse() const;
  inline void set_droidinuse(::google::protobuf::int32 value);
  
  // optional int32 Capital = 6;
  inline bool has_capital() const;
  inline void clear_capital();
  static const int kCapitalFieldNumber = 6;
  inline ::google::protobuf::int32 capital() const;
  inline void set_capital(::google::protobuf::int32 value);
  
  // optional int64 CoinsLimit = 7;
  inline bool has_coinslimit() const;
  inline void clear_coinslimit();
  static const int kCoinsLimitFieldNumber = 7;
  inline ::google::protobuf::int64 coinslimit() const;
  inline void set_coinslimit(::google::protobuf::int64 value);
  
  // optional int64 MineralLimit = 8;
  inline bool has_minerallimit() const;
  inline void clear_minerallimit();
  static const int kMineralLimitFieldNumber = 8;
  inline ::google::protobuf::int64 minerallimit() const;
  inline void set_minerallimit(::google::protobuf::int64 value);
  
  // optional int32 star = 9;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 9;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);
  
  // repeated .DB_Item items = 10;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 10;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_Item >& items() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_Item >* mutable_items();
  inline const ::DB_Item& items(int index) const;
  inline ::DB_Item* mutable_items(int index);
  inline ::DB_Item* add_items();
  
  // repeated .DB_Hangar hangars = 11;
  inline int hangars_size() const;
  inline void clear_hangars();
  static const int kHangarsFieldNumber = 11;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_Hangar >& hangars() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_Hangar >* mutable_hangars();
  inline const ::DB_Hangar& hangars(int index) const;
  inline ::DB_Hangar* mutable_hangars(int index);
  inline ::DB_Hangar* add_hangars();
  
  // repeated .DB_GameUnit units = 12;
  inline int units_size() const;
  inline void clear_units();
  static const int kUnitsFieldNumber = 12;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_GameUnit >& units() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_GameUnit >* mutable_units();
  inline const ::DB_GameUnit& units(int index) const;
  inline ::DB_GameUnit* mutable_units(int index);
  inline ::DB_GameUnit* add_units();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 hqlevel_;
  ::google::protobuf::int32 droids_;
  ::google::protobuf::int32 droidinuse_;
  ::google::protobuf::int32 capital_;
  ::google::protobuf::int64 coinslimit_;
  ::google::protobuf::int64 minerallimit_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::RepeatedPtrField< ::DB_Item > items_;
  ::google::protobuf::RepeatedPtrField< ::DB_Hangar > hangars_;
  ::google::protobuf::RepeatedPtrField< ::DB_GameUnit > units_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Planet* default_instance_;
};
// -------------------------------------------------------------------

class DB_NPC : public ::google::protobuf::Message {
 public:
  DB_NPC();
  virtual ~DB_NPC();
  
  DB_NPC(const DB_NPC& from);
  
  inline DB_NPC& operator=(const DB_NPC& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_NPC& default_instance();
  void Swap(DB_NPC* other);
  
  // implements Message ----------------------------------------------
  
  DB_NPC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_NPC& from);
  void MergeFrom(const DB_NPC& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 sku = 1;
  inline bool has_sku() const;
  inline void clear_sku();
  static const int kSkuFieldNumber = 1;
  inline ::google::protobuf::int32 sku() const;
  inline void set_sku(::google::protobuf::int32 value);
  
  // optional int32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
  // optional int32 HQLevel = 3;
  inline bool has_hqlevel() const;
  inline void clear_hqlevel();
  static const int kHQLevelFieldNumber = 3;
  inline ::google::protobuf::int32 hqlevel() const;
  inline void set_hqlevel(::google::protobuf::int32 value);
  
  // optional int32 npcId = 4;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIdFieldNumber = 4;
  inline ::google::protobuf::int32 npcid() const;
  inline void set_npcid(::google::protobuf::int32 value);
  
  // repeated .DB_Item items = 5;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_Item >& items() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_Item >* mutable_items();
  inline const ::DB_Item& items(int index) const;
  inline ::DB_Item* mutable_items(int index);
  inline ::DB_Item* add_items();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sku_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 hqlevel_;
  ::google::protobuf::int32 npcid_;
  ::google::protobuf::RepeatedPtrField< ::DB_Item > items_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_NPC* default_instance_;
};
// -------------------------------------------------------------------

class DB_SocialItem : public ::google::protobuf::Message {
 public:
  DB_SocialItem();
  virtual ~DB_SocialItem();
  
  DB_SocialItem(const DB_SocialItem& from);
  
  inline DB_SocialItem& operator=(const DB_SocialItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_SocialItem& default_instance();
  void Swap(DB_SocialItem* other);
  
  // implements Message ----------------------------------------------
  
  DB_SocialItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_SocialItem& from);
  void MergeFrom(const DB_SocialItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 sku = 1;
  inline bool has_sku() const;
  inline void clear_sku();
  static const int kSkuFieldNumber = 1;
  inline ::google::protobuf::int32 sku() const;
  inline void set_sku(::google::protobuf::int32 value);
  
  // optional int32 amount = 2;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 2;
  inline ::google::protobuf::int32 amount() const;
  inline void set_amount(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sku_;
  ::google::protobuf::int32 amount_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_SocialItem* default_instance_;
};
// -------------------------------------------------------------------

class DB_Player : public ::google::protobuf::Message {
 public:
  DB_Player();
  virtual ~DB_Player();
  
  DB_Player(const DB_Player& from);
  
  inline DB_Player& operator=(const DB_Player& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Player& default_instance();
  void Swap(DB_Player* other);
  
  // implements Message ----------------------------------------------
  
  DB_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Player& from);
  void MergeFrom(const DB_Player& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .DB_Model model = 1;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 1;
  inline const ::DB_Model& model() const;
  inline ::DB_Model* mutable_model();
  
  // optional .DB_State state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline const ::DB_State& state() const;
  inline ::DB_State* mutable_state();
  
  // repeated .DB_Planet planets = 3;
  inline int planets_size() const;
  inline void clear_planets();
  static const int kPlanetsFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_Planet >& planets() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_Planet >* mutable_planets();
  inline const ::DB_Planet& planets(int index) const;
  inline ::DB_Planet* mutable_planets(int index);
  inline ::DB_Planet* add_planets();
  
  // repeated .DB_NPC npcs = 4;
  inline int npcs_size() const;
  inline void clear_npcs();
  static const int kNpcsFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_NPC >& npcs() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_NPC >* mutable_npcs();
  inline const ::DB_NPC& npcs(int index) const;
  inline ::DB_NPC* mutable_npcs(int index);
  inline ::DB_NPC* add_npcs();
  
  // optional .DB_Flag flag = 5;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 5;
  inline const ::DB_Flag& flag() const;
  inline ::DB_Flag* mutable_flag();
  
  // repeated .DB_SocialItem socialItems = 6;
  inline int socialitems_size() const;
  inline void clear_socialitems();
  static const int kSocialItemsFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_SocialItem >& socialitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_SocialItem >* mutable_socialitems();
  inline const ::DB_SocialItem& socialitems(int index) const;
  inline ::DB_SocialItem* mutable_socialitems(int index);
  inline ::DB_SocialItem* add_socialitems();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::DB_Model* model_;
  ::DB_State* state_;
  ::google::protobuf::RepeatedPtrField< ::DB_Planet > planets_;
  ::google::protobuf::RepeatedPtrField< ::DB_NPC > npcs_;
  ::DB_Flag* flag_;
  ::google::protobuf::RepeatedPtrField< ::DB_SocialItem > socialitems_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Player* default_instance_;
};
// -------------------------------------------------------------------

class DB_DailyLogon : public ::google::protobuf::Message {
 public:
  DB_DailyLogon();
  virtual ~DB_DailyLogon();
  
  DB_DailyLogon(const DB_DailyLogon& from);
  
  inline DB_DailyLogon& operator=(const DB_DailyLogon& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_DailyLogon& default_instance();
  void Swap(DB_DailyLogon* other);
  
  // implements Message ----------------------------------------------
  
  DB_DailyLogon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_DailyLogon& from);
  void MergeFrom(const DB_DailyLogon& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 firstday = 1 [default = 0];
  inline bool has_firstday() const;
  inline void clear_firstday();
  static const int kFirstdayFieldNumber = 1;
  inline ::google::protobuf::int32 firstday() const;
  inline void set_firstday(::google::protobuf::int32 value);
  
  // optional int32 daycount = 2 [default = 0];
  inline bool has_daycount() const;
  inline void clear_daycount();
  static const int kDaycountFieldNumber = 2;
  inline ::google::protobuf::int32 daycount() const;
  inline void set_daycount(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 firstday_;
  ::google::protobuf::int32 daycount_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_DailyLogon* default_instance_;
};
// -------------------------------------------------------------------

class DB_ActiveContinueLogon : public ::google::protobuf::Message {
 public:
  DB_ActiveContinueLogon();
  virtual ~DB_ActiveContinueLogon();
  
  DB_ActiveContinueLogon(const DB_ActiveContinueLogon& from);
  
  inline DB_ActiveContinueLogon& operator=(const DB_ActiveContinueLogon& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_ActiveContinueLogon& default_instance();
  void Swap(DB_ActiveContinueLogon* other);
  
  // implements Message ----------------------------------------------
  
  DB_ActiveContinueLogon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_ActiveContinueLogon& from);
  void MergeFrom(const DB_ActiveContinueLogon& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 logonDays = 1 [default = 0];
  inline bool has_logondays() const;
  inline void clear_logondays();
  static const int kLogonDaysFieldNumber = 1;
  inline ::google::protobuf::int32 logondays() const;
  inline void set_logondays(::google::protobuf::int32 value);
  
  // optional bool hasGet = 2 [default = false];
  inline bool has_hasget() const;
  inline void clear_hasget();
  static const int kHasGetFieldNumber = 2;
  inline bool hasget() const;
  inline void set_hasget(bool value);
  
  // optional int32 lastLogonTime = 3 [default = 0];
  inline bool has_lastlogontime() const;
  inline void clear_lastlogontime();
  static const int kLastLogonTimeFieldNumber = 3;
  inline ::google::protobuf::int32 lastlogontime() const;
  inline void set_lastlogontime(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 logondays_;
  bool hasget_;
  ::google::protobuf::int32 lastlogontime_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_ActiveContinueLogon* default_instance_;
};
// -------------------------------------------------------------------

class DB_User : public ::google::protobuf::Message {
 public:
  DB_User();
  virtual ~DB_User();
  
  DB_User(const DB_User& from);
  
  inline DB_User& operator=(const DB_User& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_User& default_instance();
  void Swap(DB_User* other);
  
  // implements Message ----------------------------------------------
  
  DB_User* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_User& from);
  void MergeFrom(const DB_User& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);
  
  // required string platform_id = 2 [default = ""];
  inline bool has_platform_id() const;
  inline void clear_platform_id();
  static const int kPlatformIdFieldNumber = 2;
  inline const ::std::string& platform_id() const;
  inline void set_platform_id(const ::std::string& value);
  inline void set_platform_id(const char* value);
  inline void set_platform_id(const char* value, size_t size);
  inline ::std::string* mutable_platform_id();
  
  // repeated string name = 3;
  inline int name_size() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& name() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name();
  inline const ::std::string& name(int index) const;
  inline ::std::string* mutable_name(int index);
  inline void set_name(int index, const ::std::string& value);
  inline void set_name(int index, const char* value);
  inline void set_name(int index, const char* value, size_t size);
  inline ::std::string* add_name();
  inline void add_name(const ::std::string& value);
  inline void add_name(const char* value);
  inline void add_name(const char* value, size_t size);
  
  // repeated string profile_link = 4;
  inline int profile_link_size() const;
  inline void clear_profile_link();
  static const int kProfileLinkFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& profile_link() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_profile_link();
  inline const ::std::string& profile_link(int index) const;
  inline ::std::string* mutable_profile_link(int index);
  inline void set_profile_link(int index, const ::std::string& value);
  inline void set_profile_link(int index, const char* value);
  inline void set_profile_link(int index, const char* value, size_t size);
  inline ::std::string* add_profile_link();
  inline void add_profile_link(const ::std::string& value);
  inline void add_profile_link(const char* value);
  inline void add_profile_link(const char* value, size_t size);
  
  // required int32 gender = 5;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 5;
  inline ::google::protobuf::int32 gender() const;
  inline void set_gender(::google::protobuf::int32 value);
  
  // required int64 last_login_time = 6 [default = 0];
  inline bool has_last_login_time() const;
  inline void clear_last_login_time();
  static const int kLastLoginTimeFieldNumber = 6;
  inline ::google::protobuf::int64 last_login_time() const;
  inline void set_last_login_time(::google::protobuf::int64 value);
  
  // required string last_login_ip = 7 [default = ""];
  inline bool has_last_login_ip() const;
  inline void clear_last_login_ip();
  static const int kLastLoginIpFieldNumber = 7;
  inline const ::std::string& last_login_ip() const;
  inline void set_last_login_ip(const ::std::string& value);
  inline void set_last_login_ip(const char* value);
  inline void set_last_login_ip(const char* value, size_t size);
  inline ::std::string* mutable_last_login_ip();
  
  // required int64 regist_time = 8 [default = 0];
  inline bool has_regist_time() const;
  inline void clear_regist_time();
  static const int kRegistTimeFieldNumber = 8;
  inline ::google::protobuf::int64 regist_time() const;
  inline void set_regist_time(::google::protobuf::int64 value);
  
  // optional int32 yellowDmdLvl = 9 [default = 0];
  inline bool has_yellowdmdlvl() const;
  inline void clear_yellowdmdlvl();
  static const int kYellowDmdLvlFieldNumber = 9;
  inline ::google::protobuf::int32 yellowdmdlvl() const;
  inline void set_yellowdmdlvl(::google::protobuf::int32 value);
  
  // optional bool isYellowDmd = 10 [default = false];
  inline bool has_isyellowdmd() const;
  inline void clear_isyellowdmd();
  static const int kIsYellowDmdFieldNumber = 10;
  inline bool isyellowdmd() const;
  inline void set_isyellowdmd(bool value);
  
  // optional bool isYellowDmdYear = 11 [default = false];
  inline bool has_isyellowdmdyear() const;
  inline void clear_isyellowdmdyear();
  static const int kIsYellowDmdYearFieldNumber = 11;
  inline bool isyellowdmdyear() const;
  inline void set_isyellowdmdyear(bool value);
  
  // optional int64 getDayYellowGiftDay = 12 [default = 0];
  inline bool has_getdayyellowgiftday() const;
  inline void clear_getdayyellowgiftday();
  static const int kGetDayYellowGiftDayFieldNumber = 12;
  inline ::google::protobuf::int64 getdayyellowgiftday() const;
  inline void set_getdayyellowgiftday(::google::protobuf::int64 value);
  
  // optional bool getNewYellowGift = 13 [default = false];
  inline bool has_getnewyellowgift() const;
  inline void clear_getnewyellowgift();
  static const int kGetNewYellowGiftFieldNumber = 13;
  inline bool getnewyellowgift() const;
  inline void set_getnewyellowgift(bool value);
  
  // optional int64 last_logout_time = 14;
  inline bool has_last_logout_time() const;
  inline void clear_last_logout_time();
  static const int kLastLogoutTimeFieldNumber = 14;
  inline ::google::protobuf::int64 last_logout_time() const;
  inline void set_last_logout_time(::google::protobuf::int64 value);
  
  // required .DB_Player player = 15;
  inline bool has_player() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 15;
  inline const ::DB_Player& player() const;
  inline ::DB_Player* mutable_player();
  
  // optional .DB_BanLogin banlogin = 16;
  inline bool has_banlogin() const;
  inline void clear_banlogin();
  static const int kBanloginFieldNumber = 16;
  inline const ::DB_BanLogin& banlogin() const;
  inline ::DB_BanLogin* mutable_banlogin();
  
  // optional bool transferbymysql = 17 [default = false];
  inline bool has_transferbymysql() const;
  inline void clear_transferbymysql();
  static const int kTransferbymysqlFieldNumber = 17;
  inline bool transferbymysql() const;
  inline void set_transferbymysql(bool value);
  
  // optional int32 mysqluserid = 18 [default = 0];
  inline bool has_mysqluserid() const;
  inline void clear_mysqluserid();
  static const int kMysqluseridFieldNumber = 18;
  inline ::google::protobuf::int32 mysqluserid() const;
  inline void set_mysqluserid(::google::protobuf::int32 value);
  
  // optional int32 ExpiateFlag = 19;
  inline bool has_expiateflag() const;
  inline void clear_expiateflag();
  static const int kExpiateFlagFieldNumber = 19;
  inline ::google::protobuf::int32 expiateflag() const;
  inline void set_expiateflag(::google::protobuf::int32 value);
  
  // optional int32 sendgiftcount = 20;
  inline bool has_sendgiftcount() const;
  inline void clear_sendgiftcount();
  static const int kSendgiftcountFieldNumber = 20;
  inline ::google::protobuf::int32 sendgiftcount() const;
  inline void set_sendgiftcount(::google::protobuf::int32 value);
  
  // optional int32 selfgiftcount = 21;
  inline bool has_selfgiftcount() const;
  inline void clear_selfgiftcount();
  static const int kSelfgiftcountFieldNumber = 21;
  inline ::google::protobuf::int32 selfgiftcount() const;
  inline void set_selfgiftcount(::google::protobuf::int32 value);
  
  // optional int32 giftwincount = 22;
  inline bool has_giftwincount() const;
  inline void clear_giftwincount();
  static const int kGiftwincountFieldNumber = 22;
  inline ::google::protobuf::int32 giftwincount() const;
  inline void set_giftwincount(::google::protobuf::int32 value);
  
  // optional int32 destroytime = 23 [default = 0];
  inline bool has_destroytime() const;
  inline void clear_destroytime();
  static const int kDestroytimeFieldNumber = 23;
  inline ::google::protobuf::int32 destroytime() const;
  inline void set_destroytime(::google::protobuf::int32 value);
  
  // repeated .DB_LootReport fightrecord = 24;
  inline int fightrecord_size() const;
  inline void clear_fightrecord();
  static const int kFightrecordFieldNumber = 24;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_LootReport >& fightrecord() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_LootReport >* mutable_fightrecord();
  inline const ::DB_LootReport& fightrecord(int index) const;
  inline ::DB_LootReport* mutable_fightrecord(int index);
  inline ::DB_LootReport* add_fightrecord();
  
  // optional .DB_DailyLogon dailylogin = 25;
  inline bool has_dailylogin() const;
  inline void clear_dailylogin();
  static const int kDailyloginFieldNumber = 25;
  inline const ::DB_DailyLogon& dailylogin() const;
  inline ::DB_DailyLogon* mutable_dailylogin();
  
  // optional bool bannergift = 26 [default = false];
  inline bool has_bannergift() const;
  inline void clear_bannergift();
  static const int kBannergiftFieldNumber = 26;
  inline bool bannergift() const;
  inline void set_bannergift(bool value);
  
  // optional int32 landingdaygiftbit = 27 [default = 0];
  inline bool has_landingdaygiftbit() const;
  inline void clear_landingdaygiftbit();
  static const int kLandingdaygiftbitFieldNumber = 27;
  inline ::google::protobuf::int32 landingdaygiftbit() const;
  inline void set_landingdaygiftbit(::google::protobuf::int32 value);
  
  // optional int32 landdaycount = 28 [default = 0];
  inline bool has_landdaycount() const;
  inline void clear_landdaycount();
  static const int kLanddaycountFieldNumber = 28;
  inline ::google::protobuf::int32 landdaycount() const;
  inline void set_landdaycount(::google::protobuf::int32 value);
  
  // optional int64 webOnceFlag = 29 [default = 0];
  inline bool has_webonceflag() const;
  inline void clear_webonceflag();
  static const int kWebOnceFlagFieldNumber = 29;
  inline ::google::protobuf::int64 webonceflag() const;
  inline void set_webonceflag(::google::protobuf::int64 value);
  
  // optional .DB_GiftInfo giftInfo = 30;
  inline bool has_giftinfo() const;
  inline void clear_giftinfo();
  static const int kGiftInfoFieldNumber = 30;
  inline const ::DB_GiftInfo& giftinfo() const;
  inline ::DB_GiftInfo* mutable_giftinfo();
  
  // optional int32 QQDmdLvl = 31 [default = 0];
  inline bool has_qqdmdlvl() const;
  inline void clear_qqdmdlvl();
  static const int kQQDmdLvlFieldNumber = 31;
  inline ::google::protobuf::int32 qqdmdlvl() const;
  inline void set_qqdmdlvl(::google::protobuf::int32 value);
  
  // optional bool isQQDmd = 32 [default = false];
  inline bool has_isqqdmd() const;
  inline void clear_isqqdmd();
  static const int kIsQQDmdFieldNumber = 32;
  inline bool isqqdmd() const;
  inline void set_isqqdmd(bool value);
  
  // optional bool isQQDmdYear = 33 [default = false];
  inline bool has_isqqdmdyear() const;
  inline void clear_isqqdmdyear();
  static const int kIsQQDmdYearFieldNumber = 33;
  inline bool isqqdmdyear() const;
  inline void set_isqqdmdyear(bool value);
  
  // optional int64 getDayQQGiftDay = 34 [default = 0];
  inline bool has_getdayqqgiftday() const;
  inline void clear_getdayqqgiftday();
  static const int kGetDayQQGiftDayFieldNumber = 34;
  inline ::google::protobuf::int64 getdayqqgiftday() const;
  inline void set_getdayqqgiftday(::google::protobuf::int64 value);
  
  // optional bool getNewQQGift = 35 [default = false];
  inline bool has_getnewqqgift() const;
  inline void clear_getnewqqgift();
  static const int kGetNewQQGiftFieldNumber = 35;
  inline bool getnewqqgift() const;
  inline void set_getnewqqgift(bool value);
  
  // optional int32 region = 36 [default = 0];
  inline bool has_region() const;
  inline void clear_region();
  static const int kRegionFieldNumber = 36;
  inline ::google::protobuf::int32 region() const;
  inline void set_region(::google::protobuf::int32 value);
  
  // optional int32 logondaycount = 37 [default = 0];
  inline bool has_logondaycount() const;
  inline void clear_logondaycount();
  static const int kLogondaycountFieldNumber = 37;
  inline ::google::protobuf::int32 logondaycount() const;
  inline void set_logondaycount(::google::protobuf::int32 value);
  
  // optional int32 city = 38 [default = 0];
  inline bool has_city() const;
  inline void clear_city();
  static const int kCityFieldNumber = 38;
  inline ::google::protobuf::int32 city() const;
  inline void set_city(::google::protobuf::int32 value);
  
  // optional bool isHighYellowDmd = 39 [default = false];
  inline bool has_ishighyellowdmd() const;
  inline void clear_ishighyellowdmd();
  static const int kIsHighYellowDmdFieldNumber = 39;
  inline bool ishighyellowdmd() const;
  inline void set_ishighyellowdmd(bool value);
  
  // optional .DB_ActiveContinueLogon activeContinueLogon = 40;
  inline bool has_activecontinuelogon() const;
  inline void clear_activecontinuelogon();
  static const int kActiveContinueLogonFieldNumber = 40;
  inline const ::DB_ActiveContinueLogon& activecontinuelogon() const;
  inline ::DB_ActiveContinueLogon* mutable_activecontinuelogon();
  
  // optional bool isActiveLogon = 41 [default = false];
  inline bool has_isactivelogon() const;
  inline void clear_isactivelogon();
  static const int kIsActiveLogonFieldNumber = 41;
  inline bool isactivelogon() const;
  inline void set_isactivelogon(bool value);
  
  // optional bool hasGetRecall = 42 [default = false];
  inline bool has_hasgetrecall() const;
  inline void clear_hasgetrecall();
  static const int kHasGetRecallFieldNumber = 42;
  inline bool hasgetrecall() const;
  inline void set_hasgetrecall(bool value);
  
  // optional int32 lastRepairTime = 43 [default = 0];
  inline bool has_lastrepairtime() const;
  inline void clear_lastrepairtime();
  static const int kLastRepairTimeFieldNumber = 43;
  inline ::google::protobuf::int32 lastrepairtime() const;
  inline void set_lastrepairtime(::google::protobuf::int32 value);
  
  // optional int32 landDayCountEx = 44 [default = 0];
  inline bool has_landdaycountex() const;
  inline void clear_landdaycountex();
  static const int kLandDayCountExFieldNumber = 44;
  inline ::google::protobuf::int32 landdaycountex() const;
  inline void set_landdaycountex(::google::protobuf::int32 value);
  
  // optional int32 landDayGiftEx = 45 [default = 0];
  inline bool has_landdaygiftex() const;
  inline void clear_landdaygiftex();
  static const int kLandDayGiftExFieldNumber = 45;
  inline ::google::protobuf::int32 landdaygiftex() const;
  inline void set_landdaygiftex(::google::protobuf::int32 value);
  
  // optional .DB_Officer officer = 46;
  inline bool has_officer() const;
  inline void clear_officer();
  static const int kOfficerFieldNumber = 46;
  inline const ::DB_Officer& officer() const;
  inline ::DB_Officer* mutable_officer();
  
  // optional int32 destroynpctime = 47 [default = 0];
  inline bool has_destroynpctime() const;
  inline void clear_destroynpctime();
  static const int kDestroynpctimeFieldNumber = 47;
  inline ::google::protobuf::int32 destroynpctime() const;
  inline void set_destroynpctime(::google::protobuf::int32 value);
  
  // optional bool bRegisterNum = 48 [default = false];
  inline bool has_bregisternum() const;
  inline void clear_bregisternum();
  static const int kBRegisterNumFieldNumber = 48;
  inline bool bregisternum() const;
  inline void set_bregisternum(bool value);
  
  // optional bool bAdult = 51 [default = true];
  inline bool has_badult() const;
  inline void clear_badult();
  static const int kBAdultFieldNumber = 51;
  inline bool badult() const;
  inline void set_badult(bool value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 id_;
  ::std::string* platform_id_;
  static const ::std::string _default_platform_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> profile_link_;
  ::google::protobuf::int32 gender_;
  ::google::protobuf::int64 last_login_time_;
  ::std::string* last_login_ip_;
  static const ::std::string _default_last_login_ip_;
  ::google::protobuf::int64 regist_time_;
  ::google::protobuf::int32 yellowdmdlvl_;
  bool isyellowdmd_;
  bool isyellowdmdyear_;
  ::google::protobuf::int64 getdayyellowgiftday_;
  bool getnewyellowgift_;
  ::google::protobuf::int64 last_logout_time_;
  ::DB_Player* player_;
  ::DB_BanLogin* banlogin_;
  bool transferbymysql_;
  ::google::protobuf::int32 mysqluserid_;
  ::google::protobuf::int32 expiateflag_;
  ::google::protobuf::int32 sendgiftcount_;
  ::google::protobuf::int32 selfgiftcount_;
  ::google::protobuf::int32 giftwincount_;
  ::google::protobuf::int32 destroytime_;
  ::google::protobuf::RepeatedPtrField< ::DB_LootReport > fightrecord_;
  ::DB_DailyLogon* dailylogin_;
  bool bannergift_;
  ::google::protobuf::int32 landingdaygiftbit_;
  ::google::protobuf::int32 landdaycount_;
  ::google::protobuf::int64 webonceflag_;
  ::DB_GiftInfo* giftinfo_;
  ::google::protobuf::int32 qqdmdlvl_;
  bool isqqdmd_;
  bool isqqdmdyear_;
  ::google::protobuf::int64 getdayqqgiftday_;
  bool getnewqqgift_;
  ::google::protobuf::int32 region_;
  ::google::protobuf::int32 logondaycount_;
  ::google::protobuf::int32 city_;
  bool ishighyellowdmd_;
  ::DB_ActiveContinueLogon* activecontinuelogon_;
  bool isactivelogon_;
  bool hasgetrecall_;
  ::google::protobuf::int32 lastrepairtime_;
  ::google::protobuf::int32 landdaycountex_;
  ::google::protobuf::int32 landdaygiftex_;
  ::DB_Officer* officer_;
  ::google::protobuf::int32 destroynpctime_;
  bool bregisternum_;
  bool badult_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(49 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_User* default_instance_;
};
// -------------------------------------------------------------------

class DB_GlobalStarInfo : public ::google::protobuf::Message {
 public:
  DB_GlobalStarInfo();
  virtual ~DB_GlobalStarInfo();
  
  DB_GlobalStarInfo(const DB_GlobalStarInfo& from);
  
  inline DB_GlobalStarInfo& operator=(const DB_GlobalStarInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_GlobalStarInfo& default_instance();
  void Swap(DB_GlobalStarInfo* other);
  
  // implements Message ----------------------------------------------
  
  DB_GlobalStarInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_GlobalStarInfo& from);
  void MergeFrom(const DB_GlobalStarInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DB_Galaxy galaxys = 1;
  inline int galaxys_size() const;
  inline void clear_galaxys();
  static const int kGalaxysFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_Galaxy >& galaxys() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_Galaxy >* mutable_galaxys();
  inline const ::DB_Galaxy& galaxys(int index) const;
  inline ::DB_Galaxy* mutable_galaxys(int index);
  inline ::DB_Galaxy* add_galaxys();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::DB_Galaxy > galaxys_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_GlobalStarInfo* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// DB_Model

// optional int32 level = 1;
inline bool DB_Model::has_level() const {
  return _has_bit(0);
}
inline void DB_Model::clear_level() {
  level_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Model::level() const {
  return level_;
}
inline void DB_Model::set_level(::google::protobuf::int32 value) {
  _set_bit(0);
  level_ = value;
}

// optional int64 coins = 2;
inline bool DB_Model::has_coins() const {
  return _has_bit(1);
}
inline void DB_Model::clear_coins() {
  coins_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 DB_Model::coins() const {
  return coins_;
}
inline void DB_Model::set_coins(::google::protobuf::int64 value) {
  _set_bit(1);
  coins_ = value;
}

// optional int64 minerals = 3;
inline bool DB_Model::has_minerals() const {
  return _has_bit(2);
}
inline void DB_Model::clear_minerals() {
  minerals_ = GOOGLE_LONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::int64 DB_Model::minerals() const {
  return minerals_;
}
inline void DB_Model::set_minerals(::google::protobuf::int64 value) {
  _set_bit(2);
  minerals_ = value;
}

// optional int64 coinsTotal = 4;
inline bool DB_Model::has_coinstotal() const {
  return _has_bit(3);
}
inline void DB_Model::clear_coinstotal() {
  coinstotal_ = GOOGLE_LONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::int64 DB_Model::coinstotal() const {
  return coinstotal_;
}
inline void DB_Model::set_coinstotal(::google::protobuf::int64 value) {
  _set_bit(3);
  coinstotal_ = value;
}

// optional int64 mineralsTotal = 5;
inline bool DB_Model::has_mineralstotal() const {
  return _has_bit(4);
}
inline void DB_Model::clear_mineralstotal() {
  mineralstotal_ = GOOGLE_LONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::int64 DB_Model::mineralstotal() const {
  return mineralstotal_;
}
inline void DB_Model::set_mineralstotal(::google::protobuf::int64 value) {
  _set_bit(4);
  mineralstotal_ = value;
}

// optional int32 score = 6;
inline bool DB_Model::has_score() const {
  return _has_bit(5);
}
inline void DB_Model::clear_score() {
  score_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_Model::score() const {
  return score_;
}
inline void DB_Model::set_score(::google::protobuf::int32 value) {
  _set_bit(5);
  score_ = value;
}

// optional int32 exp = 7;
inline bool DB_Model::has_exp() const {
  return _has_bit(6);
}
inline void DB_Model::clear_exp() {
  exp_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_Model::exp() const {
  return exp_;
}
inline void DB_Model::set_exp(::google::protobuf::int32 value) {
  _set_bit(6);
  exp_ = value;
}

// optional int32 cash = 8;
inline bool DB_Model::has_cash() const {
  return _has_bit(7);
}
inline void DB_Model::clear_cash() {
  cash_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_Model::cash() const {
  return cash_;
}
inline void DB_Model::set_cash(::google::protobuf::int32 value) {
  _set_bit(7);
  cash_ = value;
}

// -------------------------------------------------------------------

// DB_State

// optional int32 tutorialCompleted = 1;
inline bool DB_State::has_tutorialcompleted() const {
  return _has_bit(0);
}
inline void DB_State::clear_tutorialcompleted() {
  tutorialcompleted_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_State::tutorialcompleted() const {
  return tutorialcompleted_;
}
inline void DB_State::set_tutorialcompleted(::google::protobuf::int32 value) {
  _set_bit(0);
  tutorialcompleted_ = value;
}

// optional int32 dmgProtectionTimeLeft = 2;
inline bool DB_State::has_dmgprotectiontimeleft() const {
  return _has_bit(1);
}
inline void DB_State::clear_dmgprotectiontimeleft() {
  dmgprotectiontimeleft_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_State::dmgprotectiontimeleft() const {
  return dmgprotectiontimeleft_;
}
inline void DB_State::set_dmgprotectiontimeleft(::google::protobuf::int32 value) {
  _set_bit(1);
  dmgprotectiontimeleft_ = value;
}

// optional int32 dmgProtectionTimeTotal = 3;
inline bool DB_State::has_dmgprotectiontimetotal() const {
  return _has_bit(2);
}
inline void DB_State::clear_dmgprotectiontimetotal() {
  dmgprotectiontimetotal_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_State::dmgprotectiontimetotal() const {
  return dmgprotectiontimetotal_;
}
inline void DB_State::set_dmgprotectiontimetotal(::google::protobuf::int32 value) {
  _set_bit(2);
  dmgprotectiontimetotal_ = value;
}

// -------------------------------------------------------------------

// DB_PlanetLiteInfo

// optional int64 uid = 1;
inline bool DB_PlanetLiteInfo::has_uid() const {
  return _has_bit(0);
}
inline void DB_PlanetLiteInfo::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 DB_PlanetLiteInfo::uid() const {
  return uid_;
}
inline void DB_PlanetLiteInfo::set_uid(::google::protobuf::int64 value) {
  _set_bit(0);
  uid_ = value;
}

// optional int64 planetId = 2;
inline bool DB_PlanetLiteInfo::has_planetid() const {
  return _has_bit(1);
}
inline void DB_PlanetLiteInfo::clear_planetid() {
  planetid_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 DB_PlanetLiteInfo::planetid() const {
  return planetid_;
}
inline void DB_PlanetLiteInfo::set_planetid(::google::protobuf::int64 value) {
  _set_bit(1);
  planetid_ = value;
}

// -------------------------------------------------------------------

// DB_Galaxy

// optional int32 id = 1;
inline bool DB_Galaxy::has_id() const {
  return _has_bit(0);
}
inline void DB_Galaxy::clear_id() {
  id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Galaxy::id() const {
  return id_;
}
inline void DB_Galaxy::set_id(::google::protobuf::int32 value) {
  _set_bit(0);
  id_ = value;
}

// optional int32 type = 2;
inline bool DB_Galaxy::has_type() const {
  return _has_bit(1);
}
inline void DB_Galaxy::clear_type() {
  type_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Galaxy::type() const {
  return type_;
}
inline void DB_Galaxy::set_type(::google::protobuf::int32 value) {
  _set_bit(1);
  type_ = value;
}

// optional int32 name = 3;
inline bool DB_Galaxy::has_name() const {
  return _has_bit(2);
}
inline void DB_Galaxy::clear_name() {
  name_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Galaxy::name() const {
  return name_;
}
inline void DB_Galaxy::set_name(::google::protobuf::int32 value) {
  _set_bit(2);
  name_ = value;
}

// optional int32 x = 4;
inline bool DB_Galaxy::has_x() const {
  return _has_bit(3);
}
inline void DB_Galaxy::clear_x() {
  x_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Galaxy::x() const {
  return x_;
}
inline void DB_Galaxy::set_x(::google::protobuf::int32 value) {
  _set_bit(3);
  x_ = value;
}

// optional int32 y = 5;
inline bool DB_Galaxy::has_y() const {
  return _has_bit(4);
}
inline void DB_Galaxy::clear_y() {
  y_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_Galaxy::y() const {
  return y_;
}
inline void DB_Galaxy::set_y(::google::protobuf::int32 value) {
  _set_bit(4);
  y_ = value;
}

// repeated .DB_PlanetLiteInfo lite = 6;
inline int DB_Galaxy::lite_size() const {
  return lite_.size();
}
inline void DB_Galaxy::clear_lite() {
  lite_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_PlanetLiteInfo >&
DB_Galaxy::lite() const {
  return lite_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_PlanetLiteInfo >*
DB_Galaxy::mutable_lite() {
  return &lite_;
}
inline const ::DB_PlanetLiteInfo& DB_Galaxy::lite(int index) const {
  return lite_.Get(index);
}
inline ::DB_PlanetLiteInfo* DB_Galaxy::mutable_lite(int index) {
  return lite_.Mutable(index);
}
inline ::DB_PlanetLiteInfo* DB_Galaxy::add_lite() {
  return lite_.Add();
}

// -------------------------------------------------------------------

// DB_Item

// optional int32 sid = 1;
inline bool DB_Item::has_sid() const {
  return _has_bit(0);
}
inline void DB_Item::clear_sid() {
  sid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Item::sid() const {
  return sid_;
}
inline void DB_Item::set_sid(::google::protobuf::int32 value) {
  _set_bit(0);
  sid_ = value;
}

// optional int32 sku = 2;
inline bool DB_Item::has_sku() const {
  return _has_bit(1);
}
inline void DB_Item::clear_sku() {
  sku_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Item::sku() const {
  return sku_;
}
inline void DB_Item::set_sku(::google::protobuf::int32 value) {
  _set_bit(1);
  sku_ = value;
}

// optional int32 type = 3;
inline bool DB_Item::has_type() const {
  return _has_bit(2);
}
inline void DB_Item::clear_type() {
  type_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Item::type() const {
  return type_;
}
inline void DB_Item::set_type(::google::protobuf::int32 value) {
  _set_bit(2);
  type_ = value;
}

// optional int32 upgradeId = 4;
inline bool DB_Item::has_upgradeid() const {
  return _has_bit(3);
}
inline void DB_Item::clear_upgradeid() {
  upgradeid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Item::upgradeid() const {
  return upgradeid_;
}
inline void DB_Item::set_upgradeid(::google::protobuf::int32 value) {
  _set_bit(3);
  upgradeid_ = value;
}

// optional int32 isFlipped = 5;
inline bool DB_Item::has_isflipped() const {
  return _has_bit(4);
}
inline void DB_Item::clear_isflipped() {
  isflipped_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_Item::isflipped() const {
  return isflipped_;
}
inline void DB_Item::set_isflipped(::google::protobuf::int32 value) {
  _set_bit(4);
  isflipped_ = value;
}

// optional int32 energyPercent = 6;
inline bool DB_Item::has_energypercent() const {
  return _has_bit(5);
}
inline void DB_Item::clear_energypercent() {
  energypercent_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_Item::energypercent() const {
  return energypercent_;
}
inline void DB_Item::set_energypercent(::google::protobuf::int32 value) {
  _set_bit(5);
  energypercent_ = value;
}

// optional int32 energy = 7;
inline bool DB_Item::has_energy() const {
  return _has_bit(6);
}
inline void DB_Item::clear_energy() {
  energy_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_Item::energy() const {
  return energy_;
}
inline void DB_Item::set_energy(::google::protobuf::int32 value) {
  _set_bit(6);
  energy_ = value;
}

// optional int32 x = 8;
inline bool DB_Item::has_x() const {
  return _has_bit(7);
}
inline void DB_Item::clear_x() {
  x_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_Item::x() const {
  return x_;
}
inline void DB_Item::set_x(::google::protobuf::int32 value) {
  _set_bit(7);
  x_ = value;
}

// optional int32 y = 9;
inline bool DB_Item::has_y() const {
  return _has_bit(8);
}
inline void DB_Item::clear_y() {
  y_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_Item::y() const {
  return y_;
}
inline void DB_Item::set_y(::google::protobuf::int32 value) {
  _set_bit(8);
  y_ = value;
}

// optional int32 state = 10;
inline bool DB_Item::has_state() const {
  return _has_bit(9);
}
inline void DB_Item::clear_state() {
  state_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 DB_Item::state() const {
  return state_;
}
inline void DB_Item::set_state(::google::protobuf::int32 value) {
  _set_bit(9);
  state_ = value;
}

// optional int32 time = 11;
inline bool DB_Item::has_time() const {
  return _has_bit(10);
}
inline void DB_Item::clear_time() {
  time_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 DB_Item::time() const {
  return time_;
}
inline void DB_Item::set_time(::google::protobuf::int32 value) {
  _set_bit(10);
  time_ = value;
}

// optional int32 incomeToRestore = 12;
inline bool DB_Item::has_incometorestore() const {
  return _has_bit(11);
}
inline void DB_Item::clear_incometorestore() {
  incometorestore_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 DB_Item::incometorestore() const {
  return incometorestore_;
}
inline void DB_Item::set_incometorestore(::google::protobuf::int32 value) {
  _set_bit(11);
  incometorestore_ = value;
}

// optional int32 repairing = 13;
inline bool DB_Item::has_repairing() const {
  return _has_bit(12);
}
inline void DB_Item::clear_repairing() {
  repairing_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 DB_Item::repairing() const {
  return repairing_;
}
inline void DB_Item::set_repairing(::google::protobuf::int32 value) {
  _set_bit(12);
  repairing_ = value;
}

// optional int64 repairStart = 14;
inline bool DB_Item::has_repairstart() const {
  return _has_bit(13);
}
inline void DB_Item::clear_repairstart() {
  repairstart_ = GOOGLE_LONGLONG(0);
  _clear_bit(13);
}
inline ::google::protobuf::int64 DB_Item::repairstart() const {
  return repairstart_;
}
inline void DB_Item::set_repairstart(::google::protobuf::int64 value) {
  _set_bit(13);
  repairstart_ = value;
}

// optional int64 updateAt = 15;
inline bool DB_Item::has_updateat() const {
  return _has_bit(14);
}
inline void DB_Item::clear_updateat() {
  updateat_ = GOOGLE_LONGLONG(0);
  _clear_bit(14);
}
inline ::google::protobuf::int64 DB_Item::updateat() const {
  return updateat_;
}
inline void DB_Item::set_updateat(::google::protobuf::int64 value) {
  _set_bit(14);
  updateat_ = value;
}

// -------------------------------------------------------------------

// DB_Hangar

// optional int32 sid = 1;
inline bool DB_Hangar::has_sid() const {
  return _has_bit(0);
}
inline void DB_Hangar::clear_sid() {
  sid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Hangar::sid() const {
  return sid_;
}
inline void DB_Hangar::set_sid(::google::protobuf::int32 value) {
  _set_bit(0);
  sid_ = value;
}

// optional int32 sku = 2;
inline bool DB_Hangar::has_sku() const {
  return _has_bit(1);
}
inline void DB_Hangar::clear_sku() {
  sku_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Hangar::sku() const {
  return sku_;
}
inline void DB_Hangar::set_sku(::google::protobuf::int32 value) {
  _set_bit(1);
  sku_ = value;
}

// optional int32 num = 3;
inline bool DB_Hangar::has_num() const {
  return _has_bit(2);
}
inline void DB_Hangar::clear_num() {
  num_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Hangar::num() const {
  return num_;
}
inline void DB_Hangar::set_num(::google::protobuf::int32 value) {
  _set_bit(2);
  num_ = value;
}

// -------------------------------------------------------------------

// DB_GameUnit

// optional int32 sku = 1;
inline bool DB_GameUnit::has_sku() const {
  return _has_bit(0);
}
inline void DB_GameUnit::clear_sku() {
  sku_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_GameUnit::sku() const {
  return sku_;
}
inline void DB_GameUnit::set_sku(::google::protobuf::int32 value) {
  _set_bit(0);
  sku_ = value;
}

// optional int32 unlock = 2;
inline bool DB_GameUnit::has_unlock() const {
  return _has_bit(1);
}
inline void DB_GameUnit::clear_unlock() {
  unlock_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_GameUnit::unlock() const {
  return unlock_;
}
inline void DB_GameUnit::set_unlock(::google::protobuf::int32 value) {
  _set_bit(1);
  unlock_ = value;
}

// optional int32 upgradeId = 3;
inline bool DB_GameUnit::has_upgradeid() const {
  return _has_bit(2);
}
inline void DB_GameUnit::clear_upgradeid() {
  upgradeid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_GameUnit::upgradeid() const {
  return upgradeid_;
}
inline void DB_GameUnit::set_upgradeid(::google::protobuf::int32 value) {
  _set_bit(2);
  upgradeid_ = value;
}

// optional int32 timeLeft = 4;
inline bool DB_GameUnit::has_timeleft() const {
  return _has_bit(3);
}
inline void DB_GameUnit::clear_timeleft() {
  timeleft_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_GameUnit::timeleft() const {
  return timeleft_;
}
inline void DB_GameUnit::set_timeleft(::google::protobuf::int32 value) {
  _set_bit(3);
  timeleft_ = value;
}

// optional int64 updateAt = 5;
inline bool DB_GameUnit::has_updateat() const {
  return _has_bit(4);
}
inline void DB_GameUnit::clear_updateat() {
  updateat_ = GOOGLE_LONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::int64 DB_GameUnit::updateat() const {
  return updateat_;
}
inline void DB_GameUnit::set_updateat(::google::protobuf::int64 value) {
  _set_bit(4);
  updateat_ = value;
}

// -------------------------------------------------------------------

// DB_Planet

// optional int32 id = 1;
inline bool DB_Planet::has_id() const {
  return _has_bit(0);
}
inline void DB_Planet::clear_id() {
  id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Planet::id() const {
  return id_;
}
inline void DB_Planet::set_id(::google::protobuf::int32 value) {
  _set_bit(0);
  id_ = value;
}

// optional int32 type = 2;
inline bool DB_Planet::has_type() const {
  return _has_bit(1);
}
inline void DB_Planet::clear_type() {
  type_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Planet::type() const {
  return type_;
}
inline void DB_Planet::set_type(::google::protobuf::int32 value) {
  _set_bit(1);
  type_ = value;
}

// optional int32 HQLevel = 3;
inline bool DB_Planet::has_hqlevel() const {
  return _has_bit(2);
}
inline void DB_Planet::clear_hqlevel() {
  hqlevel_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Planet::hqlevel() const {
  return hqlevel_;
}
inline void DB_Planet::set_hqlevel(::google::protobuf::int32 value) {
  _set_bit(2);
  hqlevel_ = value;
}

// optional int32 Droids = 4;
inline bool DB_Planet::has_droids() const {
  return _has_bit(3);
}
inline void DB_Planet::clear_droids() {
  droids_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Planet::droids() const {
  return droids_;
}
inline void DB_Planet::set_droids(::google::protobuf::int32 value) {
  _set_bit(3);
  droids_ = value;
}

// optional int32 DroidInUse = 5;
inline bool DB_Planet::has_droidinuse() const {
  return _has_bit(4);
}
inline void DB_Planet::clear_droidinuse() {
  droidinuse_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_Planet::droidinuse() const {
  return droidinuse_;
}
inline void DB_Planet::set_droidinuse(::google::protobuf::int32 value) {
  _set_bit(4);
  droidinuse_ = value;
}

// optional int32 Capital = 6;
inline bool DB_Planet::has_capital() const {
  return _has_bit(5);
}
inline void DB_Planet::clear_capital() {
  capital_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_Planet::capital() const {
  return capital_;
}
inline void DB_Planet::set_capital(::google::protobuf::int32 value) {
  _set_bit(5);
  capital_ = value;
}

// optional int64 CoinsLimit = 7;
inline bool DB_Planet::has_coinslimit() const {
  return _has_bit(6);
}
inline void DB_Planet::clear_coinslimit() {
  coinslimit_ = GOOGLE_LONGLONG(0);
  _clear_bit(6);
}
inline ::google::protobuf::int64 DB_Planet::coinslimit() const {
  return coinslimit_;
}
inline void DB_Planet::set_coinslimit(::google::protobuf::int64 value) {
  _set_bit(6);
  coinslimit_ = value;
}

// optional int64 MineralLimit = 8;
inline bool DB_Planet::has_minerallimit() const {
  return _has_bit(7);
}
inline void DB_Planet::clear_minerallimit() {
  minerallimit_ = GOOGLE_LONGLONG(0);
  _clear_bit(7);
}
inline ::google::protobuf::int64 DB_Planet::minerallimit() const {
  return minerallimit_;
}
inline void DB_Planet::set_minerallimit(::google::protobuf::int64 value) {
  _set_bit(7);
  minerallimit_ = value;
}

// optional int32 star = 9;
inline bool DB_Planet::has_star() const {
  return _has_bit(8);
}
inline void DB_Planet::clear_star() {
  star_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_Planet::star() const {
  return star_;
}
inline void DB_Planet::set_star(::google::protobuf::int32 value) {
  _set_bit(8);
  star_ = value;
}

// repeated .DB_Item items = 10;
inline int DB_Planet::items_size() const {
  return items_.size();
}
inline void DB_Planet::clear_items() {
  items_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_Item >&
DB_Planet::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_Item >*
DB_Planet::mutable_items() {
  return &items_;
}
inline const ::DB_Item& DB_Planet::items(int index) const {
  return items_.Get(index);
}
inline ::DB_Item* DB_Planet::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::DB_Item* DB_Planet::add_items() {
  return items_.Add();
}

// repeated .DB_Hangar hangars = 11;
inline int DB_Planet::hangars_size() const {
  return hangars_.size();
}
inline void DB_Planet::clear_hangars() {
  hangars_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_Hangar >&
DB_Planet::hangars() const {
  return hangars_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_Hangar >*
DB_Planet::mutable_hangars() {
  return &hangars_;
}
inline const ::DB_Hangar& DB_Planet::hangars(int index) const {
  return hangars_.Get(index);
}
inline ::DB_Hangar* DB_Planet::mutable_hangars(int index) {
  return hangars_.Mutable(index);
}
inline ::DB_Hangar* DB_Planet::add_hangars() {
  return hangars_.Add();
}

// repeated .DB_GameUnit units = 12;
inline int DB_Planet::units_size() const {
  return units_.size();
}
inline void DB_Planet::clear_units() {
  units_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_GameUnit >&
DB_Planet::units() const {
  return units_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_GameUnit >*
DB_Planet::mutable_units() {
  return &units_;
}
inline const ::DB_GameUnit& DB_Planet::units(int index) const {
  return units_.Get(index);
}
inline ::DB_GameUnit* DB_Planet::mutable_units(int index) {
  return units_.Mutable(index);
}
inline ::DB_GameUnit* DB_Planet::add_units() {
  return units_.Add();
}

// -------------------------------------------------------------------

// DB_NPC

// optional int32 sku = 1;
inline bool DB_NPC::has_sku() const {
  return _has_bit(0);
}
inline void DB_NPC::clear_sku() {
  sku_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_NPC::sku() const {
  return sku_;
}
inline void DB_NPC::set_sku(::google::protobuf::int32 value) {
  _set_bit(0);
  sku_ = value;
}

// optional int32 exp = 2;
inline bool DB_NPC::has_exp() const {
  return _has_bit(1);
}
inline void DB_NPC::clear_exp() {
  exp_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_NPC::exp() const {
  return exp_;
}
inline void DB_NPC::set_exp(::google::protobuf::int32 value) {
  _set_bit(1);
  exp_ = value;
}

// optional int32 HQLevel = 3;
inline bool DB_NPC::has_hqlevel() const {
  return _has_bit(2);
}
inline void DB_NPC::clear_hqlevel() {
  hqlevel_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_NPC::hqlevel() const {
  return hqlevel_;
}
inline void DB_NPC::set_hqlevel(::google::protobuf::int32 value) {
  _set_bit(2);
  hqlevel_ = value;
}

// optional int32 npcId = 4;
inline bool DB_NPC::has_npcid() const {
  return _has_bit(3);
}
inline void DB_NPC::clear_npcid() {
  npcid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_NPC::npcid() const {
  return npcid_;
}
inline void DB_NPC::set_npcid(::google::protobuf::int32 value) {
  _set_bit(3);
  npcid_ = value;
}

// repeated .DB_Item items = 5;
inline int DB_NPC::items_size() const {
  return items_.size();
}
inline void DB_NPC::clear_items() {
  items_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_Item >&
DB_NPC::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_Item >*
DB_NPC::mutable_items() {
  return &items_;
}
inline const ::DB_Item& DB_NPC::items(int index) const {
  return items_.Get(index);
}
inline ::DB_Item* DB_NPC::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::DB_Item* DB_NPC::add_items() {
  return items_.Add();
}

// -------------------------------------------------------------------

// DB_SocialItem

// optional int32 sku = 1;
inline bool DB_SocialItem::has_sku() const {
  return _has_bit(0);
}
inline void DB_SocialItem::clear_sku() {
  sku_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_SocialItem::sku() const {
  return sku_;
}
inline void DB_SocialItem::set_sku(::google::protobuf::int32 value) {
  _set_bit(0);
  sku_ = value;
}

// optional int32 amount = 2;
inline bool DB_SocialItem::has_amount() const {
  return _has_bit(1);
}
inline void DB_SocialItem::clear_amount() {
  amount_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_SocialItem::amount() const {
  return amount_;
}
inline void DB_SocialItem::set_amount(::google::protobuf::int32 value) {
  _set_bit(1);
  amount_ = value;
}

// -------------------------------------------------------------------

// DB_Player

// optional .DB_Model model = 1;
inline bool DB_Player::has_model() const {
  return _has_bit(0);
}
inline void DB_Player::clear_model() {
  if (model_ != NULL) model_->::DB_Model::Clear();
  _clear_bit(0);
}
inline const ::DB_Model& DB_Player::model() const {
  return model_ != NULL ? *model_ : *default_instance_->model_;
}
inline ::DB_Model* DB_Player::mutable_model() {
  _set_bit(0);
  if (model_ == NULL) model_ = new ::DB_Model;
  return model_;
}

// optional .DB_State state = 2;
inline bool DB_Player::has_state() const {
  return _has_bit(1);
}
inline void DB_Player::clear_state() {
  if (state_ != NULL) state_->::DB_State::Clear();
  _clear_bit(1);
}
inline const ::DB_State& DB_Player::state() const {
  return state_ != NULL ? *state_ : *default_instance_->state_;
}
inline ::DB_State* DB_Player::mutable_state() {
  _set_bit(1);
  if (state_ == NULL) state_ = new ::DB_State;
  return state_;
}

// repeated .DB_Planet planets = 3;
inline int DB_Player::planets_size() const {
  return planets_.size();
}
inline void DB_Player::clear_planets() {
  planets_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_Planet >&
DB_Player::planets() const {
  return planets_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_Planet >*
DB_Player::mutable_planets() {
  return &planets_;
}
inline const ::DB_Planet& DB_Player::planets(int index) const {
  return planets_.Get(index);
}
inline ::DB_Planet* DB_Player::mutable_planets(int index) {
  return planets_.Mutable(index);
}
inline ::DB_Planet* DB_Player::add_planets() {
  return planets_.Add();
}

// repeated .DB_NPC npcs = 4;
inline int DB_Player::npcs_size() const {
  return npcs_.size();
}
inline void DB_Player::clear_npcs() {
  npcs_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_NPC >&
DB_Player::npcs() const {
  return npcs_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_NPC >*
DB_Player::mutable_npcs() {
  return &npcs_;
}
inline const ::DB_NPC& DB_Player::npcs(int index) const {
  return npcs_.Get(index);
}
inline ::DB_NPC* DB_Player::mutable_npcs(int index) {
  return npcs_.Mutable(index);
}
inline ::DB_NPC* DB_Player::add_npcs() {
  return npcs_.Add();
}

// optional .DB_Flag flag = 5;
inline bool DB_Player::has_flag() const {
  return _has_bit(4);
}
inline void DB_Player::clear_flag() {
  if (flag_ != NULL) flag_->::DB_Flag::Clear();
  _clear_bit(4);
}
inline const ::DB_Flag& DB_Player::flag() const {
  return flag_ != NULL ? *flag_ : *default_instance_->flag_;
}
inline ::DB_Flag* DB_Player::mutable_flag() {
  _set_bit(4);
  if (flag_ == NULL) flag_ = new ::DB_Flag;
  return flag_;
}

// repeated .DB_SocialItem socialItems = 6;
inline int DB_Player::socialitems_size() const {
  return socialitems_.size();
}
inline void DB_Player::clear_socialitems() {
  socialitems_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_SocialItem >&
DB_Player::socialitems() const {
  return socialitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_SocialItem >*
DB_Player::mutable_socialitems() {
  return &socialitems_;
}
inline const ::DB_SocialItem& DB_Player::socialitems(int index) const {
  return socialitems_.Get(index);
}
inline ::DB_SocialItem* DB_Player::mutable_socialitems(int index) {
  return socialitems_.Mutable(index);
}
inline ::DB_SocialItem* DB_Player::add_socialitems() {
  return socialitems_.Add();
}

// -------------------------------------------------------------------

// DB_DailyLogon

// optional int32 firstday = 1 [default = 0];
inline bool DB_DailyLogon::has_firstday() const {
  return _has_bit(0);
}
inline void DB_DailyLogon::clear_firstday() {
  firstday_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_DailyLogon::firstday() const {
  return firstday_;
}
inline void DB_DailyLogon::set_firstday(::google::protobuf::int32 value) {
  _set_bit(0);
  firstday_ = value;
}

// optional int32 daycount = 2 [default = 0];
inline bool DB_DailyLogon::has_daycount() const {
  return _has_bit(1);
}
inline void DB_DailyLogon::clear_daycount() {
  daycount_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_DailyLogon::daycount() const {
  return daycount_;
}
inline void DB_DailyLogon::set_daycount(::google::protobuf::int32 value) {
  _set_bit(1);
  daycount_ = value;
}

// -------------------------------------------------------------------

// DB_ActiveContinueLogon

// optional int32 logonDays = 1 [default = 0];
inline bool DB_ActiveContinueLogon::has_logondays() const {
  return _has_bit(0);
}
inline void DB_ActiveContinueLogon::clear_logondays() {
  logondays_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_ActiveContinueLogon::logondays() const {
  return logondays_;
}
inline void DB_ActiveContinueLogon::set_logondays(::google::protobuf::int32 value) {
  _set_bit(0);
  logondays_ = value;
}

// optional bool hasGet = 2 [default = false];
inline bool DB_ActiveContinueLogon::has_hasget() const {
  return _has_bit(1);
}
inline void DB_ActiveContinueLogon::clear_hasget() {
  hasget_ = false;
  _clear_bit(1);
}
inline bool DB_ActiveContinueLogon::hasget() const {
  return hasget_;
}
inline void DB_ActiveContinueLogon::set_hasget(bool value) {
  _set_bit(1);
  hasget_ = value;
}

// optional int32 lastLogonTime = 3 [default = 0];
inline bool DB_ActiveContinueLogon::has_lastlogontime() const {
  return _has_bit(2);
}
inline void DB_ActiveContinueLogon::clear_lastlogontime() {
  lastlogontime_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_ActiveContinueLogon::lastlogontime() const {
  return lastlogontime_;
}
inline void DB_ActiveContinueLogon::set_lastlogontime(::google::protobuf::int32 value) {
  _set_bit(2);
  lastlogontime_ = value;
}

// -------------------------------------------------------------------

// DB_User

// required int64 id = 1 [default = 0];
inline bool DB_User::has_id() const {
  return _has_bit(0);
}
inline void DB_User::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 DB_User::id() const {
  return id_;
}
inline void DB_User::set_id(::google::protobuf::int64 value) {
  _set_bit(0);
  id_ = value;
}

// required string platform_id = 2 [default = ""];
inline bool DB_User::has_platform_id() const {
  return _has_bit(1);
}
inline void DB_User::clear_platform_id() {
  if (platform_id_ != &_default_platform_id_) {
    platform_id_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& DB_User::platform_id() const {
  return *platform_id_;
}
inline void DB_User::set_platform_id(const ::std::string& value) {
  _set_bit(1);
  if (platform_id_ == &_default_platform_id_) {
    platform_id_ = new ::std::string;
  }
  platform_id_->assign(value);
}
inline void DB_User::set_platform_id(const char* value) {
  _set_bit(1);
  if (platform_id_ == &_default_platform_id_) {
    platform_id_ = new ::std::string;
  }
  platform_id_->assign(value);
}
inline void DB_User::set_platform_id(const char* value, size_t size) {
  _set_bit(1);
  if (platform_id_ == &_default_platform_id_) {
    platform_id_ = new ::std::string;
  }
  platform_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_User::mutable_platform_id() {
  _set_bit(1);
  if (platform_id_ == &_default_platform_id_) {
    platform_id_ = new ::std::string;
  }
  return platform_id_;
}

// repeated string name = 3;
inline int DB_User::name_size() const {
  return name_.size();
}
inline void DB_User::clear_name() {
  name_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_User::name() const {
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_User::mutable_name() {
  return &name_;
}
inline const ::std::string& DB_User::name(int index) const {
  return name_.Get(index);
}
inline ::std::string* DB_User::mutable_name(int index) {
  return name_.Mutable(index);
}
inline void DB_User::set_name(int index, const ::std::string& value) {
  name_.Mutable(index)->assign(value);
}
inline void DB_User::set_name(int index, const char* value) {
  name_.Mutable(index)->assign(value);
}
inline void DB_User::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_User::add_name() {
  return name_.Add();
}
inline void DB_User::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
}
inline void DB_User::add_name(const char* value) {
  name_.Add()->assign(value);
}
inline void DB_User::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string profile_link = 4;
inline int DB_User::profile_link_size() const {
  return profile_link_.size();
}
inline void DB_User::clear_profile_link() {
  profile_link_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DB_User::profile_link() const {
  return profile_link_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DB_User::mutable_profile_link() {
  return &profile_link_;
}
inline const ::std::string& DB_User::profile_link(int index) const {
  return profile_link_.Get(index);
}
inline ::std::string* DB_User::mutable_profile_link(int index) {
  return profile_link_.Mutable(index);
}
inline void DB_User::set_profile_link(int index, const ::std::string& value) {
  profile_link_.Mutable(index)->assign(value);
}
inline void DB_User::set_profile_link(int index, const char* value) {
  profile_link_.Mutable(index)->assign(value);
}
inline void DB_User::set_profile_link(int index, const char* value, size_t size) {
  profile_link_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_User::add_profile_link() {
  return profile_link_.Add();
}
inline void DB_User::add_profile_link(const ::std::string& value) {
  profile_link_.Add()->assign(value);
}
inline void DB_User::add_profile_link(const char* value) {
  profile_link_.Add()->assign(value);
}
inline void DB_User::add_profile_link(const char* value, size_t size) {
  profile_link_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// required int32 gender = 5;
inline bool DB_User::has_gender() const {
  return _has_bit(4);
}
inline void DB_User::clear_gender() {
  gender_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_User::gender() const {
  return gender_;
}
inline void DB_User::set_gender(::google::protobuf::int32 value) {
  _set_bit(4);
  gender_ = value;
}

// required int64 last_login_time = 6 [default = 0];
inline bool DB_User::has_last_login_time() const {
  return _has_bit(5);
}
inline void DB_User::clear_last_login_time() {
  last_login_time_ = GOOGLE_LONGLONG(0);
  _clear_bit(5);
}
inline ::google::protobuf::int64 DB_User::last_login_time() const {
  return last_login_time_;
}
inline void DB_User::set_last_login_time(::google::protobuf::int64 value) {
  _set_bit(5);
  last_login_time_ = value;
}

// required string last_login_ip = 7 [default = ""];
inline bool DB_User::has_last_login_ip() const {
  return _has_bit(6);
}
inline void DB_User::clear_last_login_ip() {
  if (last_login_ip_ != &_default_last_login_ip_) {
    last_login_ip_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& DB_User::last_login_ip() const {
  return *last_login_ip_;
}
inline void DB_User::set_last_login_ip(const ::std::string& value) {
  _set_bit(6);
  if (last_login_ip_ == &_default_last_login_ip_) {
    last_login_ip_ = new ::std::string;
  }
  last_login_ip_->assign(value);
}
inline void DB_User::set_last_login_ip(const char* value) {
  _set_bit(6);
  if (last_login_ip_ == &_default_last_login_ip_) {
    last_login_ip_ = new ::std::string;
  }
  last_login_ip_->assign(value);
}
inline void DB_User::set_last_login_ip(const char* value, size_t size) {
  _set_bit(6);
  if (last_login_ip_ == &_default_last_login_ip_) {
    last_login_ip_ = new ::std::string;
  }
  last_login_ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_User::mutable_last_login_ip() {
  _set_bit(6);
  if (last_login_ip_ == &_default_last_login_ip_) {
    last_login_ip_ = new ::std::string;
  }
  return last_login_ip_;
}

// required int64 regist_time = 8 [default = 0];
inline bool DB_User::has_regist_time() const {
  return _has_bit(7);
}
inline void DB_User::clear_regist_time() {
  regist_time_ = GOOGLE_LONGLONG(0);
  _clear_bit(7);
}
inline ::google::protobuf::int64 DB_User::regist_time() const {
  return regist_time_;
}
inline void DB_User::set_regist_time(::google::protobuf::int64 value) {
  _set_bit(7);
  regist_time_ = value;
}

// optional int32 yellowDmdLvl = 9 [default = 0];
inline bool DB_User::has_yellowdmdlvl() const {
  return _has_bit(8);
}
inline void DB_User::clear_yellowdmdlvl() {
  yellowdmdlvl_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_User::yellowdmdlvl() const {
  return yellowdmdlvl_;
}
inline void DB_User::set_yellowdmdlvl(::google::protobuf::int32 value) {
  _set_bit(8);
  yellowdmdlvl_ = value;
}

// optional bool isYellowDmd = 10 [default = false];
inline bool DB_User::has_isyellowdmd() const {
  return _has_bit(9);
}
inline void DB_User::clear_isyellowdmd() {
  isyellowdmd_ = false;
  _clear_bit(9);
}
inline bool DB_User::isyellowdmd() const {
  return isyellowdmd_;
}
inline void DB_User::set_isyellowdmd(bool value) {
  _set_bit(9);
  isyellowdmd_ = value;
}

// optional bool isYellowDmdYear = 11 [default = false];
inline bool DB_User::has_isyellowdmdyear() const {
  return _has_bit(10);
}
inline void DB_User::clear_isyellowdmdyear() {
  isyellowdmdyear_ = false;
  _clear_bit(10);
}
inline bool DB_User::isyellowdmdyear() const {
  return isyellowdmdyear_;
}
inline void DB_User::set_isyellowdmdyear(bool value) {
  _set_bit(10);
  isyellowdmdyear_ = value;
}

// optional int64 getDayYellowGiftDay = 12 [default = 0];
inline bool DB_User::has_getdayyellowgiftday() const {
  return _has_bit(11);
}
inline void DB_User::clear_getdayyellowgiftday() {
  getdayyellowgiftday_ = GOOGLE_LONGLONG(0);
  _clear_bit(11);
}
inline ::google::protobuf::int64 DB_User::getdayyellowgiftday() const {
  return getdayyellowgiftday_;
}
inline void DB_User::set_getdayyellowgiftday(::google::protobuf::int64 value) {
  _set_bit(11);
  getdayyellowgiftday_ = value;
}

// optional bool getNewYellowGift = 13 [default = false];
inline bool DB_User::has_getnewyellowgift() const {
  return _has_bit(12);
}
inline void DB_User::clear_getnewyellowgift() {
  getnewyellowgift_ = false;
  _clear_bit(12);
}
inline bool DB_User::getnewyellowgift() const {
  return getnewyellowgift_;
}
inline void DB_User::set_getnewyellowgift(bool value) {
  _set_bit(12);
  getnewyellowgift_ = value;
}

// optional int64 last_logout_time = 14;
inline bool DB_User::has_last_logout_time() const {
  return _has_bit(13);
}
inline void DB_User::clear_last_logout_time() {
  last_logout_time_ = GOOGLE_LONGLONG(0);
  _clear_bit(13);
}
inline ::google::protobuf::int64 DB_User::last_logout_time() const {
  return last_logout_time_;
}
inline void DB_User::set_last_logout_time(::google::protobuf::int64 value) {
  _set_bit(13);
  last_logout_time_ = value;
}

// required .DB_Player player = 15;
inline bool DB_User::has_player() const {
  return _has_bit(14);
}
inline void DB_User::clear_player() {
  if (player_ != NULL) player_->::DB_Player::Clear();
  _clear_bit(14);
}
inline const ::DB_Player& DB_User::player() const {
  return player_ != NULL ? *player_ : *default_instance_->player_;
}
inline ::DB_Player* DB_User::mutable_player() {
  _set_bit(14);
  if (player_ == NULL) player_ = new ::DB_Player;
  return player_;
}

// optional .DB_BanLogin banlogin = 16;
inline bool DB_User::has_banlogin() const {
  return _has_bit(15);
}
inline void DB_User::clear_banlogin() {
  if (banlogin_ != NULL) banlogin_->::DB_BanLogin::Clear();
  _clear_bit(15);
}
inline const ::DB_BanLogin& DB_User::banlogin() const {
  return banlogin_ != NULL ? *banlogin_ : *default_instance_->banlogin_;
}
inline ::DB_BanLogin* DB_User::mutable_banlogin() {
  _set_bit(15);
  if (banlogin_ == NULL) banlogin_ = new ::DB_BanLogin;
  return banlogin_;
}

// optional bool transferbymysql = 17 [default = false];
inline bool DB_User::has_transferbymysql() const {
  return _has_bit(16);
}
inline void DB_User::clear_transferbymysql() {
  transferbymysql_ = false;
  _clear_bit(16);
}
inline bool DB_User::transferbymysql() const {
  return transferbymysql_;
}
inline void DB_User::set_transferbymysql(bool value) {
  _set_bit(16);
  transferbymysql_ = value;
}

// optional int32 mysqluserid = 18 [default = 0];
inline bool DB_User::has_mysqluserid() const {
  return _has_bit(17);
}
inline void DB_User::clear_mysqluserid() {
  mysqluserid_ = 0;
  _clear_bit(17);
}
inline ::google::protobuf::int32 DB_User::mysqluserid() const {
  return mysqluserid_;
}
inline void DB_User::set_mysqluserid(::google::protobuf::int32 value) {
  _set_bit(17);
  mysqluserid_ = value;
}

// optional int32 ExpiateFlag = 19;
inline bool DB_User::has_expiateflag() const {
  return _has_bit(18);
}
inline void DB_User::clear_expiateflag() {
  expiateflag_ = 0;
  _clear_bit(18);
}
inline ::google::protobuf::int32 DB_User::expiateflag() const {
  return expiateflag_;
}
inline void DB_User::set_expiateflag(::google::protobuf::int32 value) {
  _set_bit(18);
  expiateflag_ = value;
}

// optional int32 sendgiftcount = 20;
inline bool DB_User::has_sendgiftcount() const {
  return _has_bit(19);
}
inline void DB_User::clear_sendgiftcount() {
  sendgiftcount_ = 0;
  _clear_bit(19);
}
inline ::google::protobuf::int32 DB_User::sendgiftcount() const {
  return sendgiftcount_;
}
inline void DB_User::set_sendgiftcount(::google::protobuf::int32 value) {
  _set_bit(19);
  sendgiftcount_ = value;
}

// optional int32 selfgiftcount = 21;
inline bool DB_User::has_selfgiftcount() const {
  return _has_bit(20);
}
inline void DB_User::clear_selfgiftcount() {
  selfgiftcount_ = 0;
  _clear_bit(20);
}
inline ::google::protobuf::int32 DB_User::selfgiftcount() const {
  return selfgiftcount_;
}
inline void DB_User::set_selfgiftcount(::google::protobuf::int32 value) {
  _set_bit(20);
  selfgiftcount_ = value;
}

// optional int32 giftwincount = 22;
inline bool DB_User::has_giftwincount() const {
  return _has_bit(21);
}
inline void DB_User::clear_giftwincount() {
  giftwincount_ = 0;
  _clear_bit(21);
}
inline ::google::protobuf::int32 DB_User::giftwincount() const {
  return giftwincount_;
}
inline void DB_User::set_giftwincount(::google::protobuf::int32 value) {
  _set_bit(21);
  giftwincount_ = value;
}

// optional int32 destroytime = 23 [default = 0];
inline bool DB_User::has_destroytime() const {
  return _has_bit(22);
}
inline void DB_User::clear_destroytime() {
  destroytime_ = 0;
  _clear_bit(22);
}
inline ::google::protobuf::int32 DB_User::destroytime() const {
  return destroytime_;
}
inline void DB_User::set_destroytime(::google::protobuf::int32 value) {
  _set_bit(22);
  destroytime_ = value;
}

// repeated .DB_LootReport fightrecord = 24;
inline int DB_User::fightrecord_size() const {
  return fightrecord_.size();
}
inline void DB_User::clear_fightrecord() {
  fightrecord_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_LootReport >&
DB_User::fightrecord() const {
  return fightrecord_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_LootReport >*
DB_User::mutable_fightrecord() {
  return &fightrecord_;
}
inline const ::DB_LootReport& DB_User::fightrecord(int index) const {
  return fightrecord_.Get(index);
}
inline ::DB_LootReport* DB_User::mutable_fightrecord(int index) {
  return fightrecord_.Mutable(index);
}
inline ::DB_LootReport* DB_User::add_fightrecord() {
  return fightrecord_.Add();
}

// optional .DB_DailyLogon dailylogin = 25;
inline bool DB_User::has_dailylogin() const {
  return _has_bit(24);
}
inline void DB_User::clear_dailylogin() {
  if (dailylogin_ != NULL) dailylogin_->::DB_DailyLogon::Clear();
  _clear_bit(24);
}
inline const ::DB_DailyLogon& DB_User::dailylogin() const {
  return dailylogin_ != NULL ? *dailylogin_ : *default_instance_->dailylogin_;
}
inline ::DB_DailyLogon* DB_User::mutable_dailylogin() {
  _set_bit(24);
  if (dailylogin_ == NULL) dailylogin_ = new ::DB_DailyLogon;
  return dailylogin_;
}

// optional bool bannergift = 26 [default = false];
inline bool DB_User::has_bannergift() const {
  return _has_bit(25);
}
inline void DB_User::clear_bannergift() {
  bannergift_ = false;
  _clear_bit(25);
}
inline bool DB_User::bannergift() const {
  return bannergift_;
}
inline void DB_User::set_bannergift(bool value) {
  _set_bit(25);
  bannergift_ = value;
}

// optional int32 landingdaygiftbit = 27 [default = 0];
inline bool DB_User::has_landingdaygiftbit() const {
  return _has_bit(26);
}
inline void DB_User::clear_landingdaygiftbit() {
  landingdaygiftbit_ = 0;
  _clear_bit(26);
}
inline ::google::protobuf::int32 DB_User::landingdaygiftbit() const {
  return landingdaygiftbit_;
}
inline void DB_User::set_landingdaygiftbit(::google::protobuf::int32 value) {
  _set_bit(26);
  landingdaygiftbit_ = value;
}

// optional int32 landdaycount = 28 [default = 0];
inline bool DB_User::has_landdaycount() const {
  return _has_bit(27);
}
inline void DB_User::clear_landdaycount() {
  landdaycount_ = 0;
  _clear_bit(27);
}
inline ::google::protobuf::int32 DB_User::landdaycount() const {
  return landdaycount_;
}
inline void DB_User::set_landdaycount(::google::protobuf::int32 value) {
  _set_bit(27);
  landdaycount_ = value;
}

// optional int64 webOnceFlag = 29 [default = 0];
inline bool DB_User::has_webonceflag() const {
  return _has_bit(28);
}
inline void DB_User::clear_webonceflag() {
  webonceflag_ = GOOGLE_LONGLONG(0);
  _clear_bit(28);
}
inline ::google::protobuf::int64 DB_User::webonceflag() const {
  return webonceflag_;
}
inline void DB_User::set_webonceflag(::google::protobuf::int64 value) {
  _set_bit(28);
  webonceflag_ = value;
}

// optional .DB_GiftInfo giftInfo = 30;
inline bool DB_User::has_giftinfo() const {
  return _has_bit(29);
}
inline void DB_User::clear_giftinfo() {
  if (giftinfo_ != NULL) giftinfo_->::DB_GiftInfo::Clear();
  _clear_bit(29);
}
inline const ::DB_GiftInfo& DB_User::giftinfo() const {
  return giftinfo_ != NULL ? *giftinfo_ : *default_instance_->giftinfo_;
}
inline ::DB_GiftInfo* DB_User::mutable_giftinfo() {
  _set_bit(29);
  if (giftinfo_ == NULL) giftinfo_ = new ::DB_GiftInfo;
  return giftinfo_;
}

// optional int32 QQDmdLvl = 31 [default = 0];
inline bool DB_User::has_qqdmdlvl() const {
  return _has_bit(30);
}
inline void DB_User::clear_qqdmdlvl() {
  qqdmdlvl_ = 0;
  _clear_bit(30);
}
inline ::google::protobuf::int32 DB_User::qqdmdlvl() const {
  return qqdmdlvl_;
}
inline void DB_User::set_qqdmdlvl(::google::protobuf::int32 value) {
  _set_bit(30);
  qqdmdlvl_ = value;
}

// optional bool isQQDmd = 32 [default = false];
inline bool DB_User::has_isqqdmd() const {
  return _has_bit(31);
}
inline void DB_User::clear_isqqdmd() {
  isqqdmd_ = false;
  _clear_bit(31);
}
inline bool DB_User::isqqdmd() const {
  return isqqdmd_;
}
inline void DB_User::set_isqqdmd(bool value) {
  _set_bit(31);
  isqqdmd_ = value;
}

// optional bool isQQDmdYear = 33 [default = false];
inline bool DB_User::has_isqqdmdyear() const {
  return _has_bit(32);
}
inline void DB_User::clear_isqqdmdyear() {
  isqqdmdyear_ = false;
  _clear_bit(32);
}
inline bool DB_User::isqqdmdyear() const {
  return isqqdmdyear_;
}
inline void DB_User::set_isqqdmdyear(bool value) {
  _set_bit(32);
  isqqdmdyear_ = value;
}

// optional int64 getDayQQGiftDay = 34 [default = 0];
inline bool DB_User::has_getdayqqgiftday() const {
  return _has_bit(33);
}
inline void DB_User::clear_getdayqqgiftday() {
  getdayqqgiftday_ = GOOGLE_LONGLONG(0);
  _clear_bit(33);
}
inline ::google::protobuf::int64 DB_User::getdayqqgiftday() const {
  return getdayqqgiftday_;
}
inline void DB_User::set_getdayqqgiftday(::google::protobuf::int64 value) {
  _set_bit(33);
  getdayqqgiftday_ = value;
}

// optional bool getNewQQGift = 35 [default = false];
inline bool DB_User::has_getnewqqgift() const {
  return _has_bit(34);
}
inline void DB_User::clear_getnewqqgift() {
  getnewqqgift_ = false;
  _clear_bit(34);
}
inline bool DB_User::getnewqqgift() const {
  return getnewqqgift_;
}
inline void DB_User::set_getnewqqgift(bool value) {
  _set_bit(34);
  getnewqqgift_ = value;
}

// optional int32 region = 36 [default = 0];
inline bool DB_User::has_region() const {
  return _has_bit(35);
}
inline void DB_User::clear_region() {
  region_ = 0;
  _clear_bit(35);
}
inline ::google::protobuf::int32 DB_User::region() const {
  return region_;
}
inline void DB_User::set_region(::google::protobuf::int32 value) {
  _set_bit(35);
  region_ = value;
}

// optional int32 logondaycount = 37 [default = 0];
inline bool DB_User::has_logondaycount() const {
  return _has_bit(36);
}
inline void DB_User::clear_logondaycount() {
  logondaycount_ = 0;
  _clear_bit(36);
}
inline ::google::protobuf::int32 DB_User::logondaycount() const {
  return logondaycount_;
}
inline void DB_User::set_logondaycount(::google::protobuf::int32 value) {
  _set_bit(36);
  logondaycount_ = value;
}

// optional int32 city = 38 [default = 0];
inline bool DB_User::has_city() const {
  return _has_bit(37);
}
inline void DB_User::clear_city() {
  city_ = 0;
  _clear_bit(37);
}
inline ::google::protobuf::int32 DB_User::city() const {
  return city_;
}
inline void DB_User::set_city(::google::protobuf::int32 value) {
  _set_bit(37);
  city_ = value;
}

// optional bool isHighYellowDmd = 39 [default = false];
inline bool DB_User::has_ishighyellowdmd() const {
  return _has_bit(38);
}
inline void DB_User::clear_ishighyellowdmd() {
  ishighyellowdmd_ = false;
  _clear_bit(38);
}
inline bool DB_User::ishighyellowdmd() const {
  return ishighyellowdmd_;
}
inline void DB_User::set_ishighyellowdmd(bool value) {
  _set_bit(38);
  ishighyellowdmd_ = value;
}

// optional .DB_ActiveContinueLogon activeContinueLogon = 40;
inline bool DB_User::has_activecontinuelogon() const {
  return _has_bit(39);
}
inline void DB_User::clear_activecontinuelogon() {
  if (activecontinuelogon_ != NULL) activecontinuelogon_->::DB_ActiveContinueLogon::Clear();
  _clear_bit(39);
}
inline const ::DB_ActiveContinueLogon& DB_User::activecontinuelogon() const {
  return activecontinuelogon_ != NULL ? *activecontinuelogon_ : *default_instance_->activecontinuelogon_;
}
inline ::DB_ActiveContinueLogon* DB_User::mutable_activecontinuelogon() {
  _set_bit(39);
  if (activecontinuelogon_ == NULL) activecontinuelogon_ = new ::DB_ActiveContinueLogon;
  return activecontinuelogon_;
}

// optional bool isActiveLogon = 41 [default = false];
inline bool DB_User::has_isactivelogon() const {
  return _has_bit(40);
}
inline void DB_User::clear_isactivelogon() {
  isactivelogon_ = false;
  _clear_bit(40);
}
inline bool DB_User::isactivelogon() const {
  return isactivelogon_;
}
inline void DB_User::set_isactivelogon(bool value) {
  _set_bit(40);
  isactivelogon_ = value;
}

// optional bool hasGetRecall = 42 [default = false];
inline bool DB_User::has_hasgetrecall() const {
  return _has_bit(41);
}
inline void DB_User::clear_hasgetrecall() {
  hasgetrecall_ = false;
  _clear_bit(41);
}
inline bool DB_User::hasgetrecall() const {
  return hasgetrecall_;
}
inline void DB_User::set_hasgetrecall(bool value) {
  _set_bit(41);
  hasgetrecall_ = value;
}

// optional int32 lastRepairTime = 43 [default = 0];
inline bool DB_User::has_lastrepairtime() const {
  return _has_bit(42);
}
inline void DB_User::clear_lastrepairtime() {
  lastrepairtime_ = 0;
  _clear_bit(42);
}
inline ::google::protobuf::int32 DB_User::lastrepairtime() const {
  return lastrepairtime_;
}
inline void DB_User::set_lastrepairtime(::google::protobuf::int32 value) {
  _set_bit(42);
  lastrepairtime_ = value;
}

// optional int32 landDayCountEx = 44 [default = 0];
inline bool DB_User::has_landdaycountex() const {
  return _has_bit(43);
}
inline void DB_User::clear_landdaycountex() {
  landdaycountex_ = 0;
  _clear_bit(43);
}
inline ::google::protobuf::int32 DB_User::landdaycountex() const {
  return landdaycountex_;
}
inline void DB_User::set_landdaycountex(::google::protobuf::int32 value) {
  _set_bit(43);
  landdaycountex_ = value;
}

// optional int32 landDayGiftEx = 45 [default = 0];
inline bool DB_User::has_landdaygiftex() const {
  return _has_bit(44);
}
inline void DB_User::clear_landdaygiftex() {
  landdaygiftex_ = 0;
  _clear_bit(44);
}
inline ::google::protobuf::int32 DB_User::landdaygiftex() const {
  return landdaygiftex_;
}
inline void DB_User::set_landdaygiftex(::google::protobuf::int32 value) {
  _set_bit(44);
  landdaygiftex_ = value;
}

// optional .DB_Officer officer = 46;
inline bool DB_User::has_officer() const {
  return _has_bit(45);
}
inline void DB_User::clear_officer() {
  if (officer_ != NULL) officer_->::DB_Officer::Clear();
  _clear_bit(45);
}
inline const ::DB_Officer& DB_User::officer() const {
  return officer_ != NULL ? *officer_ : *default_instance_->officer_;
}
inline ::DB_Officer* DB_User::mutable_officer() {
  _set_bit(45);
  if (officer_ == NULL) officer_ = new ::DB_Officer;
  return officer_;
}

// optional int32 destroynpctime = 47 [default = 0];
inline bool DB_User::has_destroynpctime() const {
  return _has_bit(46);
}
inline void DB_User::clear_destroynpctime() {
  destroynpctime_ = 0;
  _clear_bit(46);
}
inline ::google::protobuf::int32 DB_User::destroynpctime() const {
  return destroynpctime_;
}
inline void DB_User::set_destroynpctime(::google::protobuf::int32 value) {
  _set_bit(46);
  destroynpctime_ = value;
}

// optional bool bRegisterNum = 48 [default = false];
inline bool DB_User::has_bregisternum() const {
  return _has_bit(47);
}
inline void DB_User::clear_bregisternum() {
  bregisternum_ = false;
  _clear_bit(47);
}
inline bool DB_User::bregisternum() const {
  return bregisternum_;
}
inline void DB_User::set_bregisternum(bool value) {
  _set_bit(47);
  bregisternum_ = value;
}

// optional bool bAdult = 51 [default = true];
inline bool DB_User::has_badult() const {
  return _has_bit(48);
}
inline void DB_User::clear_badult() {
  badult_ = true;
  _clear_bit(48);
}
inline bool DB_User::badult() const {
  return badult_;
}
inline void DB_User::set_badult(bool value) {
  _set_bit(48);
  badult_ = value;
}

// -------------------------------------------------------------------

// DB_GlobalStarInfo

// repeated .DB_Galaxy galaxys = 1;
inline int DB_GlobalStarInfo::galaxys_size() const {
  return galaxys_.size();
}
inline void DB_GlobalStarInfo::clear_galaxys() {
  galaxys_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_Galaxy >&
DB_GlobalStarInfo::galaxys() const {
  return galaxys_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_Galaxy >*
DB_GlobalStarInfo::mutable_galaxys() {
  return &galaxys_;
}
inline const ::DB_Galaxy& DB_GlobalStarInfo::galaxys(int index) const {
  return galaxys_.Get(index);
}
inline ::DB_Galaxy* DB_GlobalStarInfo::mutable_galaxys(int index) {
  return galaxys_.Mutable(index);
}
inline ::DB_Galaxy* DB_GlobalStarInfo::add_galaxys() {
  return galaxys_.Add();
}


#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_dbinterface_2eproto__INCLUDED
