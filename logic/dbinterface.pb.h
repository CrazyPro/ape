// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_dbinterface_2eproto__INCLUDED
#define PROTOBUF_dbinterface_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_dbinterface_2eproto();
void protobuf_AssignDesc_dbinterface_2eproto();
void protobuf_ShutdownFile_dbinterface_2eproto();

class DB_BitCache;
class DB_Model;
class DB_State;
class DB_PlanetLiteInfo;
class DB_Star;
class DB_Item;
class DB_Hangar;
class DB_GameUnit;
class DB_Planet;
class DB_NPC;
class DB_Player;
class DB_User;
class DB_GlobalStarInfo;

// ===================================================================

class DB_BitCache : public ::google::protobuf::Message {
 public:
  DB_BitCache();
  virtual ~DB_BitCache();
  
  DB_BitCache(const DB_BitCache& from);
  
  inline DB_BitCache& operator=(const DB_BitCache& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_BitCache& default_instance();
  void Swap(DB_BitCache* other);
  
  // implements Message ----------------------------------------------
  
  DB_BitCache* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_BitCache& from);
  void MergeFrom(const DB_BitCache& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 bit = 1;
  inline int bit_size() const;
  inline void clear_bit();
  static const int kBitFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& bit() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_bit();
  inline ::google::protobuf::int32 bit(int index) const;
  inline void set_bit(int index, ::google::protobuf::int32 value);
  inline void add_bit(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > bit_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_BitCache* default_instance_;
};
// -------------------------------------------------------------------

class DB_Model : public ::google::protobuf::Message {
 public:
  DB_Model();
  virtual ~DB_Model();
  
  DB_Model(const DB_Model& from);
  
  inline DB_Model& operator=(const DB_Model& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Model& default_instance();
  void Swap(DB_Model* other);
  
  // implements Message ----------------------------------------------
  
  DB_Model* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Model& from);
  void MergeFrom(const DB_Model& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int64 coins = 2;
  inline bool has_coins() const;
  inline void clear_coins();
  static const int kCoinsFieldNumber = 2;
  inline ::google::protobuf::int64 coins() const;
  inline void set_coins(::google::protobuf::int64 value);
  
  // optional int64 minerals = 3;
  inline bool has_minerals() const;
  inline void clear_minerals();
  static const int kMineralsFieldNumber = 3;
  inline ::google::protobuf::int64 minerals() const;
  inline void set_minerals(::google::protobuf::int64 value);
  
  // optional int64 coinsTotal = 4;
  inline bool has_coinstotal() const;
  inline void clear_coinstotal();
  static const int kCoinsTotalFieldNumber = 4;
  inline ::google::protobuf::int64 coinstotal() const;
  inline void set_coinstotal(::google::protobuf::int64 value);
  
  // optional int64 mineralsTotal = 5;
  inline bool has_mineralstotal() const;
  inline void clear_mineralstotal();
  static const int kMineralsTotalFieldNumber = 5;
  inline ::google::protobuf::int64 mineralstotal() const;
  inline void set_mineralstotal(::google::protobuf::int64 value);
  
  // optional int32 score = 6;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 6;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);
  
  // optional int32 exp = 7;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 7;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
  // optional int32 cash = 8;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 8;
  inline ::google::protobuf::int32 cash() const;
  inline void set_cash(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 level_;
  ::google::protobuf::int64 coins_;
  ::google::protobuf::int64 minerals_;
  ::google::protobuf::int64 coinstotal_;
  ::google::protobuf::int64 mineralstotal_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 cash_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Model* default_instance_;
};
// -------------------------------------------------------------------

class DB_State : public ::google::protobuf::Message {
 public:
  DB_State();
  virtual ~DB_State();
  
  DB_State(const DB_State& from);
  
  inline DB_State& operator=(const DB_State& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_State& default_instance();
  void Swap(DB_State* other);
  
  // implements Message ----------------------------------------------
  
  DB_State* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_State& from);
  void MergeFrom(const DB_State& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 tutorialCompleted = 1;
  inline bool has_tutorialcompleted() const;
  inline void clear_tutorialcompleted();
  static const int kTutorialCompletedFieldNumber = 1;
  inline ::google::protobuf::int32 tutorialcompleted() const;
  inline void set_tutorialcompleted(::google::protobuf::int32 value);
  
  // optional int32 dmgProtectionTimeLeft = 2;
  inline bool has_dmgprotectiontimeleft() const;
  inline void clear_dmgprotectiontimeleft();
  static const int kDmgProtectionTimeLeftFieldNumber = 2;
  inline ::google::protobuf::int32 dmgprotectiontimeleft() const;
  inline void set_dmgprotectiontimeleft(::google::protobuf::int32 value);
  
  // optional int32 dmgProtectionTimeTotal = 3;
  inline bool has_dmgprotectiontimetotal() const;
  inline void clear_dmgprotectiontimetotal();
  static const int kDmgProtectionTimeTotalFieldNumber = 3;
  inline ::google::protobuf::int32 dmgprotectiontimetotal() const;
  inline void set_dmgprotectiontimetotal(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 tutorialcompleted_;
  ::google::protobuf::int32 dmgprotectiontimeleft_;
  ::google::protobuf::int32 dmgprotectiontimetotal_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_State* default_instance_;
};
// -------------------------------------------------------------------

class DB_PlanetLiteInfo : public ::google::protobuf::Message {
 public:
  DB_PlanetLiteInfo();
  virtual ~DB_PlanetLiteInfo();
  
  DB_PlanetLiteInfo(const DB_PlanetLiteInfo& from);
  
  inline DB_PlanetLiteInfo& operator=(const DB_PlanetLiteInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_PlanetLiteInfo& default_instance();
  void Swap(DB_PlanetLiteInfo* other);
  
  // implements Message ----------------------------------------------
  
  DB_PlanetLiteInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_PlanetLiteInfo& from);
  void MergeFrom(const DB_PlanetLiteInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);
  
  // optional int64 planetId = 2;
  inline bool has_planetid() const;
  inline void clear_planetid();
  static const int kPlanetIdFieldNumber = 2;
  inline ::google::protobuf::int64 planetid() const;
  inline void set_planetid(::google::protobuf::int64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int64 planetid_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_PlanetLiteInfo* default_instance_;
};
// -------------------------------------------------------------------

class DB_Star : public ::google::protobuf::Message {
 public:
  DB_Star();
  virtual ~DB_Star();
  
  DB_Star(const DB_Star& from);
  
  inline DB_Star& operator=(const DB_Star& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Star& default_instance();
  void Swap(DB_Star* other);
  
  // implements Message ----------------------------------------------
  
  DB_Star* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Star& from);
  void MergeFrom(const DB_Star& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline ::google::protobuf::int32 name() const;
  inline void set_name(::google::protobuf::int32 value);
  
  // optional int32 x = 4;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 4;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);
  
  // optional int32 y = 5;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 5;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);
  
  // repeated .DB_PlanetLiteInfo lite = 6;
  inline int lite_size() const;
  inline void clear_lite();
  static const int kLiteFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_PlanetLiteInfo >& lite() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_PlanetLiteInfo >* mutable_lite();
  inline const ::DB_PlanetLiteInfo& lite(int index) const;
  inline ::DB_PlanetLiteInfo* mutable_lite(int index);
  inline ::DB_PlanetLiteInfo* add_lite();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 name_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::RepeatedPtrField< ::DB_PlanetLiteInfo > lite_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Star* default_instance_;
};
// -------------------------------------------------------------------

class DB_Item : public ::google::protobuf::Message {
 public:
  DB_Item();
  virtual ~DB_Item();
  
  DB_Item(const DB_Item& from);
  
  inline DB_Item& operator=(const DB_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Item& default_instance();
  void Swap(DB_Item* other);
  
  // implements Message ----------------------------------------------
  
  DB_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Item& from);
  void MergeFrom(const DB_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 sid = 1;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 1;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // optional int32 sku = 2;
  inline bool has_sku() const;
  inline void clear_sku();
  static const int kSkuFieldNumber = 2;
  inline ::google::protobuf::int32 sku() const;
  inline void set_sku(::google::protobuf::int32 value);
  
  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 upgradeId = 4;
  inline bool has_upgradeid() const;
  inline void clear_upgradeid();
  static const int kUpgradeIdFieldNumber = 4;
  inline ::google::protobuf::int32 upgradeid() const;
  inline void set_upgradeid(::google::protobuf::int32 value);
  
  // optional int32 isFlipped = 5;
  inline bool has_isflipped() const;
  inline void clear_isflipped();
  static const int kIsFlippedFieldNumber = 5;
  inline ::google::protobuf::int32 isflipped() const;
  inline void set_isflipped(::google::protobuf::int32 value);
  
  // optional int32 energyPercent = 6;
  inline bool has_energypercent() const;
  inline void clear_energypercent();
  static const int kEnergyPercentFieldNumber = 6;
  inline ::google::protobuf::int32 energypercent() const;
  inline void set_energypercent(::google::protobuf::int32 value);
  
  // optional int32 energy = 7;
  inline bool has_energy() const;
  inline void clear_energy();
  static const int kEnergyFieldNumber = 7;
  inline ::google::protobuf::int32 energy() const;
  inline void set_energy(::google::protobuf::int32 value);
  
  // optional int32 x = 8;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 8;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);
  
  // optional int32 y = 9;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 9;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);
  
  // optional int32 state = 10;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 10;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);
  
  // optional int32 time = 11;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 11;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);
  
  // optional int32 incomeToRestore = 12;
  inline bool has_incometorestore() const;
  inline void clear_incometorestore();
  static const int kIncomeToRestoreFieldNumber = 12;
  inline ::google::protobuf::int32 incometorestore() const;
  inline void set_incometorestore(::google::protobuf::int32 value);
  
  // optional int32 repairing = 13;
  inline bool has_repairing() const;
  inline void clear_repairing();
  static const int kRepairingFieldNumber = 13;
  inline ::google::protobuf::int32 repairing() const;
  inline void set_repairing(::google::protobuf::int32 value);
  
  // optional int64 repairStart = 14;
  inline bool has_repairstart() const;
  inline void clear_repairstart();
  static const int kRepairStartFieldNumber = 14;
  inline ::google::protobuf::int64 repairstart() const;
  inline void set_repairstart(::google::protobuf::int64 value);
  
  // optional int64 updateAt = 15;
  inline bool has_updateat() const;
  inline void clear_updateat();
  static const int kUpdateAtFieldNumber = 15;
  inline ::google::protobuf::int64 updateat() const;
  inline void set_updateat(::google::protobuf::int64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 sku_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 upgradeid_;
  ::google::protobuf::int32 isflipped_;
  ::google::protobuf::int32 energypercent_;
  ::google::protobuf::int32 energy_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 incometorestore_;
  ::google::protobuf::int32 repairing_;
  ::google::protobuf::int64 repairstart_;
  ::google::protobuf::int64 updateat_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Item* default_instance_;
};
// -------------------------------------------------------------------

class DB_Hangar : public ::google::protobuf::Message {
 public:
  DB_Hangar();
  virtual ~DB_Hangar();
  
  DB_Hangar(const DB_Hangar& from);
  
  inline DB_Hangar& operator=(const DB_Hangar& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Hangar& default_instance();
  void Swap(DB_Hangar* other);
  
  // implements Message ----------------------------------------------
  
  DB_Hangar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Hangar& from);
  void MergeFrom(const DB_Hangar& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 sid = 1;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 1;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // optional int32 sku = 2;
  inline bool has_sku() const;
  inline void clear_sku();
  static const int kSkuFieldNumber = 2;
  inline ::google::protobuf::int32 sku() const;
  inline void set_sku(::google::protobuf::int32 value);
  
  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 sku_;
  ::google::protobuf::int32 num_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Hangar* default_instance_;
};
// -------------------------------------------------------------------

class DB_GameUnit : public ::google::protobuf::Message {
 public:
  DB_GameUnit();
  virtual ~DB_GameUnit();
  
  DB_GameUnit(const DB_GameUnit& from);
  
  inline DB_GameUnit& operator=(const DB_GameUnit& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_GameUnit& default_instance();
  void Swap(DB_GameUnit* other);
  
  // implements Message ----------------------------------------------
  
  DB_GameUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_GameUnit& from);
  void MergeFrom(const DB_GameUnit& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 sku = 1;
  inline bool has_sku() const;
  inline void clear_sku();
  static const int kSkuFieldNumber = 1;
  inline ::google::protobuf::int32 sku() const;
  inline void set_sku(::google::protobuf::int32 value);
  
  // optional int32 unlock = 2;
  inline bool has_unlock() const;
  inline void clear_unlock();
  static const int kUnlockFieldNumber = 2;
  inline ::google::protobuf::int32 unlock() const;
  inline void set_unlock(::google::protobuf::int32 value);
  
  // optional int32 upgradeId = 3;
  inline bool has_upgradeid() const;
  inline void clear_upgradeid();
  static const int kUpgradeIdFieldNumber = 3;
  inline ::google::protobuf::int32 upgradeid() const;
  inline void set_upgradeid(::google::protobuf::int32 value);
  
  // optional int32 timeLeft = 4;
  inline bool has_timeleft() const;
  inline void clear_timeleft();
  static const int kTimeLeftFieldNumber = 4;
  inline ::google::protobuf::int32 timeleft() const;
  inline void set_timeleft(::google::protobuf::int32 value);
  
  // optional int64 updateAt = 5;
  inline bool has_updateat() const;
  inline void clear_updateat();
  static const int kUpdateAtFieldNumber = 5;
  inline ::google::protobuf::int64 updateat() const;
  inline void set_updateat(::google::protobuf::int64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sku_;
  ::google::protobuf::int32 unlock_;
  ::google::protobuf::int32 upgradeid_;
  ::google::protobuf::int32 timeleft_;
  ::google::protobuf::int64 updateat_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_GameUnit* default_instance_;
};
// -------------------------------------------------------------------

class DB_Planet : public ::google::protobuf::Message {
 public:
  DB_Planet();
  virtual ~DB_Planet();
  
  DB_Planet(const DB_Planet& from);
  
  inline DB_Planet& operator=(const DB_Planet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Planet& default_instance();
  void Swap(DB_Planet* other);
  
  // implements Message ----------------------------------------------
  
  DB_Planet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Planet& from);
  void MergeFrom(const DB_Planet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 HQLevel = 3;
  inline bool has_hqlevel() const;
  inline void clear_hqlevel();
  static const int kHQLevelFieldNumber = 3;
  inline ::google::protobuf::int32 hqlevel() const;
  inline void set_hqlevel(::google::protobuf::int32 value);
  
  // optional int32 Droids = 4;
  inline bool has_droids() const;
  inline void clear_droids();
  static const int kDroidsFieldNumber = 4;
  inline ::google::protobuf::int32 droids() const;
  inline void set_droids(::google::protobuf::int32 value);
  
  // optional int32 DroidInUse = 5;
  inline bool has_droidinuse() const;
  inline void clear_droidinuse();
  static const int kDroidInUseFieldNumber = 5;
  inline ::google::protobuf::int32 droidinuse() const;
  inline void set_droidinuse(::google::protobuf::int32 value);
  
  // optional int32 Capital = 6;
  inline bool has_capital() const;
  inline void clear_capital();
  static const int kCapitalFieldNumber = 6;
  inline ::google::protobuf::int32 capital() const;
  inline void set_capital(::google::protobuf::int32 value);
  
  // optional int64 CoinsLimit = 7;
  inline bool has_coinslimit() const;
  inline void clear_coinslimit();
  static const int kCoinsLimitFieldNumber = 7;
  inline ::google::protobuf::int64 coinslimit() const;
  inline void set_coinslimit(::google::protobuf::int64 value);
  
  // optional int64 MineralLimit = 8;
  inline bool has_minerallimit() const;
  inline void clear_minerallimit();
  static const int kMineralLimitFieldNumber = 8;
  inline ::google::protobuf::int64 minerallimit() const;
  inline void set_minerallimit(::google::protobuf::int64 value);
  
  // optional int32 star = 9;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 9;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);
  
  // repeated .DB_Item items = 10;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 10;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_Item >& items() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_Item >* mutable_items();
  inline const ::DB_Item& items(int index) const;
  inline ::DB_Item* mutable_items(int index);
  inline ::DB_Item* add_items();
  
  // repeated .DB_Hangar hangars = 11;
  inline int hangars_size() const;
  inline void clear_hangars();
  static const int kHangarsFieldNumber = 11;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_Hangar >& hangars() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_Hangar >* mutable_hangars();
  inline const ::DB_Hangar& hangars(int index) const;
  inline ::DB_Hangar* mutable_hangars(int index);
  inline ::DB_Hangar* add_hangars();
  
  // repeated .DB_GameUnit units = 12;
  inline int units_size() const;
  inline void clear_units();
  static const int kUnitsFieldNumber = 12;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_GameUnit >& units() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_GameUnit >* mutable_units();
  inline const ::DB_GameUnit& units(int index) const;
  inline ::DB_GameUnit* mutable_units(int index);
  inline ::DB_GameUnit* add_units();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 hqlevel_;
  ::google::protobuf::int32 droids_;
  ::google::protobuf::int32 droidinuse_;
  ::google::protobuf::int32 capital_;
  ::google::protobuf::int64 coinslimit_;
  ::google::protobuf::int64 minerallimit_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::RepeatedPtrField< ::DB_Item > items_;
  ::google::protobuf::RepeatedPtrField< ::DB_Hangar > hangars_;
  ::google::protobuf::RepeatedPtrField< ::DB_GameUnit > units_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Planet* default_instance_;
};
// -------------------------------------------------------------------

class DB_NPC : public ::google::protobuf::Message {
 public:
  DB_NPC();
  virtual ~DB_NPC();
  
  DB_NPC(const DB_NPC& from);
  
  inline DB_NPC& operator=(const DB_NPC& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_NPC& default_instance();
  void Swap(DB_NPC* other);
  
  // implements Message ----------------------------------------------
  
  DB_NPC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_NPC& from);
  void MergeFrom(const DB_NPC& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 sku = 1;
  inline bool has_sku() const;
  inline void clear_sku();
  static const int kSkuFieldNumber = 1;
  inline ::google::protobuf::int32 sku() const;
  inline void set_sku(::google::protobuf::int32 value);
  
  // optional int32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
  // optional int32 HQLevel = 3;
  inline bool has_hqlevel() const;
  inline void clear_hqlevel();
  static const int kHQLevelFieldNumber = 3;
  inline ::google::protobuf::int32 hqlevel() const;
  inline void set_hqlevel(::google::protobuf::int32 value);
  
  // optional int32 npcId = 4;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIdFieldNumber = 4;
  inline ::google::protobuf::int32 npcid() const;
  inline void set_npcid(::google::protobuf::int32 value);
  
  // repeated .DB_Item items = 5;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_Item >& items() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_Item >* mutable_items();
  inline const ::DB_Item& items(int index) const;
  inline ::DB_Item* mutable_items(int index);
  inline ::DB_Item* add_items();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sku_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 hqlevel_;
  ::google::protobuf::int32 npcid_;
  ::google::protobuf::RepeatedPtrField< ::DB_Item > items_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_NPC* default_instance_;
};
// -------------------------------------------------------------------

class DB_Player : public ::google::protobuf::Message {
 public:
  DB_Player();
  virtual ~DB_Player();
  
  DB_Player(const DB_Player& from);
  
  inline DB_Player& operator=(const DB_Player& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_Player& default_instance();
  void Swap(DB_Player* other);
  
  // implements Message ----------------------------------------------
  
  DB_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_Player& from);
  void MergeFrom(const DB_Player& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .DB_Model model = 1;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 1;
  inline const ::DB_Model& model() const;
  inline ::DB_Model* mutable_model();
  
  // optional .DB_State state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline const ::DB_State& state() const;
  inline ::DB_State* mutable_state();
  
  // repeated .DB_Planet planets = 3;
  inline int planets_size() const;
  inline void clear_planets();
  static const int kPlanetsFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_Planet >& planets() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_Planet >* mutable_planets();
  inline const ::DB_Planet& planets(int index) const;
  inline ::DB_Planet* mutable_planets(int index);
  inline ::DB_Planet* add_planets();
  
  // repeated .DB_NPC npcs = 4;
  inline int npcs_size() const;
  inline void clear_npcs();
  static const int kNpcsFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_NPC >& npcs() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_NPC >* mutable_npcs();
  inline const ::DB_NPC& npcs(int index) const;
  inline ::DB_NPC* mutable_npcs(int index);
  inline ::DB_NPC* add_npcs();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::DB_Model* model_;
  ::DB_State* state_;
  ::google::protobuf::RepeatedPtrField< ::DB_Planet > planets_;
  ::google::protobuf::RepeatedPtrField< ::DB_NPC > npcs_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_Player* default_instance_;
};
// -------------------------------------------------------------------

class DB_User : public ::google::protobuf::Message {
 public:
  DB_User();
  virtual ~DB_User();
  
  DB_User(const DB_User& from);
  
  inline DB_User& operator=(const DB_User& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_User& default_instance();
  void Swap(DB_User* other);
  
  // implements Message ----------------------------------------------
  
  DB_User* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_User& from);
  void MergeFrom(const DB_User& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);
  
  // required string openid = 2;
  inline bool has_openid() const;
  inline void clear_openid();
  static const int kOpenidFieldNumber = 2;
  inline const ::std::string& openid() const;
  inline void set_openid(const ::std::string& value);
  inline void set_openid(const char* value);
  inline void set_openid(const char* value, size_t size);
  inline ::std::string* mutable_openid();
  
  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional int32 head = 4;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 4;
  inline ::google::protobuf::int32 head() const;
  inline void set_head(::google::protobuf::int32 value);
  
  // optional int64 last_login_time = 5;
  inline bool has_last_login_time() const;
  inline void clear_last_login_time();
  static const int kLastLoginTimeFieldNumber = 5;
  inline ::google::protobuf::int64 last_login_time() const;
  inline void set_last_login_time(::google::protobuf::int64 value);
  
  // optional int64 regist_time = 6;
  inline bool has_regist_time() const;
  inline void clear_regist_time();
  static const int kRegistTimeFieldNumber = 6;
  inline ::google::protobuf::int64 regist_time() const;
  inline void set_regist_time(::google::protobuf::int64 value);
  
  // optional int32 unbreakLogin = 7;
  inline bool has_unbreaklogin() const;
  inline void clear_unbreaklogin();
  static const int kUnbreakLoginFieldNumber = 7;
  inline ::google::protobuf::int32 unbreaklogin() const;
  inline void set_unbreaklogin(::google::protobuf::int32 value);
  
  // optional int32 isValid = 8;
  inline bool has_isvalid() const;
  inline void clear_isvalid();
  static const int kIsValidFieldNumber = 8;
  inline ::google::protobuf::int32 isvalid() const;
  inline void set_isvalid(::google::protobuf::int32 value);
  
  // optional int32 orgin = 9;
  inline bool has_orgin() const;
  inline void clear_orgin();
  static const int kOrginFieldNumber = 9;
  inline ::google::protobuf::int32 orgin() const;
  inline void set_orgin(::google::protobuf::int32 value);
  
  // optional int64 last_logout_time = 10;
  inline bool has_last_logout_time() const;
  inline void clear_last_logout_time();
  static const int kLastLogoutTimeFieldNumber = 10;
  inline ::google::protobuf::int64 last_logout_time() const;
  inline void set_last_logout_time(::google::protobuf::int64 value);
  
  // required .DB_Player player = 11;
  inline bool has_player() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 11;
  inline const ::DB_Player& player() const;
  inline ::DB_Player* mutable_player();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 id_;
  ::std::string* openid_;
  static const ::std::string _default_openid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::int32 head_;
  ::google::protobuf::int64 last_login_time_;
  ::google::protobuf::int64 regist_time_;
  ::google::protobuf::int32 unbreaklogin_;
  ::google::protobuf::int32 isvalid_;
  ::google::protobuf::int32 orgin_;
  ::google::protobuf::int64 last_logout_time_;
  ::DB_Player* player_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_User* default_instance_;
};
// -------------------------------------------------------------------

class DB_GlobalStarInfo : public ::google::protobuf::Message {
 public:
  DB_GlobalStarInfo();
  virtual ~DB_GlobalStarInfo();
  
  DB_GlobalStarInfo(const DB_GlobalStarInfo& from);
  
  inline DB_GlobalStarInfo& operator=(const DB_GlobalStarInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DB_GlobalStarInfo& default_instance();
  void Swap(DB_GlobalStarInfo* other);
  
  // implements Message ----------------------------------------------
  
  DB_GlobalStarInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DB_GlobalStarInfo& from);
  void MergeFrom(const DB_GlobalStarInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DB_Star stars = 1;
  inline int stars_size() const;
  inline void clear_stars();
  static const int kStarsFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::DB_Star >& stars() const;
  inline ::google::protobuf::RepeatedPtrField< ::DB_Star >* mutable_stars();
  inline const ::DB_Star& stars(int index) const;
  inline ::DB_Star* mutable_stars(int index);
  inline ::DB_Star* add_stars();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::DB_Star > stars_;
  friend void  protobuf_AddDesc_dbinterface_2eproto();
  friend void protobuf_AssignDesc_dbinterface_2eproto();
  friend void protobuf_ShutdownFile_dbinterface_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DB_GlobalStarInfo* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// DB_BitCache

// repeated int32 bit = 1;
inline int DB_BitCache::bit_size() const {
  return bit_.size();
}
inline void DB_BitCache::clear_bit() {
  bit_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DB_BitCache::bit() const {
  return bit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DB_BitCache::mutable_bit() {
  return &bit_;
}
inline ::google::protobuf::int32 DB_BitCache::bit(int index) const {
  return bit_.Get(index);
}
inline void DB_BitCache::set_bit(int index, ::google::protobuf::int32 value) {
  bit_.Set(index, value);
}
inline void DB_BitCache::add_bit(::google::protobuf::int32 value) {
  bit_.Add(value);
}

// -------------------------------------------------------------------

// DB_Model

// optional int32 level = 1;
inline bool DB_Model::has_level() const {
  return _has_bit(0);
}
inline void DB_Model::clear_level() {
  level_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Model::level() const {
  return level_;
}
inline void DB_Model::set_level(::google::protobuf::int32 value) {
  _set_bit(0);
  level_ = value;
}

// optional int64 coins = 2;
inline bool DB_Model::has_coins() const {
  return _has_bit(1);
}
inline void DB_Model::clear_coins() {
  coins_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 DB_Model::coins() const {
  return coins_;
}
inline void DB_Model::set_coins(::google::protobuf::int64 value) {
  _set_bit(1);
  coins_ = value;
}

// optional int64 minerals = 3;
inline bool DB_Model::has_minerals() const {
  return _has_bit(2);
}
inline void DB_Model::clear_minerals() {
  minerals_ = GOOGLE_LONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::int64 DB_Model::minerals() const {
  return minerals_;
}
inline void DB_Model::set_minerals(::google::protobuf::int64 value) {
  _set_bit(2);
  minerals_ = value;
}

// optional int64 coinsTotal = 4;
inline bool DB_Model::has_coinstotal() const {
  return _has_bit(3);
}
inline void DB_Model::clear_coinstotal() {
  coinstotal_ = GOOGLE_LONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::int64 DB_Model::coinstotal() const {
  return coinstotal_;
}
inline void DB_Model::set_coinstotal(::google::protobuf::int64 value) {
  _set_bit(3);
  coinstotal_ = value;
}

// optional int64 mineralsTotal = 5;
inline bool DB_Model::has_mineralstotal() const {
  return _has_bit(4);
}
inline void DB_Model::clear_mineralstotal() {
  mineralstotal_ = GOOGLE_LONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::int64 DB_Model::mineralstotal() const {
  return mineralstotal_;
}
inline void DB_Model::set_mineralstotal(::google::protobuf::int64 value) {
  _set_bit(4);
  mineralstotal_ = value;
}

// optional int32 score = 6;
inline bool DB_Model::has_score() const {
  return _has_bit(5);
}
inline void DB_Model::clear_score() {
  score_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_Model::score() const {
  return score_;
}
inline void DB_Model::set_score(::google::protobuf::int32 value) {
  _set_bit(5);
  score_ = value;
}

// optional int32 exp = 7;
inline bool DB_Model::has_exp() const {
  return _has_bit(6);
}
inline void DB_Model::clear_exp() {
  exp_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_Model::exp() const {
  return exp_;
}
inline void DB_Model::set_exp(::google::protobuf::int32 value) {
  _set_bit(6);
  exp_ = value;
}

// optional int32 cash = 8;
inline bool DB_Model::has_cash() const {
  return _has_bit(7);
}
inline void DB_Model::clear_cash() {
  cash_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_Model::cash() const {
  return cash_;
}
inline void DB_Model::set_cash(::google::protobuf::int32 value) {
  _set_bit(7);
  cash_ = value;
}

// -------------------------------------------------------------------

// DB_State

// optional int32 tutorialCompleted = 1;
inline bool DB_State::has_tutorialcompleted() const {
  return _has_bit(0);
}
inline void DB_State::clear_tutorialcompleted() {
  tutorialcompleted_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_State::tutorialcompleted() const {
  return tutorialcompleted_;
}
inline void DB_State::set_tutorialcompleted(::google::protobuf::int32 value) {
  _set_bit(0);
  tutorialcompleted_ = value;
}

// optional int32 dmgProtectionTimeLeft = 2;
inline bool DB_State::has_dmgprotectiontimeleft() const {
  return _has_bit(1);
}
inline void DB_State::clear_dmgprotectiontimeleft() {
  dmgprotectiontimeleft_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_State::dmgprotectiontimeleft() const {
  return dmgprotectiontimeleft_;
}
inline void DB_State::set_dmgprotectiontimeleft(::google::protobuf::int32 value) {
  _set_bit(1);
  dmgprotectiontimeleft_ = value;
}

// optional int32 dmgProtectionTimeTotal = 3;
inline bool DB_State::has_dmgprotectiontimetotal() const {
  return _has_bit(2);
}
inline void DB_State::clear_dmgprotectiontimetotal() {
  dmgprotectiontimetotal_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_State::dmgprotectiontimetotal() const {
  return dmgprotectiontimetotal_;
}
inline void DB_State::set_dmgprotectiontimetotal(::google::protobuf::int32 value) {
  _set_bit(2);
  dmgprotectiontimetotal_ = value;
}

// -------------------------------------------------------------------

// DB_PlanetLiteInfo

// optional int64 uid = 1;
inline bool DB_PlanetLiteInfo::has_uid() const {
  return _has_bit(0);
}
inline void DB_PlanetLiteInfo::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 DB_PlanetLiteInfo::uid() const {
  return uid_;
}
inline void DB_PlanetLiteInfo::set_uid(::google::protobuf::int64 value) {
  _set_bit(0);
  uid_ = value;
}

// optional int64 planetId = 2;
inline bool DB_PlanetLiteInfo::has_planetid() const {
  return _has_bit(1);
}
inline void DB_PlanetLiteInfo::clear_planetid() {
  planetid_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 DB_PlanetLiteInfo::planetid() const {
  return planetid_;
}
inline void DB_PlanetLiteInfo::set_planetid(::google::protobuf::int64 value) {
  _set_bit(1);
  planetid_ = value;
}

// -------------------------------------------------------------------

// DB_Star

// optional int32 id = 1;
inline bool DB_Star::has_id() const {
  return _has_bit(0);
}
inline void DB_Star::clear_id() {
  id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Star::id() const {
  return id_;
}
inline void DB_Star::set_id(::google::protobuf::int32 value) {
  _set_bit(0);
  id_ = value;
}

// optional int32 type = 2;
inline bool DB_Star::has_type() const {
  return _has_bit(1);
}
inline void DB_Star::clear_type() {
  type_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Star::type() const {
  return type_;
}
inline void DB_Star::set_type(::google::protobuf::int32 value) {
  _set_bit(1);
  type_ = value;
}

// optional int32 name = 3;
inline bool DB_Star::has_name() const {
  return _has_bit(2);
}
inline void DB_Star::clear_name() {
  name_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Star::name() const {
  return name_;
}
inline void DB_Star::set_name(::google::protobuf::int32 value) {
  _set_bit(2);
  name_ = value;
}

// optional int32 x = 4;
inline bool DB_Star::has_x() const {
  return _has_bit(3);
}
inline void DB_Star::clear_x() {
  x_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Star::x() const {
  return x_;
}
inline void DB_Star::set_x(::google::protobuf::int32 value) {
  _set_bit(3);
  x_ = value;
}

// optional int32 y = 5;
inline bool DB_Star::has_y() const {
  return _has_bit(4);
}
inline void DB_Star::clear_y() {
  y_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_Star::y() const {
  return y_;
}
inline void DB_Star::set_y(::google::protobuf::int32 value) {
  _set_bit(4);
  y_ = value;
}

// repeated .DB_PlanetLiteInfo lite = 6;
inline int DB_Star::lite_size() const {
  return lite_.size();
}
inline void DB_Star::clear_lite() {
  lite_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_PlanetLiteInfo >&
DB_Star::lite() const {
  return lite_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_PlanetLiteInfo >*
DB_Star::mutable_lite() {
  return &lite_;
}
inline const ::DB_PlanetLiteInfo& DB_Star::lite(int index) const {
  return lite_.Get(index);
}
inline ::DB_PlanetLiteInfo* DB_Star::mutable_lite(int index) {
  return lite_.Mutable(index);
}
inline ::DB_PlanetLiteInfo* DB_Star::add_lite() {
  return lite_.Add();
}

// -------------------------------------------------------------------

// DB_Item

// optional int32 sid = 1;
inline bool DB_Item::has_sid() const {
  return _has_bit(0);
}
inline void DB_Item::clear_sid() {
  sid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Item::sid() const {
  return sid_;
}
inline void DB_Item::set_sid(::google::protobuf::int32 value) {
  _set_bit(0);
  sid_ = value;
}

// optional int32 sku = 2;
inline bool DB_Item::has_sku() const {
  return _has_bit(1);
}
inline void DB_Item::clear_sku() {
  sku_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Item::sku() const {
  return sku_;
}
inline void DB_Item::set_sku(::google::protobuf::int32 value) {
  _set_bit(1);
  sku_ = value;
}

// optional int32 type = 3;
inline bool DB_Item::has_type() const {
  return _has_bit(2);
}
inline void DB_Item::clear_type() {
  type_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Item::type() const {
  return type_;
}
inline void DB_Item::set_type(::google::protobuf::int32 value) {
  _set_bit(2);
  type_ = value;
}

// optional int32 upgradeId = 4;
inline bool DB_Item::has_upgradeid() const {
  return _has_bit(3);
}
inline void DB_Item::clear_upgradeid() {
  upgradeid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Item::upgradeid() const {
  return upgradeid_;
}
inline void DB_Item::set_upgradeid(::google::protobuf::int32 value) {
  _set_bit(3);
  upgradeid_ = value;
}

// optional int32 isFlipped = 5;
inline bool DB_Item::has_isflipped() const {
  return _has_bit(4);
}
inline void DB_Item::clear_isflipped() {
  isflipped_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_Item::isflipped() const {
  return isflipped_;
}
inline void DB_Item::set_isflipped(::google::protobuf::int32 value) {
  _set_bit(4);
  isflipped_ = value;
}

// optional int32 energyPercent = 6;
inline bool DB_Item::has_energypercent() const {
  return _has_bit(5);
}
inline void DB_Item::clear_energypercent() {
  energypercent_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_Item::energypercent() const {
  return energypercent_;
}
inline void DB_Item::set_energypercent(::google::protobuf::int32 value) {
  _set_bit(5);
  energypercent_ = value;
}

// optional int32 energy = 7;
inline bool DB_Item::has_energy() const {
  return _has_bit(6);
}
inline void DB_Item::clear_energy() {
  energy_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_Item::energy() const {
  return energy_;
}
inline void DB_Item::set_energy(::google::protobuf::int32 value) {
  _set_bit(6);
  energy_ = value;
}

// optional int32 x = 8;
inline bool DB_Item::has_x() const {
  return _has_bit(7);
}
inline void DB_Item::clear_x() {
  x_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_Item::x() const {
  return x_;
}
inline void DB_Item::set_x(::google::protobuf::int32 value) {
  _set_bit(7);
  x_ = value;
}

// optional int32 y = 9;
inline bool DB_Item::has_y() const {
  return _has_bit(8);
}
inline void DB_Item::clear_y() {
  y_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_Item::y() const {
  return y_;
}
inline void DB_Item::set_y(::google::protobuf::int32 value) {
  _set_bit(8);
  y_ = value;
}

// optional int32 state = 10;
inline bool DB_Item::has_state() const {
  return _has_bit(9);
}
inline void DB_Item::clear_state() {
  state_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 DB_Item::state() const {
  return state_;
}
inline void DB_Item::set_state(::google::protobuf::int32 value) {
  _set_bit(9);
  state_ = value;
}

// optional int32 time = 11;
inline bool DB_Item::has_time() const {
  return _has_bit(10);
}
inline void DB_Item::clear_time() {
  time_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 DB_Item::time() const {
  return time_;
}
inline void DB_Item::set_time(::google::protobuf::int32 value) {
  _set_bit(10);
  time_ = value;
}

// optional int32 incomeToRestore = 12;
inline bool DB_Item::has_incometorestore() const {
  return _has_bit(11);
}
inline void DB_Item::clear_incometorestore() {
  incometorestore_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 DB_Item::incometorestore() const {
  return incometorestore_;
}
inline void DB_Item::set_incometorestore(::google::protobuf::int32 value) {
  _set_bit(11);
  incometorestore_ = value;
}

// optional int32 repairing = 13;
inline bool DB_Item::has_repairing() const {
  return _has_bit(12);
}
inline void DB_Item::clear_repairing() {
  repairing_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 DB_Item::repairing() const {
  return repairing_;
}
inline void DB_Item::set_repairing(::google::protobuf::int32 value) {
  _set_bit(12);
  repairing_ = value;
}

// optional int64 repairStart = 14;
inline bool DB_Item::has_repairstart() const {
  return _has_bit(13);
}
inline void DB_Item::clear_repairstart() {
  repairstart_ = GOOGLE_LONGLONG(0);
  _clear_bit(13);
}
inline ::google::protobuf::int64 DB_Item::repairstart() const {
  return repairstart_;
}
inline void DB_Item::set_repairstart(::google::protobuf::int64 value) {
  _set_bit(13);
  repairstart_ = value;
}

// optional int64 updateAt = 15;
inline bool DB_Item::has_updateat() const {
  return _has_bit(14);
}
inline void DB_Item::clear_updateat() {
  updateat_ = GOOGLE_LONGLONG(0);
  _clear_bit(14);
}
inline ::google::protobuf::int64 DB_Item::updateat() const {
  return updateat_;
}
inline void DB_Item::set_updateat(::google::protobuf::int64 value) {
  _set_bit(14);
  updateat_ = value;
}

// -------------------------------------------------------------------

// DB_Hangar

// optional int32 sid = 1;
inline bool DB_Hangar::has_sid() const {
  return _has_bit(0);
}
inline void DB_Hangar::clear_sid() {
  sid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Hangar::sid() const {
  return sid_;
}
inline void DB_Hangar::set_sid(::google::protobuf::int32 value) {
  _set_bit(0);
  sid_ = value;
}

// optional int32 sku = 2;
inline bool DB_Hangar::has_sku() const {
  return _has_bit(1);
}
inline void DB_Hangar::clear_sku() {
  sku_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Hangar::sku() const {
  return sku_;
}
inline void DB_Hangar::set_sku(::google::protobuf::int32 value) {
  _set_bit(1);
  sku_ = value;
}

// optional int32 num = 3;
inline bool DB_Hangar::has_num() const {
  return _has_bit(2);
}
inline void DB_Hangar::clear_num() {
  num_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Hangar::num() const {
  return num_;
}
inline void DB_Hangar::set_num(::google::protobuf::int32 value) {
  _set_bit(2);
  num_ = value;
}

// -------------------------------------------------------------------

// DB_GameUnit

// optional int32 sku = 1;
inline bool DB_GameUnit::has_sku() const {
  return _has_bit(0);
}
inline void DB_GameUnit::clear_sku() {
  sku_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_GameUnit::sku() const {
  return sku_;
}
inline void DB_GameUnit::set_sku(::google::protobuf::int32 value) {
  _set_bit(0);
  sku_ = value;
}

// optional int32 unlock = 2;
inline bool DB_GameUnit::has_unlock() const {
  return _has_bit(1);
}
inline void DB_GameUnit::clear_unlock() {
  unlock_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_GameUnit::unlock() const {
  return unlock_;
}
inline void DB_GameUnit::set_unlock(::google::protobuf::int32 value) {
  _set_bit(1);
  unlock_ = value;
}

// optional int32 upgradeId = 3;
inline bool DB_GameUnit::has_upgradeid() const {
  return _has_bit(2);
}
inline void DB_GameUnit::clear_upgradeid() {
  upgradeid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_GameUnit::upgradeid() const {
  return upgradeid_;
}
inline void DB_GameUnit::set_upgradeid(::google::protobuf::int32 value) {
  _set_bit(2);
  upgradeid_ = value;
}

// optional int32 timeLeft = 4;
inline bool DB_GameUnit::has_timeleft() const {
  return _has_bit(3);
}
inline void DB_GameUnit::clear_timeleft() {
  timeleft_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_GameUnit::timeleft() const {
  return timeleft_;
}
inline void DB_GameUnit::set_timeleft(::google::protobuf::int32 value) {
  _set_bit(3);
  timeleft_ = value;
}

// optional int64 updateAt = 5;
inline bool DB_GameUnit::has_updateat() const {
  return _has_bit(4);
}
inline void DB_GameUnit::clear_updateat() {
  updateat_ = GOOGLE_LONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::int64 DB_GameUnit::updateat() const {
  return updateat_;
}
inline void DB_GameUnit::set_updateat(::google::protobuf::int64 value) {
  _set_bit(4);
  updateat_ = value;
}

// -------------------------------------------------------------------

// DB_Planet

// optional int32 id = 1;
inline bool DB_Planet::has_id() const {
  return _has_bit(0);
}
inline void DB_Planet::clear_id() {
  id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_Planet::id() const {
  return id_;
}
inline void DB_Planet::set_id(::google::protobuf::int32 value) {
  _set_bit(0);
  id_ = value;
}

// optional int32 type = 2;
inline bool DB_Planet::has_type() const {
  return _has_bit(1);
}
inline void DB_Planet::clear_type() {
  type_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_Planet::type() const {
  return type_;
}
inline void DB_Planet::set_type(::google::protobuf::int32 value) {
  _set_bit(1);
  type_ = value;
}

// optional int32 HQLevel = 3;
inline bool DB_Planet::has_hqlevel() const {
  return _has_bit(2);
}
inline void DB_Planet::clear_hqlevel() {
  hqlevel_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_Planet::hqlevel() const {
  return hqlevel_;
}
inline void DB_Planet::set_hqlevel(::google::protobuf::int32 value) {
  _set_bit(2);
  hqlevel_ = value;
}

// optional int32 Droids = 4;
inline bool DB_Planet::has_droids() const {
  return _has_bit(3);
}
inline void DB_Planet::clear_droids() {
  droids_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_Planet::droids() const {
  return droids_;
}
inline void DB_Planet::set_droids(::google::protobuf::int32 value) {
  _set_bit(3);
  droids_ = value;
}

// optional int32 DroidInUse = 5;
inline bool DB_Planet::has_droidinuse() const {
  return _has_bit(4);
}
inline void DB_Planet::clear_droidinuse() {
  droidinuse_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DB_Planet::droidinuse() const {
  return droidinuse_;
}
inline void DB_Planet::set_droidinuse(::google::protobuf::int32 value) {
  _set_bit(4);
  droidinuse_ = value;
}

// optional int32 Capital = 6;
inline bool DB_Planet::has_capital() const {
  return _has_bit(5);
}
inline void DB_Planet::clear_capital() {
  capital_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 DB_Planet::capital() const {
  return capital_;
}
inline void DB_Planet::set_capital(::google::protobuf::int32 value) {
  _set_bit(5);
  capital_ = value;
}

// optional int64 CoinsLimit = 7;
inline bool DB_Planet::has_coinslimit() const {
  return _has_bit(6);
}
inline void DB_Planet::clear_coinslimit() {
  coinslimit_ = GOOGLE_LONGLONG(0);
  _clear_bit(6);
}
inline ::google::protobuf::int64 DB_Planet::coinslimit() const {
  return coinslimit_;
}
inline void DB_Planet::set_coinslimit(::google::protobuf::int64 value) {
  _set_bit(6);
  coinslimit_ = value;
}

// optional int64 MineralLimit = 8;
inline bool DB_Planet::has_minerallimit() const {
  return _has_bit(7);
}
inline void DB_Planet::clear_minerallimit() {
  minerallimit_ = GOOGLE_LONGLONG(0);
  _clear_bit(7);
}
inline ::google::protobuf::int64 DB_Planet::minerallimit() const {
  return minerallimit_;
}
inline void DB_Planet::set_minerallimit(::google::protobuf::int64 value) {
  _set_bit(7);
  minerallimit_ = value;
}

// optional int32 star = 9;
inline bool DB_Planet::has_star() const {
  return _has_bit(8);
}
inline void DB_Planet::clear_star() {
  star_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_Planet::star() const {
  return star_;
}
inline void DB_Planet::set_star(::google::protobuf::int32 value) {
  _set_bit(8);
  star_ = value;
}

// repeated .DB_Item items = 10;
inline int DB_Planet::items_size() const {
  return items_.size();
}
inline void DB_Planet::clear_items() {
  items_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_Item >&
DB_Planet::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_Item >*
DB_Planet::mutable_items() {
  return &items_;
}
inline const ::DB_Item& DB_Planet::items(int index) const {
  return items_.Get(index);
}
inline ::DB_Item* DB_Planet::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::DB_Item* DB_Planet::add_items() {
  return items_.Add();
}

// repeated .DB_Hangar hangars = 11;
inline int DB_Planet::hangars_size() const {
  return hangars_.size();
}
inline void DB_Planet::clear_hangars() {
  hangars_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_Hangar >&
DB_Planet::hangars() const {
  return hangars_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_Hangar >*
DB_Planet::mutable_hangars() {
  return &hangars_;
}
inline const ::DB_Hangar& DB_Planet::hangars(int index) const {
  return hangars_.Get(index);
}
inline ::DB_Hangar* DB_Planet::mutable_hangars(int index) {
  return hangars_.Mutable(index);
}
inline ::DB_Hangar* DB_Planet::add_hangars() {
  return hangars_.Add();
}

// repeated .DB_GameUnit units = 12;
inline int DB_Planet::units_size() const {
  return units_.size();
}
inline void DB_Planet::clear_units() {
  units_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_GameUnit >&
DB_Planet::units() const {
  return units_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_GameUnit >*
DB_Planet::mutable_units() {
  return &units_;
}
inline const ::DB_GameUnit& DB_Planet::units(int index) const {
  return units_.Get(index);
}
inline ::DB_GameUnit* DB_Planet::mutable_units(int index) {
  return units_.Mutable(index);
}
inline ::DB_GameUnit* DB_Planet::add_units() {
  return units_.Add();
}

// -------------------------------------------------------------------

// DB_NPC

// optional int32 sku = 1;
inline bool DB_NPC::has_sku() const {
  return _has_bit(0);
}
inline void DB_NPC::clear_sku() {
  sku_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DB_NPC::sku() const {
  return sku_;
}
inline void DB_NPC::set_sku(::google::protobuf::int32 value) {
  _set_bit(0);
  sku_ = value;
}

// optional int32 exp = 2;
inline bool DB_NPC::has_exp() const {
  return _has_bit(1);
}
inline void DB_NPC::clear_exp() {
  exp_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DB_NPC::exp() const {
  return exp_;
}
inline void DB_NPC::set_exp(::google::protobuf::int32 value) {
  _set_bit(1);
  exp_ = value;
}

// optional int32 HQLevel = 3;
inline bool DB_NPC::has_hqlevel() const {
  return _has_bit(2);
}
inline void DB_NPC::clear_hqlevel() {
  hqlevel_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DB_NPC::hqlevel() const {
  return hqlevel_;
}
inline void DB_NPC::set_hqlevel(::google::protobuf::int32 value) {
  _set_bit(2);
  hqlevel_ = value;
}

// optional int32 npcId = 4;
inline bool DB_NPC::has_npcid() const {
  return _has_bit(3);
}
inline void DB_NPC::clear_npcid() {
  npcid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_NPC::npcid() const {
  return npcid_;
}
inline void DB_NPC::set_npcid(::google::protobuf::int32 value) {
  _set_bit(3);
  npcid_ = value;
}

// repeated .DB_Item items = 5;
inline int DB_NPC::items_size() const {
  return items_.size();
}
inline void DB_NPC::clear_items() {
  items_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_Item >&
DB_NPC::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_Item >*
DB_NPC::mutable_items() {
  return &items_;
}
inline const ::DB_Item& DB_NPC::items(int index) const {
  return items_.Get(index);
}
inline ::DB_Item* DB_NPC::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::DB_Item* DB_NPC::add_items() {
  return items_.Add();
}

// -------------------------------------------------------------------

// DB_Player

// optional .DB_Model model = 1;
inline bool DB_Player::has_model() const {
  return _has_bit(0);
}
inline void DB_Player::clear_model() {
  if (model_ != NULL) model_->::DB_Model::Clear();
  _clear_bit(0);
}
inline const ::DB_Model& DB_Player::model() const {
  return model_ != NULL ? *model_ : *default_instance_->model_;
}
inline ::DB_Model* DB_Player::mutable_model() {
  _set_bit(0);
  if (model_ == NULL) model_ = new ::DB_Model;
  return model_;
}

// optional .DB_State state = 2;
inline bool DB_Player::has_state() const {
  return _has_bit(1);
}
inline void DB_Player::clear_state() {
  if (state_ != NULL) state_->::DB_State::Clear();
  _clear_bit(1);
}
inline const ::DB_State& DB_Player::state() const {
  return state_ != NULL ? *state_ : *default_instance_->state_;
}
inline ::DB_State* DB_Player::mutable_state() {
  _set_bit(1);
  if (state_ == NULL) state_ = new ::DB_State;
  return state_;
}

// repeated .DB_Planet planets = 3;
inline int DB_Player::planets_size() const {
  return planets_.size();
}
inline void DB_Player::clear_planets() {
  planets_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_Planet >&
DB_Player::planets() const {
  return planets_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_Planet >*
DB_Player::mutable_planets() {
  return &planets_;
}
inline const ::DB_Planet& DB_Player::planets(int index) const {
  return planets_.Get(index);
}
inline ::DB_Planet* DB_Player::mutable_planets(int index) {
  return planets_.Mutable(index);
}
inline ::DB_Planet* DB_Player::add_planets() {
  return planets_.Add();
}

// repeated .DB_NPC npcs = 4;
inline int DB_Player::npcs_size() const {
  return npcs_.size();
}
inline void DB_Player::clear_npcs() {
  npcs_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_NPC >&
DB_Player::npcs() const {
  return npcs_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_NPC >*
DB_Player::mutable_npcs() {
  return &npcs_;
}
inline const ::DB_NPC& DB_Player::npcs(int index) const {
  return npcs_.Get(index);
}
inline ::DB_NPC* DB_Player::mutable_npcs(int index) {
  return npcs_.Mutable(index);
}
inline ::DB_NPC* DB_Player::add_npcs() {
  return npcs_.Add();
}

// -------------------------------------------------------------------

// DB_User

// required int64 id = 1;
inline bool DB_User::has_id() const {
  return _has_bit(0);
}
inline void DB_User::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 DB_User::id() const {
  return id_;
}
inline void DB_User::set_id(::google::protobuf::int64 value) {
  _set_bit(0);
  id_ = value;
}

// required string openid = 2;
inline bool DB_User::has_openid() const {
  return _has_bit(1);
}
inline void DB_User::clear_openid() {
  if (openid_ != &_default_openid_) {
    openid_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& DB_User::openid() const {
  return *openid_;
}
inline void DB_User::set_openid(const ::std::string& value) {
  _set_bit(1);
  if (openid_ == &_default_openid_) {
    openid_ = new ::std::string;
  }
  openid_->assign(value);
}
inline void DB_User::set_openid(const char* value) {
  _set_bit(1);
  if (openid_ == &_default_openid_) {
    openid_ = new ::std::string;
  }
  openid_->assign(value);
}
inline void DB_User::set_openid(const char* value, size_t size) {
  _set_bit(1);
  if (openid_ == &_default_openid_) {
    openid_ = new ::std::string;
  }
  openid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_User::mutable_openid() {
  _set_bit(1);
  if (openid_ == &_default_openid_) {
    openid_ = new ::std::string;
  }
  return openid_;
}

// optional string name = 3;
inline bool DB_User::has_name() const {
  return _has_bit(2);
}
inline void DB_User::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& DB_User::name() const {
  return *name_;
}
inline void DB_User::set_name(const ::std::string& value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DB_User::set_name(const char* value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DB_User::set_name(const char* value, size_t size) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DB_User::mutable_name() {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional int32 head = 4;
inline bool DB_User::has_head() const {
  return _has_bit(3);
}
inline void DB_User::clear_head() {
  head_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DB_User::head() const {
  return head_;
}
inline void DB_User::set_head(::google::protobuf::int32 value) {
  _set_bit(3);
  head_ = value;
}

// optional int64 last_login_time = 5;
inline bool DB_User::has_last_login_time() const {
  return _has_bit(4);
}
inline void DB_User::clear_last_login_time() {
  last_login_time_ = GOOGLE_LONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::int64 DB_User::last_login_time() const {
  return last_login_time_;
}
inline void DB_User::set_last_login_time(::google::protobuf::int64 value) {
  _set_bit(4);
  last_login_time_ = value;
}

// optional int64 regist_time = 6;
inline bool DB_User::has_regist_time() const {
  return _has_bit(5);
}
inline void DB_User::clear_regist_time() {
  regist_time_ = GOOGLE_LONGLONG(0);
  _clear_bit(5);
}
inline ::google::protobuf::int64 DB_User::regist_time() const {
  return regist_time_;
}
inline void DB_User::set_regist_time(::google::protobuf::int64 value) {
  _set_bit(5);
  regist_time_ = value;
}

// optional int32 unbreakLogin = 7;
inline bool DB_User::has_unbreaklogin() const {
  return _has_bit(6);
}
inline void DB_User::clear_unbreaklogin() {
  unbreaklogin_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 DB_User::unbreaklogin() const {
  return unbreaklogin_;
}
inline void DB_User::set_unbreaklogin(::google::protobuf::int32 value) {
  _set_bit(6);
  unbreaklogin_ = value;
}

// optional int32 isValid = 8;
inline bool DB_User::has_isvalid() const {
  return _has_bit(7);
}
inline void DB_User::clear_isvalid() {
  isvalid_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 DB_User::isvalid() const {
  return isvalid_;
}
inline void DB_User::set_isvalid(::google::protobuf::int32 value) {
  _set_bit(7);
  isvalid_ = value;
}

// optional int32 orgin = 9;
inline bool DB_User::has_orgin() const {
  return _has_bit(8);
}
inline void DB_User::clear_orgin() {
  orgin_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 DB_User::orgin() const {
  return orgin_;
}
inline void DB_User::set_orgin(::google::protobuf::int32 value) {
  _set_bit(8);
  orgin_ = value;
}

// optional int64 last_logout_time = 10;
inline bool DB_User::has_last_logout_time() const {
  return _has_bit(9);
}
inline void DB_User::clear_last_logout_time() {
  last_logout_time_ = GOOGLE_LONGLONG(0);
  _clear_bit(9);
}
inline ::google::protobuf::int64 DB_User::last_logout_time() const {
  return last_logout_time_;
}
inline void DB_User::set_last_logout_time(::google::protobuf::int64 value) {
  _set_bit(9);
  last_logout_time_ = value;
}

// required .DB_Player player = 11;
inline bool DB_User::has_player() const {
  return _has_bit(10);
}
inline void DB_User::clear_player() {
  if (player_ != NULL) player_->::DB_Player::Clear();
  _clear_bit(10);
}
inline const ::DB_Player& DB_User::player() const {
  return player_ != NULL ? *player_ : *default_instance_->player_;
}
inline ::DB_Player* DB_User::mutable_player() {
  _set_bit(10);
  if (player_ == NULL) player_ = new ::DB_Player;
  return player_;
}

// -------------------------------------------------------------------

// DB_GlobalStarInfo

// repeated .DB_Star stars = 1;
inline int DB_GlobalStarInfo::stars_size() const {
  return stars_.size();
}
inline void DB_GlobalStarInfo::clear_stars() {
  stars_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DB_Star >&
DB_GlobalStarInfo::stars() const {
  return stars_;
}
inline ::google::protobuf::RepeatedPtrField< ::DB_Star >*
DB_GlobalStarInfo::mutable_stars() {
  return &stars_;
}
inline const ::DB_Star& DB_GlobalStarInfo::stars(int index) const {
  return stars_.Get(index);
}
inline ::DB_Star* DB_GlobalStarInfo::mutable_stars(int index) {
  return stars_.Mutable(index);
}
inline ::DB_Star* DB_GlobalStarInfo::add_stars() {
  return stars_.Add();
}


#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_dbinterface_2eproto__INCLUDED
