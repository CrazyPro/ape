// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RseUpdateAlliances.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace {

const ::google::protobuf::Descriptor* MsgProfile_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProfile_reflection_ = NULL;
const ::google::protobuf::Descriptor* RseUpdateAlliances_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RseUpdateAlliances_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_RseUpdateAlliances_2eproto() {
  protobuf_AddDesc_RseUpdateAlliances_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RseUpdateAlliances.proto");
  GOOGLE_CHECK(file != NULL);
  MsgProfile_descriptor_ = file->message_type(0);
  static const int MsgProfile_offsets_[1] = {
  };
  MsgProfile_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProfile_descriptor_,
      MsgProfile::default_instance_,
      MsgProfile_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfile, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProfile, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProfile));
  RseUpdateAlliances_descriptor_ = file->message_type(1);
  static const int RseUpdateAlliances_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseUpdateAlliances, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseUpdateAlliances, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseUpdateAlliances, profile_),
  };
  RseUpdateAlliances_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RseUpdateAlliances_descriptor_,
      RseUpdateAlliances::default_instance_,
      RseUpdateAlliances_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseUpdateAlliances, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseUpdateAlliances, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RseUpdateAlliances));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RseUpdateAlliances_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProfile_descriptor_, &MsgProfile::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RseUpdateAlliances_descriptor_, &RseUpdateAlliances::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RseUpdateAlliances_2eproto() {
  delete MsgProfile::default_instance_;
  delete MsgProfile_reflection_;
  delete RseUpdateAlliances::default_instance_;
  delete RseUpdateAlliances_reflection_;
}

void protobuf_AddDesc_RseUpdateAlliances_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030RseUpdateAlliances.proto\"\014\n\nMsgProfile"
    "\"Q\n\022RseUpdateAlliances\022\016\n\006result\030\001 \001(\010\022\r"
    "\n\005error\030\002 \001(\005\022\034\n\007profile\030\003 \001(\0132\013.MsgProf"
    "ile", 123);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RseUpdateAlliances.proto", &protobuf_RegisterTypes);
  MsgProfile::default_instance_ = new MsgProfile();
  RseUpdateAlliances::default_instance_ = new RseUpdateAlliances();
  MsgProfile::default_instance_->InitAsDefaultInstance();
  RseUpdateAlliances::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RseUpdateAlliances_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RseUpdateAlliances_2eproto {
  StaticDescriptorInitializer_RseUpdateAlliances_2eproto() {
    protobuf_AddDesc_RseUpdateAlliances_2eproto();
  }
} static_descriptor_initializer_RseUpdateAlliances_2eproto_;


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgProfile::MsgProfile() {
  SharedCtor();
}

void MsgProfile::InitAsDefaultInstance() {
}

MsgProfile::MsgProfile(const MsgProfile& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgProfile::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProfile::~MsgProfile() {
  SharedDtor();
}

void MsgProfile::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgProfile::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProfile_descriptor_;
}

const MsgProfile& MsgProfile::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseUpdateAlliances_2eproto();  return *default_instance_;
}

MsgProfile* MsgProfile::default_instance_ = NULL;

MsgProfile* MsgProfile::New() const {
  return new MsgProfile;
}

void MsgProfile::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void MsgProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgProfile::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgProfile::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgProfile::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgProfile::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProfile* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProfile*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProfile::MergeFrom(const MsgProfile& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProfile::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProfile::CopyFrom(const MsgProfile& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProfile::IsInitialized() const {
  
  return true;
}

void MsgProfile::Swap(MsgProfile* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProfile::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProfile_descriptor_;
  metadata.reflection = MsgProfile_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RseUpdateAlliances::kResultFieldNumber;
const int RseUpdateAlliances::kErrorFieldNumber;
const int RseUpdateAlliances::kProfileFieldNumber;
#endif  // !_MSC_VER

RseUpdateAlliances::RseUpdateAlliances() {
  SharedCtor();
}

void RseUpdateAlliances::InitAsDefaultInstance() {
  profile_ = const_cast< ::MsgProfile*>(&::MsgProfile::default_instance());
}

RseUpdateAlliances::RseUpdateAlliances(const RseUpdateAlliances& from) {
  SharedCtor();
  MergeFrom(from);
}

void RseUpdateAlliances::SharedCtor() {
  _cached_size_ = 0;
  result_ = false;
  error_ = 0;
  profile_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RseUpdateAlliances::~RseUpdateAlliances() {
  SharedDtor();
}

void RseUpdateAlliances::SharedDtor() {
  if (this != default_instance_) {
    delete profile_;
  }
}

const ::google::protobuf::Descriptor* RseUpdateAlliances::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RseUpdateAlliances_descriptor_;
}

const RseUpdateAlliances& RseUpdateAlliances::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseUpdateAlliances_2eproto();  return *default_instance_;
}

RseUpdateAlliances* RseUpdateAlliances::default_instance_ = NULL;

RseUpdateAlliances* RseUpdateAlliances::New() const {
  return new RseUpdateAlliances;
}

void RseUpdateAlliances::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = false;
    error_ = 0;
    if (_has_bit(2)) {
      if (profile_ != NULL) profile_->::MsgProfile::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RseUpdateAlliances::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_error;
        break;
      }
      
      // optional int32 error = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_error:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &error_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_profile;
        break;
      }
      
      // optional .MsgProfile profile = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_profile:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_profile()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RseUpdateAlliances::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    RseUpdateAlliances::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional bool result = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }
  
  // optional int32 error = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->error(), output);
  }
  
  // optional .MsgProfile profile = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->profile(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RseUpdateAlliances::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool result = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }
  
  // optional int32 error = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->error(), target);
  }
  
  // optional .MsgProfile profile = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->profile(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RseUpdateAlliances::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool result = 1;
    if (has_result()) {
      total_size += 1 + 1;
    }
    
    // optional int32 error = 2;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->error());
    }
    
    // optional .MsgProfile profile = 3;
    if (has_profile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->profile());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void RseUpdateAlliances::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RseUpdateAlliances* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RseUpdateAlliances*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RseUpdateAlliances::MergeFrom(const RseUpdateAlliances& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
    if (from._has_bit(1)) {
      set_error(from.error());
    }
    if (from._has_bit(2)) {
      mutable_profile()->::MsgProfile::MergeFrom(from.profile());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RseUpdateAlliances::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RseUpdateAlliances::CopyFrom(const RseUpdateAlliances& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RseUpdateAlliances::IsInitialized() const {
  
  return true;
}

void RseUpdateAlliances::Swap(RseUpdateAlliances* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(error_, other->error_);
    std::swap(profile_, other->profile_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RseUpdateAlliances::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RseUpdateAlliances_descriptor_;
  metadata.reflection = RseUpdateAlliances_reflection_;
  return metadata;
}

