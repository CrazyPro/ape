// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_RseObtainNpcList_2eproto__INCLUDED
#define PROTOBUF_RseObtainNpcList_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RseObtainNpcList_2eproto();
void protobuf_AssignDesc_RseObtainNpcList_2eproto();
void protobuf_ShutdownFile_RseObtainNpcList_2eproto();

class MsgNpc;
class RseObtainNpcList;

// ===================================================================

class MsgNpc : public ::google::protobuf::Message {
 public:
  MsgNpc();
  virtual ~MsgNpc();
  
  MsgNpc(const MsgNpc& from);
  
  inline MsgNpc& operator=(const MsgNpc& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNpc& default_instance();
  void Swap(MsgNpc* other);
  
  // implements Message ----------------------------------------------
  
  MsgNpc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNpc& from);
  void MergeFrom(const MsgNpc& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string npc = 1;
  inline int npc_size() const;
  inline void clear_npc();
  static const int kNpcFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& npc() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_npc();
  inline const ::std::string& npc(int index) const;
  inline ::std::string* mutable_npc(int index);
  inline void set_npc(int index, const ::std::string& value);
  inline void set_npc(int index, const char* value);
  inline void set_npc(int index, const char* value, size_t size);
  inline ::std::string* add_npc();
  inline void add_npc(const ::std::string& value);
  inline void add_npc(const char* value);
  inline void add_npc(const char* value, size_t size);
  
  // optional int64 xp = 2;
  inline bool has_xp() const;
  inline void clear_xp();
  static const int kXpFieldNumber = 2;
  inline ::google::protobuf::int64 xp() const;
  inline void set_xp(::google::protobuf::int64 value);
  
  // optional int32 HQLevel = 3;
  inline bool has_hqlevel() const;
  inline void clear_hqlevel();
  static const int kHQLevelFieldNumber = 3;
  inline ::google::protobuf::int32 hqlevel() const;
  inline void set_hqlevel(::google::protobuf::int32 value);
  
  // optional string sku = 4;
  inline bool has_sku() const;
  inline void clear_sku();
  static const int kSkuFieldNumber = 4;
  inline const ::std::string& sku() const;
  inline void set_sku(const ::std::string& value);
  inline void set_sku(const char* value);
  inline void set_sku(const char* value, size_t size);
  inline ::std::string* mutable_sku();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> npc_;
  ::google::protobuf::int64 xp_;
  ::google::protobuf::int32 hqlevel_;
  ::std::string* sku_;
  static const ::std::string _default_sku_;
  friend void  protobuf_AddDesc_RseObtainNpcList_2eproto();
  friend void protobuf_AssignDesc_RseObtainNpcList_2eproto();
  friend void protobuf_ShutdownFile_RseObtainNpcList_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgNpc* default_instance_;
};
// -------------------------------------------------------------------

class RseObtainNpcList : public ::google::protobuf::Message {
 public:
  RseObtainNpcList();
  virtual ~RseObtainNpcList();
  
  RseObtainNpcList(const RseObtainNpcList& from);
  
  inline RseObtainNpcList& operator=(const RseObtainNpcList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RseObtainNpcList& default_instance();
  void Swap(RseObtainNpcList* other);
  
  // implements Message ----------------------------------------------
  
  RseObtainNpcList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RseObtainNpcList& from);
  void MergeFrom(const RseObtainNpcList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .MsgNpc npcList = 1;
  inline int npclist_size() const;
  inline void clear_npclist();
  static const int kNpcListFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::MsgNpc >& npclist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgNpc >* mutable_npclist();
  inline const ::MsgNpc& npclist(int index) const;
  inline ::MsgNpc* mutable_npclist(int index);
  inline ::MsgNpc* add_npclist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::MsgNpc > npclist_;
  friend void  protobuf_AddDesc_RseObtainNpcList_2eproto();
  friend void protobuf_AssignDesc_RseObtainNpcList_2eproto();
  friend void protobuf_ShutdownFile_RseObtainNpcList_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RseObtainNpcList* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// MsgNpc

// repeated string npc = 1;
inline int MsgNpc::npc_size() const {
  return npc_.size();
}
inline void MsgNpc::clear_npc() {
  npc_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgNpc::npc() const {
  return npc_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgNpc::mutable_npc() {
  return &npc_;
}
inline const ::std::string& MsgNpc::npc(int index) const {
  return npc_.Get(index);
}
inline ::std::string* MsgNpc::mutable_npc(int index) {
  return npc_.Mutable(index);
}
inline void MsgNpc::set_npc(int index, const ::std::string& value) {
  npc_.Mutable(index)->assign(value);
}
inline void MsgNpc::set_npc(int index, const char* value) {
  npc_.Mutable(index)->assign(value);
}
inline void MsgNpc::set_npc(int index, const char* value, size_t size) {
  npc_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNpc::add_npc() {
  return npc_.Add();
}
inline void MsgNpc::add_npc(const ::std::string& value) {
  npc_.Add()->assign(value);
}
inline void MsgNpc::add_npc(const char* value) {
  npc_.Add()->assign(value);
}
inline void MsgNpc::add_npc(const char* value, size_t size) {
  npc_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// optional int64 xp = 2;
inline bool MsgNpc::has_xp() const {
  return _has_bit(1);
}
inline void MsgNpc::clear_xp() {
  xp_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 MsgNpc::xp() const {
  return xp_;
}
inline void MsgNpc::set_xp(::google::protobuf::int64 value) {
  _set_bit(1);
  xp_ = value;
}

// optional int32 HQLevel = 3;
inline bool MsgNpc::has_hqlevel() const {
  return _has_bit(2);
}
inline void MsgNpc::clear_hqlevel() {
  hqlevel_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 MsgNpc::hqlevel() const {
  return hqlevel_;
}
inline void MsgNpc::set_hqlevel(::google::protobuf::int32 value) {
  _set_bit(2);
  hqlevel_ = value;
}

// optional string sku = 4;
inline bool MsgNpc::has_sku() const {
  return _has_bit(3);
}
inline void MsgNpc::clear_sku() {
  if (sku_ != &_default_sku_) {
    sku_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& MsgNpc::sku() const {
  return *sku_;
}
inline void MsgNpc::set_sku(const ::std::string& value) {
  _set_bit(3);
  if (sku_ == &_default_sku_) {
    sku_ = new ::std::string;
  }
  sku_->assign(value);
}
inline void MsgNpc::set_sku(const char* value) {
  _set_bit(3);
  if (sku_ == &_default_sku_) {
    sku_ = new ::std::string;
  }
  sku_->assign(value);
}
inline void MsgNpc::set_sku(const char* value, size_t size) {
  _set_bit(3);
  if (sku_ == &_default_sku_) {
    sku_ = new ::std::string;
  }
  sku_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNpc::mutable_sku() {
  _set_bit(3);
  if (sku_ == &_default_sku_) {
    sku_ = new ::std::string;
  }
  return sku_;
}

// -------------------------------------------------------------------

// RseObtainNpcList

// repeated .MsgNpc npcList = 1;
inline int RseObtainNpcList::npclist_size() const {
  return npclist_.size();
}
inline void RseObtainNpcList::clear_npclist() {
  npclist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgNpc >&
RseObtainNpcList::npclist() const {
  return npclist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgNpc >*
RseObtainNpcList::mutable_npclist() {
  return &npclist_;
}
inline const ::MsgNpc& RseObtainNpcList::npclist(int index) const {
  return npclist_.Get(index);
}
inline ::MsgNpc* RseObtainNpcList::mutable_npclist(int index) {
  return npclist_.Mutable(index);
}
inline ::MsgNpc* RseObtainNpcList::add_npclist() {
  return npclist_.Add();
}


#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_RseObtainNpcList_2eproto__INCLUDED
