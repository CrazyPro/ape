// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "event.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace {

const ::google::protobuf::Descriptor* Event_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Event_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_event_2eproto() {
  protobuf_AddDesc_event_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "event.proto");
  GOOGLE_CHECK(file != NULL);
  Event_descriptor_ = file->message_type(0);
  static const int Event_offsets_[113] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, fromworld_fd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, workingstatus_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, userlogin_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, userlogin_rsp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, userauth_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, userauth_rsp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, sendremoteuser_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, wg_userleave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, friendinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, forwardinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, starsrvid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, transfersrvid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, webgetregion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, platsrvid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, userplat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, worldsrvid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, fightsrvid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, countryneed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, regionneed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, rankneed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, statneed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, newstarreq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, newstarrsp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, battleinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, httpaskmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, httpanswermsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rcebattledamagespack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rcecustomizedactivity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rcefinished_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceheartbeat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceitemmineexploded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rcelogin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rcenpcattackstart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceobtainaskforhelp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceobtainattackerlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceobtainbattlereplay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceobtaincustomizer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceobtainhangarshelp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceobtainmessageslist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceobtainneighborslist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceobtainnpclist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceobtainpayurlparame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceobtainrandomtargets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceobtainsocialitems_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceobtainsocialuserinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceobtainuniverse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceobtainvisithelps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceonlinereward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rcequerycheckandlockaccountifpossible_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rcequerygalaxywindow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rcequeryreceivewishitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rcequeryrefusereceivewishitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rcequerysendwishitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rcequerystarinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rcequerystarsbookmarks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rcequeryvisithelpsgiftunitsonbunker_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceupdatealliances_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceupdategameunits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceupdateitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceupdatemisc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceupdatemissions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceupdateprofile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceupdateships_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceupdatesocialitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceupdatestarsbookmarks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceupdatetargets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rceupdatevisithelp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ce_rcequerypve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseauthstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rsecustomizedactivity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseerror_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseheartbeat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rselogin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseobtainaskforhelp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseobtainattackerlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseobtainbattlereplay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseobtaincustomizer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseobtainhangarshelp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseobtainmessageslist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseobtainneighborslist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseobtainnpclist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseobtainpayurlparame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseobtainrandomtargets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseobtainsocialitems_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseobtainsocialuserinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseobtainuniverse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseobtainvisithelps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rsequerycheckandlockaccountifpossible_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rsequerygalaxywindow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rsequeryreceivewishitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rsequeryrefusereceivewishitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rsequerysendwishitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rsequerystarinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rsequerystarsbookmarks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rsequeryvisithelpsgiftunitsonbunker_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseupdatealliances_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseupdategameunits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseupdateitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseupdatemisc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseupdatemissions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseupdateprofile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseupdateships_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseupdatesocialitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseupdatestarsbookmarks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseupdatetargets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rsebattledamagespack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rseitemmineexploded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rsefinished_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, se_rsequerypve_),
  };
  Event_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Event_descriptor_,
      Event::default_instance_,
      Event_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Event));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_event_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Event_descriptor_, &Event::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_event_2eproto() {
  delete Event::default_instance_;
  delete Event_reflection_;
}

void protobuf_AddDesc_event_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_RceBattleDamagesPack_2eproto();
  ::protobuf_AddDesc_RceCustomizedActivity_2eproto();
  ::protobuf_AddDesc_RceFinished_2eproto();
  ::protobuf_AddDesc_RceHeartbeat_2eproto();
  ::protobuf_AddDesc_RceItemMineExploded_2eproto();
  ::protobuf_AddDesc_RceLogin_2eproto();
  ::protobuf_AddDesc_RceNpcAttackStart_2eproto();
  ::protobuf_AddDesc_RceObtainAskForHelp_2eproto();
  ::protobuf_AddDesc_RceObtainAttackerList_2eproto();
  ::protobuf_AddDesc_RceObtainBattleReplay_2eproto();
  ::protobuf_AddDesc_RceObtainCustomizer_2eproto();
  ::protobuf_AddDesc_RceObtainHangarsHelp_2eproto();
  ::protobuf_AddDesc_RceObtainMessagesList_2eproto();
  ::protobuf_AddDesc_RceObtainNeighborsList_2eproto();
  ::protobuf_AddDesc_RceObtainNpcList_2eproto();
  ::protobuf_AddDesc_RceObtainPayUrlParame_2eproto();
  ::protobuf_AddDesc_RceObtainRandomTargets_2eproto();
  ::protobuf_AddDesc_RceObtainSocialItems_2eproto();
  ::protobuf_AddDesc_RceObtainSocialUserInfo_2eproto();
  ::protobuf_AddDesc_RceObtainUniverse_2eproto();
  ::protobuf_AddDesc_RceObtainVisitHelps_2eproto();
  ::protobuf_AddDesc_RceOnlineReward_2eproto();
  ::protobuf_AddDesc_RceQueryCheckAndLockAccountIfPossible_2eproto();
  ::protobuf_AddDesc_RceQueryGalaxyWindow_2eproto();
  ::protobuf_AddDesc_RceQueryPvE_2eproto();
  ::protobuf_AddDesc_RceQueryReceiveWishItem_2eproto();
  ::protobuf_AddDesc_RceQueryRefuseReceiveWishItem_2eproto();
  ::protobuf_AddDesc_RceQuerySendWishItem_2eproto();
  ::protobuf_AddDesc_RceQueryStarInfo_2eproto();
  ::protobuf_AddDesc_RceQueryStarsBookmarks_2eproto();
  ::protobuf_AddDesc_RceQueryVisitHelpsGiftUnitsOnBunker_2eproto();
  ::protobuf_AddDesc_RceUpdateAlliances_2eproto();
  ::protobuf_AddDesc_RceUpdateGameUnits_2eproto();
  ::protobuf_AddDesc_RceUpdateItem_2eproto();
  ::protobuf_AddDesc_RceUpdateMisc_2eproto();
  ::protobuf_AddDesc_RceUpdateMissions_2eproto();
  ::protobuf_AddDesc_RceUpdateProfile_2eproto();
  ::protobuf_AddDesc_RceUpdateShips_2eproto();
  ::protobuf_AddDesc_RceUpdateSocialItem_2eproto();
  ::protobuf_AddDesc_RceUpdateStarsBookmarks_2eproto();
  ::protobuf_AddDesc_RceUpdateTargets_2eproto();
  ::protobuf_AddDesc_RceUpdateVisitHelp_2eproto();
  ::protobuf_AddDesc_RseAuthState_2eproto();
  ::protobuf_AddDesc_RseBattleDamagesPack_2eproto();
  ::protobuf_AddDesc_RseCustomizedActivity_2eproto();
  ::protobuf_AddDesc_RseError_2eproto();
  ::protobuf_AddDesc_RseFinished_2eproto();
  ::protobuf_AddDesc_RseHeartbeat_2eproto();
  ::protobuf_AddDesc_RseItemMineExploded_2eproto();
  ::protobuf_AddDesc_RseLogin_2eproto();
  ::protobuf_AddDesc_RseObtainAskForHelp_2eproto();
  ::protobuf_AddDesc_RseObtainAttackerList_2eproto();
  ::protobuf_AddDesc_RseObtainBattleReplay_2eproto();
  ::protobuf_AddDesc_RseObtainCustomizer_2eproto();
  ::protobuf_AddDesc_RseObtainHangarsHelp_2eproto();
  ::protobuf_AddDesc_RseObtainMessagesList_2eproto();
  ::protobuf_AddDesc_RseObtainNeighborsList_2eproto();
  ::protobuf_AddDesc_RseObtainNpcList_2eproto();
  ::protobuf_AddDesc_RseObtainPayUrlParame_2eproto();
  ::protobuf_AddDesc_RseObtainRandomTargets_2eproto();
  ::protobuf_AddDesc_RseObtainSocialItems_2eproto();
  ::protobuf_AddDesc_RseObtainSocialUserInfo_2eproto();
  ::protobuf_AddDesc_RseObtainUniverse_2eproto();
  ::protobuf_AddDesc_RseObtainVisitHelps_2eproto();
  ::protobuf_AddDesc_RseQueryCheckAndLockAccountIfPossible_2eproto();
  ::protobuf_AddDesc_RseQueryGalaxyWindow_2eproto();
  ::protobuf_AddDesc_RseQueryPvE_2eproto();
  ::protobuf_AddDesc_RseQueryReceiveWishItem_2eproto();
  ::protobuf_AddDesc_RseQueryRefuseReceiveWishItem_2eproto();
  ::protobuf_AddDesc_RseQuerySendWishItem_2eproto();
  ::protobuf_AddDesc_RseQueryStarInfo_2eproto();
  ::protobuf_AddDesc_RseQueryStarsBookmarks_2eproto();
  ::protobuf_AddDesc_RseQueryVisitHelpsGiftUnitsOnBunker_2eproto();
  ::protobuf_AddDesc_RseUpdateAlliances_2eproto();
  ::protobuf_AddDesc_RseUpdateGameUnits_2eproto();
  ::protobuf_AddDesc_RseUpdateItem_2eproto();
  ::protobuf_AddDesc_RseUpdateMisc_2eproto();
  ::protobuf_AddDesc_RseUpdateMissions_2eproto();
  ::protobuf_AddDesc_RseUpdateProfile_2eproto();
  ::protobuf_AddDesc_RseUpdateShips_2eproto();
  ::protobuf_AddDesc_RseUpdateSocialItem_2eproto();
  ::protobuf_AddDesc_RseUpdateStarsBookmarks_2eproto();
  ::protobuf_AddDesc_RseUpdateTargets_2eproto();
  ::protobuf_AddDesc_event_5fsub_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013event.proto\032\032RceBattleDamagesPack.prot"
    "o\032\033RceCustomizedActivity.proto\032\021RceFinis"
    "hed.proto\032\022RceHeartbeat.proto\032\031RceItemMi"
    "neExploded.proto\032\016RceLogin.proto\032\027RceNpc"
    "AttackStart.proto\032\031RceObtainAskForHelp.p"
    "roto\032\033RceObtainAttackerList.proto\032\033RceOb"
    "tainBattleReplay.proto\032\031RceObtainCustomi"
    "zer.proto\032\032RceObtainHangarsHelp.proto\032\033R"
    "ceObtainMessagesList.proto\032\034RceObtainNei"
    "ghborsList.proto\032\026RceObtainNpcList.proto"
    "\032\033RceObtainPayUrlParame.proto\032\034RceObtain"
    "RandomTargets.proto\032\032RceObtainSocialItem"
    "s.proto\032\035RceObtainSocialUserInfo.proto\032\027"
    "RceObtainUniverse.proto\032\031RceObtainVisitH"
    "elps.proto\032\025RceOnlineReward.proto\032+RceQu"
    "eryCheckAndLockAccountIfPossible.proto\032\032"
    "RceQueryGalaxyWindow.proto\032\021RceQueryPvE."
    "proto\032\035RceQueryReceiveWishItem.proto\032#Rc"
    "eQueryRefuseReceiveWishItem.proto\032\032RceQu"
    "erySendWishItem.proto\032\026RceQueryStarInfo."
    "proto\032\034RceQueryStarsBookmarks.proto\032)Rce"
    "QueryVisitHelpsGiftUnitsOnBunker.proto\032\030"
    "RceUpdateAlliances.proto\032\030RceUpdateGameU"
    "nits.proto\032\023RceUpdateItem.proto\032\023RceUpda"
    "teMisc.proto\032\027RceUpdateMissions.proto\032\026R"
    "ceUpdateProfile.proto\032\024RceUpdateShips.pr"
    "oto\032\031RceUpdateSocialItem.proto\032\035RceUpdat"
    "eStarsBookmarks.proto\032\026RceUpdateTargets."
    "proto\032\030RceUpdateVisitHelp.proto\032\022RseAuth"
    "State.proto\032\032RseBattleDamagesPack.proto\032"
    "\033RseCustomizedActivity.proto\032\016RseError.p"
    "roto\032\021RseFinished.proto\032\022RseHeartbeat.pr"
    "oto\032\031RseItemMineExploded.proto\032\016RseLogin"
    ".proto\032\031RseObtainAskForHelp.proto\032\033RseOb"
    "tainAttackerList.proto\032\033RseObtainBattleR"
    "eplay.proto\032\031RseObtainCustomizer.proto\032\032"
    "RseObtainHangarsHelp.proto\032\033RseObtainMes"
    "sagesList.proto\032\034RseObtainNeighborsList."
    "proto\032\026RseObtainNpcList.proto\032\033RseObtain"
    "PayUrlParame.proto\032\034RseObtainRandomTarge"
    "ts.proto\032\032RseObtainSocialItems.proto\032\035Rs"
    "eObtainSocialUserInfo.proto\032\027RseObtainUn"
    "iverse.proto\032\031RseObtainVisitHelps.proto\032"
    "+RseQueryCheckAndLockAccountIfPossible.p"
    "roto\032\032RseQueryGalaxyWindow.proto\032\021RseQue"
    "ryPvE.proto\032\035RseQueryReceiveWishItem.pro"
    "to\032#RseQueryRefuseReceiveWishItem.proto\032"
    "\032RseQuerySendWishItem.proto\032\026RseQuerySta"
    "rInfo.proto\032\034RseQueryStarsBookmarks.prot"
    "o\032)RseQueryVisitHelpsGiftUnitsOnBunker.p"
    "roto\032\030RseUpdateAlliances.proto\032\030RseUpdat"
    "eGameUnits.proto\032\023RseUpdateItem.proto\032\023R"
    "seUpdateMisc.proto\032\027RseUpdateMissions.pr"
    "oto\032\026RseUpdateProfile.proto\032\024RseUpdateSh"
    "ips.proto\032\031RseUpdateSocialItem.proto\032\035Rs"
    "eUpdateStarsBookmarks.proto\032\026RseUpdateTa"
    "rgets.proto\032\017event_sub.proto\"\346*\n\005Event\022\013"
    "\n\003cmd\030\001 \002(\005\022\r\n\005state\030\002 \002(\005\022\014\n\004time\030\003 \002(\003"
    "\022\013\n\003uid\030\004 \001(\003\022\024\n\014fromworld_fd\030\005 \001(\005\022-\n\021w"
    "orkingStatus_req\030\006 \001(\0132\022.WorkingStatus_R"
    "eq\022%\n\ruserLogin_req\030\007 \001(\0132\016.UserLogin_Re"
    "q\022%\n\ruserLogin_rsp\030\010 \001(\0132\016.UserLogin_Rsp"
    "\022#\n\014userAuth_req\030\t \001(\0132\r.UserAuth_Req\022#\n"
    "\014userAuth_rsp\030\n \001(\0132\r.UserAuth_Rsp\022/\n\022se"
    "ndRemoteUser_req\030\013 \001(\0132\023.SendRemoteUser_"
    "Req\022#\n\014wg_UserLeave\030\014 \001(\0132\r.WG_UserLeave"
    "\022&\n\nfriendinfo\030\r \001(\0132\022.GWG_FriendRequest"
    "\022!\n\013forwardinfo\030\016 \001(\0132\014.ForwardInfo\022\021\n\ts"
    "tarSrvID\030\017 \001(\005\022\025\n\rtransferSrvID\030\022 \001(\005\022#\n"
    "\014webGetRegion\030\023 \001(\0132\r.WebGetRegion\022\021\n\tpl"
    "atSrvID\030\024 \001(\005\022\020\n\010userPlat\030\025 \001(\t\022\022\n\nworld"
    "SrvID\030\026 \001(\005\022\022\n\nfightSrvID\030\027 \001(\005\022%\n\013count"
    "ryNeed\030\030 \001(\0132\020.GCG_CountryNeed\022#\n\nregion"
    "Need\030\031 \001(\0132\017.GRG_RegionNeed\022\037\n\010rankNeed\030"
    "\032 \001(\0132\r.GRG_RankNeed\022\037\n\010statNeed\030\033 \001(\0132\r"
    ".GSG_StatNeed\022 \n\nnewStarReq\030\034 \001(\0132\014.NewS"
    "tar_Req\022 \n\nnewStarRsp\030\035 \001(\0132\014.NewStar_Rs"
    "p\022#\n\nbattleInfo\030\036 \001(\0132\017.GWG_BattleInfo\022\037"
    "\n\nhttpaskmsg\030r \001(\0132\013.HttpAskMsg\022%\n\rhttpa"
    "nswermsg\030s \001(\0132\016.HttpAnswerMsg\0227\n\027ce_Rce"
    "BattleDamagesPack\030\310\001 \001(\0132\025.RceBattleDama"
    "gesPack\0229\n\030ce_RceCustomizedActivity\030\311\001 \001"
    "(\0132\026.RceCustomizedActivity\022%\n\016ce_RceFini"
    "shed\030\312\001 \001(\0132\014.RceFinished\022\'\n\017ce_RceHeart"
    "beat\030\313\001 \001(\0132\r.RceHeartbeat\0225\n\026ce_RceItem"
    "MineExploded\030\314\001 \001(\0132\024.RceItemMineExplode"
    "d\022\037\n\013ce_RceLogin\030\315\001 \001(\0132\t.RceLogin\0221\n\024ce"
    "_RceNpcAttackStart\030\316\001 \001(\0132\022.RceNpcAttack"
    "Start\0225\n\026ce_RceObtainAskForHelp\030\317\001 \001(\0132\024"
    ".RceObtainAskForHelp\0229\n\030ce_RceObtainAtta"
    "ckerList\030\320\001 \001(\0132\026.RceObtainAttackerList\022"
    "9\n\030ce_RceObtainBattleReplay\030\321\001 \001(\0132\026.Rce"
    "ObtainBattleReplay\0225\n\026ce_RceObtainCustom"
    "izer\030\322\001 \001(\0132\024.RceObtainCustomizer\0227\n\027ce_"
    "RceObtainHangarsHelp\030\323\001 \001(\0132\025.RceObtainH"
    "angarsHelp\0229\n\030ce_RceObtainMessagesList\030\324"
    "\001 \001(\0132\026.RceObtainMessagesList\022;\n\031ce_RceO"
    "btainNeighborsList\030\325\001 \001(\0132\027.RceObtainNei"
    "ghborsList\022/\n\023ce_RceObtainNpcList\030\326\001 \001(\013"
    "2\021.RceObtainNpcList\0229\n\030ce_RceObtainPayUr"
    "lParame\030\327\001 \001(\0132\026.RceObtainPayUrlParame\022;"
    "\n\031ce_RceObtainRandomTargets\030\330\001 \001(\0132\027.Rce"
    "ObtainRandomTargets\0227\n\027ce_RceObtainSocia"
    "lItems\030\331\001 \001(\0132\025.RceObtainSocialItems\022=\n\032"
    "ce_RceObtainSocialUserInfo\030\332\001 \001(\0132\030.RceO"
    "btainSocialUserInfo\0221\n\024ce_RceObtainUnive"
    "rse\030\333\001 \001(\0132\022.RceObtainUniverse\0225\n\026ce_Rce"
    "ObtainVisitHelps\030\334\001 \001(\0132\024.RceObtainVisit"
    "Helps\022-\n\022ce_RceOnlineReward\030\335\001 \001(\0132\020.Rce"
    "OnlineReward\022Y\n(ce_RceQueryCheckAndLockA"
    "ccountIfPossible\030\336\001 \001(\0132&.RceQueryCheckA"
    "ndLockAccountIfPossible\0227\n\027ce_RceQueryGa"
    "laxyWindow\030\337\001 \001(\0132\025.RceQueryGalaxyWindow"
    "\022=\n\032ce_RceQueryReceiveWishItem\030\340\001 \001(\0132\030."
    "RceQueryReceiveWishItem\022I\n ce_RceQueryRe"
    "fuseReceiveWishItem\030\341\001 \001(\0132\036.RceQueryRef"
    "useReceiveWishItem\0227\n\027ce_RceQuerySendWis"
    "hItem\030\342\001 \001(\0132\025.RceQuerySendWishItem\022/\n\023c"
    "e_RceQueryStarInfo\030\343\001 \001(\0132\021.RceQueryStar"
    "Info\022;\n\031ce_RceQueryStarsBookmarks\030\344\001 \001(\013"
    "2\027.RceQueryStarsBookmarks\022U\n&ce_RceQuery"
    "VisitHelpsGiftUnitsOnBunker\030\345\001 \001(\0132$.Rce"
    "QueryVisitHelpsGiftUnitsOnBunker\0223\n\025ce_R"
    "ceUpdateAlliances\030\346\001 \001(\0132\023.RceUpdateAlli"
    "ances\0223\n\025ce_RceUpdateGameUnits\030\347\001 \001(\0132\023."
    "RceUpdateGameUnits\022)\n\020ce_RceUpdateItem\030\350"
    "\001 \001(\0132\016.RceUpdateItem\022)\n\020ce_RceUpdateMis"
    "c\030\351\001 \001(\0132\016.RceUpdateMisc\0221\n\024ce_RceUpdate"
    "Missions\030\352\001 \001(\0132\022.RceUpdateMissions\022/\n\023c"
    "e_RceUpdateProfile\030\353\001 \001(\0132\021.RceUpdatePro"
    "file\022+\n\021ce_RceUpdateShips\030\354\001 \001(\0132\017.RceUp"
    "dateShips\0225\n\026ce_RceUpdateSocialItem\030\355\001 \001"
    "(\0132\024.RceUpdateSocialItem\022=\n\032ce_RceUpdate"
    "StarsBookmarks\030\356\001 \001(\0132\030.RceUpdateStarsBo"
    "okmarks\022/\n\023ce_RceUpdateTargets\030\357\001 \001(\0132\021."
    "RceUpdateTargets\0223\n\025ce_RceUpdateVisitHel"
    "p\030\360\001 \001(\0132\023.RceUpdateVisitHelp\022%\n\016ce_RceQ"
    "ueryPvE\030\361\001 \001(\0132\014.RceQueryPvE\022\'\n\017se_RseAu"
    "thState\030\364\003 \001(\0132\r.RseAuthState\0229\n\030se_RseC"
    "ustomizedActivity\030\365\003 \001(\0132\026.RseCustomized"
    "Activity\022\037\n\013se_RseError\030\367\003 \001(\0132\t.RseErro"
    "r\022\'\n\017se_RseHeartbeat\030\370\003 \001(\0132\r.RseHeartbe"
    "at\022\037\n\013se_RseLogin\030\372\003 \001(\0132\t.RseLogin\0225\n\026s"
    "e_RseObtainAskForHelp\030\373\003 \001(\0132\024.RseObtain"
    "AskForHelp\0229\n\030se_RseObtainAttackerList\030\374"
    "\003 \001(\0132\026.RseObtainAttackerList\0229\n\030se_RseO"
    "btainBattleReplay\030\375\003 \001(\0132\026.RseObtainBatt"
    "leReplay\0225\n\026se_RseObtainCustomizer\030\376\003 \001("
    "\0132\024.RseObtainCustomizer\0227\n\027se_RseObtainH"
    "angarsHelp\030\377\003 \001(\0132\025.RseObtainHangarsHelp"
    "\0229\n\030se_RseObtainMessagesList\030\200\004 \001(\0132\026.Rs"
    "eObtainMessagesList\022;\n\031se_RseObtainNeigh"
    "borsList\030\201\004 \001(\0132\027.RseObtainNeighborsList"
    "\022/\n\023se_RseObtainNpcList\030\202\004 \001(\0132\021.RseObta"
    "inNpcList\0229\n\030se_RseObtainPayUrlParame\030\203\004"
    " \001(\0132\026.RseObtainPayUrlParame\022;\n\031se_RseOb"
    "tainRandomTargets\030\204\004 \001(\0132\027.RseObtainRand"
    "omTargets\0227\n\027se_RseObtainSocialItems\030\205\004 "
    "\001(\0132\025.RseObtainSocialItems\022=\n\032se_RseObta"
    "inSocialUserInfo\030\206\004 \001(\0132\030.RseObtainSocia"
    "lUserInfo\0221\n\024se_RseObtainUniverse\030\207\004 \001(\013"
    "2\022.RseObtainUniverse\0225\n\026se_RseObtainVisi"
    "tHelps\030\210\004 \001(\0132\024.RseObtainVisitHelps\022Y\n(s"
    "e_RseQueryCheckAndLockAccountIfPossible\030"
    "\211\004 \001(\0132&.RseQueryCheckAndLockAccountIfPo"
    "ssible\0227\n\027se_RseQueryGalaxyWindow\030\212\004 \001(\013"
    "2\025.RseQueryGalaxyWindow\022=\n\032se_RseQueryRe"
    "ceiveWishItem\030\213\004 \001(\0132\030.RseQueryReceiveWi"
    "shItem\022I\n se_RseQueryRefuseReceiveWishIt"
    "em\030\214\004 \001(\0132\036.RseQueryRefuseReceiveWishIte"
    "m\0227\n\027se_RseQuerySendWishItem\030\215\004 \001(\0132\025.Rs"
    "eQuerySendWishItem\022/\n\023se_RseQueryStarInf"
    "o\030\216\004 \001(\0132\021.RseQueryStarInfo\022;\n\031se_RseQue"
    "ryStarsBookmarks\030\217\004 \001(\0132\027.RseQueryStarsB"
    "ookmarks\022U\n&se_RseQueryVisitHelpsGiftUni"
    "tsOnBunker\030\220\004 \001(\0132$.RseQueryVisitHelpsGi"
    "ftUnitsOnBunker\0223\n\025se_RseUpdateAlliances"
    "\030\222\004 \001(\0132\023.RseUpdateAlliances\0223\n\025se_RseUp"
    "dateGameUnits\030\223\004 \001(\0132\023.RseUpdateGameUnit"
    "s\022)\n\020se_RseUpdateItem\030\224\004 \001(\0132\016.RseUpdate"
    "Item\022)\n\020se_RseUpdateMisc\030\225\004 \001(\0132\016.RseUpd"
    "ateMisc\0221\n\024se_RseUpdateMissions\030\226\004 \001(\0132\022"
    ".RseUpdateMissions\022/\n\023se_RseUpdateProfil"
    "e\030\227\004 \001(\0132\021.RseUpdateProfile\022+\n\021se_RseUpd"
    "ateShips\030\230\004 \001(\0132\017.RseUpdateShips\0225\n\026se_R"
    "seUpdateSocialItem\030\231\004 \001(\0132\024.RseUpdateSoc"
    "ialItem\022=\n\032se_RseUpdateStarsBookmarks\030\232\004"
    " \001(\0132\030.RseUpdateStarsBookmarks\022/\n\023se_Rse"
    "UpdateTargets\030\233\004 \001(\0132\021.RseUpdateTargets\022"
    "7\n\027se_RseBattleDamagesPack\030\234\004 \001(\0132\025.RseB"
    "attleDamagesPack\0225\n\026se_RseItemMineExplod"
    "ed\030\235\004 \001(\0132\024.RseItemMineExploded\022%\n\016se_Rs"
    "eFinished\030\236\004 \001(\0132\014.RseFinished\022%\n\016se_Rse"
    "QueryPvE\030\237\004 \001(\0132\014.RseQueryPvE", 7749);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "event.proto", &protobuf_RegisterTypes);
  Event::default_instance_ = new Event();
  Event::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_event_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_event_2eproto {
  StaticDescriptorInitializer_event_2eproto() {
    protobuf_AddDesc_event_2eproto();
  }
} static_descriptor_initializer_event_2eproto_;


// ===================================================================

const ::std::string Event::_default_userplat_;
#ifndef _MSC_VER
const int Event::kCmdFieldNumber;
const int Event::kStateFieldNumber;
const int Event::kTimeFieldNumber;
const int Event::kUidFieldNumber;
const int Event::kFromworldFdFieldNumber;
const int Event::kWorkingStatusReqFieldNumber;
const int Event::kUserLoginReqFieldNumber;
const int Event::kUserLoginRspFieldNumber;
const int Event::kUserAuthReqFieldNumber;
const int Event::kUserAuthRspFieldNumber;
const int Event::kSendRemoteUserReqFieldNumber;
const int Event::kWgUserLeaveFieldNumber;
const int Event::kFriendinfoFieldNumber;
const int Event::kForwardinfoFieldNumber;
const int Event::kStarSrvIDFieldNumber;
const int Event::kTransferSrvIDFieldNumber;
const int Event::kWebGetRegionFieldNumber;
const int Event::kPlatSrvIDFieldNumber;
const int Event::kUserPlatFieldNumber;
const int Event::kWorldSrvIDFieldNumber;
const int Event::kFightSrvIDFieldNumber;
const int Event::kCountryNeedFieldNumber;
const int Event::kRegionNeedFieldNumber;
const int Event::kRankNeedFieldNumber;
const int Event::kStatNeedFieldNumber;
const int Event::kNewStarReqFieldNumber;
const int Event::kNewStarRspFieldNumber;
const int Event::kBattleInfoFieldNumber;
const int Event::kHttpaskmsgFieldNumber;
const int Event::kHttpanswermsgFieldNumber;
const int Event::kCeRceBattleDamagesPackFieldNumber;
const int Event::kCeRceCustomizedActivityFieldNumber;
const int Event::kCeRceFinishedFieldNumber;
const int Event::kCeRceHeartbeatFieldNumber;
const int Event::kCeRceItemMineExplodedFieldNumber;
const int Event::kCeRceLoginFieldNumber;
const int Event::kCeRceNpcAttackStartFieldNumber;
const int Event::kCeRceObtainAskForHelpFieldNumber;
const int Event::kCeRceObtainAttackerListFieldNumber;
const int Event::kCeRceObtainBattleReplayFieldNumber;
const int Event::kCeRceObtainCustomizerFieldNumber;
const int Event::kCeRceObtainHangarsHelpFieldNumber;
const int Event::kCeRceObtainMessagesListFieldNumber;
const int Event::kCeRceObtainNeighborsListFieldNumber;
const int Event::kCeRceObtainNpcListFieldNumber;
const int Event::kCeRceObtainPayUrlParameFieldNumber;
const int Event::kCeRceObtainRandomTargetsFieldNumber;
const int Event::kCeRceObtainSocialItemsFieldNumber;
const int Event::kCeRceObtainSocialUserInfoFieldNumber;
const int Event::kCeRceObtainUniverseFieldNumber;
const int Event::kCeRceObtainVisitHelpsFieldNumber;
const int Event::kCeRceOnlineRewardFieldNumber;
const int Event::kCeRceQueryCheckAndLockAccountIfPossibleFieldNumber;
const int Event::kCeRceQueryGalaxyWindowFieldNumber;
const int Event::kCeRceQueryReceiveWishItemFieldNumber;
const int Event::kCeRceQueryRefuseReceiveWishItemFieldNumber;
const int Event::kCeRceQuerySendWishItemFieldNumber;
const int Event::kCeRceQueryStarInfoFieldNumber;
const int Event::kCeRceQueryStarsBookmarksFieldNumber;
const int Event::kCeRceQueryVisitHelpsGiftUnitsOnBunkerFieldNumber;
const int Event::kCeRceUpdateAlliancesFieldNumber;
const int Event::kCeRceUpdateGameUnitsFieldNumber;
const int Event::kCeRceUpdateItemFieldNumber;
const int Event::kCeRceUpdateMiscFieldNumber;
const int Event::kCeRceUpdateMissionsFieldNumber;
const int Event::kCeRceUpdateProfileFieldNumber;
const int Event::kCeRceUpdateShipsFieldNumber;
const int Event::kCeRceUpdateSocialItemFieldNumber;
const int Event::kCeRceUpdateStarsBookmarksFieldNumber;
const int Event::kCeRceUpdateTargetsFieldNumber;
const int Event::kCeRceUpdateVisitHelpFieldNumber;
const int Event::kCeRceQueryPvEFieldNumber;
const int Event::kSeRseAuthStateFieldNumber;
const int Event::kSeRseCustomizedActivityFieldNumber;
const int Event::kSeRseErrorFieldNumber;
const int Event::kSeRseHeartbeatFieldNumber;
const int Event::kSeRseLoginFieldNumber;
const int Event::kSeRseObtainAskForHelpFieldNumber;
const int Event::kSeRseObtainAttackerListFieldNumber;
const int Event::kSeRseObtainBattleReplayFieldNumber;
const int Event::kSeRseObtainCustomizerFieldNumber;
const int Event::kSeRseObtainHangarsHelpFieldNumber;
const int Event::kSeRseObtainMessagesListFieldNumber;
const int Event::kSeRseObtainNeighborsListFieldNumber;
const int Event::kSeRseObtainNpcListFieldNumber;
const int Event::kSeRseObtainPayUrlParameFieldNumber;
const int Event::kSeRseObtainRandomTargetsFieldNumber;
const int Event::kSeRseObtainSocialItemsFieldNumber;
const int Event::kSeRseObtainSocialUserInfoFieldNumber;
const int Event::kSeRseObtainUniverseFieldNumber;
const int Event::kSeRseObtainVisitHelpsFieldNumber;
const int Event::kSeRseQueryCheckAndLockAccountIfPossibleFieldNumber;
const int Event::kSeRseQueryGalaxyWindowFieldNumber;
const int Event::kSeRseQueryReceiveWishItemFieldNumber;
const int Event::kSeRseQueryRefuseReceiveWishItemFieldNumber;
const int Event::kSeRseQuerySendWishItemFieldNumber;
const int Event::kSeRseQueryStarInfoFieldNumber;
const int Event::kSeRseQueryStarsBookmarksFieldNumber;
const int Event::kSeRseQueryVisitHelpsGiftUnitsOnBunkerFieldNumber;
const int Event::kSeRseUpdateAlliancesFieldNumber;
const int Event::kSeRseUpdateGameUnitsFieldNumber;
const int Event::kSeRseUpdateItemFieldNumber;
const int Event::kSeRseUpdateMiscFieldNumber;
const int Event::kSeRseUpdateMissionsFieldNumber;
const int Event::kSeRseUpdateProfileFieldNumber;
const int Event::kSeRseUpdateShipsFieldNumber;
const int Event::kSeRseUpdateSocialItemFieldNumber;
const int Event::kSeRseUpdateStarsBookmarksFieldNumber;
const int Event::kSeRseUpdateTargetsFieldNumber;
const int Event::kSeRseBattleDamagesPackFieldNumber;
const int Event::kSeRseItemMineExplodedFieldNumber;
const int Event::kSeRseFinishedFieldNumber;
const int Event::kSeRseQueryPvEFieldNumber;
#endif  // !_MSC_VER

Event::Event() {
  SharedCtor();
}

void Event::InitAsDefaultInstance() {
  workingstatus_req_ = const_cast< ::WorkingStatus_Req*>(&::WorkingStatus_Req::default_instance());
  userlogin_req_ = const_cast< ::UserLogin_Req*>(&::UserLogin_Req::default_instance());
  userlogin_rsp_ = const_cast< ::UserLogin_Rsp*>(&::UserLogin_Rsp::default_instance());
  userauth_req_ = const_cast< ::UserAuth_Req*>(&::UserAuth_Req::default_instance());
  userauth_rsp_ = const_cast< ::UserAuth_Rsp*>(&::UserAuth_Rsp::default_instance());
  sendremoteuser_req_ = const_cast< ::SendRemoteUser_Req*>(&::SendRemoteUser_Req::default_instance());
  wg_userleave_ = const_cast< ::WG_UserLeave*>(&::WG_UserLeave::default_instance());
  friendinfo_ = const_cast< ::GWG_FriendRequest*>(&::GWG_FriendRequest::default_instance());
  forwardinfo_ = const_cast< ::ForwardInfo*>(&::ForwardInfo::default_instance());
  webgetregion_ = const_cast< ::WebGetRegion*>(&::WebGetRegion::default_instance());
  countryneed_ = const_cast< ::GCG_CountryNeed*>(&::GCG_CountryNeed::default_instance());
  regionneed_ = const_cast< ::GRG_RegionNeed*>(&::GRG_RegionNeed::default_instance());
  rankneed_ = const_cast< ::GRG_RankNeed*>(&::GRG_RankNeed::default_instance());
  statneed_ = const_cast< ::GSG_StatNeed*>(&::GSG_StatNeed::default_instance());
  newstarreq_ = const_cast< ::NewStar_Req*>(&::NewStar_Req::default_instance());
  newstarrsp_ = const_cast< ::NewStar_Rsp*>(&::NewStar_Rsp::default_instance());
  battleinfo_ = const_cast< ::GWG_BattleInfo*>(&::GWG_BattleInfo::default_instance());
  httpaskmsg_ = const_cast< ::HttpAskMsg*>(&::HttpAskMsg::default_instance());
  httpanswermsg_ = const_cast< ::HttpAnswerMsg*>(&::HttpAnswerMsg::default_instance());
  ce_rcebattledamagespack_ = const_cast< ::RceBattleDamagesPack*>(&::RceBattleDamagesPack::default_instance());
  ce_rcecustomizedactivity_ = const_cast< ::RceCustomizedActivity*>(&::RceCustomizedActivity::default_instance());
  ce_rcefinished_ = const_cast< ::RceFinished*>(&::RceFinished::default_instance());
  ce_rceheartbeat_ = const_cast< ::RceHeartbeat*>(&::RceHeartbeat::default_instance());
  ce_rceitemmineexploded_ = const_cast< ::RceItemMineExploded*>(&::RceItemMineExploded::default_instance());
  ce_rcelogin_ = const_cast< ::RceLogin*>(&::RceLogin::default_instance());
  ce_rcenpcattackstart_ = const_cast< ::RceNpcAttackStart*>(&::RceNpcAttackStart::default_instance());
  ce_rceobtainaskforhelp_ = const_cast< ::RceObtainAskForHelp*>(&::RceObtainAskForHelp::default_instance());
  ce_rceobtainattackerlist_ = const_cast< ::RceObtainAttackerList*>(&::RceObtainAttackerList::default_instance());
  ce_rceobtainbattlereplay_ = const_cast< ::RceObtainBattleReplay*>(&::RceObtainBattleReplay::default_instance());
  ce_rceobtaincustomizer_ = const_cast< ::RceObtainCustomizer*>(&::RceObtainCustomizer::default_instance());
  ce_rceobtainhangarshelp_ = const_cast< ::RceObtainHangarsHelp*>(&::RceObtainHangarsHelp::default_instance());
  ce_rceobtainmessageslist_ = const_cast< ::RceObtainMessagesList*>(&::RceObtainMessagesList::default_instance());
  ce_rceobtainneighborslist_ = const_cast< ::RceObtainNeighborsList*>(&::RceObtainNeighborsList::default_instance());
  ce_rceobtainnpclist_ = const_cast< ::RceObtainNpcList*>(&::RceObtainNpcList::default_instance());
  ce_rceobtainpayurlparame_ = const_cast< ::RceObtainPayUrlParame*>(&::RceObtainPayUrlParame::default_instance());
  ce_rceobtainrandomtargets_ = const_cast< ::RceObtainRandomTargets*>(&::RceObtainRandomTargets::default_instance());
  ce_rceobtainsocialitems_ = const_cast< ::RceObtainSocialItems*>(&::RceObtainSocialItems::default_instance());
  ce_rceobtainsocialuserinfo_ = const_cast< ::RceObtainSocialUserInfo*>(&::RceObtainSocialUserInfo::default_instance());
  ce_rceobtainuniverse_ = const_cast< ::RceObtainUniverse*>(&::RceObtainUniverse::default_instance());
  ce_rceobtainvisithelps_ = const_cast< ::RceObtainVisitHelps*>(&::RceObtainVisitHelps::default_instance());
  ce_rceonlinereward_ = const_cast< ::RceOnlineReward*>(&::RceOnlineReward::default_instance());
  ce_rcequerycheckandlockaccountifpossible_ = const_cast< ::RceQueryCheckAndLockAccountIfPossible*>(&::RceQueryCheckAndLockAccountIfPossible::default_instance());
  ce_rcequerygalaxywindow_ = const_cast< ::RceQueryGalaxyWindow*>(&::RceQueryGalaxyWindow::default_instance());
  ce_rcequeryreceivewishitem_ = const_cast< ::RceQueryReceiveWishItem*>(&::RceQueryReceiveWishItem::default_instance());
  ce_rcequeryrefusereceivewishitem_ = const_cast< ::RceQueryRefuseReceiveWishItem*>(&::RceQueryRefuseReceiveWishItem::default_instance());
  ce_rcequerysendwishitem_ = const_cast< ::RceQuerySendWishItem*>(&::RceQuerySendWishItem::default_instance());
  ce_rcequerystarinfo_ = const_cast< ::RceQueryStarInfo*>(&::RceQueryStarInfo::default_instance());
  ce_rcequerystarsbookmarks_ = const_cast< ::RceQueryStarsBookmarks*>(&::RceQueryStarsBookmarks::default_instance());
  ce_rcequeryvisithelpsgiftunitsonbunker_ = const_cast< ::RceQueryVisitHelpsGiftUnitsOnBunker*>(&::RceQueryVisitHelpsGiftUnitsOnBunker::default_instance());
  ce_rceupdatealliances_ = const_cast< ::RceUpdateAlliances*>(&::RceUpdateAlliances::default_instance());
  ce_rceupdategameunits_ = const_cast< ::RceUpdateGameUnits*>(&::RceUpdateGameUnits::default_instance());
  ce_rceupdateitem_ = const_cast< ::RceUpdateItem*>(&::RceUpdateItem::default_instance());
  ce_rceupdatemisc_ = const_cast< ::RceUpdateMisc*>(&::RceUpdateMisc::default_instance());
  ce_rceupdatemissions_ = const_cast< ::RceUpdateMissions*>(&::RceUpdateMissions::default_instance());
  ce_rceupdateprofile_ = const_cast< ::RceUpdateProfile*>(&::RceUpdateProfile::default_instance());
  ce_rceupdateships_ = const_cast< ::RceUpdateShips*>(&::RceUpdateShips::default_instance());
  ce_rceupdatesocialitem_ = const_cast< ::RceUpdateSocialItem*>(&::RceUpdateSocialItem::default_instance());
  ce_rceupdatestarsbookmarks_ = const_cast< ::RceUpdateStarsBookmarks*>(&::RceUpdateStarsBookmarks::default_instance());
  ce_rceupdatetargets_ = const_cast< ::RceUpdateTargets*>(&::RceUpdateTargets::default_instance());
  ce_rceupdatevisithelp_ = const_cast< ::RceUpdateVisitHelp*>(&::RceUpdateVisitHelp::default_instance());
  ce_rcequerypve_ = const_cast< ::RceQueryPvE*>(&::RceQueryPvE::default_instance());
  se_rseauthstate_ = const_cast< ::RseAuthState*>(&::RseAuthState::default_instance());
  se_rsecustomizedactivity_ = const_cast< ::RseCustomizedActivity*>(&::RseCustomizedActivity::default_instance());
  se_rseerror_ = const_cast< ::RseError*>(&::RseError::default_instance());
  se_rseheartbeat_ = const_cast< ::RseHeartbeat*>(&::RseHeartbeat::default_instance());
  se_rselogin_ = const_cast< ::RseLogin*>(&::RseLogin::default_instance());
  se_rseobtainaskforhelp_ = const_cast< ::RseObtainAskForHelp*>(&::RseObtainAskForHelp::default_instance());
  se_rseobtainattackerlist_ = const_cast< ::RseObtainAttackerList*>(&::RseObtainAttackerList::default_instance());
  se_rseobtainbattlereplay_ = const_cast< ::RseObtainBattleReplay*>(&::RseObtainBattleReplay::default_instance());
  se_rseobtaincustomizer_ = const_cast< ::RseObtainCustomizer*>(&::RseObtainCustomizer::default_instance());
  se_rseobtainhangarshelp_ = const_cast< ::RseObtainHangarsHelp*>(&::RseObtainHangarsHelp::default_instance());
  se_rseobtainmessageslist_ = const_cast< ::RseObtainMessagesList*>(&::RseObtainMessagesList::default_instance());
  se_rseobtainneighborslist_ = const_cast< ::RseObtainNeighborsList*>(&::RseObtainNeighborsList::default_instance());
  se_rseobtainnpclist_ = const_cast< ::RseObtainNpcList*>(&::RseObtainNpcList::default_instance());
  se_rseobtainpayurlparame_ = const_cast< ::RseObtainPayUrlParame*>(&::RseObtainPayUrlParame::default_instance());
  se_rseobtainrandomtargets_ = const_cast< ::RseObtainRandomTargets*>(&::RseObtainRandomTargets::default_instance());
  se_rseobtainsocialitems_ = const_cast< ::RseObtainSocialItems*>(&::RseObtainSocialItems::default_instance());
  se_rseobtainsocialuserinfo_ = const_cast< ::RseObtainSocialUserInfo*>(&::RseObtainSocialUserInfo::default_instance());
  se_rseobtainuniverse_ = const_cast< ::RseObtainUniverse*>(&::RseObtainUniverse::default_instance());
  se_rseobtainvisithelps_ = const_cast< ::RseObtainVisitHelps*>(&::RseObtainVisitHelps::default_instance());
  se_rsequerycheckandlockaccountifpossible_ = const_cast< ::RseQueryCheckAndLockAccountIfPossible*>(&::RseQueryCheckAndLockAccountIfPossible::default_instance());
  se_rsequerygalaxywindow_ = const_cast< ::RseQueryGalaxyWindow*>(&::RseQueryGalaxyWindow::default_instance());
  se_rsequeryreceivewishitem_ = const_cast< ::RseQueryReceiveWishItem*>(&::RseQueryReceiveWishItem::default_instance());
  se_rsequeryrefusereceivewishitem_ = const_cast< ::RseQueryRefuseReceiveWishItem*>(&::RseQueryRefuseReceiveWishItem::default_instance());
  se_rsequerysendwishitem_ = const_cast< ::RseQuerySendWishItem*>(&::RseQuerySendWishItem::default_instance());
  se_rsequerystarinfo_ = const_cast< ::RseQueryStarInfo*>(&::RseQueryStarInfo::default_instance());
  se_rsequerystarsbookmarks_ = const_cast< ::RseQueryStarsBookmarks*>(&::RseQueryStarsBookmarks::default_instance());
  se_rsequeryvisithelpsgiftunitsonbunker_ = const_cast< ::RseQueryVisitHelpsGiftUnitsOnBunker*>(&::RseQueryVisitHelpsGiftUnitsOnBunker::default_instance());
  se_rseupdatealliances_ = const_cast< ::RseUpdateAlliances*>(&::RseUpdateAlliances::default_instance());
  se_rseupdategameunits_ = const_cast< ::RseUpdateGameUnits*>(&::RseUpdateGameUnits::default_instance());
  se_rseupdateitem_ = const_cast< ::RseUpdateItem*>(&::RseUpdateItem::default_instance());
  se_rseupdatemisc_ = const_cast< ::RseUpdateMisc*>(&::RseUpdateMisc::default_instance());
  se_rseupdatemissions_ = const_cast< ::RseUpdateMissions*>(&::RseUpdateMissions::default_instance());
  se_rseupdateprofile_ = const_cast< ::RseUpdateProfile*>(&::RseUpdateProfile::default_instance());
  se_rseupdateships_ = const_cast< ::RseUpdateShips*>(&::RseUpdateShips::default_instance());
  se_rseupdatesocialitem_ = const_cast< ::RseUpdateSocialItem*>(&::RseUpdateSocialItem::default_instance());
  se_rseupdatestarsbookmarks_ = const_cast< ::RseUpdateStarsBookmarks*>(&::RseUpdateStarsBookmarks::default_instance());
  se_rseupdatetargets_ = const_cast< ::RseUpdateTargets*>(&::RseUpdateTargets::default_instance());
  se_rsebattledamagespack_ = const_cast< ::RseBattleDamagesPack*>(&::RseBattleDamagesPack::default_instance());
  se_rseitemmineexploded_ = const_cast< ::RseItemMineExploded*>(&::RseItemMineExploded::default_instance());
  se_rsefinished_ = const_cast< ::RseFinished*>(&::RseFinished::default_instance());
  se_rsequerypve_ = const_cast< ::RseQueryPvE*>(&::RseQueryPvE::default_instance());
}

Event::Event(const Event& from) {
  SharedCtor();
  MergeFrom(from);
}

void Event::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 0;
  state_ = 0;
  time_ = GOOGLE_LONGLONG(0);
  uid_ = GOOGLE_LONGLONG(0);
  fromworld_fd_ = 0;
  workingstatus_req_ = NULL;
  userlogin_req_ = NULL;
  userlogin_rsp_ = NULL;
  userauth_req_ = NULL;
  userauth_rsp_ = NULL;
  sendremoteuser_req_ = NULL;
  wg_userleave_ = NULL;
  friendinfo_ = NULL;
  forwardinfo_ = NULL;
  starsrvid_ = 0;
  transfersrvid_ = 0;
  webgetregion_ = NULL;
  platsrvid_ = 0;
  userplat_ = const_cast< ::std::string*>(&_default_userplat_);
  worldsrvid_ = 0;
  fightsrvid_ = 0;
  countryneed_ = NULL;
  regionneed_ = NULL;
  rankneed_ = NULL;
  statneed_ = NULL;
  newstarreq_ = NULL;
  newstarrsp_ = NULL;
  battleinfo_ = NULL;
  httpaskmsg_ = NULL;
  httpanswermsg_ = NULL;
  ce_rcebattledamagespack_ = NULL;
  ce_rcecustomizedactivity_ = NULL;
  ce_rcefinished_ = NULL;
  ce_rceheartbeat_ = NULL;
  ce_rceitemmineexploded_ = NULL;
  ce_rcelogin_ = NULL;
  ce_rcenpcattackstart_ = NULL;
  ce_rceobtainaskforhelp_ = NULL;
  ce_rceobtainattackerlist_ = NULL;
  ce_rceobtainbattlereplay_ = NULL;
  ce_rceobtaincustomizer_ = NULL;
  ce_rceobtainhangarshelp_ = NULL;
  ce_rceobtainmessageslist_ = NULL;
  ce_rceobtainneighborslist_ = NULL;
  ce_rceobtainnpclist_ = NULL;
  ce_rceobtainpayurlparame_ = NULL;
  ce_rceobtainrandomtargets_ = NULL;
  ce_rceobtainsocialitems_ = NULL;
  ce_rceobtainsocialuserinfo_ = NULL;
  ce_rceobtainuniverse_ = NULL;
  ce_rceobtainvisithelps_ = NULL;
  ce_rceonlinereward_ = NULL;
  ce_rcequerycheckandlockaccountifpossible_ = NULL;
  ce_rcequerygalaxywindow_ = NULL;
  ce_rcequeryreceivewishitem_ = NULL;
  ce_rcequeryrefusereceivewishitem_ = NULL;
  ce_rcequerysendwishitem_ = NULL;
  ce_rcequerystarinfo_ = NULL;
  ce_rcequerystarsbookmarks_ = NULL;
  ce_rcequeryvisithelpsgiftunitsonbunker_ = NULL;
  ce_rceupdatealliances_ = NULL;
  ce_rceupdategameunits_ = NULL;
  ce_rceupdateitem_ = NULL;
  ce_rceupdatemisc_ = NULL;
  ce_rceupdatemissions_ = NULL;
  ce_rceupdateprofile_ = NULL;
  ce_rceupdateships_ = NULL;
  ce_rceupdatesocialitem_ = NULL;
  ce_rceupdatestarsbookmarks_ = NULL;
  ce_rceupdatetargets_ = NULL;
  ce_rceupdatevisithelp_ = NULL;
  ce_rcequerypve_ = NULL;
  se_rseauthstate_ = NULL;
  se_rsecustomizedactivity_ = NULL;
  se_rseerror_ = NULL;
  se_rseheartbeat_ = NULL;
  se_rselogin_ = NULL;
  se_rseobtainaskforhelp_ = NULL;
  se_rseobtainattackerlist_ = NULL;
  se_rseobtainbattlereplay_ = NULL;
  se_rseobtaincustomizer_ = NULL;
  se_rseobtainhangarshelp_ = NULL;
  se_rseobtainmessageslist_ = NULL;
  se_rseobtainneighborslist_ = NULL;
  se_rseobtainnpclist_ = NULL;
  se_rseobtainpayurlparame_ = NULL;
  se_rseobtainrandomtargets_ = NULL;
  se_rseobtainsocialitems_ = NULL;
  se_rseobtainsocialuserinfo_ = NULL;
  se_rseobtainuniverse_ = NULL;
  se_rseobtainvisithelps_ = NULL;
  se_rsequerycheckandlockaccountifpossible_ = NULL;
  se_rsequerygalaxywindow_ = NULL;
  se_rsequeryreceivewishitem_ = NULL;
  se_rsequeryrefusereceivewishitem_ = NULL;
  se_rsequerysendwishitem_ = NULL;
  se_rsequerystarinfo_ = NULL;
  se_rsequerystarsbookmarks_ = NULL;
  se_rsequeryvisithelpsgiftunitsonbunker_ = NULL;
  se_rseupdatealliances_ = NULL;
  se_rseupdategameunits_ = NULL;
  se_rseupdateitem_ = NULL;
  se_rseupdatemisc_ = NULL;
  se_rseupdatemissions_ = NULL;
  se_rseupdateprofile_ = NULL;
  se_rseupdateships_ = NULL;
  se_rseupdatesocialitem_ = NULL;
  se_rseupdatestarsbookmarks_ = NULL;
  se_rseupdatetargets_ = NULL;
  se_rsebattledamagespack_ = NULL;
  se_rseitemmineexploded_ = NULL;
  se_rsefinished_ = NULL;
  se_rsequerypve_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Event::~Event() {
  SharedDtor();
}

void Event::SharedDtor() {
  if (userplat_ != &_default_userplat_) {
    delete userplat_;
  }
  if (this != default_instance_) {
    delete workingstatus_req_;
    delete userlogin_req_;
    delete userlogin_rsp_;
    delete userauth_req_;
    delete userauth_rsp_;
    delete sendremoteuser_req_;
    delete wg_userleave_;
    delete friendinfo_;
    delete forwardinfo_;
    delete webgetregion_;
    delete countryneed_;
    delete regionneed_;
    delete rankneed_;
    delete statneed_;
    delete newstarreq_;
    delete newstarrsp_;
    delete battleinfo_;
    delete httpaskmsg_;
    delete httpanswermsg_;
    delete ce_rcebattledamagespack_;
    delete ce_rcecustomizedactivity_;
    delete ce_rcefinished_;
    delete ce_rceheartbeat_;
    delete ce_rceitemmineexploded_;
    delete ce_rcelogin_;
    delete ce_rcenpcattackstart_;
    delete ce_rceobtainaskforhelp_;
    delete ce_rceobtainattackerlist_;
    delete ce_rceobtainbattlereplay_;
    delete ce_rceobtaincustomizer_;
    delete ce_rceobtainhangarshelp_;
    delete ce_rceobtainmessageslist_;
    delete ce_rceobtainneighborslist_;
    delete ce_rceobtainnpclist_;
    delete ce_rceobtainpayurlparame_;
    delete ce_rceobtainrandomtargets_;
    delete ce_rceobtainsocialitems_;
    delete ce_rceobtainsocialuserinfo_;
    delete ce_rceobtainuniverse_;
    delete ce_rceobtainvisithelps_;
    delete ce_rceonlinereward_;
    delete ce_rcequerycheckandlockaccountifpossible_;
    delete ce_rcequerygalaxywindow_;
    delete ce_rcequeryreceivewishitem_;
    delete ce_rcequeryrefusereceivewishitem_;
    delete ce_rcequerysendwishitem_;
    delete ce_rcequerystarinfo_;
    delete ce_rcequerystarsbookmarks_;
    delete ce_rcequeryvisithelpsgiftunitsonbunker_;
    delete ce_rceupdatealliances_;
    delete ce_rceupdategameunits_;
    delete ce_rceupdateitem_;
    delete ce_rceupdatemisc_;
    delete ce_rceupdatemissions_;
    delete ce_rceupdateprofile_;
    delete ce_rceupdateships_;
    delete ce_rceupdatesocialitem_;
    delete ce_rceupdatestarsbookmarks_;
    delete ce_rceupdatetargets_;
    delete ce_rceupdatevisithelp_;
    delete ce_rcequerypve_;
    delete se_rseauthstate_;
    delete se_rsecustomizedactivity_;
    delete se_rseerror_;
    delete se_rseheartbeat_;
    delete se_rselogin_;
    delete se_rseobtainaskforhelp_;
    delete se_rseobtainattackerlist_;
    delete se_rseobtainbattlereplay_;
    delete se_rseobtaincustomizer_;
    delete se_rseobtainhangarshelp_;
    delete se_rseobtainmessageslist_;
    delete se_rseobtainneighborslist_;
    delete se_rseobtainnpclist_;
    delete se_rseobtainpayurlparame_;
    delete se_rseobtainrandomtargets_;
    delete se_rseobtainsocialitems_;
    delete se_rseobtainsocialuserinfo_;
    delete se_rseobtainuniverse_;
    delete se_rseobtainvisithelps_;
    delete se_rsequerycheckandlockaccountifpossible_;
    delete se_rsequerygalaxywindow_;
    delete se_rsequeryreceivewishitem_;
    delete se_rsequeryrefusereceivewishitem_;
    delete se_rsequerysendwishitem_;
    delete se_rsequerystarinfo_;
    delete se_rsequerystarsbookmarks_;
    delete se_rsequeryvisithelpsgiftunitsonbunker_;
    delete se_rseupdatealliances_;
    delete se_rseupdategameunits_;
    delete se_rseupdateitem_;
    delete se_rseupdatemisc_;
    delete se_rseupdatemissions_;
    delete se_rseupdateprofile_;
    delete se_rseupdateships_;
    delete se_rseupdatesocialitem_;
    delete se_rseupdatestarsbookmarks_;
    delete se_rseupdatetargets_;
    delete se_rsebattledamagespack_;
    delete se_rseitemmineexploded_;
    delete se_rsefinished_;
    delete se_rsequerypve_;
  }
}

const ::google::protobuf::Descriptor* Event::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Event_descriptor_;
}

const Event& Event::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_event_2eproto();  return *default_instance_;
}

Event* Event::default_instance_ = NULL;

Event* Event::New() const {
  return new Event;
}

void Event::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cmd_ = 0;
    state_ = 0;
    time_ = GOOGLE_LONGLONG(0);
    uid_ = GOOGLE_LONGLONG(0);
    fromworld_fd_ = 0;
    if (_has_bit(5)) {
      if (workingstatus_req_ != NULL) workingstatus_req_->::WorkingStatus_Req::Clear();
    }
    if (_has_bit(6)) {
      if (userlogin_req_ != NULL) userlogin_req_->::UserLogin_Req::Clear();
    }
    if (_has_bit(7)) {
      if (userlogin_rsp_ != NULL) userlogin_rsp_->::UserLogin_Rsp::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (_has_bit(8)) {
      if (userauth_req_ != NULL) userauth_req_->::UserAuth_Req::Clear();
    }
    if (_has_bit(9)) {
      if (userauth_rsp_ != NULL) userauth_rsp_->::UserAuth_Rsp::Clear();
    }
    if (_has_bit(10)) {
      if (sendremoteuser_req_ != NULL) sendremoteuser_req_->::SendRemoteUser_Req::Clear();
    }
    if (_has_bit(11)) {
      if (wg_userleave_ != NULL) wg_userleave_->::WG_UserLeave::Clear();
    }
    if (_has_bit(12)) {
      if (friendinfo_ != NULL) friendinfo_->::GWG_FriendRequest::Clear();
    }
    if (_has_bit(13)) {
      if (forwardinfo_ != NULL) forwardinfo_->::ForwardInfo::Clear();
    }
    starsrvid_ = 0;
    transfersrvid_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (_has_bit(16)) {
      if (webgetregion_ != NULL) webgetregion_->::WebGetRegion::Clear();
    }
    platsrvid_ = 0;
    if (_has_bit(18)) {
      if (userplat_ != &_default_userplat_) {
        userplat_->clear();
      }
    }
    worldsrvid_ = 0;
    fightsrvid_ = 0;
    if (_has_bit(21)) {
      if (countryneed_ != NULL) countryneed_->::GCG_CountryNeed::Clear();
    }
    if (_has_bit(22)) {
      if (regionneed_ != NULL) regionneed_->::GRG_RegionNeed::Clear();
    }
    if (_has_bit(23)) {
      if (rankneed_ != NULL) rankneed_->::GRG_RankNeed::Clear();
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (_has_bit(24)) {
      if (statneed_ != NULL) statneed_->::GSG_StatNeed::Clear();
    }
    if (_has_bit(25)) {
      if (newstarreq_ != NULL) newstarreq_->::NewStar_Req::Clear();
    }
    if (_has_bit(26)) {
      if (newstarrsp_ != NULL) newstarrsp_->::NewStar_Rsp::Clear();
    }
    if (_has_bit(27)) {
      if (battleinfo_ != NULL) battleinfo_->::GWG_BattleInfo::Clear();
    }
    if (_has_bit(28)) {
      if (httpaskmsg_ != NULL) httpaskmsg_->::HttpAskMsg::Clear();
    }
    if (_has_bit(29)) {
      if (httpanswermsg_ != NULL) httpanswermsg_->::HttpAnswerMsg::Clear();
    }
    if (_has_bit(30)) {
      if (ce_rcebattledamagespack_ != NULL) ce_rcebattledamagespack_->::RceBattleDamagesPack::Clear();
    }
    if (_has_bit(31)) {
      if (ce_rcecustomizedactivity_ != NULL) ce_rcecustomizedactivity_->::RceCustomizedActivity::Clear();
    }
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (_has_bit(32)) {
      if (ce_rcefinished_ != NULL) ce_rcefinished_->::RceFinished::Clear();
    }
    if (_has_bit(33)) {
      if (ce_rceheartbeat_ != NULL) ce_rceheartbeat_->::RceHeartbeat::Clear();
    }
    if (_has_bit(34)) {
      if (ce_rceitemmineexploded_ != NULL) ce_rceitemmineexploded_->::RceItemMineExploded::Clear();
    }
    if (_has_bit(35)) {
      if (ce_rcelogin_ != NULL) ce_rcelogin_->::RceLogin::Clear();
    }
    if (_has_bit(36)) {
      if (ce_rcenpcattackstart_ != NULL) ce_rcenpcattackstart_->::RceNpcAttackStart::Clear();
    }
    if (_has_bit(37)) {
      if (ce_rceobtainaskforhelp_ != NULL) ce_rceobtainaskforhelp_->::RceObtainAskForHelp::Clear();
    }
    if (_has_bit(38)) {
      if (ce_rceobtainattackerlist_ != NULL) ce_rceobtainattackerlist_->::RceObtainAttackerList::Clear();
    }
    if (_has_bit(39)) {
      if (ce_rceobtainbattlereplay_ != NULL) ce_rceobtainbattlereplay_->::RceObtainBattleReplay::Clear();
    }
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (_has_bit(40)) {
      if (ce_rceobtaincustomizer_ != NULL) ce_rceobtaincustomizer_->::RceObtainCustomizer::Clear();
    }
    if (_has_bit(41)) {
      if (ce_rceobtainhangarshelp_ != NULL) ce_rceobtainhangarshelp_->::RceObtainHangarsHelp::Clear();
    }
    if (_has_bit(42)) {
      if (ce_rceobtainmessageslist_ != NULL) ce_rceobtainmessageslist_->::RceObtainMessagesList::Clear();
    }
    if (_has_bit(43)) {
      if (ce_rceobtainneighborslist_ != NULL) ce_rceobtainneighborslist_->::RceObtainNeighborsList::Clear();
    }
    if (_has_bit(44)) {
      if (ce_rceobtainnpclist_ != NULL) ce_rceobtainnpclist_->::RceObtainNpcList::Clear();
    }
    if (_has_bit(45)) {
      if (ce_rceobtainpayurlparame_ != NULL) ce_rceobtainpayurlparame_->::RceObtainPayUrlParame::Clear();
    }
    if (_has_bit(46)) {
      if (ce_rceobtainrandomtargets_ != NULL) ce_rceobtainrandomtargets_->::RceObtainRandomTargets::Clear();
    }
    if (_has_bit(47)) {
      if (ce_rceobtainsocialitems_ != NULL) ce_rceobtainsocialitems_->::RceObtainSocialItems::Clear();
    }
  }
  if (_has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    if (_has_bit(48)) {
      if (ce_rceobtainsocialuserinfo_ != NULL) ce_rceobtainsocialuserinfo_->::RceObtainSocialUserInfo::Clear();
    }
    if (_has_bit(49)) {
      if (ce_rceobtainuniverse_ != NULL) ce_rceobtainuniverse_->::RceObtainUniverse::Clear();
    }
    if (_has_bit(50)) {
      if (ce_rceobtainvisithelps_ != NULL) ce_rceobtainvisithelps_->::RceObtainVisitHelps::Clear();
    }
    if (_has_bit(51)) {
      if (ce_rceonlinereward_ != NULL) ce_rceonlinereward_->::RceOnlineReward::Clear();
    }
    if (_has_bit(52)) {
      if (ce_rcequerycheckandlockaccountifpossible_ != NULL) ce_rcequerycheckandlockaccountifpossible_->::RceQueryCheckAndLockAccountIfPossible::Clear();
    }
    if (_has_bit(53)) {
      if (ce_rcequerygalaxywindow_ != NULL) ce_rcequerygalaxywindow_->::RceQueryGalaxyWindow::Clear();
    }
    if (_has_bit(54)) {
      if (ce_rcequeryreceivewishitem_ != NULL) ce_rcequeryreceivewishitem_->::RceQueryReceiveWishItem::Clear();
    }
    if (_has_bit(55)) {
      if (ce_rcequeryrefusereceivewishitem_ != NULL) ce_rcequeryrefusereceivewishitem_->::RceQueryRefuseReceiveWishItem::Clear();
    }
  }
  if (_has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    if (_has_bit(56)) {
      if (ce_rcequerysendwishitem_ != NULL) ce_rcequerysendwishitem_->::RceQuerySendWishItem::Clear();
    }
    if (_has_bit(57)) {
      if (ce_rcequerystarinfo_ != NULL) ce_rcequerystarinfo_->::RceQueryStarInfo::Clear();
    }
    if (_has_bit(58)) {
      if (ce_rcequerystarsbookmarks_ != NULL) ce_rcequerystarsbookmarks_->::RceQueryStarsBookmarks::Clear();
    }
    if (_has_bit(59)) {
      if (ce_rcequeryvisithelpsgiftunitsonbunker_ != NULL) ce_rcequeryvisithelpsgiftunitsonbunker_->::RceQueryVisitHelpsGiftUnitsOnBunker::Clear();
    }
    if (_has_bit(60)) {
      if (ce_rceupdatealliances_ != NULL) ce_rceupdatealliances_->::RceUpdateAlliances::Clear();
    }
    if (_has_bit(61)) {
      if (ce_rceupdategameunits_ != NULL) ce_rceupdategameunits_->::RceUpdateGameUnits::Clear();
    }
    if (_has_bit(62)) {
      if (ce_rceupdateitem_ != NULL) ce_rceupdateitem_->::RceUpdateItem::Clear();
    }
    if (_has_bit(63)) {
      if (ce_rceupdatemisc_ != NULL) ce_rceupdatemisc_->::RceUpdateMisc::Clear();
    }
  }
  if (_has_bits_[64 / 32] & (0xffu << (64 % 32))) {
    if (_has_bit(64)) {
      if (ce_rceupdatemissions_ != NULL) ce_rceupdatemissions_->::RceUpdateMissions::Clear();
    }
    if (_has_bit(65)) {
      if (ce_rceupdateprofile_ != NULL) ce_rceupdateprofile_->::RceUpdateProfile::Clear();
    }
    if (_has_bit(66)) {
      if (ce_rceupdateships_ != NULL) ce_rceupdateships_->::RceUpdateShips::Clear();
    }
    if (_has_bit(67)) {
      if (ce_rceupdatesocialitem_ != NULL) ce_rceupdatesocialitem_->::RceUpdateSocialItem::Clear();
    }
    if (_has_bit(68)) {
      if (ce_rceupdatestarsbookmarks_ != NULL) ce_rceupdatestarsbookmarks_->::RceUpdateStarsBookmarks::Clear();
    }
    if (_has_bit(69)) {
      if (ce_rceupdatetargets_ != NULL) ce_rceupdatetargets_->::RceUpdateTargets::Clear();
    }
    if (_has_bit(70)) {
      if (ce_rceupdatevisithelp_ != NULL) ce_rceupdatevisithelp_->::RceUpdateVisitHelp::Clear();
    }
    if (_has_bit(71)) {
      if (ce_rcequerypve_ != NULL) ce_rcequerypve_->::RceQueryPvE::Clear();
    }
  }
  if (_has_bits_[72 / 32] & (0xffu << (72 % 32))) {
    if (_has_bit(72)) {
      if (se_rseauthstate_ != NULL) se_rseauthstate_->::RseAuthState::Clear();
    }
    if (_has_bit(73)) {
      if (se_rsecustomizedactivity_ != NULL) se_rsecustomizedactivity_->::RseCustomizedActivity::Clear();
    }
    if (_has_bit(74)) {
      if (se_rseerror_ != NULL) se_rseerror_->::RseError::Clear();
    }
    if (_has_bit(75)) {
      if (se_rseheartbeat_ != NULL) se_rseheartbeat_->::RseHeartbeat::Clear();
    }
    if (_has_bit(76)) {
      if (se_rselogin_ != NULL) se_rselogin_->::RseLogin::Clear();
    }
    if (_has_bit(77)) {
      if (se_rseobtainaskforhelp_ != NULL) se_rseobtainaskforhelp_->::RseObtainAskForHelp::Clear();
    }
    if (_has_bit(78)) {
      if (se_rseobtainattackerlist_ != NULL) se_rseobtainattackerlist_->::RseObtainAttackerList::Clear();
    }
    if (_has_bit(79)) {
      if (se_rseobtainbattlereplay_ != NULL) se_rseobtainbattlereplay_->::RseObtainBattleReplay::Clear();
    }
  }
  if (_has_bits_[80 / 32] & (0xffu << (80 % 32))) {
    if (_has_bit(80)) {
      if (se_rseobtaincustomizer_ != NULL) se_rseobtaincustomizer_->::RseObtainCustomizer::Clear();
    }
    if (_has_bit(81)) {
      if (se_rseobtainhangarshelp_ != NULL) se_rseobtainhangarshelp_->::RseObtainHangarsHelp::Clear();
    }
    if (_has_bit(82)) {
      if (se_rseobtainmessageslist_ != NULL) se_rseobtainmessageslist_->::RseObtainMessagesList::Clear();
    }
    if (_has_bit(83)) {
      if (se_rseobtainneighborslist_ != NULL) se_rseobtainneighborslist_->::RseObtainNeighborsList::Clear();
    }
    if (_has_bit(84)) {
      if (se_rseobtainnpclist_ != NULL) se_rseobtainnpclist_->::RseObtainNpcList::Clear();
    }
    if (_has_bit(85)) {
      if (se_rseobtainpayurlparame_ != NULL) se_rseobtainpayurlparame_->::RseObtainPayUrlParame::Clear();
    }
    if (_has_bit(86)) {
      if (se_rseobtainrandomtargets_ != NULL) se_rseobtainrandomtargets_->::RseObtainRandomTargets::Clear();
    }
    if (_has_bit(87)) {
      if (se_rseobtainsocialitems_ != NULL) se_rseobtainsocialitems_->::RseObtainSocialItems::Clear();
    }
  }
  if (_has_bits_[88 / 32] & (0xffu << (88 % 32))) {
    if (_has_bit(88)) {
      if (se_rseobtainsocialuserinfo_ != NULL) se_rseobtainsocialuserinfo_->::RseObtainSocialUserInfo::Clear();
    }
    if (_has_bit(89)) {
      if (se_rseobtainuniverse_ != NULL) se_rseobtainuniverse_->::RseObtainUniverse::Clear();
    }
    if (_has_bit(90)) {
      if (se_rseobtainvisithelps_ != NULL) se_rseobtainvisithelps_->::RseObtainVisitHelps::Clear();
    }
    if (_has_bit(91)) {
      if (se_rsequerycheckandlockaccountifpossible_ != NULL) se_rsequerycheckandlockaccountifpossible_->::RseQueryCheckAndLockAccountIfPossible::Clear();
    }
    if (_has_bit(92)) {
      if (se_rsequerygalaxywindow_ != NULL) se_rsequerygalaxywindow_->::RseQueryGalaxyWindow::Clear();
    }
    if (_has_bit(93)) {
      if (se_rsequeryreceivewishitem_ != NULL) se_rsequeryreceivewishitem_->::RseQueryReceiveWishItem::Clear();
    }
    if (_has_bit(94)) {
      if (se_rsequeryrefusereceivewishitem_ != NULL) se_rsequeryrefusereceivewishitem_->::RseQueryRefuseReceiveWishItem::Clear();
    }
    if (_has_bit(95)) {
      if (se_rsequerysendwishitem_ != NULL) se_rsequerysendwishitem_->::RseQuerySendWishItem::Clear();
    }
  }
  if (_has_bits_[96 / 32] & (0xffu << (96 % 32))) {
    if (_has_bit(96)) {
      if (se_rsequerystarinfo_ != NULL) se_rsequerystarinfo_->::RseQueryStarInfo::Clear();
    }
    if (_has_bit(97)) {
      if (se_rsequerystarsbookmarks_ != NULL) se_rsequerystarsbookmarks_->::RseQueryStarsBookmarks::Clear();
    }
    if (_has_bit(98)) {
      if (se_rsequeryvisithelpsgiftunitsonbunker_ != NULL) se_rsequeryvisithelpsgiftunitsonbunker_->::RseQueryVisitHelpsGiftUnitsOnBunker::Clear();
    }
    if (_has_bit(99)) {
      if (se_rseupdatealliances_ != NULL) se_rseupdatealliances_->::RseUpdateAlliances::Clear();
    }
    if (_has_bit(100)) {
      if (se_rseupdategameunits_ != NULL) se_rseupdategameunits_->::RseUpdateGameUnits::Clear();
    }
    if (_has_bit(101)) {
      if (se_rseupdateitem_ != NULL) se_rseupdateitem_->::RseUpdateItem::Clear();
    }
    if (_has_bit(102)) {
      if (se_rseupdatemisc_ != NULL) se_rseupdatemisc_->::RseUpdateMisc::Clear();
    }
    if (_has_bit(103)) {
      if (se_rseupdatemissions_ != NULL) se_rseupdatemissions_->::RseUpdateMissions::Clear();
    }
  }
  if (_has_bits_[104 / 32] & (0xffu << (104 % 32))) {
    if (_has_bit(104)) {
      if (se_rseupdateprofile_ != NULL) se_rseupdateprofile_->::RseUpdateProfile::Clear();
    }
    if (_has_bit(105)) {
      if (se_rseupdateships_ != NULL) se_rseupdateships_->::RseUpdateShips::Clear();
    }
    if (_has_bit(106)) {
      if (se_rseupdatesocialitem_ != NULL) se_rseupdatesocialitem_->::RseUpdateSocialItem::Clear();
    }
    if (_has_bit(107)) {
      if (se_rseupdatestarsbookmarks_ != NULL) se_rseupdatestarsbookmarks_->::RseUpdateStarsBookmarks::Clear();
    }
    if (_has_bit(108)) {
      if (se_rseupdatetargets_ != NULL) se_rseupdatetargets_->::RseUpdateTargets::Clear();
    }
    if (_has_bit(109)) {
      if (se_rsebattledamagespack_ != NULL) se_rsebattledamagespack_->::RseBattleDamagesPack::Clear();
    }
    if (_has_bit(110)) {
      if (se_rseitemmineexploded_ != NULL) se_rseitemmineexploded_->::RseItemMineExploded::Clear();
    }
    if (_has_bit(111)) {
      if (se_rsefinished_ != NULL) se_rsefinished_->::RseFinished::Clear();
    }
  }
  if (_has_bits_[112 / 32] & (0xffu << (112 % 32))) {
    if (_has_bit(112)) {
      if (se_rsequerypve_ != NULL) se_rsequerypve_->::RseQueryPvE::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 cmd = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &cmd_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }
      
      // required int32 state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_state:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &state_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_time;
        break;
      }
      
      // required int64 time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_time:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &time_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_uid;
        break;
      }
      
      // optional int64 uid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_uid:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &uid_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_fromworld_fd;
        break;
      }
      
      // optional int32 fromworld_fd = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_fromworld_fd:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &fromworld_fd_));
        _set_bit(4);
        if (input->ExpectTag(50)) goto parse_workingStatus_req;
        break;
      }
      
      // optional .WorkingStatus_Req workingStatus_req = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_workingStatus_req:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_workingstatus_req()));
        if (input->ExpectTag(58)) goto parse_userLogin_req;
        break;
      }
      
      // optional .UserLogin_Req userLogin_req = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_userLogin_req:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_userlogin_req()));
        if (input->ExpectTag(66)) goto parse_userLogin_rsp;
        break;
      }
      
      // optional .UserLogin_Rsp userLogin_rsp = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_userLogin_rsp:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_userlogin_rsp()));
        if (input->ExpectTag(74)) goto parse_userAuth_req;
        break;
      }
      
      // optional .UserAuth_Req userAuth_req = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_userAuth_req:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_userauth_req()));
        if (input->ExpectTag(82)) goto parse_userAuth_rsp;
        break;
      }
      
      // optional .UserAuth_Rsp userAuth_rsp = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_userAuth_rsp:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_userauth_rsp()));
        if (input->ExpectTag(90)) goto parse_sendRemoteUser_req;
        break;
      }
      
      // optional .SendRemoteUser_Req sendRemoteUser_req = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_sendRemoteUser_req:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_sendremoteuser_req()));
        if (input->ExpectTag(98)) goto parse_wg_UserLeave;
        break;
      }
      
      // optional .WG_UserLeave wg_UserLeave = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_wg_UserLeave:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_wg_userleave()));
        if (input->ExpectTag(106)) goto parse_friendinfo;
        break;
      }
      
      // optional .GWG_FriendRequest friendinfo = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_friendinfo:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_friendinfo()));
        if (input->ExpectTag(114)) goto parse_forwardinfo;
        break;
      }
      
      // optional .ForwardInfo forwardinfo = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_forwardinfo:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_forwardinfo()));
        if (input->ExpectTag(120)) goto parse_starSrvID;
        break;
      }
      
      // optional int32 starSrvID = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_starSrvID:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &starsrvid_));
        _set_bit(14);
        if (input->ExpectTag(144)) goto parse_transferSrvID;
        break;
      }
      
      // optional int32 transferSrvID = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_transferSrvID:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &transfersrvid_));
        _set_bit(15);
        if (input->ExpectTag(154)) goto parse_webGetRegion;
        break;
      }
      
      // optional .WebGetRegion webGetRegion = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_webGetRegion:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_webgetregion()));
        if (input->ExpectTag(160)) goto parse_platSrvID;
        break;
      }
      
      // optional int32 platSrvID = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_platSrvID:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &platsrvid_));
        _set_bit(17);
        if (input->ExpectTag(170)) goto parse_userPlat;
        break;
      }
      
      // optional string userPlat = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_userPlat:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_userplat()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->userplat().data(), this->userplat().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(176)) goto parse_worldSrvID;
        break;
      }
      
      // optional int32 worldSrvID = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_worldSrvID:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &worldsrvid_));
        _set_bit(19);
        if (input->ExpectTag(184)) goto parse_fightSrvID;
        break;
      }
      
      // optional int32 fightSrvID = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_fightSrvID:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &fightsrvid_));
        _set_bit(20);
        if (input->ExpectTag(194)) goto parse_countryNeed;
        break;
      }
      
      // optional .GCG_CountryNeed countryNeed = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_countryNeed:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_countryneed()));
        if (input->ExpectTag(202)) goto parse_regionNeed;
        break;
      }
      
      // optional .GRG_RegionNeed regionNeed = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_regionNeed:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_regionneed()));
        if (input->ExpectTag(210)) goto parse_rankNeed;
        break;
      }
      
      // optional .GRG_RankNeed rankNeed = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_rankNeed:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_rankneed()));
        if (input->ExpectTag(218)) goto parse_statNeed;
        break;
      }
      
      // optional .GSG_StatNeed statNeed = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_statNeed:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_statneed()));
        if (input->ExpectTag(226)) goto parse_newStarReq;
        break;
      }
      
      // optional .NewStar_Req newStarReq = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_newStarReq:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_newstarreq()));
        if (input->ExpectTag(234)) goto parse_newStarRsp;
        break;
      }
      
      // optional .NewStar_Rsp newStarRsp = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_newStarRsp:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_newstarrsp()));
        if (input->ExpectTag(242)) goto parse_battleInfo;
        break;
      }
      
      // optional .GWG_BattleInfo battleInfo = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_battleInfo:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_battleinfo()));
        if (input->ExpectTag(914)) goto parse_httpaskmsg;
        break;
      }
      
      // optional .HttpAskMsg httpaskmsg = 114;
      case 114: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_httpaskmsg:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_httpaskmsg()));
        if (input->ExpectTag(922)) goto parse_httpanswermsg;
        break;
      }
      
      // optional .HttpAnswerMsg httpanswermsg = 115;
      case 115: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_httpanswermsg:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_httpanswermsg()));
        if (input->ExpectTag(1602)) goto parse_ce_RceBattleDamagesPack;
        break;
      }
      
      // optional .RceBattleDamagesPack ce_RceBattleDamagesPack = 200;
      case 200: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceBattleDamagesPack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rcebattledamagespack()));
        if (input->ExpectTag(1610)) goto parse_ce_RceCustomizedActivity;
        break;
      }
      
      // optional .RceCustomizedActivity ce_RceCustomizedActivity = 201;
      case 201: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceCustomizedActivity:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rcecustomizedactivity()));
        if (input->ExpectTag(1618)) goto parse_ce_RceFinished;
        break;
      }
      
      // optional .RceFinished ce_RceFinished = 202;
      case 202: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceFinished:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rcefinished()));
        if (input->ExpectTag(1626)) goto parse_ce_RceHeartbeat;
        break;
      }
      
      // optional .RceHeartbeat ce_RceHeartbeat = 203;
      case 203: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceHeartbeat:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceheartbeat()));
        if (input->ExpectTag(1634)) goto parse_ce_RceItemMineExploded;
        break;
      }
      
      // optional .RceItemMineExploded ce_RceItemMineExploded = 204;
      case 204: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceItemMineExploded:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceitemmineexploded()));
        if (input->ExpectTag(1642)) goto parse_ce_RceLogin;
        break;
      }
      
      // optional .RceLogin ce_RceLogin = 205;
      case 205: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceLogin:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rcelogin()));
        if (input->ExpectTag(1650)) goto parse_ce_RceNpcAttackStart;
        break;
      }
      
      // optional .RceNpcAttackStart ce_RceNpcAttackStart = 206;
      case 206: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceNpcAttackStart:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rcenpcattackstart()));
        if (input->ExpectTag(1658)) goto parse_ce_RceObtainAskForHelp;
        break;
      }
      
      // optional .RceObtainAskForHelp ce_RceObtainAskForHelp = 207;
      case 207: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceObtainAskForHelp:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceobtainaskforhelp()));
        if (input->ExpectTag(1666)) goto parse_ce_RceObtainAttackerList;
        break;
      }
      
      // optional .RceObtainAttackerList ce_RceObtainAttackerList = 208;
      case 208: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceObtainAttackerList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceobtainattackerlist()));
        if (input->ExpectTag(1674)) goto parse_ce_RceObtainBattleReplay;
        break;
      }
      
      // optional .RceObtainBattleReplay ce_RceObtainBattleReplay = 209;
      case 209: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceObtainBattleReplay:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceobtainbattlereplay()));
        if (input->ExpectTag(1682)) goto parse_ce_RceObtainCustomizer;
        break;
      }
      
      // optional .RceObtainCustomizer ce_RceObtainCustomizer = 210;
      case 210: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceObtainCustomizer:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceobtaincustomizer()));
        if (input->ExpectTag(1690)) goto parse_ce_RceObtainHangarsHelp;
        break;
      }
      
      // optional .RceObtainHangarsHelp ce_RceObtainHangarsHelp = 211;
      case 211: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceObtainHangarsHelp:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceobtainhangarshelp()));
        if (input->ExpectTag(1698)) goto parse_ce_RceObtainMessagesList;
        break;
      }
      
      // optional .RceObtainMessagesList ce_RceObtainMessagesList = 212;
      case 212: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceObtainMessagesList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceobtainmessageslist()));
        if (input->ExpectTag(1706)) goto parse_ce_RceObtainNeighborsList;
        break;
      }
      
      // optional .RceObtainNeighborsList ce_RceObtainNeighborsList = 213;
      case 213: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceObtainNeighborsList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceobtainneighborslist()));
        if (input->ExpectTag(1714)) goto parse_ce_RceObtainNpcList;
        break;
      }
      
      // optional .RceObtainNpcList ce_RceObtainNpcList = 214;
      case 214: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceObtainNpcList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceobtainnpclist()));
        if (input->ExpectTag(1722)) goto parse_ce_RceObtainPayUrlParame;
        break;
      }
      
      // optional .RceObtainPayUrlParame ce_RceObtainPayUrlParame = 215;
      case 215: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceObtainPayUrlParame:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceobtainpayurlparame()));
        if (input->ExpectTag(1730)) goto parse_ce_RceObtainRandomTargets;
        break;
      }
      
      // optional .RceObtainRandomTargets ce_RceObtainRandomTargets = 216;
      case 216: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceObtainRandomTargets:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceobtainrandomtargets()));
        if (input->ExpectTag(1738)) goto parse_ce_RceObtainSocialItems;
        break;
      }
      
      // optional .RceObtainSocialItems ce_RceObtainSocialItems = 217;
      case 217: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceObtainSocialItems:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceobtainsocialitems()));
        if (input->ExpectTag(1746)) goto parse_ce_RceObtainSocialUserInfo;
        break;
      }
      
      // optional .RceObtainSocialUserInfo ce_RceObtainSocialUserInfo = 218;
      case 218: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceObtainSocialUserInfo:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceobtainsocialuserinfo()));
        if (input->ExpectTag(1754)) goto parse_ce_RceObtainUniverse;
        break;
      }
      
      // optional .RceObtainUniverse ce_RceObtainUniverse = 219;
      case 219: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceObtainUniverse:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceobtainuniverse()));
        if (input->ExpectTag(1762)) goto parse_ce_RceObtainVisitHelps;
        break;
      }
      
      // optional .RceObtainVisitHelps ce_RceObtainVisitHelps = 220;
      case 220: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceObtainVisitHelps:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceobtainvisithelps()));
        if (input->ExpectTag(1770)) goto parse_ce_RceOnlineReward;
        break;
      }
      
      // optional .RceOnlineReward ce_RceOnlineReward = 221;
      case 221: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceOnlineReward:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceonlinereward()));
        if (input->ExpectTag(1778)) goto parse_ce_RceQueryCheckAndLockAccountIfPossible;
        break;
      }
      
      // optional .RceQueryCheckAndLockAccountIfPossible ce_RceQueryCheckAndLockAccountIfPossible = 222;
      case 222: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceQueryCheckAndLockAccountIfPossible:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rcequerycheckandlockaccountifpossible()));
        if (input->ExpectTag(1786)) goto parse_ce_RceQueryGalaxyWindow;
        break;
      }
      
      // optional .RceQueryGalaxyWindow ce_RceQueryGalaxyWindow = 223;
      case 223: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceQueryGalaxyWindow:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rcequerygalaxywindow()));
        if (input->ExpectTag(1794)) goto parse_ce_RceQueryReceiveWishItem;
        break;
      }
      
      // optional .RceQueryReceiveWishItem ce_RceQueryReceiveWishItem = 224;
      case 224: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceQueryReceiveWishItem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rcequeryreceivewishitem()));
        if (input->ExpectTag(1802)) goto parse_ce_RceQueryRefuseReceiveWishItem;
        break;
      }
      
      // optional .RceQueryRefuseReceiveWishItem ce_RceQueryRefuseReceiveWishItem = 225;
      case 225: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceQueryRefuseReceiveWishItem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rcequeryrefusereceivewishitem()));
        if (input->ExpectTag(1810)) goto parse_ce_RceQuerySendWishItem;
        break;
      }
      
      // optional .RceQuerySendWishItem ce_RceQuerySendWishItem = 226;
      case 226: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceQuerySendWishItem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rcequerysendwishitem()));
        if (input->ExpectTag(1818)) goto parse_ce_RceQueryStarInfo;
        break;
      }
      
      // optional .RceQueryStarInfo ce_RceQueryStarInfo = 227;
      case 227: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceQueryStarInfo:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rcequerystarinfo()));
        if (input->ExpectTag(1826)) goto parse_ce_RceQueryStarsBookmarks;
        break;
      }
      
      // optional .RceQueryStarsBookmarks ce_RceQueryStarsBookmarks = 228;
      case 228: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceQueryStarsBookmarks:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rcequerystarsbookmarks()));
        if (input->ExpectTag(1834)) goto parse_ce_RceQueryVisitHelpsGiftUnitsOnBunker;
        break;
      }
      
      // optional .RceQueryVisitHelpsGiftUnitsOnBunker ce_RceQueryVisitHelpsGiftUnitsOnBunker = 229;
      case 229: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceQueryVisitHelpsGiftUnitsOnBunker:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rcequeryvisithelpsgiftunitsonbunker()));
        if (input->ExpectTag(1842)) goto parse_ce_RceUpdateAlliances;
        break;
      }
      
      // optional .RceUpdateAlliances ce_RceUpdateAlliances = 230;
      case 230: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceUpdateAlliances:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceupdatealliances()));
        if (input->ExpectTag(1850)) goto parse_ce_RceUpdateGameUnits;
        break;
      }
      
      // optional .RceUpdateGameUnits ce_RceUpdateGameUnits = 231;
      case 231: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceUpdateGameUnits:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceupdategameunits()));
        if (input->ExpectTag(1858)) goto parse_ce_RceUpdateItem;
        break;
      }
      
      // optional .RceUpdateItem ce_RceUpdateItem = 232;
      case 232: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceUpdateItem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceupdateitem()));
        if (input->ExpectTag(1866)) goto parse_ce_RceUpdateMisc;
        break;
      }
      
      // optional .RceUpdateMisc ce_RceUpdateMisc = 233;
      case 233: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceUpdateMisc:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceupdatemisc()));
        if (input->ExpectTag(1874)) goto parse_ce_RceUpdateMissions;
        break;
      }
      
      // optional .RceUpdateMissions ce_RceUpdateMissions = 234;
      case 234: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceUpdateMissions:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceupdatemissions()));
        if (input->ExpectTag(1882)) goto parse_ce_RceUpdateProfile;
        break;
      }
      
      // optional .RceUpdateProfile ce_RceUpdateProfile = 235;
      case 235: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceUpdateProfile:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceupdateprofile()));
        if (input->ExpectTag(1890)) goto parse_ce_RceUpdateShips;
        break;
      }
      
      // optional .RceUpdateShips ce_RceUpdateShips = 236;
      case 236: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceUpdateShips:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceupdateships()));
        if (input->ExpectTag(1898)) goto parse_ce_RceUpdateSocialItem;
        break;
      }
      
      // optional .RceUpdateSocialItem ce_RceUpdateSocialItem = 237;
      case 237: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceUpdateSocialItem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceupdatesocialitem()));
        if (input->ExpectTag(1906)) goto parse_ce_RceUpdateStarsBookmarks;
        break;
      }
      
      // optional .RceUpdateStarsBookmarks ce_RceUpdateStarsBookmarks = 238;
      case 238: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceUpdateStarsBookmarks:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceupdatestarsbookmarks()));
        if (input->ExpectTag(1914)) goto parse_ce_RceUpdateTargets;
        break;
      }
      
      // optional .RceUpdateTargets ce_RceUpdateTargets = 239;
      case 239: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceUpdateTargets:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceupdatetargets()));
        if (input->ExpectTag(1922)) goto parse_ce_RceUpdateVisitHelp;
        break;
      }
      
      // optional .RceUpdateVisitHelp ce_RceUpdateVisitHelp = 240;
      case 240: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceUpdateVisitHelp:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rceupdatevisithelp()));
        if (input->ExpectTag(1930)) goto parse_ce_RceQueryPvE;
        break;
      }
      
      // optional .RceQueryPvE ce_RceQueryPvE = 241;
      case 241: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ce_RceQueryPvE:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_ce_rcequerypve()));
        if (input->ExpectTag(4002)) goto parse_se_RseAuthState;
        break;
      }
      
      // optional .RseAuthState se_RseAuthState = 500;
      case 500: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseAuthState:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseauthstate()));
        if (input->ExpectTag(4010)) goto parse_se_RseCustomizedActivity;
        break;
      }
      
      // optional .RseCustomizedActivity se_RseCustomizedActivity = 501;
      case 501: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseCustomizedActivity:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rsecustomizedactivity()));
        if (input->ExpectTag(4026)) goto parse_se_RseError;
        break;
      }
      
      // optional .RseError se_RseError = 503;
      case 503: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseError:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseerror()));
        if (input->ExpectTag(4034)) goto parse_se_RseHeartbeat;
        break;
      }
      
      // optional .RseHeartbeat se_RseHeartbeat = 504;
      case 504: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseHeartbeat:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseheartbeat()));
        if (input->ExpectTag(4050)) goto parse_se_RseLogin;
        break;
      }
      
      // optional .RseLogin se_RseLogin = 506;
      case 506: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseLogin:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rselogin()));
        if (input->ExpectTag(4058)) goto parse_se_RseObtainAskForHelp;
        break;
      }
      
      // optional .RseObtainAskForHelp se_RseObtainAskForHelp = 507;
      case 507: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseObtainAskForHelp:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseobtainaskforhelp()));
        if (input->ExpectTag(4066)) goto parse_se_RseObtainAttackerList;
        break;
      }
      
      // optional .RseObtainAttackerList se_RseObtainAttackerList = 508;
      case 508: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseObtainAttackerList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseobtainattackerlist()));
        if (input->ExpectTag(4074)) goto parse_se_RseObtainBattleReplay;
        break;
      }
      
      // optional .RseObtainBattleReplay se_RseObtainBattleReplay = 509;
      case 509: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseObtainBattleReplay:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseobtainbattlereplay()));
        if (input->ExpectTag(4082)) goto parse_se_RseObtainCustomizer;
        break;
      }
      
      // optional .RseObtainCustomizer se_RseObtainCustomizer = 510;
      case 510: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseObtainCustomizer:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseobtaincustomizer()));
        if (input->ExpectTag(4090)) goto parse_se_RseObtainHangarsHelp;
        break;
      }
      
      // optional .RseObtainHangarsHelp se_RseObtainHangarsHelp = 511;
      case 511: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseObtainHangarsHelp:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseobtainhangarshelp()));
        if (input->ExpectTag(4098)) goto parse_se_RseObtainMessagesList;
        break;
      }
      
      // optional .RseObtainMessagesList se_RseObtainMessagesList = 512;
      case 512: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseObtainMessagesList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseobtainmessageslist()));
        if (input->ExpectTag(4106)) goto parse_se_RseObtainNeighborsList;
        break;
      }
      
      // optional .RseObtainNeighborsList se_RseObtainNeighborsList = 513;
      case 513: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseObtainNeighborsList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseobtainneighborslist()));
        if (input->ExpectTag(4114)) goto parse_se_RseObtainNpcList;
        break;
      }
      
      // optional .RseObtainNpcList se_RseObtainNpcList = 514;
      case 514: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseObtainNpcList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseobtainnpclist()));
        if (input->ExpectTag(4122)) goto parse_se_RseObtainPayUrlParame;
        break;
      }
      
      // optional .RseObtainPayUrlParame se_RseObtainPayUrlParame = 515;
      case 515: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseObtainPayUrlParame:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseobtainpayurlparame()));
        if (input->ExpectTag(4130)) goto parse_se_RseObtainRandomTargets;
        break;
      }
      
      // optional .RseObtainRandomTargets se_RseObtainRandomTargets = 516;
      case 516: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseObtainRandomTargets:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseobtainrandomtargets()));
        if (input->ExpectTag(4138)) goto parse_se_RseObtainSocialItems;
        break;
      }
      
      // optional .RseObtainSocialItems se_RseObtainSocialItems = 517;
      case 517: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseObtainSocialItems:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseobtainsocialitems()));
        if (input->ExpectTag(4146)) goto parse_se_RseObtainSocialUserInfo;
        break;
      }
      
      // optional .RseObtainSocialUserInfo se_RseObtainSocialUserInfo = 518;
      case 518: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseObtainSocialUserInfo:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseobtainsocialuserinfo()));
        if (input->ExpectTag(4154)) goto parse_se_RseObtainUniverse;
        break;
      }
      
      // optional .RseObtainUniverse se_RseObtainUniverse = 519;
      case 519: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseObtainUniverse:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseobtainuniverse()));
        if (input->ExpectTag(4162)) goto parse_se_RseObtainVisitHelps;
        break;
      }
      
      // optional .RseObtainVisitHelps se_RseObtainVisitHelps = 520;
      case 520: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseObtainVisitHelps:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseobtainvisithelps()));
        if (input->ExpectTag(4170)) goto parse_se_RseQueryCheckAndLockAccountIfPossible;
        break;
      }
      
      // optional .RseQueryCheckAndLockAccountIfPossible se_RseQueryCheckAndLockAccountIfPossible = 521;
      case 521: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseQueryCheckAndLockAccountIfPossible:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rsequerycheckandlockaccountifpossible()));
        if (input->ExpectTag(4178)) goto parse_se_RseQueryGalaxyWindow;
        break;
      }
      
      // optional .RseQueryGalaxyWindow se_RseQueryGalaxyWindow = 522;
      case 522: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseQueryGalaxyWindow:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rsequerygalaxywindow()));
        if (input->ExpectTag(4186)) goto parse_se_RseQueryReceiveWishItem;
        break;
      }
      
      // optional .RseQueryReceiveWishItem se_RseQueryReceiveWishItem = 523;
      case 523: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseQueryReceiveWishItem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rsequeryreceivewishitem()));
        if (input->ExpectTag(4194)) goto parse_se_RseQueryRefuseReceiveWishItem;
        break;
      }
      
      // optional .RseQueryRefuseReceiveWishItem se_RseQueryRefuseReceiveWishItem = 524;
      case 524: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseQueryRefuseReceiveWishItem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rsequeryrefusereceivewishitem()));
        if (input->ExpectTag(4202)) goto parse_se_RseQuerySendWishItem;
        break;
      }
      
      // optional .RseQuerySendWishItem se_RseQuerySendWishItem = 525;
      case 525: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseQuerySendWishItem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rsequerysendwishitem()));
        if (input->ExpectTag(4210)) goto parse_se_RseQueryStarInfo;
        break;
      }
      
      // optional .RseQueryStarInfo se_RseQueryStarInfo = 526;
      case 526: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseQueryStarInfo:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rsequerystarinfo()));
        if (input->ExpectTag(4218)) goto parse_se_RseQueryStarsBookmarks;
        break;
      }
      
      // optional .RseQueryStarsBookmarks se_RseQueryStarsBookmarks = 527;
      case 527: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseQueryStarsBookmarks:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rsequerystarsbookmarks()));
        if (input->ExpectTag(4226)) goto parse_se_RseQueryVisitHelpsGiftUnitsOnBunker;
        break;
      }
      
      // optional .RseQueryVisitHelpsGiftUnitsOnBunker se_RseQueryVisitHelpsGiftUnitsOnBunker = 528;
      case 528: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseQueryVisitHelpsGiftUnitsOnBunker:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rsequeryvisithelpsgiftunitsonbunker()));
        if (input->ExpectTag(4242)) goto parse_se_RseUpdateAlliances;
        break;
      }
      
      // optional .RseUpdateAlliances se_RseUpdateAlliances = 530;
      case 530: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseUpdateAlliances:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseupdatealliances()));
        if (input->ExpectTag(4250)) goto parse_se_RseUpdateGameUnits;
        break;
      }
      
      // optional .RseUpdateGameUnits se_RseUpdateGameUnits = 531;
      case 531: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseUpdateGameUnits:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseupdategameunits()));
        if (input->ExpectTag(4258)) goto parse_se_RseUpdateItem;
        break;
      }
      
      // optional .RseUpdateItem se_RseUpdateItem = 532;
      case 532: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseUpdateItem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseupdateitem()));
        if (input->ExpectTag(4266)) goto parse_se_RseUpdateMisc;
        break;
      }
      
      // optional .RseUpdateMisc se_RseUpdateMisc = 533;
      case 533: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseUpdateMisc:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseupdatemisc()));
        if (input->ExpectTag(4274)) goto parse_se_RseUpdateMissions;
        break;
      }
      
      // optional .RseUpdateMissions se_RseUpdateMissions = 534;
      case 534: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseUpdateMissions:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseupdatemissions()));
        if (input->ExpectTag(4282)) goto parse_se_RseUpdateProfile;
        break;
      }
      
      // optional .RseUpdateProfile se_RseUpdateProfile = 535;
      case 535: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseUpdateProfile:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseupdateprofile()));
        if (input->ExpectTag(4290)) goto parse_se_RseUpdateShips;
        break;
      }
      
      // optional .RseUpdateShips se_RseUpdateShips = 536;
      case 536: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseUpdateShips:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseupdateships()));
        if (input->ExpectTag(4298)) goto parse_se_RseUpdateSocialItem;
        break;
      }
      
      // optional .RseUpdateSocialItem se_RseUpdateSocialItem = 537;
      case 537: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseUpdateSocialItem:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseupdatesocialitem()));
        if (input->ExpectTag(4306)) goto parse_se_RseUpdateStarsBookmarks;
        break;
      }
      
      // optional .RseUpdateStarsBookmarks se_RseUpdateStarsBookmarks = 538;
      case 538: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseUpdateStarsBookmarks:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseupdatestarsbookmarks()));
        if (input->ExpectTag(4314)) goto parse_se_RseUpdateTargets;
        break;
      }
      
      // optional .RseUpdateTargets se_RseUpdateTargets = 539;
      case 539: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseUpdateTargets:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseupdatetargets()));
        if (input->ExpectTag(4322)) goto parse_se_RseBattleDamagesPack;
        break;
      }
      
      // optional .RseBattleDamagesPack se_RseBattleDamagesPack = 540;
      case 540: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseBattleDamagesPack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rsebattledamagespack()));
        if (input->ExpectTag(4330)) goto parse_se_RseItemMineExploded;
        break;
      }
      
      // optional .RseItemMineExploded se_RseItemMineExploded = 541;
      case 541: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseItemMineExploded:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rseitemmineexploded()));
        if (input->ExpectTag(4338)) goto parse_se_RseFinished;
        break;
      }
      
      // optional .RseFinished se_RseFinished = 542;
      case 542: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseFinished:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rsefinished()));
        if (input->ExpectTag(4346)) goto parse_se_RseQueryPvE;
        break;
      }
      
      // optional .RseQueryPvE se_RseQueryPvE = 543;
      case 543: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_se_RseQueryPvE:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_se_rsequerypve()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    Event::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required int32 cmd = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cmd(), output);
  }
  
  // required int32 state = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->state(), output);
  }
  
  // required int64 time = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->time(), output);
  }
  
  // optional int64 uid = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->uid(), output);
  }
  
  // optional int32 fromworld_fd = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->fromworld_fd(), output);
  }
  
  // optional .WorkingStatus_Req workingStatus_req = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      6, this->workingstatus_req(), output);
  }
  
  // optional .UserLogin_Req userLogin_req = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      7, this->userlogin_req(), output);
  }
  
  // optional .UserLogin_Rsp userLogin_rsp = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      8, this->userlogin_rsp(), output);
  }
  
  // optional .UserAuth_Req userAuth_req = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      9, this->userauth_req(), output);
  }
  
  // optional .UserAuth_Rsp userAuth_rsp = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      10, this->userauth_rsp(), output);
  }
  
  // optional .SendRemoteUser_Req sendRemoteUser_req = 11;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      11, this->sendremoteuser_req(), output);
  }
  
  // optional .WG_UserLeave wg_UserLeave = 12;
  if (_has_bit(11)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      12, this->wg_userleave(), output);
  }
  
  // optional .GWG_FriendRequest friendinfo = 13;
  if (_has_bit(12)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      13, this->friendinfo(), output);
  }
  
  // optional .ForwardInfo forwardinfo = 14;
  if (_has_bit(13)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      14, this->forwardinfo(), output);
  }
  
  // optional int32 starSrvID = 15;
  if (_has_bit(14)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->starsrvid(), output);
  }
  
  // optional int32 transferSrvID = 18;
  if (_has_bit(15)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->transfersrvid(), output);
  }
  
  // optional .WebGetRegion webGetRegion = 19;
  if (_has_bit(16)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      19, this->webgetregion(), output);
  }
  
  // optional int32 platSrvID = 20;
  if (_has_bit(17)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->platsrvid(), output);
  }
  
  // optional string userPlat = 21;
  if (_has_bit(18)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->userplat().data(), this->userplat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->userplat(), output);
  }
  
  // optional int32 worldSrvID = 22;
  if (_has_bit(19)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->worldsrvid(), output);
  }
  
  // optional int32 fightSrvID = 23;
  if (_has_bit(20)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->fightsrvid(), output);
  }
  
  // optional .GCG_CountryNeed countryNeed = 24;
  if (_has_bit(21)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      24, this->countryneed(), output);
  }
  
  // optional .GRG_RegionNeed regionNeed = 25;
  if (_has_bit(22)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      25, this->regionneed(), output);
  }
  
  // optional .GRG_RankNeed rankNeed = 26;
  if (_has_bit(23)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      26, this->rankneed(), output);
  }
  
  // optional .GSG_StatNeed statNeed = 27;
  if (_has_bit(24)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      27, this->statneed(), output);
  }
  
  // optional .NewStar_Req newStarReq = 28;
  if (_has_bit(25)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      28, this->newstarreq(), output);
  }
  
  // optional .NewStar_Rsp newStarRsp = 29;
  if (_has_bit(26)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      29, this->newstarrsp(), output);
  }
  
  // optional .GWG_BattleInfo battleInfo = 30;
  if (_has_bit(27)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      30, this->battleinfo(), output);
  }
  
  // optional .HttpAskMsg httpaskmsg = 114;
  if (_has_bit(28)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      114, this->httpaskmsg(), output);
  }
  
  // optional .HttpAnswerMsg httpanswermsg = 115;
  if (_has_bit(29)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      115, this->httpanswermsg(), output);
  }
  
  // optional .RceBattleDamagesPack ce_RceBattleDamagesPack = 200;
  if (_has_bit(30)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      200, this->ce_rcebattledamagespack(), output);
  }
  
  // optional .RceCustomizedActivity ce_RceCustomizedActivity = 201;
  if (_has_bit(31)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      201, this->ce_rcecustomizedactivity(), output);
  }
  
  // optional .RceFinished ce_RceFinished = 202;
  if (_has_bit(32)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      202, this->ce_rcefinished(), output);
  }
  
  // optional .RceHeartbeat ce_RceHeartbeat = 203;
  if (_has_bit(33)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      203, this->ce_rceheartbeat(), output);
  }
  
  // optional .RceItemMineExploded ce_RceItemMineExploded = 204;
  if (_has_bit(34)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      204, this->ce_rceitemmineexploded(), output);
  }
  
  // optional .RceLogin ce_RceLogin = 205;
  if (_has_bit(35)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      205, this->ce_rcelogin(), output);
  }
  
  // optional .RceNpcAttackStart ce_RceNpcAttackStart = 206;
  if (_has_bit(36)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      206, this->ce_rcenpcattackstart(), output);
  }
  
  // optional .RceObtainAskForHelp ce_RceObtainAskForHelp = 207;
  if (_has_bit(37)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      207, this->ce_rceobtainaskforhelp(), output);
  }
  
  // optional .RceObtainAttackerList ce_RceObtainAttackerList = 208;
  if (_has_bit(38)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      208, this->ce_rceobtainattackerlist(), output);
  }
  
  // optional .RceObtainBattleReplay ce_RceObtainBattleReplay = 209;
  if (_has_bit(39)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      209, this->ce_rceobtainbattlereplay(), output);
  }
  
  // optional .RceObtainCustomizer ce_RceObtainCustomizer = 210;
  if (_has_bit(40)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      210, this->ce_rceobtaincustomizer(), output);
  }
  
  // optional .RceObtainHangarsHelp ce_RceObtainHangarsHelp = 211;
  if (_has_bit(41)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      211, this->ce_rceobtainhangarshelp(), output);
  }
  
  // optional .RceObtainMessagesList ce_RceObtainMessagesList = 212;
  if (_has_bit(42)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      212, this->ce_rceobtainmessageslist(), output);
  }
  
  // optional .RceObtainNeighborsList ce_RceObtainNeighborsList = 213;
  if (_has_bit(43)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      213, this->ce_rceobtainneighborslist(), output);
  }
  
  // optional .RceObtainNpcList ce_RceObtainNpcList = 214;
  if (_has_bit(44)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      214, this->ce_rceobtainnpclist(), output);
  }
  
  // optional .RceObtainPayUrlParame ce_RceObtainPayUrlParame = 215;
  if (_has_bit(45)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      215, this->ce_rceobtainpayurlparame(), output);
  }
  
  // optional .RceObtainRandomTargets ce_RceObtainRandomTargets = 216;
  if (_has_bit(46)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      216, this->ce_rceobtainrandomtargets(), output);
  }
  
  // optional .RceObtainSocialItems ce_RceObtainSocialItems = 217;
  if (_has_bit(47)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      217, this->ce_rceobtainsocialitems(), output);
  }
  
  // optional .RceObtainSocialUserInfo ce_RceObtainSocialUserInfo = 218;
  if (_has_bit(48)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      218, this->ce_rceobtainsocialuserinfo(), output);
  }
  
  // optional .RceObtainUniverse ce_RceObtainUniverse = 219;
  if (_has_bit(49)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      219, this->ce_rceobtainuniverse(), output);
  }
  
  // optional .RceObtainVisitHelps ce_RceObtainVisitHelps = 220;
  if (_has_bit(50)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      220, this->ce_rceobtainvisithelps(), output);
  }
  
  // optional .RceOnlineReward ce_RceOnlineReward = 221;
  if (_has_bit(51)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      221, this->ce_rceonlinereward(), output);
  }
  
  // optional .RceQueryCheckAndLockAccountIfPossible ce_RceQueryCheckAndLockAccountIfPossible = 222;
  if (_has_bit(52)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      222, this->ce_rcequerycheckandlockaccountifpossible(), output);
  }
  
  // optional .RceQueryGalaxyWindow ce_RceQueryGalaxyWindow = 223;
  if (_has_bit(53)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      223, this->ce_rcequerygalaxywindow(), output);
  }
  
  // optional .RceQueryReceiveWishItem ce_RceQueryReceiveWishItem = 224;
  if (_has_bit(54)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      224, this->ce_rcequeryreceivewishitem(), output);
  }
  
  // optional .RceQueryRefuseReceiveWishItem ce_RceQueryRefuseReceiveWishItem = 225;
  if (_has_bit(55)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      225, this->ce_rcequeryrefusereceivewishitem(), output);
  }
  
  // optional .RceQuerySendWishItem ce_RceQuerySendWishItem = 226;
  if (_has_bit(56)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      226, this->ce_rcequerysendwishitem(), output);
  }
  
  // optional .RceQueryStarInfo ce_RceQueryStarInfo = 227;
  if (_has_bit(57)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      227, this->ce_rcequerystarinfo(), output);
  }
  
  // optional .RceQueryStarsBookmarks ce_RceQueryStarsBookmarks = 228;
  if (_has_bit(58)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      228, this->ce_rcequerystarsbookmarks(), output);
  }
  
  // optional .RceQueryVisitHelpsGiftUnitsOnBunker ce_RceQueryVisitHelpsGiftUnitsOnBunker = 229;
  if (_has_bit(59)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      229, this->ce_rcequeryvisithelpsgiftunitsonbunker(), output);
  }
  
  // optional .RceUpdateAlliances ce_RceUpdateAlliances = 230;
  if (_has_bit(60)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      230, this->ce_rceupdatealliances(), output);
  }
  
  // optional .RceUpdateGameUnits ce_RceUpdateGameUnits = 231;
  if (_has_bit(61)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      231, this->ce_rceupdategameunits(), output);
  }
  
  // optional .RceUpdateItem ce_RceUpdateItem = 232;
  if (_has_bit(62)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      232, this->ce_rceupdateitem(), output);
  }
  
  // optional .RceUpdateMisc ce_RceUpdateMisc = 233;
  if (_has_bit(63)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      233, this->ce_rceupdatemisc(), output);
  }
  
  // optional .RceUpdateMissions ce_RceUpdateMissions = 234;
  if (_has_bit(64)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      234, this->ce_rceupdatemissions(), output);
  }
  
  // optional .RceUpdateProfile ce_RceUpdateProfile = 235;
  if (_has_bit(65)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      235, this->ce_rceupdateprofile(), output);
  }
  
  // optional .RceUpdateShips ce_RceUpdateShips = 236;
  if (_has_bit(66)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      236, this->ce_rceupdateships(), output);
  }
  
  // optional .RceUpdateSocialItem ce_RceUpdateSocialItem = 237;
  if (_has_bit(67)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      237, this->ce_rceupdatesocialitem(), output);
  }
  
  // optional .RceUpdateStarsBookmarks ce_RceUpdateStarsBookmarks = 238;
  if (_has_bit(68)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      238, this->ce_rceupdatestarsbookmarks(), output);
  }
  
  // optional .RceUpdateTargets ce_RceUpdateTargets = 239;
  if (_has_bit(69)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      239, this->ce_rceupdatetargets(), output);
  }
  
  // optional .RceUpdateVisitHelp ce_RceUpdateVisitHelp = 240;
  if (_has_bit(70)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      240, this->ce_rceupdatevisithelp(), output);
  }
  
  // optional .RceQueryPvE ce_RceQueryPvE = 241;
  if (_has_bit(71)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      241, this->ce_rcequerypve(), output);
  }
  
  // optional .RseAuthState se_RseAuthState = 500;
  if (_has_bit(72)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      500, this->se_rseauthstate(), output);
  }
  
  // optional .RseCustomizedActivity se_RseCustomizedActivity = 501;
  if (_has_bit(73)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      501, this->se_rsecustomizedactivity(), output);
  }
  
  // optional .RseError se_RseError = 503;
  if (_has_bit(74)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      503, this->se_rseerror(), output);
  }
  
  // optional .RseHeartbeat se_RseHeartbeat = 504;
  if (_has_bit(75)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      504, this->se_rseheartbeat(), output);
  }
  
  // optional .RseLogin se_RseLogin = 506;
  if (_has_bit(76)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      506, this->se_rselogin(), output);
  }
  
  // optional .RseObtainAskForHelp se_RseObtainAskForHelp = 507;
  if (_has_bit(77)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      507, this->se_rseobtainaskforhelp(), output);
  }
  
  // optional .RseObtainAttackerList se_RseObtainAttackerList = 508;
  if (_has_bit(78)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      508, this->se_rseobtainattackerlist(), output);
  }
  
  // optional .RseObtainBattleReplay se_RseObtainBattleReplay = 509;
  if (_has_bit(79)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      509, this->se_rseobtainbattlereplay(), output);
  }
  
  // optional .RseObtainCustomizer se_RseObtainCustomizer = 510;
  if (_has_bit(80)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      510, this->se_rseobtaincustomizer(), output);
  }
  
  // optional .RseObtainHangarsHelp se_RseObtainHangarsHelp = 511;
  if (_has_bit(81)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      511, this->se_rseobtainhangarshelp(), output);
  }
  
  // optional .RseObtainMessagesList se_RseObtainMessagesList = 512;
  if (_has_bit(82)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      512, this->se_rseobtainmessageslist(), output);
  }
  
  // optional .RseObtainNeighborsList se_RseObtainNeighborsList = 513;
  if (_has_bit(83)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      513, this->se_rseobtainneighborslist(), output);
  }
  
  // optional .RseObtainNpcList se_RseObtainNpcList = 514;
  if (_has_bit(84)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      514, this->se_rseobtainnpclist(), output);
  }
  
  // optional .RseObtainPayUrlParame se_RseObtainPayUrlParame = 515;
  if (_has_bit(85)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      515, this->se_rseobtainpayurlparame(), output);
  }
  
  // optional .RseObtainRandomTargets se_RseObtainRandomTargets = 516;
  if (_has_bit(86)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      516, this->se_rseobtainrandomtargets(), output);
  }
  
  // optional .RseObtainSocialItems se_RseObtainSocialItems = 517;
  if (_has_bit(87)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      517, this->se_rseobtainsocialitems(), output);
  }
  
  // optional .RseObtainSocialUserInfo se_RseObtainSocialUserInfo = 518;
  if (_has_bit(88)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      518, this->se_rseobtainsocialuserinfo(), output);
  }
  
  // optional .RseObtainUniverse se_RseObtainUniverse = 519;
  if (_has_bit(89)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      519, this->se_rseobtainuniverse(), output);
  }
  
  // optional .RseObtainVisitHelps se_RseObtainVisitHelps = 520;
  if (_has_bit(90)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      520, this->se_rseobtainvisithelps(), output);
  }
  
  // optional .RseQueryCheckAndLockAccountIfPossible se_RseQueryCheckAndLockAccountIfPossible = 521;
  if (_has_bit(91)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      521, this->se_rsequerycheckandlockaccountifpossible(), output);
  }
  
  // optional .RseQueryGalaxyWindow se_RseQueryGalaxyWindow = 522;
  if (_has_bit(92)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      522, this->se_rsequerygalaxywindow(), output);
  }
  
  // optional .RseQueryReceiveWishItem se_RseQueryReceiveWishItem = 523;
  if (_has_bit(93)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      523, this->se_rsequeryreceivewishitem(), output);
  }
  
  // optional .RseQueryRefuseReceiveWishItem se_RseQueryRefuseReceiveWishItem = 524;
  if (_has_bit(94)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      524, this->se_rsequeryrefusereceivewishitem(), output);
  }
  
  // optional .RseQuerySendWishItem se_RseQuerySendWishItem = 525;
  if (_has_bit(95)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      525, this->se_rsequerysendwishitem(), output);
  }
  
  // optional .RseQueryStarInfo se_RseQueryStarInfo = 526;
  if (_has_bit(96)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      526, this->se_rsequerystarinfo(), output);
  }
  
  // optional .RseQueryStarsBookmarks se_RseQueryStarsBookmarks = 527;
  if (_has_bit(97)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      527, this->se_rsequerystarsbookmarks(), output);
  }
  
  // optional .RseQueryVisitHelpsGiftUnitsOnBunker se_RseQueryVisitHelpsGiftUnitsOnBunker = 528;
  if (_has_bit(98)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      528, this->se_rsequeryvisithelpsgiftunitsonbunker(), output);
  }
  
  // optional .RseUpdateAlliances se_RseUpdateAlliances = 530;
  if (_has_bit(99)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      530, this->se_rseupdatealliances(), output);
  }
  
  // optional .RseUpdateGameUnits se_RseUpdateGameUnits = 531;
  if (_has_bit(100)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      531, this->se_rseupdategameunits(), output);
  }
  
  // optional .RseUpdateItem se_RseUpdateItem = 532;
  if (_has_bit(101)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      532, this->se_rseupdateitem(), output);
  }
  
  // optional .RseUpdateMisc se_RseUpdateMisc = 533;
  if (_has_bit(102)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      533, this->se_rseupdatemisc(), output);
  }
  
  // optional .RseUpdateMissions se_RseUpdateMissions = 534;
  if (_has_bit(103)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      534, this->se_rseupdatemissions(), output);
  }
  
  // optional .RseUpdateProfile se_RseUpdateProfile = 535;
  if (_has_bit(104)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      535, this->se_rseupdateprofile(), output);
  }
  
  // optional .RseUpdateShips se_RseUpdateShips = 536;
  if (_has_bit(105)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      536, this->se_rseupdateships(), output);
  }
  
  // optional .RseUpdateSocialItem se_RseUpdateSocialItem = 537;
  if (_has_bit(106)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      537, this->se_rseupdatesocialitem(), output);
  }
  
  // optional .RseUpdateStarsBookmarks se_RseUpdateStarsBookmarks = 538;
  if (_has_bit(107)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      538, this->se_rseupdatestarsbookmarks(), output);
  }
  
  // optional .RseUpdateTargets se_RseUpdateTargets = 539;
  if (_has_bit(108)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      539, this->se_rseupdatetargets(), output);
  }
  
  // optional .RseBattleDamagesPack se_RseBattleDamagesPack = 540;
  if (_has_bit(109)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      540, this->se_rsebattledamagespack(), output);
  }
  
  // optional .RseItemMineExploded se_RseItemMineExploded = 541;
  if (_has_bit(110)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      541, this->se_rseitemmineexploded(), output);
  }
  
  // optional .RseFinished se_RseFinished = 542;
  if (_has_bit(111)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      542, this->se_rsefinished(), output);
  }
  
  // optional .RseQueryPvE se_RseQueryPvE = 543;
  if (_has_bit(112)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      543, this->se_rsequerypve(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Event::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 cmd = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cmd(), target);
  }
  
  // required int32 state = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->state(), target);
  }
  
  // required int64 time = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->time(), target);
  }
  
  // optional int64 uid = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->uid(), target);
  }
  
  // optional int32 fromworld_fd = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->fromworld_fd(), target);
  }
  
  // optional .WorkingStatus_Req workingStatus_req = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->workingstatus_req(), target);
  }
  
  // optional .UserLogin_Req userLogin_req = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->userlogin_req(), target);
  }
  
  // optional .UserLogin_Rsp userLogin_rsp = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->userlogin_rsp(), target);
  }
  
  // optional .UserAuth_Req userAuth_req = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->userauth_req(), target);
  }
  
  // optional .UserAuth_Rsp userAuth_rsp = 10;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->userauth_rsp(), target);
  }
  
  // optional .SendRemoteUser_Req sendRemoteUser_req = 11;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->sendremoteuser_req(), target);
  }
  
  // optional .WG_UserLeave wg_UserLeave = 12;
  if (_has_bit(11)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->wg_userleave(), target);
  }
  
  // optional .GWG_FriendRequest friendinfo = 13;
  if (_has_bit(12)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->friendinfo(), target);
  }
  
  // optional .ForwardInfo forwardinfo = 14;
  if (_has_bit(13)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->forwardinfo(), target);
  }
  
  // optional int32 starSrvID = 15;
  if (_has_bit(14)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->starsrvid(), target);
  }
  
  // optional int32 transferSrvID = 18;
  if (_has_bit(15)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->transfersrvid(), target);
  }
  
  // optional .WebGetRegion webGetRegion = 19;
  if (_has_bit(16)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->webgetregion(), target);
  }
  
  // optional int32 platSrvID = 20;
  if (_has_bit(17)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->platsrvid(), target);
  }
  
  // optional string userPlat = 21;
  if (_has_bit(18)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->userplat().data(), this->userplat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->userplat(), target);
  }
  
  // optional int32 worldSrvID = 22;
  if (_has_bit(19)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->worldsrvid(), target);
  }
  
  // optional int32 fightSrvID = 23;
  if (_has_bit(20)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->fightsrvid(), target);
  }
  
  // optional .GCG_CountryNeed countryNeed = 24;
  if (_has_bit(21)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        24, this->countryneed(), target);
  }
  
  // optional .GRG_RegionNeed regionNeed = 25;
  if (_has_bit(22)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        25, this->regionneed(), target);
  }
  
  // optional .GRG_RankNeed rankNeed = 26;
  if (_has_bit(23)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        26, this->rankneed(), target);
  }
  
  // optional .GSG_StatNeed statNeed = 27;
  if (_has_bit(24)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        27, this->statneed(), target);
  }
  
  // optional .NewStar_Req newStarReq = 28;
  if (_has_bit(25)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        28, this->newstarreq(), target);
  }
  
  // optional .NewStar_Rsp newStarRsp = 29;
  if (_has_bit(26)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        29, this->newstarrsp(), target);
  }
  
  // optional .GWG_BattleInfo battleInfo = 30;
  if (_has_bit(27)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        30, this->battleinfo(), target);
  }
  
  // optional .HttpAskMsg httpaskmsg = 114;
  if (_has_bit(28)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        114, this->httpaskmsg(), target);
  }
  
  // optional .HttpAnswerMsg httpanswermsg = 115;
  if (_has_bit(29)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        115, this->httpanswermsg(), target);
  }
  
  // optional .RceBattleDamagesPack ce_RceBattleDamagesPack = 200;
  if (_has_bit(30)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        200, this->ce_rcebattledamagespack(), target);
  }
  
  // optional .RceCustomizedActivity ce_RceCustomizedActivity = 201;
  if (_has_bit(31)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        201, this->ce_rcecustomizedactivity(), target);
  }
  
  // optional .RceFinished ce_RceFinished = 202;
  if (_has_bit(32)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        202, this->ce_rcefinished(), target);
  }
  
  // optional .RceHeartbeat ce_RceHeartbeat = 203;
  if (_has_bit(33)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        203, this->ce_rceheartbeat(), target);
  }
  
  // optional .RceItemMineExploded ce_RceItemMineExploded = 204;
  if (_has_bit(34)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        204, this->ce_rceitemmineexploded(), target);
  }
  
  // optional .RceLogin ce_RceLogin = 205;
  if (_has_bit(35)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        205, this->ce_rcelogin(), target);
  }
  
  // optional .RceNpcAttackStart ce_RceNpcAttackStart = 206;
  if (_has_bit(36)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        206, this->ce_rcenpcattackstart(), target);
  }
  
  // optional .RceObtainAskForHelp ce_RceObtainAskForHelp = 207;
  if (_has_bit(37)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        207, this->ce_rceobtainaskforhelp(), target);
  }
  
  // optional .RceObtainAttackerList ce_RceObtainAttackerList = 208;
  if (_has_bit(38)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        208, this->ce_rceobtainattackerlist(), target);
  }
  
  // optional .RceObtainBattleReplay ce_RceObtainBattleReplay = 209;
  if (_has_bit(39)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        209, this->ce_rceobtainbattlereplay(), target);
  }
  
  // optional .RceObtainCustomizer ce_RceObtainCustomizer = 210;
  if (_has_bit(40)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        210, this->ce_rceobtaincustomizer(), target);
  }
  
  // optional .RceObtainHangarsHelp ce_RceObtainHangarsHelp = 211;
  if (_has_bit(41)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        211, this->ce_rceobtainhangarshelp(), target);
  }
  
  // optional .RceObtainMessagesList ce_RceObtainMessagesList = 212;
  if (_has_bit(42)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        212, this->ce_rceobtainmessageslist(), target);
  }
  
  // optional .RceObtainNeighborsList ce_RceObtainNeighborsList = 213;
  if (_has_bit(43)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        213, this->ce_rceobtainneighborslist(), target);
  }
  
  // optional .RceObtainNpcList ce_RceObtainNpcList = 214;
  if (_has_bit(44)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        214, this->ce_rceobtainnpclist(), target);
  }
  
  // optional .RceObtainPayUrlParame ce_RceObtainPayUrlParame = 215;
  if (_has_bit(45)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        215, this->ce_rceobtainpayurlparame(), target);
  }
  
  // optional .RceObtainRandomTargets ce_RceObtainRandomTargets = 216;
  if (_has_bit(46)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        216, this->ce_rceobtainrandomtargets(), target);
  }
  
  // optional .RceObtainSocialItems ce_RceObtainSocialItems = 217;
  if (_has_bit(47)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        217, this->ce_rceobtainsocialitems(), target);
  }
  
  // optional .RceObtainSocialUserInfo ce_RceObtainSocialUserInfo = 218;
  if (_has_bit(48)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        218, this->ce_rceobtainsocialuserinfo(), target);
  }
  
  // optional .RceObtainUniverse ce_RceObtainUniverse = 219;
  if (_has_bit(49)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        219, this->ce_rceobtainuniverse(), target);
  }
  
  // optional .RceObtainVisitHelps ce_RceObtainVisitHelps = 220;
  if (_has_bit(50)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        220, this->ce_rceobtainvisithelps(), target);
  }
  
  // optional .RceOnlineReward ce_RceOnlineReward = 221;
  if (_has_bit(51)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        221, this->ce_rceonlinereward(), target);
  }
  
  // optional .RceQueryCheckAndLockAccountIfPossible ce_RceQueryCheckAndLockAccountIfPossible = 222;
  if (_has_bit(52)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        222, this->ce_rcequerycheckandlockaccountifpossible(), target);
  }
  
  // optional .RceQueryGalaxyWindow ce_RceQueryGalaxyWindow = 223;
  if (_has_bit(53)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        223, this->ce_rcequerygalaxywindow(), target);
  }
  
  // optional .RceQueryReceiveWishItem ce_RceQueryReceiveWishItem = 224;
  if (_has_bit(54)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        224, this->ce_rcequeryreceivewishitem(), target);
  }
  
  // optional .RceQueryRefuseReceiveWishItem ce_RceQueryRefuseReceiveWishItem = 225;
  if (_has_bit(55)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        225, this->ce_rcequeryrefusereceivewishitem(), target);
  }
  
  // optional .RceQuerySendWishItem ce_RceQuerySendWishItem = 226;
  if (_has_bit(56)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        226, this->ce_rcequerysendwishitem(), target);
  }
  
  // optional .RceQueryStarInfo ce_RceQueryStarInfo = 227;
  if (_has_bit(57)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        227, this->ce_rcequerystarinfo(), target);
  }
  
  // optional .RceQueryStarsBookmarks ce_RceQueryStarsBookmarks = 228;
  if (_has_bit(58)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        228, this->ce_rcequerystarsbookmarks(), target);
  }
  
  // optional .RceQueryVisitHelpsGiftUnitsOnBunker ce_RceQueryVisitHelpsGiftUnitsOnBunker = 229;
  if (_has_bit(59)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        229, this->ce_rcequeryvisithelpsgiftunitsonbunker(), target);
  }
  
  // optional .RceUpdateAlliances ce_RceUpdateAlliances = 230;
  if (_has_bit(60)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        230, this->ce_rceupdatealliances(), target);
  }
  
  // optional .RceUpdateGameUnits ce_RceUpdateGameUnits = 231;
  if (_has_bit(61)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        231, this->ce_rceupdategameunits(), target);
  }
  
  // optional .RceUpdateItem ce_RceUpdateItem = 232;
  if (_has_bit(62)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        232, this->ce_rceupdateitem(), target);
  }
  
  // optional .RceUpdateMisc ce_RceUpdateMisc = 233;
  if (_has_bit(63)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        233, this->ce_rceupdatemisc(), target);
  }
  
  // optional .RceUpdateMissions ce_RceUpdateMissions = 234;
  if (_has_bit(64)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        234, this->ce_rceupdatemissions(), target);
  }
  
  // optional .RceUpdateProfile ce_RceUpdateProfile = 235;
  if (_has_bit(65)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        235, this->ce_rceupdateprofile(), target);
  }
  
  // optional .RceUpdateShips ce_RceUpdateShips = 236;
  if (_has_bit(66)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        236, this->ce_rceupdateships(), target);
  }
  
  // optional .RceUpdateSocialItem ce_RceUpdateSocialItem = 237;
  if (_has_bit(67)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        237, this->ce_rceupdatesocialitem(), target);
  }
  
  // optional .RceUpdateStarsBookmarks ce_RceUpdateStarsBookmarks = 238;
  if (_has_bit(68)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        238, this->ce_rceupdatestarsbookmarks(), target);
  }
  
  // optional .RceUpdateTargets ce_RceUpdateTargets = 239;
  if (_has_bit(69)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        239, this->ce_rceupdatetargets(), target);
  }
  
  // optional .RceUpdateVisitHelp ce_RceUpdateVisitHelp = 240;
  if (_has_bit(70)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        240, this->ce_rceupdatevisithelp(), target);
  }
  
  // optional .RceQueryPvE ce_RceQueryPvE = 241;
  if (_has_bit(71)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        241, this->ce_rcequerypve(), target);
  }
  
  // optional .RseAuthState se_RseAuthState = 500;
  if (_has_bit(72)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        500, this->se_rseauthstate(), target);
  }
  
  // optional .RseCustomizedActivity se_RseCustomizedActivity = 501;
  if (_has_bit(73)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        501, this->se_rsecustomizedactivity(), target);
  }
  
  // optional .RseError se_RseError = 503;
  if (_has_bit(74)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        503, this->se_rseerror(), target);
  }
  
  // optional .RseHeartbeat se_RseHeartbeat = 504;
  if (_has_bit(75)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        504, this->se_rseheartbeat(), target);
  }
  
  // optional .RseLogin se_RseLogin = 506;
  if (_has_bit(76)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        506, this->se_rselogin(), target);
  }
  
  // optional .RseObtainAskForHelp se_RseObtainAskForHelp = 507;
  if (_has_bit(77)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        507, this->se_rseobtainaskforhelp(), target);
  }
  
  // optional .RseObtainAttackerList se_RseObtainAttackerList = 508;
  if (_has_bit(78)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        508, this->se_rseobtainattackerlist(), target);
  }
  
  // optional .RseObtainBattleReplay se_RseObtainBattleReplay = 509;
  if (_has_bit(79)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        509, this->se_rseobtainbattlereplay(), target);
  }
  
  // optional .RseObtainCustomizer se_RseObtainCustomizer = 510;
  if (_has_bit(80)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        510, this->se_rseobtaincustomizer(), target);
  }
  
  // optional .RseObtainHangarsHelp se_RseObtainHangarsHelp = 511;
  if (_has_bit(81)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        511, this->se_rseobtainhangarshelp(), target);
  }
  
  // optional .RseObtainMessagesList se_RseObtainMessagesList = 512;
  if (_has_bit(82)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        512, this->se_rseobtainmessageslist(), target);
  }
  
  // optional .RseObtainNeighborsList se_RseObtainNeighborsList = 513;
  if (_has_bit(83)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        513, this->se_rseobtainneighborslist(), target);
  }
  
  // optional .RseObtainNpcList se_RseObtainNpcList = 514;
  if (_has_bit(84)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        514, this->se_rseobtainnpclist(), target);
  }
  
  // optional .RseObtainPayUrlParame se_RseObtainPayUrlParame = 515;
  if (_has_bit(85)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        515, this->se_rseobtainpayurlparame(), target);
  }
  
  // optional .RseObtainRandomTargets se_RseObtainRandomTargets = 516;
  if (_has_bit(86)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        516, this->se_rseobtainrandomtargets(), target);
  }
  
  // optional .RseObtainSocialItems se_RseObtainSocialItems = 517;
  if (_has_bit(87)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        517, this->se_rseobtainsocialitems(), target);
  }
  
  // optional .RseObtainSocialUserInfo se_RseObtainSocialUserInfo = 518;
  if (_has_bit(88)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        518, this->se_rseobtainsocialuserinfo(), target);
  }
  
  // optional .RseObtainUniverse se_RseObtainUniverse = 519;
  if (_has_bit(89)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        519, this->se_rseobtainuniverse(), target);
  }
  
  // optional .RseObtainVisitHelps se_RseObtainVisitHelps = 520;
  if (_has_bit(90)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        520, this->se_rseobtainvisithelps(), target);
  }
  
  // optional .RseQueryCheckAndLockAccountIfPossible se_RseQueryCheckAndLockAccountIfPossible = 521;
  if (_has_bit(91)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        521, this->se_rsequerycheckandlockaccountifpossible(), target);
  }
  
  // optional .RseQueryGalaxyWindow se_RseQueryGalaxyWindow = 522;
  if (_has_bit(92)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        522, this->se_rsequerygalaxywindow(), target);
  }
  
  // optional .RseQueryReceiveWishItem se_RseQueryReceiveWishItem = 523;
  if (_has_bit(93)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        523, this->se_rsequeryreceivewishitem(), target);
  }
  
  // optional .RseQueryRefuseReceiveWishItem se_RseQueryRefuseReceiveWishItem = 524;
  if (_has_bit(94)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        524, this->se_rsequeryrefusereceivewishitem(), target);
  }
  
  // optional .RseQuerySendWishItem se_RseQuerySendWishItem = 525;
  if (_has_bit(95)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        525, this->se_rsequerysendwishitem(), target);
  }
  
  // optional .RseQueryStarInfo se_RseQueryStarInfo = 526;
  if (_has_bit(96)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        526, this->se_rsequerystarinfo(), target);
  }
  
  // optional .RseQueryStarsBookmarks se_RseQueryStarsBookmarks = 527;
  if (_has_bit(97)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        527, this->se_rsequerystarsbookmarks(), target);
  }
  
  // optional .RseQueryVisitHelpsGiftUnitsOnBunker se_RseQueryVisitHelpsGiftUnitsOnBunker = 528;
  if (_has_bit(98)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        528, this->se_rsequeryvisithelpsgiftunitsonbunker(), target);
  }
  
  // optional .RseUpdateAlliances se_RseUpdateAlliances = 530;
  if (_has_bit(99)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        530, this->se_rseupdatealliances(), target);
  }
  
  // optional .RseUpdateGameUnits se_RseUpdateGameUnits = 531;
  if (_has_bit(100)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        531, this->se_rseupdategameunits(), target);
  }
  
  // optional .RseUpdateItem se_RseUpdateItem = 532;
  if (_has_bit(101)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        532, this->se_rseupdateitem(), target);
  }
  
  // optional .RseUpdateMisc se_RseUpdateMisc = 533;
  if (_has_bit(102)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        533, this->se_rseupdatemisc(), target);
  }
  
  // optional .RseUpdateMissions se_RseUpdateMissions = 534;
  if (_has_bit(103)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        534, this->se_rseupdatemissions(), target);
  }
  
  // optional .RseUpdateProfile se_RseUpdateProfile = 535;
  if (_has_bit(104)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        535, this->se_rseupdateprofile(), target);
  }
  
  // optional .RseUpdateShips se_RseUpdateShips = 536;
  if (_has_bit(105)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        536, this->se_rseupdateships(), target);
  }
  
  // optional .RseUpdateSocialItem se_RseUpdateSocialItem = 537;
  if (_has_bit(106)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        537, this->se_rseupdatesocialitem(), target);
  }
  
  // optional .RseUpdateStarsBookmarks se_RseUpdateStarsBookmarks = 538;
  if (_has_bit(107)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        538, this->se_rseupdatestarsbookmarks(), target);
  }
  
  // optional .RseUpdateTargets se_RseUpdateTargets = 539;
  if (_has_bit(108)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        539, this->se_rseupdatetargets(), target);
  }
  
  // optional .RseBattleDamagesPack se_RseBattleDamagesPack = 540;
  if (_has_bit(109)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        540, this->se_rsebattledamagespack(), target);
  }
  
  // optional .RseItemMineExploded se_RseItemMineExploded = 541;
  if (_has_bit(110)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        541, this->se_rseitemmineexploded(), target);
  }
  
  // optional .RseFinished se_RseFinished = 542;
  if (_has_bit(111)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        542, this->se_rsefinished(), target);
  }
  
  // optional .RseQueryPvE se_RseQueryPvE = 543;
  if (_has_bit(112)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        543, this->se_rsequerypve(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Event::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 cmd = 1;
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cmd());
    }
    
    // required int32 state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
    // required int64 time = 3;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time());
    }
    
    // optional int64 uid = 4;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uid());
    }
    
    // optional int32 fromworld_fd = 5;
    if (has_fromworld_fd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fromworld_fd());
    }
    
    // optional .WorkingStatus_Req workingStatus_req = 6;
    if (has_workingstatus_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->workingstatus_req());
    }
    
    // optional .UserLogin_Req userLogin_req = 7;
    if (has_userlogin_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userlogin_req());
    }
    
    // optional .UserLogin_Rsp userLogin_rsp = 8;
    if (has_userlogin_rsp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userlogin_rsp());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .UserAuth_Req userAuth_req = 9;
    if (has_userauth_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userauth_req());
    }
    
    // optional .UserAuth_Rsp userAuth_rsp = 10;
    if (has_userauth_rsp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userauth_rsp());
    }
    
    // optional .SendRemoteUser_Req sendRemoteUser_req = 11;
    if (has_sendremoteuser_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sendremoteuser_req());
    }
    
    // optional .WG_UserLeave wg_UserLeave = 12;
    if (has_wg_userleave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->wg_userleave());
    }
    
    // optional .GWG_FriendRequest friendinfo = 13;
    if (has_friendinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friendinfo());
    }
    
    // optional .ForwardInfo forwardinfo = 14;
    if (has_forwardinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->forwardinfo());
    }
    
    // optional int32 starSrvID = 15;
    if (has_starsrvid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->starsrvid());
    }
    
    // optional int32 transferSrvID = 18;
    if (has_transfersrvid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transfersrvid());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .WebGetRegion webGetRegion = 19;
    if (has_webgetregion()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->webgetregion());
    }
    
    // optional int32 platSrvID = 20;
    if (has_platsrvid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->platsrvid());
    }
    
    // optional string userPlat = 21;
    if (has_userplat()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->userplat());
    }
    
    // optional int32 worldSrvID = 22;
    if (has_worldsrvid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->worldsrvid());
    }
    
    // optional int32 fightSrvID = 23;
    if (has_fightsrvid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fightsrvid());
    }
    
    // optional .GCG_CountryNeed countryNeed = 24;
    if (has_countryneed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->countryneed());
    }
    
    // optional .GRG_RegionNeed regionNeed = 25;
    if (has_regionneed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->regionneed());
    }
    
    // optional .GRG_RankNeed rankNeed = 26;
    if (has_rankneed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rankneed());
    }
    
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional .GSG_StatNeed statNeed = 27;
    if (has_statneed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->statneed());
    }
    
    // optional .NewStar_Req newStarReq = 28;
    if (has_newstarreq()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->newstarreq());
    }
    
    // optional .NewStar_Rsp newStarRsp = 29;
    if (has_newstarrsp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->newstarrsp());
    }
    
    // optional .GWG_BattleInfo battleInfo = 30;
    if (has_battleinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battleinfo());
    }
    
    // optional .HttpAskMsg httpaskmsg = 114;
    if (has_httpaskmsg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->httpaskmsg());
    }
    
    // optional .HttpAnswerMsg httpanswermsg = 115;
    if (has_httpanswermsg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->httpanswermsg());
    }
    
    // optional .RceBattleDamagesPack ce_RceBattleDamagesPack = 200;
    if (has_ce_rcebattledamagespack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rcebattledamagespack());
    }
    
    // optional .RceCustomizedActivity ce_RceCustomizedActivity = 201;
    if (has_ce_rcecustomizedactivity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rcecustomizedactivity());
    }
    
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional .RceFinished ce_RceFinished = 202;
    if (has_ce_rcefinished()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rcefinished());
    }
    
    // optional .RceHeartbeat ce_RceHeartbeat = 203;
    if (has_ce_rceheartbeat()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceheartbeat());
    }
    
    // optional .RceItemMineExploded ce_RceItemMineExploded = 204;
    if (has_ce_rceitemmineexploded()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceitemmineexploded());
    }
    
    // optional .RceLogin ce_RceLogin = 205;
    if (has_ce_rcelogin()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rcelogin());
    }
    
    // optional .RceNpcAttackStart ce_RceNpcAttackStart = 206;
    if (has_ce_rcenpcattackstart()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rcenpcattackstart());
    }
    
    // optional .RceObtainAskForHelp ce_RceObtainAskForHelp = 207;
    if (has_ce_rceobtainaskforhelp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceobtainaskforhelp());
    }
    
    // optional .RceObtainAttackerList ce_RceObtainAttackerList = 208;
    if (has_ce_rceobtainattackerlist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceobtainattackerlist());
    }
    
    // optional .RceObtainBattleReplay ce_RceObtainBattleReplay = 209;
    if (has_ce_rceobtainbattlereplay()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceobtainbattlereplay());
    }
    
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // optional .RceObtainCustomizer ce_RceObtainCustomizer = 210;
    if (has_ce_rceobtaincustomizer()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceobtaincustomizer());
    }
    
    // optional .RceObtainHangarsHelp ce_RceObtainHangarsHelp = 211;
    if (has_ce_rceobtainhangarshelp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceobtainhangarshelp());
    }
    
    // optional .RceObtainMessagesList ce_RceObtainMessagesList = 212;
    if (has_ce_rceobtainmessageslist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceobtainmessageslist());
    }
    
    // optional .RceObtainNeighborsList ce_RceObtainNeighborsList = 213;
    if (has_ce_rceobtainneighborslist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceobtainneighborslist());
    }
    
    // optional .RceObtainNpcList ce_RceObtainNpcList = 214;
    if (has_ce_rceobtainnpclist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceobtainnpclist());
    }
    
    // optional .RceObtainPayUrlParame ce_RceObtainPayUrlParame = 215;
    if (has_ce_rceobtainpayurlparame()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceobtainpayurlparame());
    }
    
    // optional .RceObtainRandomTargets ce_RceObtainRandomTargets = 216;
    if (has_ce_rceobtainrandomtargets()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceobtainrandomtargets());
    }
    
    // optional .RceObtainSocialItems ce_RceObtainSocialItems = 217;
    if (has_ce_rceobtainsocialitems()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceobtainsocialitems());
    }
    
  }
  if (_has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    // optional .RceObtainSocialUserInfo ce_RceObtainSocialUserInfo = 218;
    if (has_ce_rceobtainsocialuserinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceobtainsocialuserinfo());
    }
    
    // optional .RceObtainUniverse ce_RceObtainUniverse = 219;
    if (has_ce_rceobtainuniverse()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceobtainuniverse());
    }
    
    // optional .RceObtainVisitHelps ce_RceObtainVisitHelps = 220;
    if (has_ce_rceobtainvisithelps()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceobtainvisithelps());
    }
    
    // optional .RceOnlineReward ce_RceOnlineReward = 221;
    if (has_ce_rceonlinereward()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceonlinereward());
    }
    
    // optional .RceQueryCheckAndLockAccountIfPossible ce_RceQueryCheckAndLockAccountIfPossible = 222;
    if (has_ce_rcequerycheckandlockaccountifpossible()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rcequerycheckandlockaccountifpossible());
    }
    
    // optional .RceQueryGalaxyWindow ce_RceQueryGalaxyWindow = 223;
    if (has_ce_rcequerygalaxywindow()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rcequerygalaxywindow());
    }
    
    // optional .RceQueryReceiveWishItem ce_RceQueryReceiveWishItem = 224;
    if (has_ce_rcequeryreceivewishitem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rcequeryreceivewishitem());
    }
    
    // optional .RceQueryRefuseReceiveWishItem ce_RceQueryRefuseReceiveWishItem = 225;
    if (has_ce_rcequeryrefusereceivewishitem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rcequeryrefusereceivewishitem());
    }
    
  }
  if (_has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    // optional .RceQuerySendWishItem ce_RceQuerySendWishItem = 226;
    if (has_ce_rcequerysendwishitem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rcequerysendwishitem());
    }
    
    // optional .RceQueryStarInfo ce_RceQueryStarInfo = 227;
    if (has_ce_rcequerystarinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rcequerystarinfo());
    }
    
    // optional .RceQueryStarsBookmarks ce_RceQueryStarsBookmarks = 228;
    if (has_ce_rcequerystarsbookmarks()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rcequerystarsbookmarks());
    }
    
    // optional .RceQueryVisitHelpsGiftUnitsOnBunker ce_RceQueryVisitHelpsGiftUnitsOnBunker = 229;
    if (has_ce_rcequeryvisithelpsgiftunitsonbunker()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rcequeryvisithelpsgiftunitsonbunker());
    }
    
    // optional .RceUpdateAlliances ce_RceUpdateAlliances = 230;
    if (has_ce_rceupdatealliances()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceupdatealliances());
    }
    
    // optional .RceUpdateGameUnits ce_RceUpdateGameUnits = 231;
    if (has_ce_rceupdategameunits()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceupdategameunits());
    }
    
    // optional .RceUpdateItem ce_RceUpdateItem = 232;
    if (has_ce_rceupdateitem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceupdateitem());
    }
    
    // optional .RceUpdateMisc ce_RceUpdateMisc = 233;
    if (has_ce_rceupdatemisc()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceupdatemisc());
    }
    
  }
  if (_has_bits_[64 / 32] & (0xffu << (64 % 32))) {
    // optional .RceUpdateMissions ce_RceUpdateMissions = 234;
    if (has_ce_rceupdatemissions()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceupdatemissions());
    }
    
    // optional .RceUpdateProfile ce_RceUpdateProfile = 235;
    if (has_ce_rceupdateprofile()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceupdateprofile());
    }
    
    // optional .RceUpdateShips ce_RceUpdateShips = 236;
    if (has_ce_rceupdateships()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceupdateships());
    }
    
    // optional .RceUpdateSocialItem ce_RceUpdateSocialItem = 237;
    if (has_ce_rceupdatesocialitem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceupdatesocialitem());
    }
    
    // optional .RceUpdateStarsBookmarks ce_RceUpdateStarsBookmarks = 238;
    if (has_ce_rceupdatestarsbookmarks()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceupdatestarsbookmarks());
    }
    
    // optional .RceUpdateTargets ce_RceUpdateTargets = 239;
    if (has_ce_rceupdatetargets()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceupdatetargets());
    }
    
    // optional .RceUpdateVisitHelp ce_RceUpdateVisitHelp = 240;
    if (has_ce_rceupdatevisithelp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rceupdatevisithelp());
    }
    
    // optional .RceQueryPvE ce_RceQueryPvE = 241;
    if (has_ce_rcequerypve()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ce_rcequerypve());
    }
    
  }
  if (_has_bits_[72 / 32] & (0xffu << (72 % 32))) {
    // optional .RseAuthState se_RseAuthState = 500;
    if (has_se_rseauthstate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseauthstate());
    }
    
    // optional .RseCustomizedActivity se_RseCustomizedActivity = 501;
    if (has_se_rsecustomizedactivity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rsecustomizedactivity());
    }
    
    // optional .RseError se_RseError = 503;
    if (has_se_rseerror()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseerror());
    }
    
    // optional .RseHeartbeat se_RseHeartbeat = 504;
    if (has_se_rseheartbeat()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseheartbeat());
    }
    
    // optional .RseLogin se_RseLogin = 506;
    if (has_se_rselogin()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rselogin());
    }
    
    // optional .RseObtainAskForHelp se_RseObtainAskForHelp = 507;
    if (has_se_rseobtainaskforhelp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseobtainaskforhelp());
    }
    
    // optional .RseObtainAttackerList se_RseObtainAttackerList = 508;
    if (has_se_rseobtainattackerlist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseobtainattackerlist());
    }
    
    // optional .RseObtainBattleReplay se_RseObtainBattleReplay = 509;
    if (has_se_rseobtainbattlereplay()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseobtainbattlereplay());
    }
    
  }
  if (_has_bits_[80 / 32] & (0xffu << (80 % 32))) {
    // optional .RseObtainCustomizer se_RseObtainCustomizer = 510;
    if (has_se_rseobtaincustomizer()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseobtaincustomizer());
    }
    
    // optional .RseObtainHangarsHelp se_RseObtainHangarsHelp = 511;
    if (has_se_rseobtainhangarshelp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseobtainhangarshelp());
    }
    
    // optional .RseObtainMessagesList se_RseObtainMessagesList = 512;
    if (has_se_rseobtainmessageslist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseobtainmessageslist());
    }
    
    // optional .RseObtainNeighborsList se_RseObtainNeighborsList = 513;
    if (has_se_rseobtainneighborslist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseobtainneighborslist());
    }
    
    // optional .RseObtainNpcList se_RseObtainNpcList = 514;
    if (has_se_rseobtainnpclist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseobtainnpclist());
    }
    
    // optional .RseObtainPayUrlParame se_RseObtainPayUrlParame = 515;
    if (has_se_rseobtainpayurlparame()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseobtainpayurlparame());
    }
    
    // optional .RseObtainRandomTargets se_RseObtainRandomTargets = 516;
    if (has_se_rseobtainrandomtargets()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseobtainrandomtargets());
    }
    
    // optional .RseObtainSocialItems se_RseObtainSocialItems = 517;
    if (has_se_rseobtainsocialitems()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseobtainsocialitems());
    }
    
  }
  if (_has_bits_[88 / 32] & (0xffu << (88 % 32))) {
    // optional .RseObtainSocialUserInfo se_RseObtainSocialUserInfo = 518;
    if (has_se_rseobtainsocialuserinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseobtainsocialuserinfo());
    }
    
    // optional .RseObtainUniverse se_RseObtainUniverse = 519;
    if (has_se_rseobtainuniverse()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseobtainuniverse());
    }
    
    // optional .RseObtainVisitHelps se_RseObtainVisitHelps = 520;
    if (has_se_rseobtainvisithelps()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseobtainvisithelps());
    }
    
    // optional .RseQueryCheckAndLockAccountIfPossible se_RseQueryCheckAndLockAccountIfPossible = 521;
    if (has_se_rsequerycheckandlockaccountifpossible()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rsequerycheckandlockaccountifpossible());
    }
    
    // optional .RseQueryGalaxyWindow se_RseQueryGalaxyWindow = 522;
    if (has_se_rsequerygalaxywindow()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rsequerygalaxywindow());
    }
    
    // optional .RseQueryReceiveWishItem se_RseQueryReceiveWishItem = 523;
    if (has_se_rsequeryreceivewishitem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rsequeryreceivewishitem());
    }
    
    // optional .RseQueryRefuseReceiveWishItem se_RseQueryRefuseReceiveWishItem = 524;
    if (has_se_rsequeryrefusereceivewishitem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rsequeryrefusereceivewishitem());
    }
    
    // optional .RseQuerySendWishItem se_RseQuerySendWishItem = 525;
    if (has_se_rsequerysendwishitem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rsequerysendwishitem());
    }
    
  }
  if (_has_bits_[96 / 32] & (0xffu << (96 % 32))) {
    // optional .RseQueryStarInfo se_RseQueryStarInfo = 526;
    if (has_se_rsequerystarinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rsequerystarinfo());
    }
    
    // optional .RseQueryStarsBookmarks se_RseQueryStarsBookmarks = 527;
    if (has_se_rsequerystarsbookmarks()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rsequerystarsbookmarks());
    }
    
    // optional .RseQueryVisitHelpsGiftUnitsOnBunker se_RseQueryVisitHelpsGiftUnitsOnBunker = 528;
    if (has_se_rsequeryvisithelpsgiftunitsonbunker()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rsequeryvisithelpsgiftunitsonbunker());
    }
    
    // optional .RseUpdateAlliances se_RseUpdateAlliances = 530;
    if (has_se_rseupdatealliances()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseupdatealliances());
    }
    
    // optional .RseUpdateGameUnits se_RseUpdateGameUnits = 531;
    if (has_se_rseupdategameunits()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseupdategameunits());
    }
    
    // optional .RseUpdateItem se_RseUpdateItem = 532;
    if (has_se_rseupdateitem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseupdateitem());
    }
    
    // optional .RseUpdateMisc se_RseUpdateMisc = 533;
    if (has_se_rseupdatemisc()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseupdatemisc());
    }
    
    // optional .RseUpdateMissions se_RseUpdateMissions = 534;
    if (has_se_rseupdatemissions()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseupdatemissions());
    }
    
  }
  if (_has_bits_[104 / 32] & (0xffu << (104 % 32))) {
    // optional .RseUpdateProfile se_RseUpdateProfile = 535;
    if (has_se_rseupdateprofile()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseupdateprofile());
    }
    
    // optional .RseUpdateShips se_RseUpdateShips = 536;
    if (has_se_rseupdateships()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseupdateships());
    }
    
    // optional .RseUpdateSocialItem se_RseUpdateSocialItem = 537;
    if (has_se_rseupdatesocialitem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseupdatesocialitem());
    }
    
    // optional .RseUpdateStarsBookmarks se_RseUpdateStarsBookmarks = 538;
    if (has_se_rseupdatestarsbookmarks()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseupdatestarsbookmarks());
    }
    
    // optional .RseUpdateTargets se_RseUpdateTargets = 539;
    if (has_se_rseupdatetargets()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseupdatetargets());
    }
    
    // optional .RseBattleDamagesPack se_RseBattleDamagesPack = 540;
    if (has_se_rsebattledamagespack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rsebattledamagespack());
    }
    
    // optional .RseItemMineExploded se_RseItemMineExploded = 541;
    if (has_se_rseitemmineexploded()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rseitemmineexploded());
    }
    
    // optional .RseFinished se_RseFinished = 542;
    if (has_se_rsefinished()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rsefinished());
    }
    
  }
  if (_has_bits_[112 / 32] & (0xffu << (112 % 32))) {
    // optional .RseQueryPvE se_RseQueryPvE = 543;
    if (has_se_rsequerypve()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->se_rsequerypve());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Event* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Event*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_cmd(from.cmd());
    }
    if (from._has_bit(1)) {
      set_state(from.state());
    }
    if (from._has_bit(2)) {
      set_time(from.time());
    }
    if (from._has_bit(3)) {
      set_uid(from.uid());
    }
    if (from._has_bit(4)) {
      set_fromworld_fd(from.fromworld_fd());
    }
    if (from._has_bit(5)) {
      mutable_workingstatus_req()->::WorkingStatus_Req::MergeFrom(from.workingstatus_req());
    }
    if (from._has_bit(6)) {
      mutable_userlogin_req()->::UserLogin_Req::MergeFrom(from.userlogin_req());
    }
    if (from._has_bit(7)) {
      mutable_userlogin_rsp()->::UserLogin_Rsp::MergeFrom(from.userlogin_rsp());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      mutable_userauth_req()->::UserAuth_Req::MergeFrom(from.userauth_req());
    }
    if (from._has_bit(9)) {
      mutable_userauth_rsp()->::UserAuth_Rsp::MergeFrom(from.userauth_rsp());
    }
    if (from._has_bit(10)) {
      mutable_sendremoteuser_req()->::SendRemoteUser_Req::MergeFrom(from.sendremoteuser_req());
    }
    if (from._has_bit(11)) {
      mutable_wg_userleave()->::WG_UserLeave::MergeFrom(from.wg_userleave());
    }
    if (from._has_bit(12)) {
      mutable_friendinfo()->::GWG_FriendRequest::MergeFrom(from.friendinfo());
    }
    if (from._has_bit(13)) {
      mutable_forwardinfo()->::ForwardInfo::MergeFrom(from.forwardinfo());
    }
    if (from._has_bit(14)) {
      set_starsrvid(from.starsrvid());
    }
    if (from._has_bit(15)) {
      set_transfersrvid(from.transfersrvid());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from._has_bit(16)) {
      mutable_webgetregion()->::WebGetRegion::MergeFrom(from.webgetregion());
    }
    if (from._has_bit(17)) {
      set_platsrvid(from.platsrvid());
    }
    if (from._has_bit(18)) {
      set_userplat(from.userplat());
    }
    if (from._has_bit(19)) {
      set_worldsrvid(from.worldsrvid());
    }
    if (from._has_bit(20)) {
      set_fightsrvid(from.fightsrvid());
    }
    if (from._has_bit(21)) {
      mutable_countryneed()->::GCG_CountryNeed::MergeFrom(from.countryneed());
    }
    if (from._has_bit(22)) {
      mutable_regionneed()->::GRG_RegionNeed::MergeFrom(from.regionneed());
    }
    if (from._has_bit(23)) {
      mutable_rankneed()->::GRG_RankNeed::MergeFrom(from.rankneed());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from._has_bit(24)) {
      mutable_statneed()->::GSG_StatNeed::MergeFrom(from.statneed());
    }
    if (from._has_bit(25)) {
      mutable_newstarreq()->::NewStar_Req::MergeFrom(from.newstarreq());
    }
    if (from._has_bit(26)) {
      mutable_newstarrsp()->::NewStar_Rsp::MergeFrom(from.newstarrsp());
    }
    if (from._has_bit(27)) {
      mutable_battleinfo()->::GWG_BattleInfo::MergeFrom(from.battleinfo());
    }
    if (from._has_bit(28)) {
      mutable_httpaskmsg()->::HttpAskMsg::MergeFrom(from.httpaskmsg());
    }
    if (from._has_bit(29)) {
      mutable_httpanswermsg()->::HttpAnswerMsg::MergeFrom(from.httpanswermsg());
    }
    if (from._has_bit(30)) {
      mutable_ce_rcebattledamagespack()->::RceBattleDamagesPack::MergeFrom(from.ce_rcebattledamagespack());
    }
    if (from._has_bit(31)) {
      mutable_ce_rcecustomizedactivity()->::RceCustomizedActivity::MergeFrom(from.ce_rcecustomizedactivity());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from._has_bit(32)) {
      mutable_ce_rcefinished()->::RceFinished::MergeFrom(from.ce_rcefinished());
    }
    if (from._has_bit(33)) {
      mutable_ce_rceheartbeat()->::RceHeartbeat::MergeFrom(from.ce_rceheartbeat());
    }
    if (from._has_bit(34)) {
      mutable_ce_rceitemmineexploded()->::RceItemMineExploded::MergeFrom(from.ce_rceitemmineexploded());
    }
    if (from._has_bit(35)) {
      mutable_ce_rcelogin()->::RceLogin::MergeFrom(from.ce_rcelogin());
    }
    if (from._has_bit(36)) {
      mutable_ce_rcenpcattackstart()->::RceNpcAttackStart::MergeFrom(from.ce_rcenpcattackstart());
    }
    if (from._has_bit(37)) {
      mutable_ce_rceobtainaskforhelp()->::RceObtainAskForHelp::MergeFrom(from.ce_rceobtainaskforhelp());
    }
    if (from._has_bit(38)) {
      mutable_ce_rceobtainattackerlist()->::RceObtainAttackerList::MergeFrom(from.ce_rceobtainattackerlist());
    }
    if (from._has_bit(39)) {
      mutable_ce_rceobtainbattlereplay()->::RceObtainBattleReplay::MergeFrom(from.ce_rceobtainbattlereplay());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from._has_bit(40)) {
      mutable_ce_rceobtaincustomizer()->::RceObtainCustomizer::MergeFrom(from.ce_rceobtaincustomizer());
    }
    if (from._has_bit(41)) {
      mutable_ce_rceobtainhangarshelp()->::RceObtainHangarsHelp::MergeFrom(from.ce_rceobtainhangarshelp());
    }
    if (from._has_bit(42)) {
      mutable_ce_rceobtainmessageslist()->::RceObtainMessagesList::MergeFrom(from.ce_rceobtainmessageslist());
    }
    if (from._has_bit(43)) {
      mutable_ce_rceobtainneighborslist()->::RceObtainNeighborsList::MergeFrom(from.ce_rceobtainneighborslist());
    }
    if (from._has_bit(44)) {
      mutable_ce_rceobtainnpclist()->::RceObtainNpcList::MergeFrom(from.ce_rceobtainnpclist());
    }
    if (from._has_bit(45)) {
      mutable_ce_rceobtainpayurlparame()->::RceObtainPayUrlParame::MergeFrom(from.ce_rceobtainpayurlparame());
    }
    if (from._has_bit(46)) {
      mutable_ce_rceobtainrandomtargets()->::RceObtainRandomTargets::MergeFrom(from.ce_rceobtainrandomtargets());
    }
    if (from._has_bit(47)) {
      mutable_ce_rceobtainsocialitems()->::RceObtainSocialItems::MergeFrom(from.ce_rceobtainsocialitems());
    }
  }
  if (from._has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    if (from._has_bit(48)) {
      mutable_ce_rceobtainsocialuserinfo()->::RceObtainSocialUserInfo::MergeFrom(from.ce_rceobtainsocialuserinfo());
    }
    if (from._has_bit(49)) {
      mutable_ce_rceobtainuniverse()->::RceObtainUniverse::MergeFrom(from.ce_rceobtainuniverse());
    }
    if (from._has_bit(50)) {
      mutable_ce_rceobtainvisithelps()->::RceObtainVisitHelps::MergeFrom(from.ce_rceobtainvisithelps());
    }
    if (from._has_bit(51)) {
      mutable_ce_rceonlinereward()->::RceOnlineReward::MergeFrom(from.ce_rceonlinereward());
    }
    if (from._has_bit(52)) {
      mutable_ce_rcequerycheckandlockaccountifpossible()->::RceQueryCheckAndLockAccountIfPossible::MergeFrom(from.ce_rcequerycheckandlockaccountifpossible());
    }
    if (from._has_bit(53)) {
      mutable_ce_rcequerygalaxywindow()->::RceQueryGalaxyWindow::MergeFrom(from.ce_rcequerygalaxywindow());
    }
    if (from._has_bit(54)) {
      mutable_ce_rcequeryreceivewishitem()->::RceQueryReceiveWishItem::MergeFrom(from.ce_rcequeryreceivewishitem());
    }
    if (from._has_bit(55)) {
      mutable_ce_rcequeryrefusereceivewishitem()->::RceQueryRefuseReceiveWishItem::MergeFrom(from.ce_rcequeryrefusereceivewishitem());
    }
  }
  if (from._has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    if (from._has_bit(56)) {
      mutable_ce_rcequerysendwishitem()->::RceQuerySendWishItem::MergeFrom(from.ce_rcequerysendwishitem());
    }
    if (from._has_bit(57)) {
      mutable_ce_rcequerystarinfo()->::RceQueryStarInfo::MergeFrom(from.ce_rcequerystarinfo());
    }
    if (from._has_bit(58)) {
      mutable_ce_rcequerystarsbookmarks()->::RceQueryStarsBookmarks::MergeFrom(from.ce_rcequerystarsbookmarks());
    }
    if (from._has_bit(59)) {
      mutable_ce_rcequeryvisithelpsgiftunitsonbunker()->::RceQueryVisitHelpsGiftUnitsOnBunker::MergeFrom(from.ce_rcequeryvisithelpsgiftunitsonbunker());
    }
    if (from._has_bit(60)) {
      mutable_ce_rceupdatealliances()->::RceUpdateAlliances::MergeFrom(from.ce_rceupdatealliances());
    }
    if (from._has_bit(61)) {
      mutable_ce_rceupdategameunits()->::RceUpdateGameUnits::MergeFrom(from.ce_rceupdategameunits());
    }
    if (from._has_bit(62)) {
      mutable_ce_rceupdateitem()->::RceUpdateItem::MergeFrom(from.ce_rceupdateitem());
    }
    if (from._has_bit(63)) {
      mutable_ce_rceupdatemisc()->::RceUpdateMisc::MergeFrom(from.ce_rceupdatemisc());
    }
  }
  if (from._has_bits_[64 / 32] & (0xffu << (64 % 32))) {
    if (from._has_bit(64)) {
      mutable_ce_rceupdatemissions()->::RceUpdateMissions::MergeFrom(from.ce_rceupdatemissions());
    }
    if (from._has_bit(65)) {
      mutable_ce_rceupdateprofile()->::RceUpdateProfile::MergeFrom(from.ce_rceupdateprofile());
    }
    if (from._has_bit(66)) {
      mutable_ce_rceupdateships()->::RceUpdateShips::MergeFrom(from.ce_rceupdateships());
    }
    if (from._has_bit(67)) {
      mutable_ce_rceupdatesocialitem()->::RceUpdateSocialItem::MergeFrom(from.ce_rceupdatesocialitem());
    }
    if (from._has_bit(68)) {
      mutable_ce_rceupdatestarsbookmarks()->::RceUpdateStarsBookmarks::MergeFrom(from.ce_rceupdatestarsbookmarks());
    }
    if (from._has_bit(69)) {
      mutable_ce_rceupdatetargets()->::RceUpdateTargets::MergeFrom(from.ce_rceupdatetargets());
    }
    if (from._has_bit(70)) {
      mutable_ce_rceupdatevisithelp()->::RceUpdateVisitHelp::MergeFrom(from.ce_rceupdatevisithelp());
    }
    if (from._has_bit(71)) {
      mutable_ce_rcequerypve()->::RceQueryPvE::MergeFrom(from.ce_rcequerypve());
    }
  }
  if (from._has_bits_[72 / 32] & (0xffu << (72 % 32))) {
    if (from._has_bit(72)) {
      mutable_se_rseauthstate()->::RseAuthState::MergeFrom(from.se_rseauthstate());
    }
    if (from._has_bit(73)) {
      mutable_se_rsecustomizedactivity()->::RseCustomizedActivity::MergeFrom(from.se_rsecustomizedactivity());
    }
    if (from._has_bit(74)) {
      mutable_se_rseerror()->::RseError::MergeFrom(from.se_rseerror());
    }
    if (from._has_bit(75)) {
      mutable_se_rseheartbeat()->::RseHeartbeat::MergeFrom(from.se_rseheartbeat());
    }
    if (from._has_bit(76)) {
      mutable_se_rselogin()->::RseLogin::MergeFrom(from.se_rselogin());
    }
    if (from._has_bit(77)) {
      mutable_se_rseobtainaskforhelp()->::RseObtainAskForHelp::MergeFrom(from.se_rseobtainaskforhelp());
    }
    if (from._has_bit(78)) {
      mutable_se_rseobtainattackerlist()->::RseObtainAttackerList::MergeFrom(from.se_rseobtainattackerlist());
    }
    if (from._has_bit(79)) {
      mutable_se_rseobtainbattlereplay()->::RseObtainBattleReplay::MergeFrom(from.se_rseobtainbattlereplay());
    }
  }
  if (from._has_bits_[80 / 32] & (0xffu << (80 % 32))) {
    if (from._has_bit(80)) {
      mutable_se_rseobtaincustomizer()->::RseObtainCustomizer::MergeFrom(from.se_rseobtaincustomizer());
    }
    if (from._has_bit(81)) {
      mutable_se_rseobtainhangarshelp()->::RseObtainHangarsHelp::MergeFrom(from.se_rseobtainhangarshelp());
    }
    if (from._has_bit(82)) {
      mutable_se_rseobtainmessageslist()->::RseObtainMessagesList::MergeFrom(from.se_rseobtainmessageslist());
    }
    if (from._has_bit(83)) {
      mutable_se_rseobtainneighborslist()->::RseObtainNeighborsList::MergeFrom(from.se_rseobtainneighborslist());
    }
    if (from._has_bit(84)) {
      mutable_se_rseobtainnpclist()->::RseObtainNpcList::MergeFrom(from.se_rseobtainnpclist());
    }
    if (from._has_bit(85)) {
      mutable_se_rseobtainpayurlparame()->::RseObtainPayUrlParame::MergeFrom(from.se_rseobtainpayurlparame());
    }
    if (from._has_bit(86)) {
      mutable_se_rseobtainrandomtargets()->::RseObtainRandomTargets::MergeFrom(from.se_rseobtainrandomtargets());
    }
    if (from._has_bit(87)) {
      mutable_se_rseobtainsocialitems()->::RseObtainSocialItems::MergeFrom(from.se_rseobtainsocialitems());
    }
  }
  if (from._has_bits_[88 / 32] & (0xffu << (88 % 32))) {
    if (from._has_bit(88)) {
      mutable_se_rseobtainsocialuserinfo()->::RseObtainSocialUserInfo::MergeFrom(from.se_rseobtainsocialuserinfo());
    }
    if (from._has_bit(89)) {
      mutable_se_rseobtainuniverse()->::RseObtainUniverse::MergeFrom(from.se_rseobtainuniverse());
    }
    if (from._has_bit(90)) {
      mutable_se_rseobtainvisithelps()->::RseObtainVisitHelps::MergeFrom(from.se_rseobtainvisithelps());
    }
    if (from._has_bit(91)) {
      mutable_se_rsequerycheckandlockaccountifpossible()->::RseQueryCheckAndLockAccountIfPossible::MergeFrom(from.se_rsequerycheckandlockaccountifpossible());
    }
    if (from._has_bit(92)) {
      mutable_se_rsequerygalaxywindow()->::RseQueryGalaxyWindow::MergeFrom(from.se_rsequerygalaxywindow());
    }
    if (from._has_bit(93)) {
      mutable_se_rsequeryreceivewishitem()->::RseQueryReceiveWishItem::MergeFrom(from.se_rsequeryreceivewishitem());
    }
    if (from._has_bit(94)) {
      mutable_se_rsequeryrefusereceivewishitem()->::RseQueryRefuseReceiveWishItem::MergeFrom(from.se_rsequeryrefusereceivewishitem());
    }
    if (from._has_bit(95)) {
      mutable_se_rsequerysendwishitem()->::RseQuerySendWishItem::MergeFrom(from.se_rsequerysendwishitem());
    }
  }
  if (from._has_bits_[96 / 32] & (0xffu << (96 % 32))) {
    if (from._has_bit(96)) {
      mutable_se_rsequerystarinfo()->::RseQueryStarInfo::MergeFrom(from.se_rsequerystarinfo());
    }
    if (from._has_bit(97)) {
      mutable_se_rsequerystarsbookmarks()->::RseQueryStarsBookmarks::MergeFrom(from.se_rsequerystarsbookmarks());
    }
    if (from._has_bit(98)) {
      mutable_se_rsequeryvisithelpsgiftunitsonbunker()->::RseQueryVisitHelpsGiftUnitsOnBunker::MergeFrom(from.se_rsequeryvisithelpsgiftunitsonbunker());
    }
    if (from._has_bit(99)) {
      mutable_se_rseupdatealliances()->::RseUpdateAlliances::MergeFrom(from.se_rseupdatealliances());
    }
    if (from._has_bit(100)) {
      mutable_se_rseupdategameunits()->::RseUpdateGameUnits::MergeFrom(from.se_rseupdategameunits());
    }
    if (from._has_bit(101)) {
      mutable_se_rseupdateitem()->::RseUpdateItem::MergeFrom(from.se_rseupdateitem());
    }
    if (from._has_bit(102)) {
      mutable_se_rseupdatemisc()->::RseUpdateMisc::MergeFrom(from.se_rseupdatemisc());
    }
    if (from._has_bit(103)) {
      mutable_se_rseupdatemissions()->::RseUpdateMissions::MergeFrom(from.se_rseupdatemissions());
    }
  }
  if (from._has_bits_[104 / 32] & (0xffu << (104 % 32))) {
    if (from._has_bit(104)) {
      mutable_se_rseupdateprofile()->::RseUpdateProfile::MergeFrom(from.se_rseupdateprofile());
    }
    if (from._has_bit(105)) {
      mutable_se_rseupdateships()->::RseUpdateShips::MergeFrom(from.se_rseupdateships());
    }
    if (from._has_bit(106)) {
      mutable_se_rseupdatesocialitem()->::RseUpdateSocialItem::MergeFrom(from.se_rseupdatesocialitem());
    }
    if (from._has_bit(107)) {
      mutable_se_rseupdatestarsbookmarks()->::RseUpdateStarsBookmarks::MergeFrom(from.se_rseupdatestarsbookmarks());
    }
    if (from._has_bit(108)) {
      mutable_se_rseupdatetargets()->::RseUpdateTargets::MergeFrom(from.se_rseupdatetargets());
    }
    if (from._has_bit(109)) {
      mutable_se_rsebattledamagespack()->::RseBattleDamagesPack::MergeFrom(from.se_rsebattledamagespack());
    }
    if (from._has_bit(110)) {
      mutable_se_rseitemmineexploded()->::RseItemMineExploded::MergeFrom(from.se_rseitemmineexploded());
    }
    if (from._has_bit(111)) {
      mutable_se_rsefinished()->::RseFinished::MergeFrom(from.se_rsefinished());
    }
  }
  if (from._has_bits_[112 / 32] & (0xffu << (112 % 32))) {
    if (from._has_bit(112)) {
      mutable_se_rsequerypve()->::RseQueryPvE::MergeFrom(from.se_rsequerypve());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_workingstatus_req()) {
    if (!this->workingstatus_req().IsInitialized()) return false;
  }
  if (has_userlogin_req()) {
    if (!this->userlogin_req().IsInitialized()) return false;
  }
  if (has_userlogin_rsp()) {
    if (!this->userlogin_rsp().IsInitialized()) return false;
  }
  if (has_userauth_req()) {
    if (!this->userauth_req().IsInitialized()) return false;
  }
  if (has_userauth_rsp()) {
    if (!this->userauth_rsp().IsInitialized()) return false;
  }
  if (has_sendremoteuser_req()) {
    if (!this->sendremoteuser_req().IsInitialized()) return false;
  }
  if (has_wg_userleave()) {
    if (!this->wg_userleave().IsInitialized()) return false;
  }
  if (has_friendinfo()) {
    if (!this->friendinfo().IsInitialized()) return false;
  }
  if (has_webgetregion()) {
    if (!this->webgetregion().IsInitialized()) return false;
  }
  if (has_se_rseauthstate()) {
    if (!this->se_rseauthstate().IsInitialized()) return false;
  }
  if (has_se_rseerror()) {
    if (!this->se_rseerror().IsInitialized()) return false;
  }
  return true;
}

void Event::Swap(Event* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(state_, other->state_);
    std::swap(time_, other->time_);
    std::swap(uid_, other->uid_);
    std::swap(fromworld_fd_, other->fromworld_fd_);
    std::swap(workingstatus_req_, other->workingstatus_req_);
    std::swap(userlogin_req_, other->userlogin_req_);
    std::swap(userlogin_rsp_, other->userlogin_rsp_);
    std::swap(userauth_req_, other->userauth_req_);
    std::swap(userauth_rsp_, other->userauth_rsp_);
    std::swap(sendremoteuser_req_, other->sendremoteuser_req_);
    std::swap(wg_userleave_, other->wg_userleave_);
    std::swap(friendinfo_, other->friendinfo_);
    std::swap(forwardinfo_, other->forwardinfo_);
    std::swap(starsrvid_, other->starsrvid_);
    std::swap(transfersrvid_, other->transfersrvid_);
    std::swap(webgetregion_, other->webgetregion_);
    std::swap(platsrvid_, other->platsrvid_);
    std::swap(userplat_, other->userplat_);
    std::swap(worldsrvid_, other->worldsrvid_);
    std::swap(fightsrvid_, other->fightsrvid_);
    std::swap(countryneed_, other->countryneed_);
    std::swap(regionneed_, other->regionneed_);
    std::swap(rankneed_, other->rankneed_);
    std::swap(statneed_, other->statneed_);
    std::swap(newstarreq_, other->newstarreq_);
    std::swap(newstarrsp_, other->newstarrsp_);
    std::swap(battleinfo_, other->battleinfo_);
    std::swap(httpaskmsg_, other->httpaskmsg_);
    std::swap(httpanswermsg_, other->httpanswermsg_);
    std::swap(ce_rcebattledamagespack_, other->ce_rcebattledamagespack_);
    std::swap(ce_rcecustomizedactivity_, other->ce_rcecustomizedactivity_);
    std::swap(ce_rcefinished_, other->ce_rcefinished_);
    std::swap(ce_rceheartbeat_, other->ce_rceheartbeat_);
    std::swap(ce_rceitemmineexploded_, other->ce_rceitemmineexploded_);
    std::swap(ce_rcelogin_, other->ce_rcelogin_);
    std::swap(ce_rcenpcattackstart_, other->ce_rcenpcattackstart_);
    std::swap(ce_rceobtainaskforhelp_, other->ce_rceobtainaskforhelp_);
    std::swap(ce_rceobtainattackerlist_, other->ce_rceobtainattackerlist_);
    std::swap(ce_rceobtainbattlereplay_, other->ce_rceobtainbattlereplay_);
    std::swap(ce_rceobtaincustomizer_, other->ce_rceobtaincustomizer_);
    std::swap(ce_rceobtainhangarshelp_, other->ce_rceobtainhangarshelp_);
    std::swap(ce_rceobtainmessageslist_, other->ce_rceobtainmessageslist_);
    std::swap(ce_rceobtainneighborslist_, other->ce_rceobtainneighborslist_);
    std::swap(ce_rceobtainnpclist_, other->ce_rceobtainnpclist_);
    std::swap(ce_rceobtainpayurlparame_, other->ce_rceobtainpayurlparame_);
    std::swap(ce_rceobtainrandomtargets_, other->ce_rceobtainrandomtargets_);
    std::swap(ce_rceobtainsocialitems_, other->ce_rceobtainsocialitems_);
    std::swap(ce_rceobtainsocialuserinfo_, other->ce_rceobtainsocialuserinfo_);
    std::swap(ce_rceobtainuniverse_, other->ce_rceobtainuniverse_);
    std::swap(ce_rceobtainvisithelps_, other->ce_rceobtainvisithelps_);
    std::swap(ce_rceonlinereward_, other->ce_rceonlinereward_);
    std::swap(ce_rcequerycheckandlockaccountifpossible_, other->ce_rcequerycheckandlockaccountifpossible_);
    std::swap(ce_rcequerygalaxywindow_, other->ce_rcequerygalaxywindow_);
    std::swap(ce_rcequeryreceivewishitem_, other->ce_rcequeryreceivewishitem_);
    std::swap(ce_rcequeryrefusereceivewishitem_, other->ce_rcequeryrefusereceivewishitem_);
    std::swap(ce_rcequerysendwishitem_, other->ce_rcequerysendwishitem_);
    std::swap(ce_rcequerystarinfo_, other->ce_rcequerystarinfo_);
    std::swap(ce_rcequerystarsbookmarks_, other->ce_rcequerystarsbookmarks_);
    std::swap(ce_rcequeryvisithelpsgiftunitsonbunker_, other->ce_rcequeryvisithelpsgiftunitsonbunker_);
    std::swap(ce_rceupdatealliances_, other->ce_rceupdatealliances_);
    std::swap(ce_rceupdategameunits_, other->ce_rceupdategameunits_);
    std::swap(ce_rceupdateitem_, other->ce_rceupdateitem_);
    std::swap(ce_rceupdatemisc_, other->ce_rceupdatemisc_);
    std::swap(ce_rceupdatemissions_, other->ce_rceupdatemissions_);
    std::swap(ce_rceupdateprofile_, other->ce_rceupdateprofile_);
    std::swap(ce_rceupdateships_, other->ce_rceupdateships_);
    std::swap(ce_rceupdatesocialitem_, other->ce_rceupdatesocialitem_);
    std::swap(ce_rceupdatestarsbookmarks_, other->ce_rceupdatestarsbookmarks_);
    std::swap(ce_rceupdatetargets_, other->ce_rceupdatetargets_);
    std::swap(ce_rceupdatevisithelp_, other->ce_rceupdatevisithelp_);
    std::swap(ce_rcequerypve_, other->ce_rcequerypve_);
    std::swap(se_rseauthstate_, other->se_rseauthstate_);
    std::swap(se_rsecustomizedactivity_, other->se_rsecustomizedactivity_);
    std::swap(se_rseerror_, other->se_rseerror_);
    std::swap(se_rseheartbeat_, other->se_rseheartbeat_);
    std::swap(se_rselogin_, other->se_rselogin_);
    std::swap(se_rseobtainaskforhelp_, other->se_rseobtainaskforhelp_);
    std::swap(se_rseobtainattackerlist_, other->se_rseobtainattackerlist_);
    std::swap(se_rseobtainbattlereplay_, other->se_rseobtainbattlereplay_);
    std::swap(se_rseobtaincustomizer_, other->se_rseobtaincustomizer_);
    std::swap(se_rseobtainhangarshelp_, other->se_rseobtainhangarshelp_);
    std::swap(se_rseobtainmessageslist_, other->se_rseobtainmessageslist_);
    std::swap(se_rseobtainneighborslist_, other->se_rseobtainneighborslist_);
    std::swap(se_rseobtainnpclist_, other->se_rseobtainnpclist_);
    std::swap(se_rseobtainpayurlparame_, other->se_rseobtainpayurlparame_);
    std::swap(se_rseobtainrandomtargets_, other->se_rseobtainrandomtargets_);
    std::swap(se_rseobtainsocialitems_, other->se_rseobtainsocialitems_);
    std::swap(se_rseobtainsocialuserinfo_, other->se_rseobtainsocialuserinfo_);
    std::swap(se_rseobtainuniverse_, other->se_rseobtainuniverse_);
    std::swap(se_rseobtainvisithelps_, other->se_rseobtainvisithelps_);
    std::swap(se_rsequerycheckandlockaccountifpossible_, other->se_rsequerycheckandlockaccountifpossible_);
    std::swap(se_rsequerygalaxywindow_, other->se_rsequerygalaxywindow_);
    std::swap(se_rsequeryreceivewishitem_, other->se_rsequeryreceivewishitem_);
    std::swap(se_rsequeryrefusereceivewishitem_, other->se_rsequeryrefusereceivewishitem_);
    std::swap(se_rsequerysendwishitem_, other->se_rsequerysendwishitem_);
    std::swap(se_rsequerystarinfo_, other->se_rsequerystarinfo_);
    std::swap(se_rsequerystarsbookmarks_, other->se_rsequerystarsbookmarks_);
    std::swap(se_rsequeryvisithelpsgiftunitsonbunker_, other->se_rsequeryvisithelpsgiftunitsonbunker_);
    std::swap(se_rseupdatealliances_, other->se_rseupdatealliances_);
    std::swap(se_rseupdategameunits_, other->se_rseupdategameunits_);
    std::swap(se_rseupdateitem_, other->se_rseupdateitem_);
    std::swap(se_rseupdatemisc_, other->se_rseupdatemisc_);
    std::swap(se_rseupdatemissions_, other->se_rseupdatemissions_);
    std::swap(se_rseupdateprofile_, other->se_rseupdateprofile_);
    std::swap(se_rseupdateships_, other->se_rseupdateships_);
    std::swap(se_rseupdatesocialitem_, other->se_rseupdatesocialitem_);
    std::swap(se_rseupdatestarsbookmarks_, other->se_rseupdatestarsbookmarks_);
    std::swap(se_rseupdatetargets_, other->se_rseupdatetargets_);
    std::swap(se_rsebattledamagespack_, other->se_rsebattledamagespack_);
    std::swap(se_rseitemmineexploded_, other->se_rseitemmineexploded_);
    std::swap(se_rsefinished_, other->se_rsefinished_);
    std::swap(se_rsequerypve_, other->se_rsequerypve_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    std::swap(_has_bits_[2], other->_has_bits_[2]);
    std::swap(_has_bits_[3], other->_has_bits_[3]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Event::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Event_descriptor_;
  metadata.reflection = Event_reflection_;
  return metadata;
}

