// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_RseObtainUniverse_2eproto__INCLUDED
#define PROTOBUF_RseObtainUniverse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "MsgBuildingItem.pb.h"
#include "MsgPlanet.pb.h"
#include "MsgMission.pb.h"
#include "MsgShipyard.pb.h"
#include "MsgHangars.pb.h"
#include "MsgBunker.pb.h"
#include "MsgGameUnit.pb.h"

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RseObtainUniverse_2eproto();
void protobuf_AssignDesc_RseObtainUniverse_2eproto();
void protobuf_ShutdownFile_RseObtainUniverse_2eproto();

class MsgSlot;
class RseObtainUniverse;

// ===================================================================

class MsgSlot : public ::google::protobuf::Message {
 public:
  MsgSlot();
  virtual ~MsgSlot();
  
  MsgSlot(const MsgSlot& from);
  
  inline MsgSlot& operator=(const MsgSlot& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSlot& default_instance();
  void Swap(MsgSlot* other);
  
  // implements Message ----------------------------------------------
  
  MsgSlot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSlot& from);
  void MergeFrom(const MsgSlot& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 Ship = 1;
  inline int ship_size() const;
  inline void clear_ship();
  static const int kShipFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& ship() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_ship();
  inline ::google::protobuf::int32 ship(int index) const;
  inline void set_ship(int index, ::google::protobuf::int32 value);
  inline void add_ship(::google::protobuf::int32 value);
  
  // optional int32 timeLeft = 2;
  inline bool has_timeleft() const;
  inline void clear_timeleft();
  static const int kTimeLeftFieldNumber = 2;
  inline ::google::protobuf::int32 timeleft() const;
  inline void set_timeleft(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ship_;
  ::google::protobuf::int32 timeleft_;
  friend void  protobuf_AddDesc_RseObtainUniverse_2eproto();
  friend void protobuf_AssignDesc_RseObtainUniverse_2eproto();
  friend void protobuf_ShutdownFile_RseObtainUniverse_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgSlot* default_instance_;
};
// -------------------------------------------------------------------

class RseObtainUniverse : public ::google::protobuf::Message {
 public:
  RseObtainUniverse();
  virtual ~RseObtainUniverse();
  
  RseObtainUniverse(const RseObtainUniverse& from);
  
  inline RseObtainUniverse& operator=(const RseObtainUniverse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RseObtainUniverse& default_instance();
  void Swap(RseObtainUniverse* other);
  
  // implements Message ----------------------------------------------
  
  RseObtainUniverse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RseObtainUniverse& from);
  void MergeFrom(const RseObtainUniverse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool vip = 1;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 1;
  inline bool vip() const;
  inline void set_vip(bool value);
  
  // optional bool yearVip = 2;
  inline bool has_yearvip() const;
  inline void clear_yearvip();
  static const int kYearVipFieldNumber = 2;
  inline bool yearvip() const;
  inline void set_yearvip(bool value);
  
  // optional int32 vipLevel = 3;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 3;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);
  
  // optional bool newPlayerGiftBag = 4;
  inline bool has_newplayergiftbag() const;
  inline void clear_newplayergiftbag();
  static const int kNewPlayerGiftBagFieldNumber = 4;
  inline bool newplayergiftbag() const;
  inline void set_newplayergiftbag(bool value);
  
  // optional bool everydayGiftBag = 5;
  inline bool has_everydaygiftbag() const;
  inline void clear_everydaygiftbag();
  static const int kEverydayGiftBagFieldNumber = 5;
  inline bool everydaygiftbag() const;
  inline void set_everydaygiftbag(bool value);
  
  // optional int32 spyCapsulesTimeLeft = 6;
  inline bool has_spycapsulestimeleft() const;
  inline void clear_spycapsulestimeleft();
  static const int kSpyCapsulesTimeLeftFieldNumber = 6;
  inline ::google::protobuf::int32 spycapsulestimeleft() const;
  inline void set_spycapsulestimeleft(::google::protobuf::int32 value);
  
  // optional string DCPlayerName = 7;
  inline bool has_dcplayername() const;
  inline void clear_dcplayername();
  static const int kDCPlayerNameFieldNumber = 7;
  inline const ::std::string& dcplayername() const;
  inline void set_dcplayername(const ::std::string& value);
  inline void set_dcplayername(const char* value);
  inline void set_dcplayername(const char* value, size_t size);
  inline ::std::string* mutable_dcplayername();
  
  // optional string DCWorldName = 8;
  inline bool has_dcworldname() const;
  inline void clear_dcworldname();
  static const int kDCWorldNameFieldNumber = 8;
  inline const ::std::string& dcworldname() const;
  inline void set_dcworldname(const ::std::string& value);
  inline void set_dcworldname(const char* value);
  inline void set_dcworldname(const char* value, size_t size);
  inline ::std::string* mutable_dcworldname();
  
  // optional int32 levelBasedOnScore = 9;
  inline bool has_levelbasedonscore() const;
  inline void clear_levelbasedonscore();
  static const int kLevelBasedOnScoreFieldNumber = 9;
  inline ::google::protobuf::int32 levelbasedonscore() const;
  inline void set_levelbasedonscore(::google::protobuf::int32 value);
  
  // optional int32 DCPlayerRank = 10;
  inline bool has_dcplayerrank() const;
  inline void clear_dcplayerrank();
  static const int kDCPlayerRankFieldNumber = 10;
  inline ::google::protobuf::int32 dcplayerrank() const;
  inline void set_dcplayerrank(::google::protobuf::int32 value);
  
  // optional int32 DCCoins = 11;
  inline bool has_dccoins() const;
  inline void clear_dccoins();
  static const int kDCCoinsFieldNumber = 11;
  inline ::google::protobuf::int32 dccoins() const;
  inline void set_dccoins(::google::protobuf::int32 value);
  
  // optional int32 DCMinerals = 12;
  inline bool has_dcminerals() const;
  inline void clear_dcminerals();
  static const int kDCMineralsFieldNumber = 12;
  inline ::google::protobuf::int32 dcminerals() const;
  inline void set_dcminerals(::google::protobuf::int32 value);
  
  // optional int32 score = 13;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 13;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);
  
  // optional int32 exp = 14;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 14;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
  // optional int32 lastVisitTime = 15;
  inline bool has_lastvisittime() const;
  inline void clear_lastvisittime();
  static const int kLastVisitTimeFieldNumber = 15;
  inline ::google::protobuf::int32 lastvisittime() const;
  inline void set_lastvisittime(::google::protobuf::int32 value);
  
  // optional int32 lastLevelNotified = 16;
  inline bool has_lastlevelnotified() const;
  inline void clear_lastlevelnotified();
  static const int kLastLevelNotifiedFieldNumber = 16;
  inline ::google::protobuf::int32 lastlevelnotified() const;
  inline void set_lastlevelnotified(::google::protobuf::int32 value);
  
  // optional int32 DCCash = 17;
  inline bool has_dccash() const;
  inline void clear_dccash();
  static const int kDCCashFieldNumber = 17;
  inline ::google::protobuf::int32 dccash() const;
  inline void set_dccash(::google::protobuf::int32 value);
  
  // optional int32 DCDroids = 18;
  inline bool has_dcdroids() const;
  inline void clear_dcdroids();
  static const int kDCDroidsFieldNumber = 18;
  inline ::google::protobuf::int32 dcdroids() const;
  inline void set_dcdroids(::google::protobuf::int32 value);
  
  // optional int32 DCDroidsInUse = 19;
  inline bool has_dcdroidsinuse() const;
  inline void clear_dcdroidsinuse();
  static const int kDCDroidsInUseFieldNumber = 19;
  inline ::google::protobuf::int32 dcdroidsinuse() const;
  inline void set_dcdroidsinuse(::google::protobuf::int32 value);
  
  // optional int32 damageProtectionTimeLeft = 20;
  inline bool has_damageprotectiontimeleft() const;
  inline void clear_damageprotectiontimeleft();
  static const int kDamageProtectionTimeLeftFieldNumber = 20;
  inline ::google::protobuf::int32 damageprotectiontimeleft() const;
  inline void set_damageprotectiontimeleft(::google::protobuf::int32 value);
  
  // optional int32 damageProtectionTimeTotal = 21;
  inline bool has_damageprotectiontimetotal() const;
  inline void clear_damageprotectiontimetotal();
  static const int kDamageProtectionTimeTotalFieldNumber = 21;
  inline ::google::protobuf::int32 damageprotectiontimetotal() const;
  inline void set_damageprotectiontimetotal(::google::protobuf::int32 value);
  
  // optional bool tutorialCompleted = 22;
  inline bool has_tutorialcompleted() const;
  inline void clear_tutorialcompleted();
  static const int kTutorialCompletedFieldNumber = 22;
  inline bool tutorialcompleted() const;
  inline void set_tutorialcompleted(bool value);
  
  // optional string flags = 23;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 23;
  inline const ::std::string& flags() const;
  inline void set_flags(const ::std::string& value);
  inline void set_flags(const char* value);
  inline void set_flags(const char* value, size_t size);
  inline ::std::string* mutable_flags();
  
  // optional .MsgMissionState Missions = 24;
  inline bool has_missions() const;
  inline void clear_missions();
  static const int kMissionsFieldNumber = 24;
  inline const ::MsgMissionState& missions() const;
  inline ::MsgMissionState* mutable_missions();
  
  // repeated .MsgPlanet Planets = 25;
  inline int planets_size() const;
  inline void clear_planets();
  static const int kPlanetsFieldNumber = 25;
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPlanet >& planets() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPlanet >* mutable_planets();
  inline const ::MsgPlanet& planets(int index) const;
  inline ::MsgPlanet* mutable_planets(int index);
  inline ::MsgPlanet* add_planets();
  
  // repeated .MsgBuildingItem Items = 26;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 26;
  inline const ::google::protobuf::RepeatedPtrField< ::MsgBuildingItem >& items() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgBuildingItem >* mutable_items();
  inline const ::MsgBuildingItem& items(int index) const;
  inline ::MsgBuildingItem* mutable_items(int index);
  inline ::MsgBuildingItem* add_items();
  
  // repeated .MsgShipyard Shipyards = 27;
  inline int shipyards_size() const;
  inline void clear_shipyards();
  static const int kShipyardsFieldNumber = 27;
  inline const ::google::protobuf::RepeatedPtrField< ::MsgShipyard >& shipyards() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgShipyard >* mutable_shipyards();
  inline const ::MsgShipyard& shipyards(int index) const;
  inline ::MsgShipyard* mutable_shipyards(int index);
  inline ::MsgShipyard* add_shipyards();
  
  // repeated .MsgHangars Hangars = 28;
  inline int hangars_size() const;
  inline void clear_hangars();
  static const int kHangarsFieldNumber = 28;
  inline const ::google::protobuf::RepeatedPtrField< ::MsgHangars >& hangars() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgHangars >* mutable_hangars();
  inline const ::MsgHangars& hangars(int index) const;
  inline ::MsgHangars* mutable_hangars(int index);
  inline ::MsgHangars* add_hangars();
  
  // repeated .MsgBunker Bunkers = 29;
  inline int bunkers_size() const;
  inline void clear_bunkers();
  static const int kBunkersFieldNumber = 29;
  inline const ::google::protobuf::RepeatedPtrField< ::MsgBunker >& bunkers() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgBunker >* mutable_bunkers();
  inline const ::MsgBunker& bunkers(int index) const;
  inline ::MsgBunker* mutable_bunkers(int index);
  inline ::MsgBunker* add_bunkers();
  
  // repeated .MsgGameUnit GameUnits = 30;
  inline int gameunits_size() const;
  inline void clear_gameunits();
  static const int kGameUnitsFieldNumber = 30;
  inline const ::google::protobuf::RepeatedPtrField< ::MsgGameUnit >& gameunits() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgGameUnit >* mutable_gameunits();
  inline const ::MsgGameUnit& gameunits(int index) const;
  inline ::MsgGameUnit* mutable_gameunits(int index);
  inline ::MsgGameUnit* add_gameunits();
  
  // optional string npc = 31;
  inline bool has_npc() const;
  inline void clear_npc();
  static const int kNpcFieldNumber = 31;
  inline const ::std::string& npc() const;
  inline void set_npc(const ::std::string& value);
  inline void set_npc(const char* value);
  inline void set_npc(const char* value, size_t size);
  inline ::std::string* mutable_npc();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool vip_;
  bool yearvip_;
  ::google::protobuf::int32 viplevel_;
  bool newplayergiftbag_;
  bool everydaygiftbag_;
  ::google::protobuf::int32 spycapsulestimeleft_;
  ::std::string* dcplayername_;
  static const ::std::string _default_dcplayername_;
  ::std::string* dcworldname_;
  static const ::std::string _default_dcworldname_;
  ::google::protobuf::int32 levelbasedonscore_;
  ::google::protobuf::int32 dcplayerrank_;
  ::google::protobuf::int32 dccoins_;
  ::google::protobuf::int32 dcminerals_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 lastvisittime_;
  ::google::protobuf::int32 lastlevelnotified_;
  ::google::protobuf::int32 dccash_;
  ::google::protobuf::int32 dcdroids_;
  ::google::protobuf::int32 dcdroidsinuse_;
  ::google::protobuf::int32 damageprotectiontimeleft_;
  ::google::protobuf::int32 damageprotectiontimetotal_;
  bool tutorialcompleted_;
  ::std::string* flags_;
  static const ::std::string _default_flags_;
  ::MsgMissionState* missions_;
  ::google::protobuf::RepeatedPtrField< ::MsgPlanet > planets_;
  ::google::protobuf::RepeatedPtrField< ::MsgBuildingItem > items_;
  ::google::protobuf::RepeatedPtrField< ::MsgShipyard > shipyards_;
  ::google::protobuf::RepeatedPtrField< ::MsgHangars > hangars_;
  ::google::protobuf::RepeatedPtrField< ::MsgBunker > bunkers_;
  ::google::protobuf::RepeatedPtrField< ::MsgGameUnit > gameunits_;
  ::std::string* npc_;
  static const ::std::string _default_npc_;
  friend void  protobuf_AddDesc_RseObtainUniverse_2eproto();
  friend void protobuf_AssignDesc_RseObtainUniverse_2eproto();
  friend void protobuf_ShutdownFile_RseObtainUniverse_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(31 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RseObtainUniverse* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// MsgSlot

// repeated int32 Ship = 1;
inline int MsgSlot::ship_size() const {
  return ship_.size();
}
inline void MsgSlot::clear_ship() {
  ship_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgSlot::ship() const {
  return ship_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgSlot::mutable_ship() {
  return &ship_;
}
inline ::google::protobuf::int32 MsgSlot::ship(int index) const {
  return ship_.Get(index);
}
inline void MsgSlot::set_ship(int index, ::google::protobuf::int32 value) {
  ship_.Set(index, value);
}
inline void MsgSlot::add_ship(::google::protobuf::int32 value) {
  ship_.Add(value);
}

// optional int32 timeLeft = 2;
inline bool MsgSlot::has_timeleft() const {
  return _has_bit(1);
}
inline void MsgSlot::clear_timeleft() {
  timeleft_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 MsgSlot::timeleft() const {
  return timeleft_;
}
inline void MsgSlot::set_timeleft(::google::protobuf::int32 value) {
  _set_bit(1);
  timeleft_ = value;
}

// -------------------------------------------------------------------

// RseObtainUniverse

// optional bool vip = 1;
inline bool RseObtainUniverse::has_vip() const {
  return _has_bit(0);
}
inline void RseObtainUniverse::clear_vip() {
  vip_ = false;
  _clear_bit(0);
}
inline bool RseObtainUniverse::vip() const {
  return vip_;
}
inline void RseObtainUniverse::set_vip(bool value) {
  _set_bit(0);
  vip_ = value;
}

// optional bool yearVip = 2;
inline bool RseObtainUniverse::has_yearvip() const {
  return _has_bit(1);
}
inline void RseObtainUniverse::clear_yearvip() {
  yearvip_ = false;
  _clear_bit(1);
}
inline bool RseObtainUniverse::yearvip() const {
  return yearvip_;
}
inline void RseObtainUniverse::set_yearvip(bool value) {
  _set_bit(1);
  yearvip_ = value;
}

// optional int32 vipLevel = 3;
inline bool RseObtainUniverse::has_viplevel() const {
  return _has_bit(2);
}
inline void RseObtainUniverse::clear_viplevel() {
  viplevel_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 RseObtainUniverse::viplevel() const {
  return viplevel_;
}
inline void RseObtainUniverse::set_viplevel(::google::protobuf::int32 value) {
  _set_bit(2);
  viplevel_ = value;
}

// optional bool newPlayerGiftBag = 4;
inline bool RseObtainUniverse::has_newplayergiftbag() const {
  return _has_bit(3);
}
inline void RseObtainUniverse::clear_newplayergiftbag() {
  newplayergiftbag_ = false;
  _clear_bit(3);
}
inline bool RseObtainUniverse::newplayergiftbag() const {
  return newplayergiftbag_;
}
inline void RseObtainUniverse::set_newplayergiftbag(bool value) {
  _set_bit(3);
  newplayergiftbag_ = value;
}

// optional bool everydayGiftBag = 5;
inline bool RseObtainUniverse::has_everydaygiftbag() const {
  return _has_bit(4);
}
inline void RseObtainUniverse::clear_everydaygiftbag() {
  everydaygiftbag_ = false;
  _clear_bit(4);
}
inline bool RseObtainUniverse::everydaygiftbag() const {
  return everydaygiftbag_;
}
inline void RseObtainUniverse::set_everydaygiftbag(bool value) {
  _set_bit(4);
  everydaygiftbag_ = value;
}

// optional int32 spyCapsulesTimeLeft = 6;
inline bool RseObtainUniverse::has_spycapsulestimeleft() const {
  return _has_bit(5);
}
inline void RseObtainUniverse::clear_spycapsulestimeleft() {
  spycapsulestimeleft_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 RseObtainUniverse::spycapsulestimeleft() const {
  return spycapsulestimeleft_;
}
inline void RseObtainUniverse::set_spycapsulestimeleft(::google::protobuf::int32 value) {
  _set_bit(5);
  spycapsulestimeleft_ = value;
}

// optional string DCPlayerName = 7;
inline bool RseObtainUniverse::has_dcplayername() const {
  return _has_bit(6);
}
inline void RseObtainUniverse::clear_dcplayername() {
  if (dcplayername_ != &_default_dcplayername_) {
    dcplayername_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& RseObtainUniverse::dcplayername() const {
  return *dcplayername_;
}
inline void RseObtainUniverse::set_dcplayername(const ::std::string& value) {
  _set_bit(6);
  if (dcplayername_ == &_default_dcplayername_) {
    dcplayername_ = new ::std::string;
  }
  dcplayername_->assign(value);
}
inline void RseObtainUniverse::set_dcplayername(const char* value) {
  _set_bit(6);
  if (dcplayername_ == &_default_dcplayername_) {
    dcplayername_ = new ::std::string;
  }
  dcplayername_->assign(value);
}
inline void RseObtainUniverse::set_dcplayername(const char* value, size_t size) {
  _set_bit(6);
  if (dcplayername_ == &_default_dcplayername_) {
    dcplayername_ = new ::std::string;
  }
  dcplayername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RseObtainUniverse::mutable_dcplayername() {
  _set_bit(6);
  if (dcplayername_ == &_default_dcplayername_) {
    dcplayername_ = new ::std::string;
  }
  return dcplayername_;
}

// optional string DCWorldName = 8;
inline bool RseObtainUniverse::has_dcworldname() const {
  return _has_bit(7);
}
inline void RseObtainUniverse::clear_dcworldname() {
  if (dcworldname_ != &_default_dcworldname_) {
    dcworldname_->clear();
  }
  _clear_bit(7);
}
inline const ::std::string& RseObtainUniverse::dcworldname() const {
  return *dcworldname_;
}
inline void RseObtainUniverse::set_dcworldname(const ::std::string& value) {
  _set_bit(7);
  if (dcworldname_ == &_default_dcworldname_) {
    dcworldname_ = new ::std::string;
  }
  dcworldname_->assign(value);
}
inline void RseObtainUniverse::set_dcworldname(const char* value) {
  _set_bit(7);
  if (dcworldname_ == &_default_dcworldname_) {
    dcworldname_ = new ::std::string;
  }
  dcworldname_->assign(value);
}
inline void RseObtainUniverse::set_dcworldname(const char* value, size_t size) {
  _set_bit(7);
  if (dcworldname_ == &_default_dcworldname_) {
    dcworldname_ = new ::std::string;
  }
  dcworldname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RseObtainUniverse::mutable_dcworldname() {
  _set_bit(7);
  if (dcworldname_ == &_default_dcworldname_) {
    dcworldname_ = new ::std::string;
  }
  return dcworldname_;
}

// optional int32 levelBasedOnScore = 9;
inline bool RseObtainUniverse::has_levelbasedonscore() const {
  return _has_bit(8);
}
inline void RseObtainUniverse::clear_levelbasedonscore() {
  levelbasedonscore_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 RseObtainUniverse::levelbasedonscore() const {
  return levelbasedonscore_;
}
inline void RseObtainUniverse::set_levelbasedonscore(::google::protobuf::int32 value) {
  _set_bit(8);
  levelbasedonscore_ = value;
}

// optional int32 DCPlayerRank = 10;
inline bool RseObtainUniverse::has_dcplayerrank() const {
  return _has_bit(9);
}
inline void RseObtainUniverse::clear_dcplayerrank() {
  dcplayerrank_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 RseObtainUniverse::dcplayerrank() const {
  return dcplayerrank_;
}
inline void RseObtainUniverse::set_dcplayerrank(::google::protobuf::int32 value) {
  _set_bit(9);
  dcplayerrank_ = value;
}

// optional int32 DCCoins = 11;
inline bool RseObtainUniverse::has_dccoins() const {
  return _has_bit(10);
}
inline void RseObtainUniverse::clear_dccoins() {
  dccoins_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 RseObtainUniverse::dccoins() const {
  return dccoins_;
}
inline void RseObtainUniverse::set_dccoins(::google::protobuf::int32 value) {
  _set_bit(10);
  dccoins_ = value;
}

// optional int32 DCMinerals = 12;
inline bool RseObtainUniverse::has_dcminerals() const {
  return _has_bit(11);
}
inline void RseObtainUniverse::clear_dcminerals() {
  dcminerals_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 RseObtainUniverse::dcminerals() const {
  return dcminerals_;
}
inline void RseObtainUniverse::set_dcminerals(::google::protobuf::int32 value) {
  _set_bit(11);
  dcminerals_ = value;
}

// optional int32 score = 13;
inline bool RseObtainUniverse::has_score() const {
  return _has_bit(12);
}
inline void RseObtainUniverse::clear_score() {
  score_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 RseObtainUniverse::score() const {
  return score_;
}
inline void RseObtainUniverse::set_score(::google::protobuf::int32 value) {
  _set_bit(12);
  score_ = value;
}

// optional int32 exp = 14;
inline bool RseObtainUniverse::has_exp() const {
  return _has_bit(13);
}
inline void RseObtainUniverse::clear_exp() {
  exp_ = 0;
  _clear_bit(13);
}
inline ::google::protobuf::int32 RseObtainUniverse::exp() const {
  return exp_;
}
inline void RseObtainUniverse::set_exp(::google::protobuf::int32 value) {
  _set_bit(13);
  exp_ = value;
}

// optional int32 lastVisitTime = 15;
inline bool RseObtainUniverse::has_lastvisittime() const {
  return _has_bit(14);
}
inline void RseObtainUniverse::clear_lastvisittime() {
  lastvisittime_ = 0;
  _clear_bit(14);
}
inline ::google::protobuf::int32 RseObtainUniverse::lastvisittime() const {
  return lastvisittime_;
}
inline void RseObtainUniverse::set_lastvisittime(::google::protobuf::int32 value) {
  _set_bit(14);
  lastvisittime_ = value;
}

// optional int32 lastLevelNotified = 16;
inline bool RseObtainUniverse::has_lastlevelnotified() const {
  return _has_bit(15);
}
inline void RseObtainUniverse::clear_lastlevelnotified() {
  lastlevelnotified_ = 0;
  _clear_bit(15);
}
inline ::google::protobuf::int32 RseObtainUniverse::lastlevelnotified() const {
  return lastlevelnotified_;
}
inline void RseObtainUniverse::set_lastlevelnotified(::google::protobuf::int32 value) {
  _set_bit(15);
  lastlevelnotified_ = value;
}

// optional int32 DCCash = 17;
inline bool RseObtainUniverse::has_dccash() const {
  return _has_bit(16);
}
inline void RseObtainUniverse::clear_dccash() {
  dccash_ = 0;
  _clear_bit(16);
}
inline ::google::protobuf::int32 RseObtainUniverse::dccash() const {
  return dccash_;
}
inline void RseObtainUniverse::set_dccash(::google::protobuf::int32 value) {
  _set_bit(16);
  dccash_ = value;
}

// optional int32 DCDroids = 18;
inline bool RseObtainUniverse::has_dcdroids() const {
  return _has_bit(17);
}
inline void RseObtainUniverse::clear_dcdroids() {
  dcdroids_ = 0;
  _clear_bit(17);
}
inline ::google::protobuf::int32 RseObtainUniverse::dcdroids() const {
  return dcdroids_;
}
inline void RseObtainUniverse::set_dcdroids(::google::protobuf::int32 value) {
  _set_bit(17);
  dcdroids_ = value;
}

// optional int32 DCDroidsInUse = 19;
inline bool RseObtainUniverse::has_dcdroidsinuse() const {
  return _has_bit(18);
}
inline void RseObtainUniverse::clear_dcdroidsinuse() {
  dcdroidsinuse_ = 0;
  _clear_bit(18);
}
inline ::google::protobuf::int32 RseObtainUniverse::dcdroidsinuse() const {
  return dcdroidsinuse_;
}
inline void RseObtainUniverse::set_dcdroidsinuse(::google::protobuf::int32 value) {
  _set_bit(18);
  dcdroidsinuse_ = value;
}

// optional int32 damageProtectionTimeLeft = 20;
inline bool RseObtainUniverse::has_damageprotectiontimeleft() const {
  return _has_bit(19);
}
inline void RseObtainUniverse::clear_damageprotectiontimeleft() {
  damageprotectiontimeleft_ = 0;
  _clear_bit(19);
}
inline ::google::protobuf::int32 RseObtainUniverse::damageprotectiontimeleft() const {
  return damageprotectiontimeleft_;
}
inline void RseObtainUniverse::set_damageprotectiontimeleft(::google::protobuf::int32 value) {
  _set_bit(19);
  damageprotectiontimeleft_ = value;
}

// optional int32 damageProtectionTimeTotal = 21;
inline bool RseObtainUniverse::has_damageprotectiontimetotal() const {
  return _has_bit(20);
}
inline void RseObtainUniverse::clear_damageprotectiontimetotal() {
  damageprotectiontimetotal_ = 0;
  _clear_bit(20);
}
inline ::google::protobuf::int32 RseObtainUniverse::damageprotectiontimetotal() const {
  return damageprotectiontimetotal_;
}
inline void RseObtainUniverse::set_damageprotectiontimetotal(::google::protobuf::int32 value) {
  _set_bit(20);
  damageprotectiontimetotal_ = value;
}

// optional bool tutorialCompleted = 22;
inline bool RseObtainUniverse::has_tutorialcompleted() const {
  return _has_bit(21);
}
inline void RseObtainUniverse::clear_tutorialcompleted() {
  tutorialcompleted_ = false;
  _clear_bit(21);
}
inline bool RseObtainUniverse::tutorialcompleted() const {
  return tutorialcompleted_;
}
inline void RseObtainUniverse::set_tutorialcompleted(bool value) {
  _set_bit(21);
  tutorialcompleted_ = value;
}

// optional string flags = 23;
inline bool RseObtainUniverse::has_flags() const {
  return _has_bit(22);
}
inline void RseObtainUniverse::clear_flags() {
  if (flags_ != &_default_flags_) {
    flags_->clear();
  }
  _clear_bit(22);
}
inline const ::std::string& RseObtainUniverse::flags() const {
  return *flags_;
}
inline void RseObtainUniverse::set_flags(const ::std::string& value) {
  _set_bit(22);
  if (flags_ == &_default_flags_) {
    flags_ = new ::std::string;
  }
  flags_->assign(value);
}
inline void RseObtainUniverse::set_flags(const char* value) {
  _set_bit(22);
  if (flags_ == &_default_flags_) {
    flags_ = new ::std::string;
  }
  flags_->assign(value);
}
inline void RseObtainUniverse::set_flags(const char* value, size_t size) {
  _set_bit(22);
  if (flags_ == &_default_flags_) {
    flags_ = new ::std::string;
  }
  flags_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RseObtainUniverse::mutable_flags() {
  _set_bit(22);
  if (flags_ == &_default_flags_) {
    flags_ = new ::std::string;
  }
  return flags_;
}

// optional .MsgMissionState Missions = 24;
inline bool RseObtainUniverse::has_missions() const {
  return _has_bit(23);
}
inline void RseObtainUniverse::clear_missions() {
  if (missions_ != NULL) missions_->::MsgMissionState::Clear();
  _clear_bit(23);
}
inline const ::MsgMissionState& RseObtainUniverse::missions() const {
  return missions_ != NULL ? *missions_ : *default_instance_->missions_;
}
inline ::MsgMissionState* RseObtainUniverse::mutable_missions() {
  _set_bit(23);
  if (missions_ == NULL) missions_ = new ::MsgMissionState;
  return missions_;
}

// repeated .MsgPlanet Planets = 25;
inline int RseObtainUniverse::planets_size() const {
  return planets_.size();
}
inline void RseObtainUniverse::clear_planets() {
  planets_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPlanet >&
RseObtainUniverse::planets() const {
  return planets_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPlanet >*
RseObtainUniverse::mutable_planets() {
  return &planets_;
}
inline const ::MsgPlanet& RseObtainUniverse::planets(int index) const {
  return planets_.Get(index);
}
inline ::MsgPlanet* RseObtainUniverse::mutable_planets(int index) {
  return planets_.Mutable(index);
}
inline ::MsgPlanet* RseObtainUniverse::add_planets() {
  return planets_.Add();
}

// repeated .MsgBuildingItem Items = 26;
inline int RseObtainUniverse::items_size() const {
  return items_.size();
}
inline void RseObtainUniverse::clear_items() {
  items_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgBuildingItem >&
RseObtainUniverse::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgBuildingItem >*
RseObtainUniverse::mutable_items() {
  return &items_;
}
inline const ::MsgBuildingItem& RseObtainUniverse::items(int index) const {
  return items_.Get(index);
}
inline ::MsgBuildingItem* RseObtainUniverse::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::MsgBuildingItem* RseObtainUniverse::add_items() {
  return items_.Add();
}

// repeated .MsgShipyard Shipyards = 27;
inline int RseObtainUniverse::shipyards_size() const {
  return shipyards_.size();
}
inline void RseObtainUniverse::clear_shipyards() {
  shipyards_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgShipyard >&
RseObtainUniverse::shipyards() const {
  return shipyards_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgShipyard >*
RseObtainUniverse::mutable_shipyards() {
  return &shipyards_;
}
inline const ::MsgShipyard& RseObtainUniverse::shipyards(int index) const {
  return shipyards_.Get(index);
}
inline ::MsgShipyard* RseObtainUniverse::mutable_shipyards(int index) {
  return shipyards_.Mutable(index);
}
inline ::MsgShipyard* RseObtainUniverse::add_shipyards() {
  return shipyards_.Add();
}

// repeated .MsgHangars Hangars = 28;
inline int RseObtainUniverse::hangars_size() const {
  return hangars_.size();
}
inline void RseObtainUniverse::clear_hangars() {
  hangars_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgHangars >&
RseObtainUniverse::hangars() const {
  return hangars_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgHangars >*
RseObtainUniverse::mutable_hangars() {
  return &hangars_;
}
inline const ::MsgHangars& RseObtainUniverse::hangars(int index) const {
  return hangars_.Get(index);
}
inline ::MsgHangars* RseObtainUniverse::mutable_hangars(int index) {
  return hangars_.Mutable(index);
}
inline ::MsgHangars* RseObtainUniverse::add_hangars() {
  return hangars_.Add();
}

// repeated .MsgBunker Bunkers = 29;
inline int RseObtainUniverse::bunkers_size() const {
  return bunkers_.size();
}
inline void RseObtainUniverse::clear_bunkers() {
  bunkers_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgBunker >&
RseObtainUniverse::bunkers() const {
  return bunkers_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgBunker >*
RseObtainUniverse::mutable_bunkers() {
  return &bunkers_;
}
inline const ::MsgBunker& RseObtainUniverse::bunkers(int index) const {
  return bunkers_.Get(index);
}
inline ::MsgBunker* RseObtainUniverse::mutable_bunkers(int index) {
  return bunkers_.Mutable(index);
}
inline ::MsgBunker* RseObtainUniverse::add_bunkers() {
  return bunkers_.Add();
}

// repeated .MsgGameUnit GameUnits = 30;
inline int RseObtainUniverse::gameunits_size() const {
  return gameunits_.size();
}
inline void RseObtainUniverse::clear_gameunits() {
  gameunits_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgGameUnit >&
RseObtainUniverse::gameunits() const {
  return gameunits_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgGameUnit >*
RseObtainUniverse::mutable_gameunits() {
  return &gameunits_;
}
inline const ::MsgGameUnit& RseObtainUniverse::gameunits(int index) const {
  return gameunits_.Get(index);
}
inline ::MsgGameUnit* RseObtainUniverse::mutable_gameunits(int index) {
  return gameunits_.Mutable(index);
}
inline ::MsgGameUnit* RseObtainUniverse::add_gameunits() {
  return gameunits_.Add();
}

// optional string npc = 31;
inline bool RseObtainUniverse::has_npc() const {
  return _has_bit(30);
}
inline void RseObtainUniverse::clear_npc() {
  if (npc_ != &_default_npc_) {
    npc_->clear();
  }
  _clear_bit(30);
}
inline const ::std::string& RseObtainUniverse::npc() const {
  return *npc_;
}
inline void RseObtainUniverse::set_npc(const ::std::string& value) {
  _set_bit(30);
  if (npc_ == &_default_npc_) {
    npc_ = new ::std::string;
  }
  npc_->assign(value);
}
inline void RseObtainUniverse::set_npc(const char* value) {
  _set_bit(30);
  if (npc_ == &_default_npc_) {
    npc_ = new ::std::string;
  }
  npc_->assign(value);
}
inline void RseObtainUniverse::set_npc(const char* value, size_t size) {
  _set_bit(30);
  if (npc_ == &_default_npc_) {
    npc_ = new ::std::string;
  }
  npc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RseObtainUniverse::mutable_npc() {
  _set_bit(30);
  if (npc_ == &_default_npc_) {
    npc_ = new ::std::string;
  }
  return npc_;
}


#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_RseObtainUniverse_2eproto__INCLUDED
