// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_RceDeployUnits_2eproto__INCLUDED
#define PROTOBUF_RceDeployUnits_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RceDeployUnits_2eproto();
void protobuf_AssignDesc_RceDeployUnits_2eproto();
void protobuf_ShutdownFile_RceDeployUnits_2eproto();

class RceDeployUnits;

// ===================================================================

class RceDeployUnits : public ::google::protobuf::Message {
 public:
  RceDeployUnits();
  virtual ~RceDeployUnits();
  
  RceDeployUnits(const RceDeployUnits& from);
  
  inline RceDeployUnits& operator=(const RceDeployUnits& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RceDeployUnits& default_instance();
  void Swap(RceDeployUnits* other);
  
  // implements Message ----------------------------------------------
  
  RceDeployUnits* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RceDeployUnits& from);
  void MergeFrom(const RceDeployUnits& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 planetId = 1;
  inline bool has_planetid() const;
  inline void clear_planetid();
  static const int kPlanetIdFieldNumber = 1;
  inline ::google::protobuf::int32 planetid() const;
  inline void set_planetid(::google::protobuf::int32 value);
  
  // optional int32 x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);
  
  // repeated int32 unitsIds = 3;
  inline int unitsids_size() const;
  inline void clear_unitsids();
  static const int kUnitsIdsFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& unitsids() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_unitsids();
  inline ::google::protobuf::int32 unitsids(int index) const;
  inline void set_unitsids(int index, ::google::protobuf::int32 value);
  inline void add_unitsids(::google::protobuf::int32 value);
  
  // optional int32 hangarSid = 4;
  inline bool has_hangarsid() const;
  inline void clear_hangarsid();
  static const int kHangarSidFieldNumber = 4;
  inline ::google::protobuf::int32 hangarsid() const;
  inline void set_hangarsid(::google::protobuf::int32 value);
  
  // optional int32 y = 5;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 5;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);
  
  // repeated int32 skuSD = 6;
  inline int skusd_size() const;
  inline void clear_skusd();
  static const int kSkuSDFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& skusd() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_skusd();
  inline ::google::protobuf::int32 skusd(int index) const;
  inline void set_skusd(int index, ::google::protobuf::int32 value);
  inline void add_skusd(::google::protobuf::int32 value);
  
  // repeated int32 skuE = 7;
  inline int skue_size() const;
  inline void clear_skue();
  static const int kSkuEFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& skue() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_skue();
  inline ::google::protobuf::int32 skue(int index) const;
  inline void set_skue(int index, ::google::protobuf::int32 value);
  inline void add_skue(::google::protobuf::int32 value);
  
  // optional int32 millis = 8;
  inline bool has_millis() const;
  inline void clear_millis();
  static const int kMillisFieldNumber = 8;
  inline ::google::protobuf::int32 millis() const;
  inline void set_millis(::google::protobuf::int32 value);
  
  // repeated int32 skuSWT = 9;
  inline int skuswt_size() const;
  inline void clear_skuswt();
  static const int kSkuSWTFieldNumber = 9;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& skuswt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_skuswt();
  inline ::google::protobuf::int32 skuswt(int index) const;
  inline void set_skuswt(int index, ::google::protobuf::int32 value);
  inline void add_skuswt(::google::protobuf::int32 value);
  
  // repeated string unitsSkus = 10;
  inline int unitsskus_size() const;
  inline void clear_unitsskus();
  static const int kUnitsSkusFieldNumber = 10;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& unitsskus() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_unitsskus();
  inline const ::std::string& unitsskus(int index) const;
  inline ::std::string* mutable_unitsskus(int index);
  inline void set_unitsskus(int index, const ::std::string& value);
  inline void set_unitsskus(int index, const char* value);
  inline void set_unitsskus(int index, const char* value, size_t size);
  inline ::std::string* add_unitsskus();
  inline void add_unitsskus(const ::std::string& value);
  inline void add_unitsskus(const char* value);
  inline void add_unitsskus(const char* value, size_t size);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 planetid_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitsids_;
  ::google::protobuf::int32 hangarsid_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > skusd_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > skue_;
  ::google::protobuf::int32 millis_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > skuswt_;
  ::google::protobuf::RepeatedPtrField< ::std::string> unitsskus_;
  friend void  protobuf_AddDesc_RceDeployUnits_2eproto();
  friend void protobuf_AssignDesc_RceDeployUnits_2eproto();
  friend void protobuf_ShutdownFile_RceDeployUnits_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RceDeployUnits* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// RceDeployUnits

// optional int32 planetId = 1;
inline bool RceDeployUnits::has_planetid() const {
  return _has_bit(0);
}
inline void RceDeployUnits::clear_planetid() {
  planetid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 RceDeployUnits::planetid() const {
  return planetid_;
}
inline void RceDeployUnits::set_planetid(::google::protobuf::int32 value) {
  _set_bit(0);
  planetid_ = value;
}

// optional int32 x = 2;
inline bool RceDeployUnits::has_x() const {
  return _has_bit(1);
}
inline void RceDeployUnits::clear_x() {
  x_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 RceDeployUnits::x() const {
  return x_;
}
inline void RceDeployUnits::set_x(::google::protobuf::int32 value) {
  _set_bit(1);
  x_ = value;
}

// repeated int32 unitsIds = 3;
inline int RceDeployUnits::unitsids_size() const {
  return unitsids_.size();
}
inline void RceDeployUnits::clear_unitsids() {
  unitsids_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RceDeployUnits::unitsids() const {
  return unitsids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RceDeployUnits::mutable_unitsids() {
  return &unitsids_;
}
inline ::google::protobuf::int32 RceDeployUnits::unitsids(int index) const {
  return unitsids_.Get(index);
}
inline void RceDeployUnits::set_unitsids(int index, ::google::protobuf::int32 value) {
  unitsids_.Set(index, value);
}
inline void RceDeployUnits::add_unitsids(::google::protobuf::int32 value) {
  unitsids_.Add(value);
}

// optional int32 hangarSid = 4;
inline bool RceDeployUnits::has_hangarsid() const {
  return _has_bit(3);
}
inline void RceDeployUnits::clear_hangarsid() {
  hangarsid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 RceDeployUnits::hangarsid() const {
  return hangarsid_;
}
inline void RceDeployUnits::set_hangarsid(::google::protobuf::int32 value) {
  _set_bit(3);
  hangarsid_ = value;
}

// optional int32 y = 5;
inline bool RceDeployUnits::has_y() const {
  return _has_bit(4);
}
inline void RceDeployUnits::clear_y() {
  y_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 RceDeployUnits::y() const {
  return y_;
}
inline void RceDeployUnits::set_y(::google::protobuf::int32 value) {
  _set_bit(4);
  y_ = value;
}

// repeated int32 skuSD = 6;
inline int RceDeployUnits::skusd_size() const {
  return skusd_.size();
}
inline void RceDeployUnits::clear_skusd() {
  skusd_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RceDeployUnits::skusd() const {
  return skusd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RceDeployUnits::mutable_skusd() {
  return &skusd_;
}
inline ::google::protobuf::int32 RceDeployUnits::skusd(int index) const {
  return skusd_.Get(index);
}
inline void RceDeployUnits::set_skusd(int index, ::google::protobuf::int32 value) {
  skusd_.Set(index, value);
}
inline void RceDeployUnits::add_skusd(::google::protobuf::int32 value) {
  skusd_.Add(value);
}

// repeated int32 skuE = 7;
inline int RceDeployUnits::skue_size() const {
  return skue_.size();
}
inline void RceDeployUnits::clear_skue() {
  skue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RceDeployUnits::skue() const {
  return skue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RceDeployUnits::mutable_skue() {
  return &skue_;
}
inline ::google::protobuf::int32 RceDeployUnits::skue(int index) const {
  return skue_.Get(index);
}
inline void RceDeployUnits::set_skue(int index, ::google::protobuf::int32 value) {
  skue_.Set(index, value);
}
inline void RceDeployUnits::add_skue(::google::protobuf::int32 value) {
  skue_.Add(value);
}

// optional int32 millis = 8;
inline bool RceDeployUnits::has_millis() const {
  return _has_bit(7);
}
inline void RceDeployUnits::clear_millis() {
  millis_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 RceDeployUnits::millis() const {
  return millis_;
}
inline void RceDeployUnits::set_millis(::google::protobuf::int32 value) {
  _set_bit(7);
  millis_ = value;
}

// repeated int32 skuSWT = 9;
inline int RceDeployUnits::skuswt_size() const {
  return skuswt_.size();
}
inline void RceDeployUnits::clear_skuswt() {
  skuswt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RceDeployUnits::skuswt() const {
  return skuswt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RceDeployUnits::mutable_skuswt() {
  return &skuswt_;
}
inline ::google::protobuf::int32 RceDeployUnits::skuswt(int index) const {
  return skuswt_.Get(index);
}
inline void RceDeployUnits::set_skuswt(int index, ::google::protobuf::int32 value) {
  skuswt_.Set(index, value);
}
inline void RceDeployUnits::add_skuswt(::google::protobuf::int32 value) {
  skuswt_.Add(value);
}

// repeated string unitsSkus = 10;
inline int RceDeployUnits::unitsskus_size() const {
  return unitsskus_.size();
}
inline void RceDeployUnits::clear_unitsskus() {
  unitsskus_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RceDeployUnits::unitsskus() const {
  return unitsskus_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RceDeployUnits::mutable_unitsskus() {
  return &unitsskus_;
}
inline const ::std::string& RceDeployUnits::unitsskus(int index) const {
  return unitsskus_.Get(index);
}
inline ::std::string* RceDeployUnits::mutable_unitsskus(int index) {
  return unitsskus_.Mutable(index);
}
inline void RceDeployUnits::set_unitsskus(int index, const ::std::string& value) {
  unitsskus_.Mutable(index)->assign(value);
}
inline void RceDeployUnits::set_unitsskus(int index, const char* value) {
  unitsskus_.Mutable(index)->assign(value);
}
inline void RceDeployUnits::set_unitsskus(int index, const char* value, size_t size) {
  unitsskus_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RceDeployUnits::add_unitsskus() {
  return unitsskus_.Add();
}
inline void RceDeployUnits::add_unitsskus(const ::std::string& value) {
  unitsskus_.Add()->assign(value);
}
inline void RceDeployUnits::add_unitsskus(const char* value) {
  unitsskus_.Add()->assign(value);
}
inline void RceDeployUnits::add_unitsskus(const char* value, size_t size) {
  unitsskus_.Add()->assign(reinterpret_cast<const char*>(value), size);
}


#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_RceDeployUnits_2eproto__INCLUDED
