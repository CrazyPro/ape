// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_MsgBunker_2eproto__INCLUDED
#define PROTOBUF_MsgBunker_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgBunker_2eproto();
void protobuf_AssignDesc_MsgBunker_2eproto();
void protobuf_ShutdownFile_MsgBunker_2eproto();

class MsgBunkerUnit;
class MsgBunker;

// ===================================================================

class MsgBunkerUnit : public ::google::protobuf::Message {
 public:
  MsgBunkerUnit();
  virtual ~MsgBunkerUnit();
  
  MsgBunkerUnit(const MsgBunkerUnit& from);
  
  inline MsgBunkerUnit& operator=(const MsgBunkerUnit& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgBunkerUnit& default_instance();
  void Swap(MsgBunkerUnit* other);
  
  // implements Message ----------------------------------------------
  
  MsgBunkerUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgBunkerUnit& from);
  void MergeFrom(const MsgBunkerUnit& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string sku = 1;
  inline bool has_sku() const;
  inline void clear_sku();
  static const int kSkuFieldNumber = 1;
  inline const ::std::string& sku() const;
  inline void set_sku(const ::std::string& value);
  inline void set_sku(const char* value);
  inline void set_sku(const char* value, size_t size);
  inline ::std::string* mutable_sku();
  
  // repeated int32 Unit = 2;
  inline int unit_size() const;
  inline void clear_unit();
  static const int kUnitFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& unit() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_unit();
  inline ::google::protobuf::int32 unit(int index) const;
  inline void set_unit(int index, ::google::protobuf::int32 value);
  inline void add_unit(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* sku_;
  static const ::std::string _default_sku_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unit_;
  friend void  protobuf_AddDesc_MsgBunker_2eproto();
  friend void protobuf_AssignDesc_MsgBunker_2eproto();
  friend void protobuf_ShutdownFile_MsgBunker_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgBunkerUnit* default_instance_;
};
// -------------------------------------------------------------------

class MsgBunker : public ::google::protobuf::Message {
 public:
  MsgBunker();
  virtual ~MsgBunker();
  
  MsgBunker(const MsgBunker& from);
  
  inline MsgBunker& operator=(const MsgBunker& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgBunker& default_instance();
  void Swap(MsgBunker* other);
  
  // implements Message ----------------------------------------------
  
  MsgBunker* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgBunker& from);
  void MergeFrom(const MsgBunker& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 sid = 1;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 1;
  inline ::google::protobuf::int32 sid() const;
  inline void set_sid(::google::protobuf::int32 value);
  
  // optional string helpersAccountIds = 2;
  inline bool has_helpersaccountids() const;
  inline void clear_helpersaccountids();
  static const int kHelpersAccountIdsFieldNumber = 2;
  inline const ::std::string& helpersaccountids() const;
  inline void set_helpersaccountids(const ::std::string& value);
  inline void set_helpersaccountids(const char* value);
  inline void set_helpersaccountids(const char* value, size_t size);
  inline ::std::string* mutable_helpersaccountids();
  
  // repeated .MsgBunkerUnit Bunker = 3;
  inline int bunker_size() const;
  inline void clear_bunker();
  static const int kBunkerFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::MsgBunkerUnit >& bunker() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgBunkerUnit >* mutable_bunker();
  inline const ::MsgBunkerUnit& bunker(int index) const;
  inline ::MsgBunkerUnit* mutable_bunker(int index);
  inline ::MsgBunkerUnit* add_bunker();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sid_;
  ::std::string* helpersaccountids_;
  static const ::std::string _default_helpersaccountids_;
  ::google::protobuf::RepeatedPtrField< ::MsgBunkerUnit > bunker_;
  friend void  protobuf_AddDesc_MsgBunker_2eproto();
  friend void protobuf_AssignDesc_MsgBunker_2eproto();
  friend void protobuf_ShutdownFile_MsgBunker_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgBunker* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// MsgBunkerUnit

// optional string sku = 1;
inline bool MsgBunkerUnit::has_sku() const {
  return _has_bit(0);
}
inline void MsgBunkerUnit::clear_sku() {
  if (sku_ != &_default_sku_) {
    sku_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgBunkerUnit::sku() const {
  return *sku_;
}
inline void MsgBunkerUnit::set_sku(const ::std::string& value) {
  _set_bit(0);
  if (sku_ == &_default_sku_) {
    sku_ = new ::std::string;
  }
  sku_->assign(value);
}
inline void MsgBunkerUnit::set_sku(const char* value) {
  _set_bit(0);
  if (sku_ == &_default_sku_) {
    sku_ = new ::std::string;
  }
  sku_->assign(value);
}
inline void MsgBunkerUnit::set_sku(const char* value, size_t size) {
  _set_bit(0);
  if (sku_ == &_default_sku_) {
    sku_ = new ::std::string;
  }
  sku_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgBunkerUnit::mutable_sku() {
  _set_bit(0);
  if (sku_ == &_default_sku_) {
    sku_ = new ::std::string;
  }
  return sku_;
}

// repeated int32 Unit = 2;
inline int MsgBunkerUnit::unit_size() const {
  return unit_.size();
}
inline void MsgBunkerUnit::clear_unit() {
  unit_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgBunkerUnit::unit() const {
  return unit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgBunkerUnit::mutable_unit() {
  return &unit_;
}
inline ::google::protobuf::int32 MsgBunkerUnit::unit(int index) const {
  return unit_.Get(index);
}
inline void MsgBunkerUnit::set_unit(int index, ::google::protobuf::int32 value) {
  unit_.Set(index, value);
}
inline void MsgBunkerUnit::add_unit(::google::protobuf::int32 value) {
  unit_.Add(value);
}

// -------------------------------------------------------------------

// MsgBunker

// optional int32 sid = 1;
inline bool MsgBunker::has_sid() const {
  return _has_bit(0);
}
inline void MsgBunker::clear_sid() {
  sid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgBunker::sid() const {
  return sid_;
}
inline void MsgBunker::set_sid(::google::protobuf::int32 value) {
  _set_bit(0);
  sid_ = value;
}

// optional string helpersAccountIds = 2;
inline bool MsgBunker::has_helpersaccountids() const {
  return _has_bit(1);
}
inline void MsgBunker::clear_helpersaccountids() {
  if (helpersaccountids_ != &_default_helpersaccountids_) {
    helpersaccountids_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& MsgBunker::helpersaccountids() const {
  return *helpersaccountids_;
}
inline void MsgBunker::set_helpersaccountids(const ::std::string& value) {
  _set_bit(1);
  if (helpersaccountids_ == &_default_helpersaccountids_) {
    helpersaccountids_ = new ::std::string;
  }
  helpersaccountids_->assign(value);
}
inline void MsgBunker::set_helpersaccountids(const char* value) {
  _set_bit(1);
  if (helpersaccountids_ == &_default_helpersaccountids_) {
    helpersaccountids_ = new ::std::string;
  }
  helpersaccountids_->assign(value);
}
inline void MsgBunker::set_helpersaccountids(const char* value, size_t size) {
  _set_bit(1);
  if (helpersaccountids_ == &_default_helpersaccountids_) {
    helpersaccountids_ = new ::std::string;
  }
  helpersaccountids_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgBunker::mutable_helpersaccountids() {
  _set_bit(1);
  if (helpersaccountids_ == &_default_helpersaccountids_) {
    helpersaccountids_ = new ::std::string;
  }
  return helpersaccountids_;
}

// repeated .MsgBunkerUnit Bunker = 3;
inline int MsgBunker::bunker_size() const {
  return bunker_.size();
}
inline void MsgBunker::clear_bunker() {
  bunker_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgBunkerUnit >&
MsgBunker::bunker() const {
  return bunker_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgBunkerUnit >*
MsgBunker::mutable_bunker() {
  return &bunker_;
}
inline const ::MsgBunkerUnit& MsgBunker::bunker(int index) const {
  return bunker_.Get(index);
}
inline ::MsgBunkerUnit* MsgBunker::mutable_bunker(int index) {
  return bunker_.Mutable(index);
}
inline ::MsgBunkerUnit* MsgBunker::add_bunker() {
  return bunker_.Add();
}


#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_MsgBunker_2eproto__INCLUDED
