// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RseObtainMessagesList.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace {

const ::google::protobuf::Descriptor* MsgMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* RseObtainMessagesList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RseObtainMessagesList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_RseObtainMessagesList_2eproto() {
  protobuf_AddDesc_RseObtainMessagesList_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RseObtainMessagesList.proto");
  GOOGLE_CHECK(file != NULL);
  MsgMessage_descriptor_ = file->message_type(0);
  static const int MsgMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessage, msg_),
  };
  MsgMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMessage_descriptor_,
      MsgMessage::default_instance_,
      MsgMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMessage));
  RseObtainMessagesList_descriptor_ = file->message_type(1);
  static const int RseObtainMessagesList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainMessagesList, messagelist_),
  };
  RseObtainMessagesList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RseObtainMessagesList_descriptor_,
      RseObtainMessagesList::default_instance_,
      RseObtainMessagesList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainMessagesList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainMessagesList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RseObtainMessagesList));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RseObtainMessagesList_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMessage_descriptor_, &MsgMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RseObtainMessagesList_descriptor_, &RseObtainMessagesList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RseObtainMessagesList_2eproto() {
  delete MsgMessage::default_instance_;
  delete MsgMessage_reflection_;
  delete RseObtainMessagesList::default_instance_;
  delete RseObtainMessagesList_reflection_;
}

void protobuf_AddDesc_RseObtainMessagesList_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033RseObtainMessagesList.proto\"\031\n\nMsgMess"
    "age\022\013\n\003msg\030\001 \001(\t\"9\n\025RseObtainMessagesLis"
    "t\022 \n\013messageList\030\001 \003(\0132\013.MsgMessage", 115);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RseObtainMessagesList.proto", &protobuf_RegisterTypes);
  MsgMessage::default_instance_ = new MsgMessage();
  RseObtainMessagesList::default_instance_ = new RseObtainMessagesList();
  MsgMessage::default_instance_->InitAsDefaultInstance();
  RseObtainMessagesList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RseObtainMessagesList_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RseObtainMessagesList_2eproto {
  StaticDescriptorInitializer_RseObtainMessagesList_2eproto() {
    protobuf_AddDesc_RseObtainMessagesList_2eproto();
  }
} static_descriptor_initializer_RseObtainMessagesList_2eproto_;


// ===================================================================

const ::std::string MsgMessage::_default_msg_;
#ifndef _MSC_VER
const int MsgMessage::kMsgFieldNumber;
#endif  // !_MSC_VER

MsgMessage::MsgMessage() {
  SharedCtor();
}

void MsgMessage::InitAsDefaultInstance() {
}

MsgMessage::MsgMessage(const MsgMessage& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMessage::SharedCtor() {
  _cached_size_ = 0;
  msg_ = const_cast< ::std::string*>(&_default_msg_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMessage::~MsgMessage() {
  SharedDtor();
}

void MsgMessage::SharedDtor() {
  if (msg_ != &_default_msg_) {
    delete msg_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMessage_descriptor_;
}

const MsgMessage& MsgMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainMessagesList_2eproto();  return *default_instance_;
}

MsgMessage* MsgMessage::default_instance_ = NULL;

MsgMessage* MsgMessage::New() const {
  return new MsgMessage;
}

void MsgMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (msg_ != &_default_msg_) {
        msg_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string msg = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_msg()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->msg().data(), this->msg().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMessage::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string msg = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->msg(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string msg = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMessage::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string msg = 1;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMessage::MergeFrom(const MsgMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_msg(from.msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMessage::CopyFrom(const MsgMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMessage::IsInitialized() const {
  
  return true;
}

void MsgMessage::Swap(MsgMessage* other) {
  if (other != this) {
    std::swap(msg_, other->msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMessage_descriptor_;
  metadata.reflection = MsgMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RseObtainMessagesList::kMessageListFieldNumber;
#endif  // !_MSC_VER

RseObtainMessagesList::RseObtainMessagesList() {
  SharedCtor();
}

void RseObtainMessagesList::InitAsDefaultInstance() {
}

RseObtainMessagesList::RseObtainMessagesList(const RseObtainMessagesList& from) {
  SharedCtor();
  MergeFrom(from);
}

void RseObtainMessagesList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RseObtainMessagesList::~RseObtainMessagesList() {
  SharedDtor();
}

void RseObtainMessagesList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* RseObtainMessagesList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RseObtainMessagesList_descriptor_;
}

const RseObtainMessagesList& RseObtainMessagesList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainMessagesList_2eproto();  return *default_instance_;
}

RseObtainMessagesList* RseObtainMessagesList::default_instance_ = NULL;

RseObtainMessagesList* RseObtainMessagesList::New() const {
  return new RseObtainMessagesList;
}

void RseObtainMessagesList::Clear() {
  messagelist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RseObtainMessagesList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgMessage messageList = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_messageList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_messagelist()));
        if (input->ExpectTag(10)) goto parse_messageList;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RseObtainMessagesList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    RseObtainMessagesList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .MsgMessage messageList = 1;
  for (int i = 0; i < this->messagelist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->messagelist(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RseObtainMessagesList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .MsgMessage messageList = 1;
  for (int i = 0; i < this->messagelist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->messagelist(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RseObtainMessagesList::ByteSize() const {
  int total_size = 0;
  
  // repeated .MsgMessage messageList = 1;
  total_size += 1 * this->messagelist_size();
  for (int i = 0; i < this->messagelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->messagelist(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void RseObtainMessagesList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RseObtainMessagesList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RseObtainMessagesList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RseObtainMessagesList::MergeFrom(const RseObtainMessagesList& from) {
  GOOGLE_CHECK_NE(&from, this);
  messagelist_.MergeFrom(from.messagelist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RseObtainMessagesList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RseObtainMessagesList::CopyFrom(const RseObtainMessagesList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RseObtainMessagesList::IsInitialized() const {
  
  return true;
}

void RseObtainMessagesList::Swap(RseObtainMessagesList* other) {
  if (other != this) {
    messagelist_.Swap(&other->messagelist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RseObtainMessagesList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RseObtainMessagesList_descriptor_;
  metadata.reflection = RseObtainMessagesList_reflection_;
  return metadata;
}

