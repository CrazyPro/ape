// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RseObtainNeighborsList.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace {

const ::google::protobuf::Descriptor* MsgNeighbor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgNeighbor_reflection_ = NULL;
const ::google::protobuf::Descriptor* RseObtainNeighborsList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RseObtainNeighborsList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_RseObtainNeighborsList_2eproto() {
  protobuf_AddDesc_RseObtainNeighborsList_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RseObtainNeighborsList.proto");
  GOOGLE_CHECK(file != NULL);
  MsgNeighbor_descriptor_ = file->message_type(0);
  static const int MsgNeighbor_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeighbor, platform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeighbor, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeighbor, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeighbor, xp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeighbor, extid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeighbor, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeighbor, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeighbor, isneighbor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeighbor, levelbasedonscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeighbor, wishlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeighbor, damageprotectiontimeleft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeighbor, tutorialcompleted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeighbor, neighbor_),
  };
  MsgNeighbor_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgNeighbor_descriptor_,
      MsgNeighbor::default_instance_,
      MsgNeighbor_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeighbor, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNeighbor, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgNeighbor));
  RseObtainNeighborsList_descriptor_ = file->message_type(1);
  static const int RseObtainNeighborsList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainNeighborsList, neighborlist_),
  };
  RseObtainNeighborsList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RseObtainNeighborsList_descriptor_,
      RseObtainNeighborsList::default_instance_,
      RseObtainNeighborsList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainNeighborsList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainNeighborsList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RseObtainNeighborsList));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RseObtainNeighborsList_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgNeighbor_descriptor_, &MsgNeighbor::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RseObtainNeighborsList_descriptor_, &RseObtainNeighborsList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RseObtainNeighborsList_2eproto() {
  delete MsgNeighbor::default_instance_;
  delete MsgNeighbor_reflection_;
  delete RseObtainNeighborsList::default_instance_;
  delete RseObtainNeighborsList_reflection_;
}

void protobuf_AddDesc_RseObtainNeighborsList_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_MsgPlanet_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034RseObtainNeighborsList.proto\032\017MsgPlane"
    "t.proto\"\223\002\n\013MsgNeighbor\022\020\n\010platform\030\001 \001("
    "\t\022\021\n\taccountId\030\002 \001(\003\022\r\n\005score\030\003 \001(\005\022\n\n\002x"
    "p\030\004 \001(\005\022\r\n\005extId\030\005 \001(\t\022\013\n\003url\030\006 \001(\t\022\014\n\004n"
    "ame\030\007 \001(\t\022\022\n\nisNeighbor\030\010 \001(\005\022\031\n\021levelBa"
    "sedOnScore\030\t \001(\005\022\020\n\010wishlist\030\n \001(\t\022 \n\030da"
    "mageProtectionTimeLeft\030\013 \001(\003\022\031\n\021tutorial"
    "Completed\030\014 \001(\005\022\034\n\010neighbor\030\r \003(\0132\n.MsgP"
    "lanet\"<\n\026RseObtainNeighborsList\022\"\n\014neigh"
    "borList\030\001 \003(\0132\014.MsgNeighbor", 387);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RseObtainNeighborsList.proto", &protobuf_RegisterTypes);
  MsgNeighbor::default_instance_ = new MsgNeighbor();
  RseObtainNeighborsList::default_instance_ = new RseObtainNeighborsList();
  MsgNeighbor::default_instance_->InitAsDefaultInstance();
  RseObtainNeighborsList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RseObtainNeighborsList_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RseObtainNeighborsList_2eproto {
  StaticDescriptorInitializer_RseObtainNeighborsList_2eproto() {
    protobuf_AddDesc_RseObtainNeighborsList_2eproto();
  }
} static_descriptor_initializer_RseObtainNeighborsList_2eproto_;


// ===================================================================

const ::std::string MsgNeighbor::_default_platform_;
const ::std::string MsgNeighbor::_default_extid_;
const ::std::string MsgNeighbor::_default_url_;
const ::std::string MsgNeighbor::_default_name_;
const ::std::string MsgNeighbor::_default_wishlist_;
#ifndef _MSC_VER
const int MsgNeighbor::kPlatformFieldNumber;
const int MsgNeighbor::kAccountIdFieldNumber;
const int MsgNeighbor::kScoreFieldNumber;
const int MsgNeighbor::kXpFieldNumber;
const int MsgNeighbor::kExtIdFieldNumber;
const int MsgNeighbor::kUrlFieldNumber;
const int MsgNeighbor::kNameFieldNumber;
const int MsgNeighbor::kIsNeighborFieldNumber;
const int MsgNeighbor::kLevelBasedOnScoreFieldNumber;
const int MsgNeighbor::kWishlistFieldNumber;
const int MsgNeighbor::kDamageProtectionTimeLeftFieldNumber;
const int MsgNeighbor::kTutorialCompletedFieldNumber;
const int MsgNeighbor::kNeighborFieldNumber;
#endif  // !_MSC_VER

MsgNeighbor::MsgNeighbor() {
  SharedCtor();
}

void MsgNeighbor::InitAsDefaultInstance() {
}

MsgNeighbor::MsgNeighbor(const MsgNeighbor& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgNeighbor::SharedCtor() {
  _cached_size_ = 0;
  platform_ = const_cast< ::std::string*>(&_default_platform_);
  accountid_ = GOOGLE_LONGLONG(0);
  score_ = 0;
  xp_ = 0;
  extid_ = const_cast< ::std::string*>(&_default_extid_);
  url_ = const_cast< ::std::string*>(&_default_url_);
  name_ = const_cast< ::std::string*>(&_default_name_);
  isneighbor_ = 0;
  levelbasedonscore_ = 0;
  wishlist_ = const_cast< ::std::string*>(&_default_wishlist_);
  damageprotectiontimeleft_ = GOOGLE_LONGLONG(0);
  tutorialcompleted_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgNeighbor::~MsgNeighbor() {
  SharedDtor();
}

void MsgNeighbor::SharedDtor() {
  if (platform_ != &_default_platform_) {
    delete platform_;
  }
  if (extid_ != &_default_extid_) {
    delete extid_;
  }
  if (url_ != &_default_url_) {
    delete url_;
  }
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (wishlist_ != &_default_wishlist_) {
    delete wishlist_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgNeighbor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNeighbor_descriptor_;
}

const MsgNeighbor& MsgNeighbor::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainNeighborsList_2eproto();  return *default_instance_;
}

MsgNeighbor* MsgNeighbor::default_instance_ = NULL;

MsgNeighbor* MsgNeighbor::New() const {
  return new MsgNeighbor;
}

void MsgNeighbor::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (platform_ != &_default_platform_) {
        platform_->clear();
      }
    }
    accountid_ = GOOGLE_LONGLONG(0);
    score_ = 0;
    xp_ = 0;
    if (_has_bit(4)) {
      if (extid_ != &_default_extid_) {
        extid_->clear();
      }
    }
    if (_has_bit(5)) {
      if (url_ != &_default_url_) {
        url_->clear();
      }
    }
    if (_has_bit(6)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    isneighbor_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    levelbasedonscore_ = 0;
    if (_has_bit(9)) {
      if (wishlist_ != &_default_wishlist_) {
        wishlist_->clear();
      }
    }
    damageprotectiontimeleft_ = GOOGLE_LONGLONG(0);
    tutorialcompleted_ = 0;
  }
  neighbor_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgNeighbor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string platform = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_platform()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->platform().data(), this->platform().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(16)) goto parse_accountId;
        break;
      }
      
      // optional int64 accountId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_accountId:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &accountid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_score;
        break;
      }
      
      // optional int32 score = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_score:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &score_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_xp;
        break;
      }
      
      // optional int32 xp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_xp:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &xp_));
        _set_bit(3);
        if (input->ExpectTag(42)) goto parse_extId;
        break;
      }
      
      // optional string extId = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_extId:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_extid()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->extid().data(), this->extid().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(50)) goto parse_url;
        break;
      }
      
      // optional string url = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_url:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_url()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->url().data(), this->url().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(58)) goto parse_name;
        break;
      }
      
      // optional string name = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_name:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->name().data(), this->name().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(64)) goto parse_isNeighbor;
        break;
      }
      
      // optional int32 isNeighbor = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_isNeighbor:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &isneighbor_));
        _set_bit(7);
        if (input->ExpectTag(72)) goto parse_levelBasedOnScore;
        break;
      }
      
      // optional int32 levelBasedOnScore = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_levelBasedOnScore:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &levelbasedonscore_));
        _set_bit(8);
        if (input->ExpectTag(82)) goto parse_wishlist;
        break;
      }
      
      // optional string wishlist = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_wishlist:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_wishlist()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->wishlist().data(), this->wishlist().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(88)) goto parse_damageProtectionTimeLeft;
        break;
      }
      
      // optional int64 damageProtectionTimeLeft = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_damageProtectionTimeLeft:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &damageprotectiontimeleft_));
        _set_bit(10);
        if (input->ExpectTag(96)) goto parse_tutorialCompleted;
        break;
      }
      
      // optional int32 tutorialCompleted = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_tutorialCompleted:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &tutorialcompleted_));
        _set_bit(11);
        if (input->ExpectTag(106)) goto parse_neighbor;
        break;
      }
      
      // repeated .MsgPlanet neighbor = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_neighbor:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_neighbor()));
        if (input->ExpectTag(106)) goto parse_neighbor;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgNeighbor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgNeighbor::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string platform = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->platform(), output);
  }
  
  // optional int64 accountId = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->accountid(), output);
  }
  
  // optional int32 score = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->score(), output);
  }
  
  // optional int32 xp = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->xp(), output);
  }
  
  // optional string extId = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->extid().data(), this->extid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->extid(), output);
  }
  
  // optional string url = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->url(), output);
  }
  
  // optional string name = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->name(), output);
  }
  
  // optional int32 isNeighbor = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->isneighbor(), output);
  }
  
  // optional int32 levelBasedOnScore = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->levelbasedonscore(), output);
  }
  
  // optional string wishlist = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->wishlist().data(), this->wishlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->wishlist(), output);
  }
  
  // optional int64 damageProtectionTimeLeft = 11;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->damageprotectiontimeleft(), output);
  }
  
  // optional int32 tutorialCompleted = 12;
  if (_has_bit(11)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->tutorialcompleted(), output);
  }
  
  // repeated .MsgPlanet neighbor = 13;
  for (int i = 0; i < this->neighbor_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      13, this->neighbor(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgNeighbor::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string platform = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->platform(), target);
  }
  
  // optional int64 accountId = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->accountid(), target);
  }
  
  // optional int32 score = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->score(), target);
  }
  
  // optional int32 xp = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->xp(), target);
  }
  
  // optional string extId = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->extid().data(), this->extid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->extid(), target);
  }
  
  // optional string url = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->url(), target);
  }
  
  // optional string name = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }
  
  // optional int32 isNeighbor = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->isneighbor(), target);
  }
  
  // optional int32 levelBasedOnScore = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->levelbasedonscore(), target);
  }
  
  // optional string wishlist = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->wishlist().data(), this->wishlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->wishlist(), target);
  }
  
  // optional int64 damageProtectionTimeLeft = 11;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->damageprotectiontimeleft(), target);
  }
  
  // optional int32 tutorialCompleted = 12;
  if (_has_bit(11)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->tutorialcompleted(), target);
  }
  
  // repeated .MsgPlanet neighbor = 13;
  for (int i = 0; i < this->neighbor_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->neighbor(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgNeighbor::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string platform = 1;
    if (has_platform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platform());
    }
    
    // optional int64 accountId = 2;
    if (has_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->accountid());
    }
    
    // optional int32 score = 3;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }
    
    // optional int32 xp = 4;
    if (has_xp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->xp());
    }
    
    // optional string extId = 5;
    if (has_extid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extid());
    }
    
    // optional string url = 6;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }
    
    // optional string name = 7;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional int32 isNeighbor = 8;
    if (has_isneighbor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isneighbor());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 levelBasedOnScore = 9;
    if (has_levelbasedonscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->levelbasedonscore());
    }
    
    // optional string wishlist = 10;
    if (has_wishlist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->wishlist());
    }
    
    // optional int64 damageProtectionTimeLeft = 11;
    if (has_damageprotectiontimeleft()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->damageprotectiontimeleft());
    }
    
    // optional int32 tutorialCompleted = 12;
    if (has_tutorialcompleted()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tutorialcompleted());
    }
    
  }
  // repeated .MsgPlanet neighbor = 13;
  total_size += 1 * this->neighbor_size();
  for (int i = 0; i < this->neighbor_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->neighbor(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgNeighbor::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgNeighbor* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgNeighbor*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgNeighbor::MergeFrom(const MsgNeighbor& from) {
  GOOGLE_CHECK_NE(&from, this);
  neighbor_.MergeFrom(from.neighbor_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_platform(from.platform());
    }
    if (from._has_bit(1)) {
      set_accountid(from.accountid());
    }
    if (from._has_bit(2)) {
      set_score(from.score());
    }
    if (from._has_bit(3)) {
      set_xp(from.xp());
    }
    if (from._has_bit(4)) {
      set_extid(from.extid());
    }
    if (from._has_bit(5)) {
      set_url(from.url());
    }
    if (from._has_bit(6)) {
      set_name(from.name());
    }
    if (from._has_bit(7)) {
      set_isneighbor(from.isneighbor());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      set_levelbasedonscore(from.levelbasedonscore());
    }
    if (from._has_bit(9)) {
      set_wishlist(from.wishlist());
    }
    if (from._has_bit(10)) {
      set_damageprotectiontimeleft(from.damageprotectiontimeleft());
    }
    if (from._has_bit(11)) {
      set_tutorialcompleted(from.tutorialcompleted());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgNeighbor::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgNeighbor::CopyFrom(const MsgNeighbor& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNeighbor::IsInitialized() const {
  
  return true;
}

void MsgNeighbor::Swap(MsgNeighbor* other) {
  if (other != this) {
    std::swap(platform_, other->platform_);
    std::swap(accountid_, other->accountid_);
    std::swap(score_, other->score_);
    std::swap(xp_, other->xp_);
    std::swap(extid_, other->extid_);
    std::swap(url_, other->url_);
    std::swap(name_, other->name_);
    std::swap(isneighbor_, other->isneighbor_);
    std::swap(levelbasedonscore_, other->levelbasedonscore_);
    std::swap(wishlist_, other->wishlist_);
    std::swap(damageprotectiontimeleft_, other->damageprotectiontimeleft_);
    std::swap(tutorialcompleted_, other->tutorialcompleted_);
    neighbor_.Swap(&other->neighbor_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgNeighbor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgNeighbor_descriptor_;
  metadata.reflection = MsgNeighbor_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RseObtainNeighborsList::kNeighborListFieldNumber;
#endif  // !_MSC_VER

RseObtainNeighborsList::RseObtainNeighborsList() {
  SharedCtor();
}

void RseObtainNeighborsList::InitAsDefaultInstance() {
}

RseObtainNeighborsList::RseObtainNeighborsList(const RseObtainNeighborsList& from) {
  SharedCtor();
  MergeFrom(from);
}

void RseObtainNeighborsList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RseObtainNeighborsList::~RseObtainNeighborsList() {
  SharedDtor();
}

void RseObtainNeighborsList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* RseObtainNeighborsList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RseObtainNeighborsList_descriptor_;
}

const RseObtainNeighborsList& RseObtainNeighborsList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainNeighborsList_2eproto();  return *default_instance_;
}

RseObtainNeighborsList* RseObtainNeighborsList::default_instance_ = NULL;

RseObtainNeighborsList* RseObtainNeighborsList::New() const {
  return new RseObtainNeighborsList;
}

void RseObtainNeighborsList::Clear() {
  neighborlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RseObtainNeighborsList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgNeighbor neighborList = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_neighborList:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_neighborlist()));
        if (input->ExpectTag(10)) goto parse_neighborList;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RseObtainNeighborsList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    RseObtainNeighborsList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .MsgNeighbor neighborList = 1;
  for (int i = 0; i < this->neighborlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->neighborlist(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RseObtainNeighborsList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .MsgNeighbor neighborList = 1;
  for (int i = 0; i < this->neighborlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->neighborlist(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RseObtainNeighborsList::ByteSize() const {
  int total_size = 0;
  
  // repeated .MsgNeighbor neighborList = 1;
  total_size += 1 * this->neighborlist_size();
  for (int i = 0; i < this->neighborlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->neighborlist(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void RseObtainNeighborsList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RseObtainNeighborsList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RseObtainNeighborsList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RseObtainNeighborsList::MergeFrom(const RseObtainNeighborsList& from) {
  GOOGLE_CHECK_NE(&from, this);
  neighborlist_.MergeFrom(from.neighborlist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RseObtainNeighborsList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RseObtainNeighborsList::CopyFrom(const RseObtainNeighborsList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RseObtainNeighborsList::IsInitialized() const {
  
  return true;
}

void RseObtainNeighborsList::Swap(RseObtainNeighborsList* other) {
  if (other != this) {
    neighborlist_.Swap(&other->neighborlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RseObtainNeighborsList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RseObtainNeighborsList_descriptor_;
  metadata.reflection = RseObtainNeighborsList_reflection_;
  return metadata;
}

