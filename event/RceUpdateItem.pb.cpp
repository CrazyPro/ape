// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RceUpdateItem.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace {

const ::google::protobuf::Descriptor* RceUpdateItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RceUpdateItem_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_RceUpdateItem_2eproto() {
  protobuf_AddDesc_RceUpdateItem_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RceUpdateItem.proto");
  GOOGLE_CHECK(file != NULL);
  RceUpdateItem_descriptor_ = file->message_type(0);
  static const int RceUpdateItem_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceUpdateItem, sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceUpdateItem, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceUpdateItem, transaction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceUpdateItem, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceUpdateItem, oldstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceUpdateItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceUpdateItem, planetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceUpdateItem, newstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceUpdateItem, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceUpdateItem, timepassed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceUpdateItem, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceUpdateItem, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceUpdateItem, flip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceUpdateItem, role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceUpdateItem, incometorestore_),
  };
  RceUpdateItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RceUpdateItem_descriptor_,
      RceUpdateItem::default_instance_,
      RceUpdateItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceUpdateItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceUpdateItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RceUpdateItem));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RceUpdateItem_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RceUpdateItem_descriptor_, &RceUpdateItem::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RceUpdateItem_2eproto() {
  delete RceUpdateItem::default_instance_;
  delete RceUpdateItem_reflection_;
}

void protobuf_AddDesc_RceUpdateItem_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_MsgBuildingItem_2eproto();
  ::protobuf_AddDesc_MsgSocialItems_2eproto();
  ::protobuf_AddDesc_MsgTransaction_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023RceUpdateItem.proto\032\025MsgBuildingItem.p"
    "roto\032\024MsgSocialItems.proto\032\024MsgTransacti"
    "on.proto\"\241\002\n\rRceUpdateItem\022\013\n\003sid\030\001 \001(\005\022"
    "\014\n\004time\030\002 \001(\005\022$\n\013transaction\030\003 \001(\0132\017.Msg"
    "Transaction\022\036\n\004item\030\004 \001(\0132\020.MsgBuildingI"
    "tem\022\020\n\010oldState\030\005 \001(\005\022\n\n\002id\030\006 \001(\005\022\020\n\010pla"
    "netId\030\007 \001(\005\022\020\n\010newState\030\010 \001(\005\022\016\n\006action\030"
    "\t \001(\t\022\022\n\ntimePassed\030\n \001(\005\022\t\n\001x\030\013 \001(\005\022\t\n\001"
    "y\030\014 \001(\005\022\014\n\004flip\030\r \001(\005\022\014\n\004role\030\016 \001(\005\022\027\n\017i"
    "ncomeToRestore\030\017 \001(\005", 380);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RceUpdateItem.proto", &protobuf_RegisterTypes);
  RceUpdateItem::default_instance_ = new RceUpdateItem();
  RceUpdateItem::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RceUpdateItem_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RceUpdateItem_2eproto {
  StaticDescriptorInitializer_RceUpdateItem_2eproto() {
    protobuf_AddDesc_RceUpdateItem_2eproto();
  }
} static_descriptor_initializer_RceUpdateItem_2eproto_;


// ===================================================================

const ::std::string RceUpdateItem::_default_action_;
#ifndef _MSC_VER
const int RceUpdateItem::kSidFieldNumber;
const int RceUpdateItem::kTimeFieldNumber;
const int RceUpdateItem::kTransactionFieldNumber;
const int RceUpdateItem::kItemFieldNumber;
const int RceUpdateItem::kOldStateFieldNumber;
const int RceUpdateItem::kIdFieldNumber;
const int RceUpdateItem::kPlanetIdFieldNumber;
const int RceUpdateItem::kNewStateFieldNumber;
const int RceUpdateItem::kActionFieldNumber;
const int RceUpdateItem::kTimePassedFieldNumber;
const int RceUpdateItem::kXFieldNumber;
const int RceUpdateItem::kYFieldNumber;
const int RceUpdateItem::kFlipFieldNumber;
const int RceUpdateItem::kRoleFieldNumber;
const int RceUpdateItem::kIncomeToRestoreFieldNumber;
#endif  // !_MSC_VER

RceUpdateItem::RceUpdateItem() {
  SharedCtor();
}

void RceUpdateItem::InitAsDefaultInstance() {
  transaction_ = const_cast< ::MsgTransaction*>(&::MsgTransaction::default_instance());
  item_ = const_cast< ::MsgBuildingItem*>(&::MsgBuildingItem::default_instance());
}

RceUpdateItem::RceUpdateItem(const RceUpdateItem& from) {
  SharedCtor();
  MergeFrom(from);
}

void RceUpdateItem::SharedCtor() {
  _cached_size_ = 0;
  sid_ = 0;
  time_ = 0;
  transaction_ = NULL;
  item_ = NULL;
  oldstate_ = 0;
  id_ = 0;
  planetid_ = 0;
  newstate_ = 0;
  action_ = const_cast< ::std::string*>(&_default_action_);
  timepassed_ = 0;
  x_ = 0;
  y_ = 0;
  flip_ = 0;
  role_ = 0;
  incometorestore_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RceUpdateItem::~RceUpdateItem() {
  SharedDtor();
}

void RceUpdateItem::SharedDtor() {
  if (action_ != &_default_action_) {
    delete action_;
  }
  if (this != default_instance_) {
    delete transaction_;
    delete item_;
  }
}

const ::google::protobuf::Descriptor* RceUpdateItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RceUpdateItem_descriptor_;
}

const RceUpdateItem& RceUpdateItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RceUpdateItem_2eproto();  return *default_instance_;
}

RceUpdateItem* RceUpdateItem::default_instance_ = NULL;

RceUpdateItem* RceUpdateItem::New() const {
  return new RceUpdateItem;
}

void RceUpdateItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    sid_ = 0;
    time_ = 0;
    if (_has_bit(2)) {
      if (transaction_ != NULL) transaction_->::MsgTransaction::Clear();
    }
    if (_has_bit(3)) {
      if (item_ != NULL) item_->::MsgBuildingItem::Clear();
    }
    oldstate_ = 0;
    id_ = 0;
    planetid_ = 0;
    newstate_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (_has_bit(8)) {
      if (action_ != &_default_action_) {
        action_->clear();
      }
    }
    timepassed_ = 0;
    x_ = 0;
    y_ = 0;
    flip_ = 0;
    role_ = 0;
    incometorestore_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RceUpdateItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &sid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_time;
        break;
      }
      
      // optional int32 time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_time:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &time_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_transaction;
        break;
      }
      
      // optional .MsgTransaction transaction = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_transaction:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_transaction()));
        if (input->ExpectTag(34)) goto parse_item;
        break;
      }
      
      // optional .MsgBuildingItem item = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_item:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_item()));
        if (input->ExpectTag(40)) goto parse_oldState;
        break;
      }
      
      // optional int32 oldState = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_oldState:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &oldstate_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_id;
        break;
      }
      
      // optional int32 id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_id:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &id_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_planetId;
        break;
      }
      
      // optional int32 planetId = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_planetId:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &planetid_));
        _set_bit(6);
        if (input->ExpectTag(64)) goto parse_newState;
        break;
      }
      
      // optional int32 newState = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_newState:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &newstate_));
        _set_bit(7);
        if (input->ExpectTag(74)) goto parse_action;
        break;
      }
      
      // optional string action = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_action:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_action()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->action().data(), this->action().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(80)) goto parse_timePassed;
        break;
      }
      
      // optional int32 timePassed = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_timePassed:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &timepassed_));
        _set_bit(9);
        if (input->ExpectTag(88)) goto parse_x;
        break;
      }
      
      // optional int32 x = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_x:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &x_));
        _set_bit(10);
        if (input->ExpectTag(96)) goto parse_y;
        break;
      }
      
      // optional int32 y = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_y:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &y_));
        _set_bit(11);
        if (input->ExpectTag(104)) goto parse_flip;
        break;
      }
      
      // optional int32 flip = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_flip:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &flip_));
        _set_bit(12);
        if (input->ExpectTag(112)) goto parse_role;
        break;
      }
      
      // optional int32 role = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_role:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &role_));
        _set_bit(13);
        if (input->ExpectTag(120)) goto parse_incomeToRestore;
        break;
      }
      
      // optional int32 incomeToRestore = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_incomeToRestore:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &incometorestore_));
        _set_bit(14);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RceUpdateItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    RceUpdateItem::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 sid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sid(), output);
  }
  
  // optional int32 time = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->time(), output);
  }
  
  // optional .MsgTransaction transaction = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->transaction(), output);
  }
  
  // optional .MsgBuildingItem item = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->item(), output);
  }
  
  // optional int32 oldState = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->oldstate(), output);
  }
  
  // optional int32 id = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->id(), output);
  }
  
  // optional int32 planetId = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->planetid(), output);
  }
  
  // optional int32 newState = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->newstate(), output);
  }
  
  // optional string action = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->action(), output);
  }
  
  // optional int32 timePassed = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->timepassed(), output);
  }
  
  // optional int32 x = 11;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->x(), output);
  }
  
  // optional int32 y = 12;
  if (_has_bit(11)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->y(), output);
  }
  
  // optional int32 flip = 13;
  if (_has_bit(12)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->flip(), output);
  }
  
  // optional int32 role = 14;
  if (_has_bit(13)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->role(), output);
  }
  
  // optional int32 incomeToRestore = 15;
  if (_has_bit(14)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->incometorestore(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RceUpdateItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 sid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sid(), target);
  }
  
  // optional int32 time = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->time(), target);
  }
  
  // optional .MsgTransaction transaction = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->transaction(), target);
  }
  
  // optional .MsgBuildingItem item = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->item(), target);
  }
  
  // optional int32 oldState = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->oldstate(), target);
  }
  
  // optional int32 id = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->id(), target);
  }
  
  // optional int32 planetId = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->planetid(), target);
  }
  
  // optional int32 newState = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->newstate(), target);
  }
  
  // optional string action = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->action(), target);
  }
  
  // optional int32 timePassed = 10;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->timepassed(), target);
  }
  
  // optional int32 x = 11;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->x(), target);
  }
  
  // optional int32 y = 12;
  if (_has_bit(11)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->y(), target);
  }
  
  // optional int32 flip = 13;
  if (_has_bit(12)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->flip(), target);
  }
  
  // optional int32 role = 14;
  if (_has_bit(13)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->role(), target);
  }
  
  // optional int32 incomeToRestore = 15;
  if (_has_bit(14)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->incometorestore(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RceUpdateItem::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 sid = 1;
    if (has_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sid());
    }
    
    // optional int32 time = 2;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time());
    }
    
    // optional .MsgTransaction transaction = 3;
    if (has_transaction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transaction());
    }
    
    // optional .MsgBuildingItem item = 4;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item());
    }
    
    // optional int32 oldState = 5;
    if (has_oldstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oldstate());
    }
    
    // optional int32 id = 6;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional int32 planetId = 7;
    if (has_planetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->planetid());
    }
    
    // optional int32 newState = 8;
    if (has_newstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->newstate());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string action = 9;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->action());
    }
    
    // optional int32 timePassed = 10;
    if (has_timepassed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timepassed());
    }
    
    // optional int32 x = 11;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }
    
    // optional int32 y = 12;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }
    
    // optional int32 flip = 13;
    if (has_flip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flip());
    }
    
    // optional int32 role = 14;
    if (has_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role());
    }
    
    // optional int32 incomeToRestore = 15;
    if (has_incometorestore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->incometorestore());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void RceUpdateItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RceUpdateItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RceUpdateItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RceUpdateItem::MergeFrom(const RceUpdateItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_sid(from.sid());
    }
    if (from._has_bit(1)) {
      set_time(from.time());
    }
    if (from._has_bit(2)) {
      mutable_transaction()->::MsgTransaction::MergeFrom(from.transaction());
    }
    if (from._has_bit(3)) {
      mutable_item()->::MsgBuildingItem::MergeFrom(from.item());
    }
    if (from._has_bit(4)) {
      set_oldstate(from.oldstate());
    }
    if (from._has_bit(5)) {
      set_id(from.id());
    }
    if (from._has_bit(6)) {
      set_planetid(from.planetid());
    }
    if (from._has_bit(7)) {
      set_newstate(from.newstate());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      set_action(from.action());
    }
    if (from._has_bit(9)) {
      set_timepassed(from.timepassed());
    }
    if (from._has_bit(10)) {
      set_x(from.x());
    }
    if (from._has_bit(11)) {
      set_y(from.y());
    }
    if (from._has_bit(12)) {
      set_flip(from.flip());
    }
    if (from._has_bit(13)) {
      set_role(from.role());
    }
    if (from._has_bit(14)) {
      set_incometorestore(from.incometorestore());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RceUpdateItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RceUpdateItem::CopyFrom(const RceUpdateItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RceUpdateItem::IsInitialized() const {
  
  return true;
}

void RceUpdateItem::Swap(RceUpdateItem* other) {
  if (other != this) {
    std::swap(sid_, other->sid_);
    std::swap(time_, other->time_);
    std::swap(transaction_, other->transaction_);
    std::swap(item_, other->item_);
    std::swap(oldstate_, other->oldstate_);
    std::swap(id_, other->id_);
    std::swap(planetid_, other->planetid_);
    std::swap(newstate_, other->newstate_);
    std::swap(action_, other->action_);
    std::swap(timepassed_, other->timepassed_);
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(flip_, other->flip_);
    std::swap(role_, other->role_);
    std::swap(incometorestore_, other->incometorestore_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RceUpdateItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RceUpdateItem_descriptor_;
  metadata.reflection = RceUpdateItem_reflection_;
  return metadata;
}

