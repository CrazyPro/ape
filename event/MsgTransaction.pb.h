// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_MsgTransaction_2eproto__INCLUDED
#define PROTOBUF_MsgTransaction_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "MsgSocialItems.pb.h"

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgTransaction_2eproto();
void protobuf_AssignDesc_MsgTransaction_2eproto();
void protobuf_ShutdownFile_MsgTransaction_2eproto();

class MsgTransaction;

// ===================================================================

class MsgTransaction : public ::google::protobuf::Message {
 public:
  MsgTransaction();
  virtual ~MsgTransaction();
  
  MsgTransaction(const MsgTransaction& from);
  
  inline MsgTransaction& operator=(const MsgTransaction& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTransaction& default_instance();
  void Swap(MsgTransaction* other);
  
  // implements Message ----------------------------------------------
  
  MsgTransaction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgTransaction& from);
  void MergeFrom(const MsgTransaction& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string clientDebugInfo = 1;
  inline bool has_clientdebuginfo() const;
  inline void clear_clientdebuginfo();
  static const int kClientDebugInfoFieldNumber = 1;
  inline const ::std::string& clientdebuginfo() const;
  inline void set_clientdebuginfo(const ::std::string& value);
  inline void set_clientdebuginfo(const char* value);
  inline void set_clientdebuginfo(const char* value, size_t size);
  inline ::std::string* mutable_clientdebuginfo();
  
  // optional int32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
  // optional int32 minerals = 3;
  inline bool has_minerals() const;
  inline void clear_minerals();
  static const int kMineralsFieldNumber = 3;
  inline ::google::protobuf::int32 minerals() const;
  inline void set_minerals(::google::protobuf::int32 value);
  
  // optional int32 score = 4;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 4;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);
  
  // optional string client = 5;
  inline bool has_client() const;
  inline void clear_client();
  static const int kClientFieldNumber = 5;
  inline const ::std::string& client() const;
  inline void set_client(const ::std::string& value);
  inline void set_client(const char* value);
  inline void set_client(const char* value, size_t size);
  inline ::std::string* mutable_client();
  
  // optional string event = 6;
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 6;
  inline const ::std::string& event() const;
  inline void set_event(const ::std::string& value);
  inline void set_event(const char* value);
  inline void set_event(const char* value, size_t size);
  inline ::std::string* mutable_event();
  
  // optional int32 cash = 7;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 7;
  inline ::google::protobuf::int32 cash() const;
  inline void set_cash(::google::protobuf::int32 value);
  
  // optional double instantOperationMinutesLeft = 8;
  inline bool has_instantoperationminutesleft() const;
  inline void clear_instantoperationminutesleft();
  static const int kInstantOperationMinutesLeftFieldNumber = 8;
  inline double instantoperationminutesleft() const;
  inline void set_instantoperationminutesleft(double value);
  
  // optional int32 droids = 9;
  inline bool has_droids() const;
  inline void clear_droids();
  static const int kDroidsFieldNumber = 9;
  inline ::google::protobuf::int32 droids() const;
  inline void set_droids(::google::protobuf::int32 value);
  
  // optional int32 coins = 10;
  inline bool has_coins() const;
  inline void clear_coins();
  static const int kCoinsFieldNumber = 10;
  inline ::google::protobuf::int32 coins() const;
  inline void set_coins(::google::protobuf::int32 value);
  
  // repeated .MsgSocialItems socialItems = 11;
  inline int socialitems_size() const;
  inline void clear_socialitems();
  static const int kSocialItemsFieldNumber = 11;
  inline const ::google::protobuf::RepeatedPtrField< ::MsgSocialItems >& socialitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgSocialItems >* mutable_socialitems();
  inline const ::MsgSocialItems& socialitems(int index) const;
  inline ::MsgSocialItems* mutable_socialitems(int index);
  inline ::MsgSocialItems* add_socialitems();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* clientdebuginfo_;
  static const ::std::string _default_clientdebuginfo_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 minerals_;
  ::google::protobuf::int32 score_;
  ::std::string* client_;
  static const ::std::string _default_client_;
  ::std::string* event_;
  static const ::std::string _default_event_;
  ::google::protobuf::int32 cash_;
  double instantoperationminutesleft_;
  ::google::protobuf::int32 droids_;
  ::google::protobuf::int32 coins_;
  ::google::protobuf::RepeatedPtrField< ::MsgSocialItems > socialitems_;
  friend void  protobuf_AddDesc_MsgTransaction_2eproto();
  friend void protobuf_AssignDesc_MsgTransaction_2eproto();
  friend void protobuf_ShutdownFile_MsgTransaction_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgTransaction* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// MsgTransaction

// optional string clientDebugInfo = 1;
inline bool MsgTransaction::has_clientdebuginfo() const {
  return _has_bit(0);
}
inline void MsgTransaction::clear_clientdebuginfo() {
  if (clientdebuginfo_ != &_default_clientdebuginfo_) {
    clientdebuginfo_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgTransaction::clientdebuginfo() const {
  return *clientdebuginfo_;
}
inline void MsgTransaction::set_clientdebuginfo(const ::std::string& value) {
  _set_bit(0);
  if (clientdebuginfo_ == &_default_clientdebuginfo_) {
    clientdebuginfo_ = new ::std::string;
  }
  clientdebuginfo_->assign(value);
}
inline void MsgTransaction::set_clientdebuginfo(const char* value) {
  _set_bit(0);
  if (clientdebuginfo_ == &_default_clientdebuginfo_) {
    clientdebuginfo_ = new ::std::string;
  }
  clientdebuginfo_->assign(value);
}
inline void MsgTransaction::set_clientdebuginfo(const char* value, size_t size) {
  _set_bit(0);
  if (clientdebuginfo_ == &_default_clientdebuginfo_) {
    clientdebuginfo_ = new ::std::string;
  }
  clientdebuginfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgTransaction::mutable_clientdebuginfo() {
  _set_bit(0);
  if (clientdebuginfo_ == &_default_clientdebuginfo_) {
    clientdebuginfo_ = new ::std::string;
  }
  return clientdebuginfo_;
}

// optional int32 exp = 2;
inline bool MsgTransaction::has_exp() const {
  return _has_bit(1);
}
inline void MsgTransaction::clear_exp() {
  exp_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 MsgTransaction::exp() const {
  return exp_;
}
inline void MsgTransaction::set_exp(::google::protobuf::int32 value) {
  _set_bit(1);
  exp_ = value;
}

// optional int32 minerals = 3;
inline bool MsgTransaction::has_minerals() const {
  return _has_bit(2);
}
inline void MsgTransaction::clear_minerals() {
  minerals_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 MsgTransaction::minerals() const {
  return minerals_;
}
inline void MsgTransaction::set_minerals(::google::protobuf::int32 value) {
  _set_bit(2);
  minerals_ = value;
}

// optional int32 score = 4;
inline bool MsgTransaction::has_score() const {
  return _has_bit(3);
}
inline void MsgTransaction::clear_score() {
  score_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 MsgTransaction::score() const {
  return score_;
}
inline void MsgTransaction::set_score(::google::protobuf::int32 value) {
  _set_bit(3);
  score_ = value;
}

// optional string client = 5;
inline bool MsgTransaction::has_client() const {
  return _has_bit(4);
}
inline void MsgTransaction::clear_client() {
  if (client_ != &_default_client_) {
    client_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& MsgTransaction::client() const {
  return *client_;
}
inline void MsgTransaction::set_client(const ::std::string& value) {
  _set_bit(4);
  if (client_ == &_default_client_) {
    client_ = new ::std::string;
  }
  client_->assign(value);
}
inline void MsgTransaction::set_client(const char* value) {
  _set_bit(4);
  if (client_ == &_default_client_) {
    client_ = new ::std::string;
  }
  client_->assign(value);
}
inline void MsgTransaction::set_client(const char* value, size_t size) {
  _set_bit(4);
  if (client_ == &_default_client_) {
    client_ = new ::std::string;
  }
  client_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgTransaction::mutable_client() {
  _set_bit(4);
  if (client_ == &_default_client_) {
    client_ = new ::std::string;
  }
  return client_;
}

// optional string event = 6;
inline bool MsgTransaction::has_event() const {
  return _has_bit(5);
}
inline void MsgTransaction::clear_event() {
  if (event_ != &_default_event_) {
    event_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& MsgTransaction::event() const {
  return *event_;
}
inline void MsgTransaction::set_event(const ::std::string& value) {
  _set_bit(5);
  if (event_ == &_default_event_) {
    event_ = new ::std::string;
  }
  event_->assign(value);
}
inline void MsgTransaction::set_event(const char* value) {
  _set_bit(5);
  if (event_ == &_default_event_) {
    event_ = new ::std::string;
  }
  event_->assign(value);
}
inline void MsgTransaction::set_event(const char* value, size_t size) {
  _set_bit(5);
  if (event_ == &_default_event_) {
    event_ = new ::std::string;
  }
  event_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgTransaction::mutable_event() {
  _set_bit(5);
  if (event_ == &_default_event_) {
    event_ = new ::std::string;
  }
  return event_;
}

// optional int32 cash = 7;
inline bool MsgTransaction::has_cash() const {
  return _has_bit(6);
}
inline void MsgTransaction::clear_cash() {
  cash_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 MsgTransaction::cash() const {
  return cash_;
}
inline void MsgTransaction::set_cash(::google::protobuf::int32 value) {
  _set_bit(6);
  cash_ = value;
}

// optional double instantOperationMinutesLeft = 8;
inline bool MsgTransaction::has_instantoperationminutesleft() const {
  return _has_bit(7);
}
inline void MsgTransaction::clear_instantoperationminutesleft() {
  instantoperationminutesleft_ = 0;
  _clear_bit(7);
}
inline double MsgTransaction::instantoperationminutesleft() const {
  return instantoperationminutesleft_;
}
inline void MsgTransaction::set_instantoperationminutesleft(double value) {
  _set_bit(7);
  instantoperationminutesleft_ = value;
}

// optional int32 droids = 9;
inline bool MsgTransaction::has_droids() const {
  return _has_bit(8);
}
inline void MsgTransaction::clear_droids() {
  droids_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 MsgTransaction::droids() const {
  return droids_;
}
inline void MsgTransaction::set_droids(::google::protobuf::int32 value) {
  _set_bit(8);
  droids_ = value;
}

// optional int32 coins = 10;
inline bool MsgTransaction::has_coins() const {
  return _has_bit(9);
}
inline void MsgTransaction::clear_coins() {
  coins_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 MsgTransaction::coins() const {
  return coins_;
}
inline void MsgTransaction::set_coins(::google::protobuf::int32 value) {
  _set_bit(9);
  coins_ = value;
}

// repeated .MsgSocialItems socialItems = 11;
inline int MsgTransaction::socialitems_size() const {
  return socialitems_.size();
}
inline void MsgTransaction::clear_socialitems() {
  socialitems_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgSocialItems >&
MsgTransaction::socialitems() const {
  return socialitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgSocialItems >*
MsgTransaction::mutable_socialitems() {
  return &socialitems_;
}
inline const ::MsgSocialItems& MsgTransaction::socialitems(int index) const {
  return socialitems_.Get(index);
}
inline ::MsgSocialItems* MsgTransaction::mutable_socialitems(int index) {
  return socialitems_.Mutable(index);
}
inline ::MsgSocialItems* MsgTransaction::add_socialitems() {
  return socialitems_.Add();
}


#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_MsgTransaction_2eproto__INCLUDED
