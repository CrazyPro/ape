// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_RceBattleDamagesPack_2eproto__INCLUDED
#define PROTOBUF_RceBattleDamagesPack_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "MsgTransaction.pb.h"

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RceBattleDamagesPack_2eproto();
void protobuf_AssignDesc_RceBattleDamagesPack_2eproto();
void protobuf_ShutdownFile_RceBattleDamagesPack_2eproto();

class MsgDeployUnits;
class MsgUnitDamaged;
class MsgItemDamaged;
class MsgSpecialAttack;
class RceBattleDamagesPack;

// ===================================================================

class MsgDeployUnits : public ::google::protobuf::Message {
 public:
  MsgDeployUnits();
  virtual ~MsgDeployUnits();
  
  MsgDeployUnits(const MsgDeployUnits& from);
  
  inline MsgDeployUnits& operator=(const MsgDeployUnits& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDeployUnits& default_instance();
  void Swap(MsgDeployUnits* other);
  
  // implements Message ----------------------------------------------
  
  MsgDeployUnits* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDeployUnits& from);
  void MergeFrom(const MsgDeployUnits& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 planetId = 1;
  inline bool has_planetid() const;
  inline void clear_planetid();
  static const int kPlanetIdFieldNumber = 1;
  inline ::google::protobuf::int32 planetid() const;
  inline void set_planetid(::google::protobuf::int32 value);
  
  // optional int32 x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);
  
  // repeated int32 unitsIds = 3;
  inline int unitsids_size() const;
  inline void clear_unitsids();
  static const int kUnitsIdsFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& unitsids() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_unitsids();
  inline ::google::protobuf::int32 unitsids(int index) const;
  inline void set_unitsids(int index, ::google::protobuf::int32 value);
  inline void add_unitsids(::google::protobuf::int32 value);
  
  // optional int32 hangarSid = 4;
  inline bool has_hangarsid() const;
  inline void clear_hangarsid();
  static const int kHangarSidFieldNumber = 4;
  inline ::google::protobuf::int32 hangarsid() const;
  inline void set_hangarsid(::google::protobuf::int32 value);
  
  // optional int32 y = 5;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 5;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);
  
  // repeated int32 skuSD = 6;
  inline int skusd_size() const;
  inline void clear_skusd();
  static const int kSkuSDFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& skusd() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_skusd();
  inline ::google::protobuf::int32 skusd(int index) const;
  inline void set_skusd(int index, ::google::protobuf::int32 value);
  inline void add_skusd(::google::protobuf::int32 value);
  
  // repeated int32 skuE = 7;
  inline int skue_size() const;
  inline void clear_skue();
  static const int kSkuEFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& skue() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_skue();
  inline ::google::protobuf::int32 skue(int index) const;
  inline void set_skue(int index, ::google::protobuf::int32 value);
  inline void add_skue(::google::protobuf::int32 value);
  
  // optional int32 millis = 8;
  inline bool has_millis() const;
  inline void clear_millis();
  static const int kMillisFieldNumber = 8;
  inline ::google::protobuf::int32 millis() const;
  inline void set_millis(::google::protobuf::int32 value);
  
  // repeated int32 skuSWT = 9;
  inline int skuswt_size() const;
  inline void clear_skuswt();
  static const int kSkuSWTFieldNumber = 9;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& skuswt() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_skuswt();
  inline ::google::protobuf::int32 skuswt(int index) const;
  inline void set_skuswt(int index, ::google::protobuf::int32 value);
  inline void add_skuswt(::google::protobuf::int32 value);
  
  // optional string unitsSkus = 10;
  inline bool has_unitsskus() const;
  inline void clear_unitsskus();
  static const int kUnitsSkusFieldNumber = 10;
  inline const ::std::string& unitsskus() const;
  inline void set_unitsskus(const ::std::string& value);
  inline void set_unitsskus(const char* value);
  inline void set_unitsskus(const char* value, size_t size);
  inline ::std::string* mutable_unitsskus();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 planetid_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitsids_;
  ::google::protobuf::int32 hangarsid_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > skusd_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > skue_;
  ::google::protobuf::int32 millis_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > skuswt_;
  ::std::string* unitsskus_;
  static const ::std::string _default_unitsskus_;
  friend void  protobuf_AddDesc_RceBattleDamagesPack_2eproto();
  friend void protobuf_AssignDesc_RceBattleDamagesPack_2eproto();
  friend void protobuf_ShutdownFile_RceBattleDamagesPack_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgDeployUnits* default_instance_;
};
// -------------------------------------------------------------------

class MsgUnitDamaged : public ::google::protobuf::Message {
 public:
  MsgUnitDamaged();
  virtual ~MsgUnitDamaged();
  
  MsgUnitDamaged(const MsgUnitDamaged& from);
  
  inline MsgUnitDamaged& operator=(const MsgUnitDamaged& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUnitDamaged& default_instance();
  void Swap(MsgUnitDamaged* other);
  
  // implements Message ----------------------------------------------
  
  MsgUnitDamaged* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgUnitDamaged& from);
  void MergeFrom(const MsgUnitDamaged& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 planetId = 1;
  inline bool has_planetid() const;
  inline void clear_planetid();
  static const int kPlanetIdFieldNumber = 1;
  inline ::google::protobuf::int32 planetid() const;
  inline void set_planetid(::google::protobuf::int32 value);
  
  // optional int32 energyBeforeShot = 2;
  inline bool has_energybeforeshot() const;
  inline void clear_energybeforeshot();
  static const int kEnergyBeforeShotFieldNumber = 2;
  inline ::google::protobuf::int32 energybeforeshot() const;
  inline void set_energybeforeshot(::google::protobuf::int32 value);
  
  // optional int32 unitId = 3;
  inline bool has_unitid() const;
  inline void clear_unitid();
  static const int kUnitIdFieldNumber = 3;
  inline ::google::protobuf::int32 unitid() const;
  inline void set_unitid(::google::protobuf::int32 value);
  
  // optional string unitSku = 4;
  inline bool has_unitsku() const;
  inline void clear_unitsku();
  static const int kUnitSkuFieldNumber = 4;
  inline const ::std::string& unitsku() const;
  inline void set_unitsku(const ::std::string& value);
  inline void set_unitsku(const char* value);
  inline void set_unitsku(const char* value, size_t size);
  inline ::std::string* mutable_unitsku();
  
  // optional int32 fromBunkerSid = 5;
  inline bool has_frombunkersid() const;
  inline void clear_frombunkersid();
  static const int kFromBunkerSidFieldNumber = 5;
  inline ::google::protobuf::int32 frombunkersid() const;
  inline void set_frombunkersid(::google::protobuf::int32 value);
  
  // optional int32 damage = 6;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 6;
  inline ::google::protobuf::int32 damage() const;
  inline void set_damage(::google::protobuf::int32 value);
  
  // optional int32 destroyed = 7;
  inline bool has_destroyed() const;
  inline void clear_destroyed();
  static const int kDestroyedFieldNumber = 7;
  inline ::google::protobuf::int32 destroyed() const;
  inline void set_destroyed(::google::protobuf::int32 value);
  
  // repeated string attackers = 8;
  inline int attackers_size() const;
  inline void clear_attackers();
  static const int kAttackersFieldNumber = 8;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& attackers() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_attackers();
  inline const ::std::string& attackers(int index) const;
  inline ::std::string* mutable_attackers(int index);
  inline void set_attackers(int index, const ::std::string& value);
  inline void set_attackers(int index, const char* value);
  inline void set_attackers(int index, const char* value, size_t size);
  inline ::std::string* add_attackers();
  inline void add_attackers(const ::std::string& value);
  inline void add_attackers(const char* value);
  inline void add_attackers(const char* value, size_t size);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 planetid_;
  ::google::protobuf::int32 energybeforeshot_;
  ::google::protobuf::int32 unitid_;
  ::std::string* unitsku_;
  static const ::std::string _default_unitsku_;
  ::google::protobuf::int32 frombunkersid_;
  ::google::protobuf::int32 damage_;
  ::google::protobuf::int32 destroyed_;
  ::google::protobuf::RepeatedPtrField< ::std::string> attackers_;
  friend void  protobuf_AddDesc_RceBattleDamagesPack_2eproto();
  friend void protobuf_AssignDesc_RceBattleDamagesPack_2eproto();
  friend void protobuf_ShutdownFile_RceBattleDamagesPack_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgUnitDamaged* default_instance_;
};
// -------------------------------------------------------------------

class MsgItemDamaged : public ::google::protobuf::Message {
 public:
  MsgItemDamaged();
  virtual ~MsgItemDamaged();
  
  MsgItemDamaged(const MsgItemDamaged& from);
  
  inline MsgItemDamaged& operator=(const MsgItemDamaged& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgItemDamaged& default_instance();
  void Swap(MsgItemDamaged* other);
  
  // implements Message ----------------------------------------------
  
  MsgItemDamaged* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgItemDamaged& from);
  void MergeFrom(const MsgItemDamaged& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 planetId = 1;
  inline bool has_planetid() const;
  inline void clear_planetid();
  static const int kPlanetIdFieldNumber = 1;
  inline ::google::protobuf::int32 planetid() const;
  inline void set_planetid(::google::protobuf::int32 value);
  
  // optional int32 energyBeforeShot = 2;
  inline bool has_energybeforeshot() const;
  inline void clear_energybeforeshot();
  static const int kEnergyBeforeShotFieldNumber = 2;
  inline ::google::protobuf::int32 energybeforeshot() const;
  inline void set_energybeforeshot(::google::protobuf::int32 value);
  
  // optional .MsgTransaction transaction = 3;
  inline bool has_transaction() const;
  inline void clear_transaction();
  static const int kTransactionFieldNumber = 3;
  inline const ::MsgTransaction& transaction() const;
  inline ::MsgTransaction* mutable_transaction();
  
  // optional int32 destroyed = 4;
  inline bool has_destroyed() const;
  inline void clear_destroyed();
  static const int kDestroyedFieldNumber = 4;
  inline ::google::protobuf::int32 destroyed() const;
  inline void set_destroyed(::google::protobuf::int32 value);
  
  // optional int32 damage = 5;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 5;
  inline ::google::protobuf::int32 damage() const;
  inline void set_damage(::google::protobuf::int32 value);
  
  // optional .MsgTransaction transactionTarget = 6;
  inline bool has_transactiontarget() const;
  inline void clear_transactiontarget();
  static const int kTransactionTargetFieldNumber = 6;
  inline const ::MsgTransaction& transactiontarget() const;
  inline ::MsgTransaction* mutable_transactiontarget();
  
  // repeated string attackers = 7;
  inline int attackers_size() const;
  inline void clear_attackers();
  static const int kAttackersFieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& attackers() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_attackers();
  inline const ::std::string& attackers(int index) const;
  inline ::std::string* mutable_attackers(int index);
  inline void set_attackers(int index, const ::std::string& value);
  inline void set_attackers(int index, const char* value);
  inline void set_attackers(int index, const char* value, size_t size);
  inline ::std::string* add_attackers();
  inline void add_attackers(const ::std::string& value);
  inline void add_attackers(const char* value);
  inline void add_attackers(const char* value, size_t size);
  
  // optional int32 itemSid = 8;
  inline bool has_itemsid() const;
  inline void clear_itemsid();
  static const int kItemSidFieldNumber = 8;
  inline ::google::protobuf::int32 itemsid() const;
  inline void set_itemsid(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 planetid_;
  ::google::protobuf::int32 energybeforeshot_;
  ::MsgTransaction* transaction_;
  ::google::protobuf::int32 destroyed_;
  ::google::protobuf::int32 damage_;
  ::MsgTransaction* transactiontarget_;
  ::google::protobuf::RepeatedPtrField< ::std::string> attackers_;
  ::google::protobuf::int32 itemsid_;
  friend void  protobuf_AddDesc_RceBattleDamagesPack_2eproto();
  friend void protobuf_AssignDesc_RceBattleDamagesPack_2eproto();
  friend void protobuf_ShutdownFile_RceBattleDamagesPack_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgItemDamaged* default_instance_;
};
// -------------------------------------------------------------------

class MsgSpecialAttack : public ::google::protobuf::Message {
 public:
  MsgSpecialAttack();
  virtual ~MsgSpecialAttack();
  
  MsgSpecialAttack(const MsgSpecialAttack& from);
  
  inline MsgSpecialAttack& operator=(const MsgSpecialAttack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSpecialAttack& default_instance();
  void Swap(MsgSpecialAttack* other);
  
  // implements Message ----------------------------------------------
  
  MsgSpecialAttack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSpecialAttack& from);
  void MergeFrom(const MsgSpecialAttack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);
  
  // optional int32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);
  
  // optional int32 millis = 3;
  inline bool has_millis() const;
  inline void clear_millis();
  static const int kMillisFieldNumber = 3;
  inline ::google::protobuf::int32 millis() const;
  inline void set_millis(::google::protobuf::int32 value);
  
  // optional string socialItemSku = 4;
  inline bool has_socialitemsku() const;
  inline void clear_socialitemsku();
  static const int kSocialItemSkuFieldNumber = 4;
  inline const ::std::string& socialitemsku() const;
  inline void set_socialitemsku(const ::std::string& value);
  inline void set_socialitemsku(const char* value);
  inline void set_socialitemsku(const char* value, size_t size);
  inline ::std::string* mutable_socialitemsku();
  
  // optional .MsgTransaction transaction = 5;
  inline bool has_transaction() const;
  inline void clear_transaction();
  static const int kTransactionFieldNumber = 5;
  inline const ::MsgTransaction& transaction() const;
  inline ::MsgTransaction* mutable_transaction();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 millis_;
  ::std::string* socialitemsku_;
  static const ::std::string _default_socialitemsku_;
  ::MsgTransaction* transaction_;
  friend void  protobuf_AddDesc_RceBattleDamagesPack_2eproto();
  friend void protobuf_AssignDesc_RceBattleDamagesPack_2eproto();
  friend void protobuf_ShutdownFile_RceBattleDamagesPack_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgSpecialAttack* default_instance_;
};
// -------------------------------------------------------------------

class RceBattleDamagesPack : public ::google::protobuf::Message {
 public:
  RceBattleDamagesPack();
  virtual ~RceBattleDamagesPack();
  
  RceBattleDamagesPack(const RceBattleDamagesPack& from);
  
  inline RceBattleDamagesPack& operator=(const RceBattleDamagesPack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RceBattleDamagesPack& default_instance();
  void Swap(RceBattleDamagesPack* other);
  
  // implements Message ----------------------------------------------
  
  RceBattleDamagesPack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RceBattleDamagesPack& from);
  void MergeFrom(const RceBattleDamagesPack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .MsgDeployUnits deployUnits = 1;
  inline int deployunits_size() const;
  inline void clear_deployunits();
  static const int kDeployUnitsFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::MsgDeployUnits >& deployunits() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgDeployUnits >* mutable_deployunits();
  inline const ::MsgDeployUnits& deployunits(int index) const;
  inline ::MsgDeployUnits* mutable_deployunits(int index);
  inline ::MsgDeployUnits* add_deployunits();
  
  // repeated .MsgUnitDamaged unitDamaged = 2;
  inline int unitdamaged_size() const;
  inline void clear_unitdamaged();
  static const int kUnitDamagedFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::MsgUnitDamaged >& unitdamaged() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgUnitDamaged >* mutable_unitdamaged();
  inline const ::MsgUnitDamaged& unitdamaged(int index) const;
  inline ::MsgUnitDamaged* mutable_unitdamaged(int index);
  inline ::MsgUnitDamaged* add_unitdamaged();
  
  // repeated .MsgItemDamaged itemDamaged = 3;
  inline int itemdamaged_size() const;
  inline void clear_itemdamaged();
  static const int kItemDamagedFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::MsgItemDamaged >& itemdamaged() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgItemDamaged >* mutable_itemdamaged();
  inline const ::MsgItemDamaged& itemdamaged(int index) const;
  inline ::MsgItemDamaged* mutable_itemdamaged(int index);
  inline ::MsgItemDamaged* add_itemdamaged();
  
  // repeated .MsgSpecialAttack specialAttack = 4;
  inline int specialattack_size() const;
  inline void clear_specialattack();
  static const int kSpecialAttackFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::MsgSpecialAttack >& specialattack() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgSpecialAttack >* mutable_specialattack();
  inline const ::MsgSpecialAttack& specialattack(int index) const;
  inline ::MsgSpecialAttack* mutable_specialattack(int index);
  inline ::MsgSpecialAttack* add_specialattack();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::MsgDeployUnits > deployunits_;
  ::google::protobuf::RepeatedPtrField< ::MsgUnitDamaged > unitdamaged_;
  ::google::protobuf::RepeatedPtrField< ::MsgItemDamaged > itemdamaged_;
  ::google::protobuf::RepeatedPtrField< ::MsgSpecialAttack > specialattack_;
  friend void  protobuf_AddDesc_RceBattleDamagesPack_2eproto();
  friend void protobuf_AssignDesc_RceBattleDamagesPack_2eproto();
  friend void protobuf_ShutdownFile_RceBattleDamagesPack_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RceBattleDamagesPack* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// MsgDeployUnits

// optional int32 planetId = 1;
inline bool MsgDeployUnits::has_planetid() const {
  return _has_bit(0);
}
inline void MsgDeployUnits::clear_planetid() {
  planetid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgDeployUnits::planetid() const {
  return planetid_;
}
inline void MsgDeployUnits::set_planetid(::google::protobuf::int32 value) {
  _set_bit(0);
  planetid_ = value;
}

// optional int32 x = 2;
inline bool MsgDeployUnits::has_x() const {
  return _has_bit(1);
}
inline void MsgDeployUnits::clear_x() {
  x_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 MsgDeployUnits::x() const {
  return x_;
}
inline void MsgDeployUnits::set_x(::google::protobuf::int32 value) {
  _set_bit(1);
  x_ = value;
}

// repeated int32 unitsIds = 3;
inline int MsgDeployUnits::unitsids_size() const {
  return unitsids_.size();
}
inline void MsgDeployUnits::clear_unitsids() {
  unitsids_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgDeployUnits::unitsids() const {
  return unitsids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgDeployUnits::mutable_unitsids() {
  return &unitsids_;
}
inline ::google::protobuf::int32 MsgDeployUnits::unitsids(int index) const {
  return unitsids_.Get(index);
}
inline void MsgDeployUnits::set_unitsids(int index, ::google::protobuf::int32 value) {
  unitsids_.Set(index, value);
}
inline void MsgDeployUnits::add_unitsids(::google::protobuf::int32 value) {
  unitsids_.Add(value);
}

// optional int32 hangarSid = 4;
inline bool MsgDeployUnits::has_hangarsid() const {
  return _has_bit(3);
}
inline void MsgDeployUnits::clear_hangarsid() {
  hangarsid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 MsgDeployUnits::hangarsid() const {
  return hangarsid_;
}
inline void MsgDeployUnits::set_hangarsid(::google::protobuf::int32 value) {
  _set_bit(3);
  hangarsid_ = value;
}

// optional int32 y = 5;
inline bool MsgDeployUnits::has_y() const {
  return _has_bit(4);
}
inline void MsgDeployUnits::clear_y() {
  y_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 MsgDeployUnits::y() const {
  return y_;
}
inline void MsgDeployUnits::set_y(::google::protobuf::int32 value) {
  _set_bit(4);
  y_ = value;
}

// repeated int32 skuSD = 6;
inline int MsgDeployUnits::skusd_size() const {
  return skusd_.size();
}
inline void MsgDeployUnits::clear_skusd() {
  skusd_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgDeployUnits::skusd() const {
  return skusd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgDeployUnits::mutable_skusd() {
  return &skusd_;
}
inline ::google::protobuf::int32 MsgDeployUnits::skusd(int index) const {
  return skusd_.Get(index);
}
inline void MsgDeployUnits::set_skusd(int index, ::google::protobuf::int32 value) {
  skusd_.Set(index, value);
}
inline void MsgDeployUnits::add_skusd(::google::protobuf::int32 value) {
  skusd_.Add(value);
}

// repeated int32 skuE = 7;
inline int MsgDeployUnits::skue_size() const {
  return skue_.size();
}
inline void MsgDeployUnits::clear_skue() {
  skue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgDeployUnits::skue() const {
  return skue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgDeployUnits::mutable_skue() {
  return &skue_;
}
inline ::google::protobuf::int32 MsgDeployUnits::skue(int index) const {
  return skue_.Get(index);
}
inline void MsgDeployUnits::set_skue(int index, ::google::protobuf::int32 value) {
  skue_.Set(index, value);
}
inline void MsgDeployUnits::add_skue(::google::protobuf::int32 value) {
  skue_.Add(value);
}

// optional int32 millis = 8;
inline bool MsgDeployUnits::has_millis() const {
  return _has_bit(7);
}
inline void MsgDeployUnits::clear_millis() {
  millis_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 MsgDeployUnits::millis() const {
  return millis_;
}
inline void MsgDeployUnits::set_millis(::google::protobuf::int32 value) {
  _set_bit(7);
  millis_ = value;
}

// repeated int32 skuSWT = 9;
inline int MsgDeployUnits::skuswt_size() const {
  return skuswt_.size();
}
inline void MsgDeployUnits::clear_skuswt() {
  skuswt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgDeployUnits::skuswt() const {
  return skuswt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgDeployUnits::mutable_skuswt() {
  return &skuswt_;
}
inline ::google::protobuf::int32 MsgDeployUnits::skuswt(int index) const {
  return skuswt_.Get(index);
}
inline void MsgDeployUnits::set_skuswt(int index, ::google::protobuf::int32 value) {
  skuswt_.Set(index, value);
}
inline void MsgDeployUnits::add_skuswt(::google::protobuf::int32 value) {
  skuswt_.Add(value);
}

// optional string unitsSkus = 10;
inline bool MsgDeployUnits::has_unitsskus() const {
  return _has_bit(9);
}
inline void MsgDeployUnits::clear_unitsskus() {
  if (unitsskus_ != &_default_unitsskus_) {
    unitsskus_->clear();
  }
  _clear_bit(9);
}
inline const ::std::string& MsgDeployUnits::unitsskus() const {
  return *unitsskus_;
}
inline void MsgDeployUnits::set_unitsskus(const ::std::string& value) {
  _set_bit(9);
  if (unitsskus_ == &_default_unitsskus_) {
    unitsskus_ = new ::std::string;
  }
  unitsskus_->assign(value);
}
inline void MsgDeployUnits::set_unitsskus(const char* value) {
  _set_bit(9);
  if (unitsskus_ == &_default_unitsskus_) {
    unitsskus_ = new ::std::string;
  }
  unitsskus_->assign(value);
}
inline void MsgDeployUnits::set_unitsskus(const char* value, size_t size) {
  _set_bit(9);
  if (unitsskus_ == &_default_unitsskus_) {
    unitsskus_ = new ::std::string;
  }
  unitsskus_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgDeployUnits::mutable_unitsskus() {
  _set_bit(9);
  if (unitsskus_ == &_default_unitsskus_) {
    unitsskus_ = new ::std::string;
  }
  return unitsskus_;
}

// -------------------------------------------------------------------

// MsgUnitDamaged

// optional int32 planetId = 1;
inline bool MsgUnitDamaged::has_planetid() const {
  return _has_bit(0);
}
inline void MsgUnitDamaged::clear_planetid() {
  planetid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgUnitDamaged::planetid() const {
  return planetid_;
}
inline void MsgUnitDamaged::set_planetid(::google::protobuf::int32 value) {
  _set_bit(0);
  planetid_ = value;
}

// optional int32 energyBeforeShot = 2;
inline bool MsgUnitDamaged::has_energybeforeshot() const {
  return _has_bit(1);
}
inline void MsgUnitDamaged::clear_energybeforeshot() {
  energybeforeshot_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 MsgUnitDamaged::energybeforeshot() const {
  return energybeforeshot_;
}
inline void MsgUnitDamaged::set_energybeforeshot(::google::protobuf::int32 value) {
  _set_bit(1);
  energybeforeshot_ = value;
}

// optional int32 unitId = 3;
inline bool MsgUnitDamaged::has_unitid() const {
  return _has_bit(2);
}
inline void MsgUnitDamaged::clear_unitid() {
  unitid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 MsgUnitDamaged::unitid() const {
  return unitid_;
}
inline void MsgUnitDamaged::set_unitid(::google::protobuf::int32 value) {
  _set_bit(2);
  unitid_ = value;
}

// optional string unitSku = 4;
inline bool MsgUnitDamaged::has_unitsku() const {
  return _has_bit(3);
}
inline void MsgUnitDamaged::clear_unitsku() {
  if (unitsku_ != &_default_unitsku_) {
    unitsku_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& MsgUnitDamaged::unitsku() const {
  return *unitsku_;
}
inline void MsgUnitDamaged::set_unitsku(const ::std::string& value) {
  _set_bit(3);
  if (unitsku_ == &_default_unitsku_) {
    unitsku_ = new ::std::string;
  }
  unitsku_->assign(value);
}
inline void MsgUnitDamaged::set_unitsku(const char* value) {
  _set_bit(3);
  if (unitsku_ == &_default_unitsku_) {
    unitsku_ = new ::std::string;
  }
  unitsku_->assign(value);
}
inline void MsgUnitDamaged::set_unitsku(const char* value, size_t size) {
  _set_bit(3);
  if (unitsku_ == &_default_unitsku_) {
    unitsku_ = new ::std::string;
  }
  unitsku_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgUnitDamaged::mutable_unitsku() {
  _set_bit(3);
  if (unitsku_ == &_default_unitsku_) {
    unitsku_ = new ::std::string;
  }
  return unitsku_;
}

// optional int32 fromBunkerSid = 5;
inline bool MsgUnitDamaged::has_frombunkersid() const {
  return _has_bit(4);
}
inline void MsgUnitDamaged::clear_frombunkersid() {
  frombunkersid_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 MsgUnitDamaged::frombunkersid() const {
  return frombunkersid_;
}
inline void MsgUnitDamaged::set_frombunkersid(::google::protobuf::int32 value) {
  _set_bit(4);
  frombunkersid_ = value;
}

// optional int32 damage = 6;
inline bool MsgUnitDamaged::has_damage() const {
  return _has_bit(5);
}
inline void MsgUnitDamaged::clear_damage() {
  damage_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 MsgUnitDamaged::damage() const {
  return damage_;
}
inline void MsgUnitDamaged::set_damage(::google::protobuf::int32 value) {
  _set_bit(5);
  damage_ = value;
}

// optional int32 destroyed = 7;
inline bool MsgUnitDamaged::has_destroyed() const {
  return _has_bit(6);
}
inline void MsgUnitDamaged::clear_destroyed() {
  destroyed_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 MsgUnitDamaged::destroyed() const {
  return destroyed_;
}
inline void MsgUnitDamaged::set_destroyed(::google::protobuf::int32 value) {
  _set_bit(6);
  destroyed_ = value;
}

// repeated string attackers = 8;
inline int MsgUnitDamaged::attackers_size() const {
  return attackers_.size();
}
inline void MsgUnitDamaged::clear_attackers() {
  attackers_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgUnitDamaged::attackers() const {
  return attackers_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgUnitDamaged::mutable_attackers() {
  return &attackers_;
}
inline const ::std::string& MsgUnitDamaged::attackers(int index) const {
  return attackers_.Get(index);
}
inline ::std::string* MsgUnitDamaged::mutable_attackers(int index) {
  return attackers_.Mutable(index);
}
inline void MsgUnitDamaged::set_attackers(int index, const ::std::string& value) {
  attackers_.Mutable(index)->assign(value);
}
inline void MsgUnitDamaged::set_attackers(int index, const char* value) {
  attackers_.Mutable(index)->assign(value);
}
inline void MsgUnitDamaged::set_attackers(int index, const char* value, size_t size) {
  attackers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgUnitDamaged::add_attackers() {
  return attackers_.Add();
}
inline void MsgUnitDamaged::add_attackers(const ::std::string& value) {
  attackers_.Add()->assign(value);
}
inline void MsgUnitDamaged::add_attackers(const char* value) {
  attackers_.Add()->assign(value);
}
inline void MsgUnitDamaged::add_attackers(const char* value, size_t size) {
  attackers_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// -------------------------------------------------------------------

// MsgItemDamaged

// optional int32 planetId = 1;
inline bool MsgItemDamaged::has_planetid() const {
  return _has_bit(0);
}
inline void MsgItemDamaged::clear_planetid() {
  planetid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgItemDamaged::planetid() const {
  return planetid_;
}
inline void MsgItemDamaged::set_planetid(::google::protobuf::int32 value) {
  _set_bit(0);
  planetid_ = value;
}

// optional int32 energyBeforeShot = 2;
inline bool MsgItemDamaged::has_energybeforeshot() const {
  return _has_bit(1);
}
inline void MsgItemDamaged::clear_energybeforeshot() {
  energybeforeshot_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 MsgItemDamaged::energybeforeshot() const {
  return energybeforeshot_;
}
inline void MsgItemDamaged::set_energybeforeshot(::google::protobuf::int32 value) {
  _set_bit(1);
  energybeforeshot_ = value;
}

// optional .MsgTransaction transaction = 3;
inline bool MsgItemDamaged::has_transaction() const {
  return _has_bit(2);
}
inline void MsgItemDamaged::clear_transaction() {
  if (transaction_ != NULL) transaction_->::MsgTransaction::Clear();
  _clear_bit(2);
}
inline const ::MsgTransaction& MsgItemDamaged::transaction() const {
  return transaction_ != NULL ? *transaction_ : *default_instance_->transaction_;
}
inline ::MsgTransaction* MsgItemDamaged::mutable_transaction() {
  _set_bit(2);
  if (transaction_ == NULL) transaction_ = new ::MsgTransaction;
  return transaction_;
}

// optional int32 destroyed = 4;
inline bool MsgItemDamaged::has_destroyed() const {
  return _has_bit(3);
}
inline void MsgItemDamaged::clear_destroyed() {
  destroyed_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 MsgItemDamaged::destroyed() const {
  return destroyed_;
}
inline void MsgItemDamaged::set_destroyed(::google::protobuf::int32 value) {
  _set_bit(3);
  destroyed_ = value;
}

// optional int32 damage = 5;
inline bool MsgItemDamaged::has_damage() const {
  return _has_bit(4);
}
inline void MsgItemDamaged::clear_damage() {
  damage_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 MsgItemDamaged::damage() const {
  return damage_;
}
inline void MsgItemDamaged::set_damage(::google::protobuf::int32 value) {
  _set_bit(4);
  damage_ = value;
}

// optional .MsgTransaction transactionTarget = 6;
inline bool MsgItemDamaged::has_transactiontarget() const {
  return _has_bit(5);
}
inline void MsgItemDamaged::clear_transactiontarget() {
  if (transactiontarget_ != NULL) transactiontarget_->::MsgTransaction::Clear();
  _clear_bit(5);
}
inline const ::MsgTransaction& MsgItemDamaged::transactiontarget() const {
  return transactiontarget_ != NULL ? *transactiontarget_ : *default_instance_->transactiontarget_;
}
inline ::MsgTransaction* MsgItemDamaged::mutable_transactiontarget() {
  _set_bit(5);
  if (transactiontarget_ == NULL) transactiontarget_ = new ::MsgTransaction;
  return transactiontarget_;
}

// repeated string attackers = 7;
inline int MsgItemDamaged::attackers_size() const {
  return attackers_.size();
}
inline void MsgItemDamaged::clear_attackers() {
  attackers_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgItemDamaged::attackers() const {
  return attackers_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgItemDamaged::mutable_attackers() {
  return &attackers_;
}
inline const ::std::string& MsgItemDamaged::attackers(int index) const {
  return attackers_.Get(index);
}
inline ::std::string* MsgItemDamaged::mutable_attackers(int index) {
  return attackers_.Mutable(index);
}
inline void MsgItemDamaged::set_attackers(int index, const ::std::string& value) {
  attackers_.Mutable(index)->assign(value);
}
inline void MsgItemDamaged::set_attackers(int index, const char* value) {
  attackers_.Mutable(index)->assign(value);
}
inline void MsgItemDamaged::set_attackers(int index, const char* value, size_t size) {
  attackers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgItemDamaged::add_attackers() {
  return attackers_.Add();
}
inline void MsgItemDamaged::add_attackers(const ::std::string& value) {
  attackers_.Add()->assign(value);
}
inline void MsgItemDamaged::add_attackers(const char* value) {
  attackers_.Add()->assign(value);
}
inline void MsgItemDamaged::add_attackers(const char* value, size_t size) {
  attackers_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// optional int32 itemSid = 8;
inline bool MsgItemDamaged::has_itemsid() const {
  return _has_bit(7);
}
inline void MsgItemDamaged::clear_itemsid() {
  itemsid_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 MsgItemDamaged::itemsid() const {
  return itemsid_;
}
inline void MsgItemDamaged::set_itemsid(::google::protobuf::int32 value) {
  _set_bit(7);
  itemsid_ = value;
}

// -------------------------------------------------------------------

// MsgSpecialAttack

// optional int32 x = 1;
inline bool MsgSpecialAttack::has_x() const {
  return _has_bit(0);
}
inline void MsgSpecialAttack::clear_x() {
  x_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgSpecialAttack::x() const {
  return x_;
}
inline void MsgSpecialAttack::set_x(::google::protobuf::int32 value) {
  _set_bit(0);
  x_ = value;
}

// optional int32 y = 2;
inline bool MsgSpecialAttack::has_y() const {
  return _has_bit(1);
}
inline void MsgSpecialAttack::clear_y() {
  y_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 MsgSpecialAttack::y() const {
  return y_;
}
inline void MsgSpecialAttack::set_y(::google::protobuf::int32 value) {
  _set_bit(1);
  y_ = value;
}

// optional int32 millis = 3;
inline bool MsgSpecialAttack::has_millis() const {
  return _has_bit(2);
}
inline void MsgSpecialAttack::clear_millis() {
  millis_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 MsgSpecialAttack::millis() const {
  return millis_;
}
inline void MsgSpecialAttack::set_millis(::google::protobuf::int32 value) {
  _set_bit(2);
  millis_ = value;
}

// optional string socialItemSku = 4;
inline bool MsgSpecialAttack::has_socialitemsku() const {
  return _has_bit(3);
}
inline void MsgSpecialAttack::clear_socialitemsku() {
  if (socialitemsku_ != &_default_socialitemsku_) {
    socialitemsku_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& MsgSpecialAttack::socialitemsku() const {
  return *socialitemsku_;
}
inline void MsgSpecialAttack::set_socialitemsku(const ::std::string& value) {
  _set_bit(3);
  if (socialitemsku_ == &_default_socialitemsku_) {
    socialitemsku_ = new ::std::string;
  }
  socialitemsku_->assign(value);
}
inline void MsgSpecialAttack::set_socialitemsku(const char* value) {
  _set_bit(3);
  if (socialitemsku_ == &_default_socialitemsku_) {
    socialitemsku_ = new ::std::string;
  }
  socialitemsku_->assign(value);
}
inline void MsgSpecialAttack::set_socialitemsku(const char* value, size_t size) {
  _set_bit(3);
  if (socialitemsku_ == &_default_socialitemsku_) {
    socialitemsku_ = new ::std::string;
  }
  socialitemsku_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgSpecialAttack::mutable_socialitemsku() {
  _set_bit(3);
  if (socialitemsku_ == &_default_socialitemsku_) {
    socialitemsku_ = new ::std::string;
  }
  return socialitemsku_;
}

// optional .MsgTransaction transaction = 5;
inline bool MsgSpecialAttack::has_transaction() const {
  return _has_bit(4);
}
inline void MsgSpecialAttack::clear_transaction() {
  if (transaction_ != NULL) transaction_->::MsgTransaction::Clear();
  _clear_bit(4);
}
inline const ::MsgTransaction& MsgSpecialAttack::transaction() const {
  return transaction_ != NULL ? *transaction_ : *default_instance_->transaction_;
}
inline ::MsgTransaction* MsgSpecialAttack::mutable_transaction() {
  _set_bit(4);
  if (transaction_ == NULL) transaction_ = new ::MsgTransaction;
  return transaction_;
}

// -------------------------------------------------------------------

// RceBattleDamagesPack

// repeated .MsgDeployUnits deployUnits = 1;
inline int RceBattleDamagesPack::deployunits_size() const {
  return deployunits_.size();
}
inline void RceBattleDamagesPack::clear_deployunits() {
  deployunits_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgDeployUnits >&
RceBattleDamagesPack::deployunits() const {
  return deployunits_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgDeployUnits >*
RceBattleDamagesPack::mutable_deployunits() {
  return &deployunits_;
}
inline const ::MsgDeployUnits& RceBattleDamagesPack::deployunits(int index) const {
  return deployunits_.Get(index);
}
inline ::MsgDeployUnits* RceBattleDamagesPack::mutable_deployunits(int index) {
  return deployunits_.Mutable(index);
}
inline ::MsgDeployUnits* RceBattleDamagesPack::add_deployunits() {
  return deployunits_.Add();
}

// repeated .MsgUnitDamaged unitDamaged = 2;
inline int RceBattleDamagesPack::unitdamaged_size() const {
  return unitdamaged_.size();
}
inline void RceBattleDamagesPack::clear_unitdamaged() {
  unitdamaged_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgUnitDamaged >&
RceBattleDamagesPack::unitdamaged() const {
  return unitdamaged_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgUnitDamaged >*
RceBattleDamagesPack::mutable_unitdamaged() {
  return &unitdamaged_;
}
inline const ::MsgUnitDamaged& RceBattleDamagesPack::unitdamaged(int index) const {
  return unitdamaged_.Get(index);
}
inline ::MsgUnitDamaged* RceBattleDamagesPack::mutable_unitdamaged(int index) {
  return unitdamaged_.Mutable(index);
}
inline ::MsgUnitDamaged* RceBattleDamagesPack::add_unitdamaged() {
  return unitdamaged_.Add();
}

// repeated .MsgItemDamaged itemDamaged = 3;
inline int RceBattleDamagesPack::itemdamaged_size() const {
  return itemdamaged_.size();
}
inline void RceBattleDamagesPack::clear_itemdamaged() {
  itemdamaged_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgItemDamaged >&
RceBattleDamagesPack::itemdamaged() const {
  return itemdamaged_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgItemDamaged >*
RceBattleDamagesPack::mutable_itemdamaged() {
  return &itemdamaged_;
}
inline const ::MsgItemDamaged& RceBattleDamagesPack::itemdamaged(int index) const {
  return itemdamaged_.Get(index);
}
inline ::MsgItemDamaged* RceBattleDamagesPack::mutable_itemdamaged(int index) {
  return itemdamaged_.Mutable(index);
}
inline ::MsgItemDamaged* RceBattleDamagesPack::add_itemdamaged() {
  return itemdamaged_.Add();
}

// repeated .MsgSpecialAttack specialAttack = 4;
inline int RceBattleDamagesPack::specialattack_size() const {
  return specialattack_.size();
}
inline void RceBattleDamagesPack::clear_specialattack() {
  specialattack_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgSpecialAttack >&
RceBattleDamagesPack::specialattack() const {
  return specialattack_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgSpecialAttack >*
RceBattleDamagesPack::mutable_specialattack() {
  return &specialattack_;
}
inline const ::MsgSpecialAttack& RceBattleDamagesPack::specialattack(int index) const {
  return specialattack_.Get(index);
}
inline ::MsgSpecialAttack* RceBattleDamagesPack::mutable_specialattack(int index) {
  return specialattack_.Mutable(index);
}
inline ::MsgSpecialAttack* RceBattleDamagesPack::add_specialattack() {
  return specialattack_.Add();
}


#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_RceBattleDamagesPack_2eproto__INCLUDED
