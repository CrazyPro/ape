// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_RseQueryStarsBookmarks_2eproto__INCLUDED
#define PROTOBUF_RseQueryStarsBookmarks_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RseQueryStarsBookmarks_2eproto();
void protobuf_AssignDesc_RseQueryStarsBookmarks_2eproto();
void protobuf_ShutdownFile_RseQueryStarsBookmarks_2eproto();

class RseQueryStarsBookmarks;
class Bookmarks;

// ===================================================================

class RseQueryStarsBookmarks : public ::google::protobuf::Message {
 public:
  RseQueryStarsBookmarks();
  virtual ~RseQueryStarsBookmarks();
  
  RseQueryStarsBookmarks(const RseQueryStarsBookmarks& from);
  
  inline RseQueryStarsBookmarks& operator=(const RseQueryStarsBookmarks& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RseQueryStarsBookmarks& default_instance();
  void Swap(RseQueryStarsBookmarks* other);
  
  // implements Message ----------------------------------------------
  
  RseQueryStarsBookmarks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RseQueryStarsBookmarks& from);
  void MergeFrom(const RseQueryStarsBookmarks& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Bookmarks Bookmarks = 1;
  inline int bookmarks_size() const;
  inline void clear_bookmarks();
  static const int kBookmarksFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Bookmarks >& bookmarks() const;
  inline ::google::protobuf::RepeatedPtrField< ::Bookmarks >* mutable_bookmarks();
  inline const ::Bookmarks& bookmarks(int index) const;
  inline ::Bookmarks* mutable_bookmarks(int index);
  inline ::Bookmarks* add_bookmarks();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Bookmarks > bookmarks_;
  friend void  protobuf_AddDesc_RseQueryStarsBookmarks_2eproto();
  friend void protobuf_AssignDesc_RseQueryStarsBookmarks_2eproto();
  friend void protobuf_ShutdownFile_RseQueryStarsBookmarks_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RseQueryStarsBookmarks* default_instance_;
};
// -------------------------------------------------------------------

class Bookmarks : public ::google::protobuf::Message {
 public:
  Bookmarks();
  virtual ~Bookmarks();
  
  Bookmarks(const Bookmarks& from);
  
  inline Bookmarks& operator=(const Bookmarks& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Bookmarks& default_instance();
  void Swap(Bookmarks* other);
  
  // implements Message ----------------------------------------------
  
  Bookmarks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Bookmarks& from);
  void MergeFrom(const Bookmarks& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 starName = 1;
  inline bool has_starname() const;
  inline void clear_starname();
  static const int kStarNameFieldNumber = 1;
  inline ::google::protobuf::int32 starname() const;
  inline void set_starname(::google::protobuf::int32 value);
  
  // optional string sku = 2;
  inline bool has_sku() const;
  inline void clear_sku();
  static const int kSkuFieldNumber = 2;
  inline const ::std::string& sku() const;
  inline void set_sku(const ::std::string& value);
  inline void set_sku(const char* value);
  inline void set_sku(const char* value, size_t size);
  inline ::std::string* mutable_sku();
  
  // optional int32 starType = 3;
  inline bool has_startype() const;
  inline void clear_startype();
  static const int kStarTypeFieldNumber = 3;
  inline ::google::protobuf::int32 startype() const;
  inline void set_startype(::google::protobuf::int32 value);
  
  // optional int32 starId = 4;
  inline bool has_starid() const;
  inline void clear_starid();
  static const int kStarIdFieldNumber = 4;
  inline ::google::protobuf::int32 starid() const;
  inline void set_starid(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 starname_;
  ::std::string* sku_;
  static const ::std::string _default_sku_;
  ::google::protobuf::int32 startype_;
  ::google::protobuf::int32 starid_;
  friend void  protobuf_AddDesc_RseQueryStarsBookmarks_2eproto();
  friend void protobuf_AssignDesc_RseQueryStarsBookmarks_2eproto();
  friend void protobuf_ShutdownFile_RseQueryStarsBookmarks_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Bookmarks* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// RseQueryStarsBookmarks

// repeated .Bookmarks Bookmarks = 1;
inline int RseQueryStarsBookmarks::bookmarks_size() const {
  return bookmarks_.size();
}
inline void RseQueryStarsBookmarks::clear_bookmarks() {
  bookmarks_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Bookmarks >&
RseQueryStarsBookmarks::bookmarks() const {
  return bookmarks_;
}
inline ::google::protobuf::RepeatedPtrField< ::Bookmarks >*
RseQueryStarsBookmarks::mutable_bookmarks() {
  return &bookmarks_;
}
inline const ::Bookmarks& RseQueryStarsBookmarks::bookmarks(int index) const {
  return bookmarks_.Get(index);
}
inline ::Bookmarks* RseQueryStarsBookmarks::mutable_bookmarks(int index) {
  return bookmarks_.Mutable(index);
}
inline ::Bookmarks* RseQueryStarsBookmarks::add_bookmarks() {
  return bookmarks_.Add();
}

// -------------------------------------------------------------------

// Bookmarks

// optional int32 starName = 1;
inline bool Bookmarks::has_starname() const {
  return _has_bit(0);
}
inline void Bookmarks::clear_starname() {
  starname_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 Bookmarks::starname() const {
  return starname_;
}
inline void Bookmarks::set_starname(::google::protobuf::int32 value) {
  _set_bit(0);
  starname_ = value;
}

// optional string sku = 2;
inline bool Bookmarks::has_sku() const {
  return _has_bit(1);
}
inline void Bookmarks::clear_sku() {
  if (sku_ != &_default_sku_) {
    sku_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& Bookmarks::sku() const {
  return *sku_;
}
inline void Bookmarks::set_sku(const ::std::string& value) {
  _set_bit(1);
  if (sku_ == &_default_sku_) {
    sku_ = new ::std::string;
  }
  sku_->assign(value);
}
inline void Bookmarks::set_sku(const char* value) {
  _set_bit(1);
  if (sku_ == &_default_sku_) {
    sku_ = new ::std::string;
  }
  sku_->assign(value);
}
inline void Bookmarks::set_sku(const char* value, size_t size) {
  _set_bit(1);
  if (sku_ == &_default_sku_) {
    sku_ = new ::std::string;
  }
  sku_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Bookmarks::mutable_sku() {
  _set_bit(1);
  if (sku_ == &_default_sku_) {
    sku_ = new ::std::string;
  }
  return sku_;
}

// optional int32 starType = 3;
inline bool Bookmarks::has_startype() const {
  return _has_bit(2);
}
inline void Bookmarks::clear_startype() {
  startype_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 Bookmarks::startype() const {
  return startype_;
}
inline void Bookmarks::set_startype(::google::protobuf::int32 value) {
  _set_bit(2);
  startype_ = value;
}

// optional int32 starId = 4;
inline bool Bookmarks::has_starid() const {
  return _has_bit(3);
}
inline void Bookmarks::clear_starid() {
  starid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 Bookmarks::starid() const {
  return starid_;
}
inline void Bookmarks::set_starid(::google::protobuf::int32 value) {
  _set_bit(3);
  starid_ = value;
}


#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_RseQueryStarsBookmarks_2eproto__INCLUDED
