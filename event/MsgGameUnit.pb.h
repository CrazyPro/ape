// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_MsgGameUnit_2eproto__INCLUDED
#define PROTOBUF_MsgGameUnit_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgGameUnit_2eproto();
void protobuf_AssignDesc_MsgGameUnit_2eproto();
void protobuf_ShutdownFile_MsgGameUnit_2eproto();

class MsgGameUnit;

// ===================================================================

class MsgGameUnit : public ::google::protobuf::Message {
 public:
  MsgGameUnit();
  virtual ~MsgGameUnit();
  
  MsgGameUnit(const MsgGameUnit& from);
  
  inline MsgGameUnit& operator=(const MsgGameUnit& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGameUnit& default_instance();
  void Swap(MsgGameUnit* other);
  
  // implements Message ----------------------------------------------
  
  MsgGameUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgGameUnit& from);
  void MergeFrom(const MsgGameUnit& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 updatedAt = 1;
  inline bool has_updatedat() const;
  inline void clear_updatedat();
  static const int kUpdatedAtFieldNumber = 1;
  inline ::google::protobuf::int32 updatedat() const;
  inline void set_updatedat(::google::protobuf::int32 value);
  
  // optional int32 unlocked = 2;
  inline bool has_unlocked() const;
  inline void clear_unlocked();
  static const int kUnlockedFieldNumber = 2;
  inline ::google::protobuf::int32 unlocked() const;
  inline void set_unlocked(::google::protobuf::int32 value);
  
  // optional int32 timeLeft = 3;
  inline bool has_timeleft() const;
  inline void clear_timeleft();
  static const int kTimeLeftFieldNumber = 3;
  inline ::google::protobuf::int32 timeleft() const;
  inline void set_timeleft(::google::protobuf::int32 value);
  
  // repeated int32 GameUnit = 4;
  inline int gameunit_size() const;
  inline void clear_gameunit();
  static const int kGameUnitFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& gameunit() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_gameunit();
  inline ::google::protobuf::int32 gameunit(int index) const;
  inline void set_gameunit(int index, ::google::protobuf::int32 value);
  inline void add_gameunit(::google::protobuf::int32 value);
  
  // optional string sku = 5;
  inline bool has_sku() const;
  inline void clear_sku();
  static const int kSkuFieldNumber = 5;
  inline const ::std::string& sku() const;
  inline void set_sku(const ::std::string& value);
  inline void set_sku(const char* value);
  inline void set_sku(const char* value, size_t size);
  inline ::std::string* mutable_sku();
  
  // optional int32 upgradeId = 6;
  inline bool has_upgradeid() const;
  inline void clear_upgradeid();
  static const int kUpgradeIdFieldNumber = 6;
  inline ::google::protobuf::int32 upgradeid() const;
  inline void set_upgradeid(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 updatedat_;
  ::google::protobuf::int32 unlocked_;
  ::google::protobuf::int32 timeleft_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gameunit_;
  ::std::string* sku_;
  static const ::std::string _default_sku_;
  ::google::protobuf::int32 upgradeid_;
  friend void  protobuf_AddDesc_MsgGameUnit_2eproto();
  friend void protobuf_AssignDesc_MsgGameUnit_2eproto();
  friend void protobuf_ShutdownFile_MsgGameUnit_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgGameUnit* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// MsgGameUnit

// optional int32 updatedAt = 1;
inline bool MsgGameUnit::has_updatedat() const {
  return _has_bit(0);
}
inline void MsgGameUnit::clear_updatedat() {
  updatedat_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgGameUnit::updatedat() const {
  return updatedat_;
}
inline void MsgGameUnit::set_updatedat(::google::protobuf::int32 value) {
  _set_bit(0);
  updatedat_ = value;
}

// optional int32 unlocked = 2;
inline bool MsgGameUnit::has_unlocked() const {
  return _has_bit(1);
}
inline void MsgGameUnit::clear_unlocked() {
  unlocked_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 MsgGameUnit::unlocked() const {
  return unlocked_;
}
inline void MsgGameUnit::set_unlocked(::google::protobuf::int32 value) {
  _set_bit(1);
  unlocked_ = value;
}

// optional int32 timeLeft = 3;
inline bool MsgGameUnit::has_timeleft() const {
  return _has_bit(2);
}
inline void MsgGameUnit::clear_timeleft() {
  timeleft_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 MsgGameUnit::timeleft() const {
  return timeleft_;
}
inline void MsgGameUnit::set_timeleft(::google::protobuf::int32 value) {
  _set_bit(2);
  timeleft_ = value;
}

// repeated int32 GameUnit = 4;
inline int MsgGameUnit::gameunit_size() const {
  return gameunit_.size();
}
inline void MsgGameUnit::clear_gameunit() {
  gameunit_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgGameUnit::gameunit() const {
  return gameunit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgGameUnit::mutable_gameunit() {
  return &gameunit_;
}
inline ::google::protobuf::int32 MsgGameUnit::gameunit(int index) const {
  return gameunit_.Get(index);
}
inline void MsgGameUnit::set_gameunit(int index, ::google::protobuf::int32 value) {
  gameunit_.Set(index, value);
}
inline void MsgGameUnit::add_gameunit(::google::protobuf::int32 value) {
  gameunit_.Add(value);
}

// optional string sku = 5;
inline bool MsgGameUnit::has_sku() const {
  return _has_bit(4);
}
inline void MsgGameUnit::clear_sku() {
  if (sku_ != &_default_sku_) {
    sku_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& MsgGameUnit::sku() const {
  return *sku_;
}
inline void MsgGameUnit::set_sku(const ::std::string& value) {
  _set_bit(4);
  if (sku_ == &_default_sku_) {
    sku_ = new ::std::string;
  }
  sku_->assign(value);
}
inline void MsgGameUnit::set_sku(const char* value) {
  _set_bit(4);
  if (sku_ == &_default_sku_) {
    sku_ = new ::std::string;
  }
  sku_->assign(value);
}
inline void MsgGameUnit::set_sku(const char* value, size_t size) {
  _set_bit(4);
  if (sku_ == &_default_sku_) {
    sku_ = new ::std::string;
  }
  sku_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgGameUnit::mutable_sku() {
  _set_bit(4);
  if (sku_ == &_default_sku_) {
    sku_ = new ::std::string;
  }
  return sku_;
}

// optional int32 upgradeId = 6;
inline bool MsgGameUnit::has_upgradeid() const {
  return _has_bit(5);
}
inline void MsgGameUnit::clear_upgradeid() {
  upgradeid_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 MsgGameUnit::upgradeid() const {
  return upgradeid_;
}
inline void MsgGameUnit::set_upgradeid(::google::protobuf::int32 value) {
  _set_bit(5);
  upgradeid_ = value;
}


#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_MsgGameUnit_2eproto__INCLUDED
