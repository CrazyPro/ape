// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_RseLogin_2eproto__INCLUDED
#define PROTOBUF_RseLogin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RseLogin_2eproto();
void protobuf_AssignDesc_RseLogin_2eproto();
void protobuf_ShutdownFile_RseLogin_2eproto();

class RseLogin;

// ===================================================================

class RseLogin : public ::google::protobuf::Message {
 public:
  RseLogin();
  virtual ~RseLogin();
  
  RseLogin(const RseLogin& from);
  
  inline RseLogin& operator=(const RseLogin& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RseLogin& default_instance();
  void Swap(RseLogin* other);
  
  // implements Message ----------------------------------------------
  
  RseLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RseLogin& from);
  void MergeFrom(const RseLogin& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 currentTimeMillis = 1;
  inline bool has_currenttimemillis() const;
  inline void clear_currenttimemillis();
  static const int kCurrentTimeMillisFieldNumber = 1;
  inline ::google::protobuf::int64 currenttimemillis() const;
  inline void set_currenttimemillis(::google::protobuf::int64 value);
  
  // optional int64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);
  
  // optional int32 levelBasedOnScore = 3;
  inline bool has_levelbasedonscore() const;
  inline void clear_levelbasedonscore();
  static const int kLevelBasedOnScoreFieldNumber = 3;
  inline ::google::protobuf::int32 levelbasedonscore() const;
  inline void set_levelbasedonscore(::google::protobuf::int32 value);
  
  // optional int32 myAccountIsLocked = 4;
  inline bool has_myaccountislocked() const;
  inline void clear_myaccountislocked();
  static const int kMyAccountIsLockedFieldNumber = 4;
  inline ::google::protobuf::int32 myaccountislocked() const;
  inline void set_myaccountislocked(::google::protobuf::int32 value);
  
  // optional bool pop = 5;
  inline bool has_pop() const;
  inline void clear_pop();
  static const int kPopFieldNumber = 5;
  inline bool pop() const;
  inline void set_pop(bool value);
  
  // optional int32 rqId = 6;
  inline bool has_rqid() const;
  inline void clear_rqid();
  static const int kRqIdFieldNumber = 6;
  inline ::google::protobuf::int32 rqid() const;
  inline void set_rqid(::google::protobuf::int32 value);
  
  // optional int32 sync = 7;
  inline bool has_sync() const;
  inline void clear_sync();
  static const int kSyncFieldNumber = 7;
  inline ::google::protobuf::int32 sync() const;
  inline void set_sync(::google::protobuf::int32 value);
  
  // optional int64 timeFromLastLogin = 8;
  inline bool has_timefromlastlogin() const;
  inline void clear_timefromlastlogin();
  static const int kTimeFromLastLoginFieldNumber = 8;
  inline ::google::protobuf::int64 timefromlastlogin() const;
  inline void set_timefromlastlogin(::google::protobuf::int64 value);
  
  // optional int64 timeFromLastUpdate = 9;
  inline bool has_timefromlastupdate() const;
  inline void clear_timefromlastupdate();
  static const int kTimeFromLastUpdateFieldNumber = 9;
  inline ::google::protobuf::int64 timefromlastupdate() const;
  inline void set_timefromlastupdate(::google::protobuf::int64 value);
  
  // optional int32 token = 10;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 10;
  inline ::google::protobuf::int32 token() const;
  inline void set_token(::google::protobuf::int32 value);
  
  // optional int64 userId = 11;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 11;
  inline ::google::protobuf::int64 userid() const;
  inline void set_userid(::google::protobuf::int64 value);
  
  // optional string version = 12;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 12;
  inline const ::std::string& version() const;
  inline void set_version(const ::std::string& value);
  inline void set_version(const char* value);
  inline void set_version(const char* value, size_t size);
  inline ::std::string* mutable_version();
  
  // optional int32 vip = 13;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 13;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 currenttimemillis_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 levelbasedonscore_;
  ::google::protobuf::int32 myaccountislocked_;
  bool pop_;
  ::google::protobuf::int32 rqid_;
  ::google::protobuf::int32 sync_;
  ::google::protobuf::int64 timefromlastlogin_;
  ::google::protobuf::int64 timefromlastupdate_;
  ::google::protobuf::int32 token_;
  ::google::protobuf::int64 userid_;
  ::std::string* version_;
  static const ::std::string _default_version_;
  ::google::protobuf::int32 vip_;
  friend void  protobuf_AddDesc_RseLogin_2eproto();
  friend void protobuf_AssignDesc_RseLogin_2eproto();
  friend void protobuf_ShutdownFile_RseLogin_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RseLogin* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// RseLogin

// optional int64 currentTimeMillis = 1;
inline bool RseLogin::has_currenttimemillis() const {
  return _has_bit(0);
}
inline void RseLogin::clear_currenttimemillis() {
  currenttimemillis_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 RseLogin::currenttimemillis() const {
  return currenttimemillis_;
}
inline void RseLogin::set_currenttimemillis(::google::protobuf::int64 value) {
  _set_bit(0);
  currenttimemillis_ = value;
}

// optional int64 id = 2;
inline bool RseLogin::has_id() const {
  return _has_bit(1);
}
inline void RseLogin::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 RseLogin::id() const {
  return id_;
}
inline void RseLogin::set_id(::google::protobuf::int64 value) {
  _set_bit(1);
  id_ = value;
}

// optional int32 levelBasedOnScore = 3;
inline bool RseLogin::has_levelbasedonscore() const {
  return _has_bit(2);
}
inline void RseLogin::clear_levelbasedonscore() {
  levelbasedonscore_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 RseLogin::levelbasedonscore() const {
  return levelbasedonscore_;
}
inline void RseLogin::set_levelbasedonscore(::google::protobuf::int32 value) {
  _set_bit(2);
  levelbasedonscore_ = value;
}

// optional int32 myAccountIsLocked = 4;
inline bool RseLogin::has_myaccountislocked() const {
  return _has_bit(3);
}
inline void RseLogin::clear_myaccountislocked() {
  myaccountislocked_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 RseLogin::myaccountislocked() const {
  return myaccountislocked_;
}
inline void RseLogin::set_myaccountislocked(::google::protobuf::int32 value) {
  _set_bit(3);
  myaccountislocked_ = value;
}

// optional bool pop = 5;
inline bool RseLogin::has_pop() const {
  return _has_bit(4);
}
inline void RseLogin::clear_pop() {
  pop_ = false;
  _clear_bit(4);
}
inline bool RseLogin::pop() const {
  return pop_;
}
inline void RseLogin::set_pop(bool value) {
  _set_bit(4);
  pop_ = value;
}

// optional int32 rqId = 6;
inline bool RseLogin::has_rqid() const {
  return _has_bit(5);
}
inline void RseLogin::clear_rqid() {
  rqid_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 RseLogin::rqid() const {
  return rqid_;
}
inline void RseLogin::set_rqid(::google::protobuf::int32 value) {
  _set_bit(5);
  rqid_ = value;
}

// optional int32 sync = 7;
inline bool RseLogin::has_sync() const {
  return _has_bit(6);
}
inline void RseLogin::clear_sync() {
  sync_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 RseLogin::sync() const {
  return sync_;
}
inline void RseLogin::set_sync(::google::protobuf::int32 value) {
  _set_bit(6);
  sync_ = value;
}

// optional int64 timeFromLastLogin = 8;
inline bool RseLogin::has_timefromlastlogin() const {
  return _has_bit(7);
}
inline void RseLogin::clear_timefromlastlogin() {
  timefromlastlogin_ = GOOGLE_LONGLONG(0);
  _clear_bit(7);
}
inline ::google::protobuf::int64 RseLogin::timefromlastlogin() const {
  return timefromlastlogin_;
}
inline void RseLogin::set_timefromlastlogin(::google::protobuf::int64 value) {
  _set_bit(7);
  timefromlastlogin_ = value;
}

// optional int64 timeFromLastUpdate = 9;
inline bool RseLogin::has_timefromlastupdate() const {
  return _has_bit(8);
}
inline void RseLogin::clear_timefromlastupdate() {
  timefromlastupdate_ = GOOGLE_LONGLONG(0);
  _clear_bit(8);
}
inline ::google::protobuf::int64 RseLogin::timefromlastupdate() const {
  return timefromlastupdate_;
}
inline void RseLogin::set_timefromlastupdate(::google::protobuf::int64 value) {
  _set_bit(8);
  timefromlastupdate_ = value;
}

// optional int32 token = 10;
inline bool RseLogin::has_token() const {
  return _has_bit(9);
}
inline void RseLogin::clear_token() {
  token_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 RseLogin::token() const {
  return token_;
}
inline void RseLogin::set_token(::google::protobuf::int32 value) {
  _set_bit(9);
  token_ = value;
}

// optional int64 userId = 11;
inline bool RseLogin::has_userid() const {
  return _has_bit(10);
}
inline void RseLogin::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
  _clear_bit(10);
}
inline ::google::protobuf::int64 RseLogin::userid() const {
  return userid_;
}
inline void RseLogin::set_userid(::google::protobuf::int64 value) {
  _set_bit(10);
  userid_ = value;
}

// optional string version = 12;
inline bool RseLogin::has_version() const {
  return _has_bit(11);
}
inline void RseLogin::clear_version() {
  if (version_ != &_default_version_) {
    version_->clear();
  }
  _clear_bit(11);
}
inline const ::std::string& RseLogin::version() const {
  return *version_;
}
inline void RseLogin::set_version(const ::std::string& value) {
  _set_bit(11);
  if (version_ == &_default_version_) {
    version_ = new ::std::string;
  }
  version_->assign(value);
}
inline void RseLogin::set_version(const char* value) {
  _set_bit(11);
  if (version_ == &_default_version_) {
    version_ = new ::std::string;
  }
  version_->assign(value);
}
inline void RseLogin::set_version(const char* value, size_t size) {
  _set_bit(11);
  if (version_ == &_default_version_) {
    version_ = new ::std::string;
  }
  version_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RseLogin::mutable_version() {
  _set_bit(11);
  if (version_ == &_default_version_) {
    version_ = new ::std::string;
  }
  return version_;
}

// optional int32 vip = 13;
inline bool RseLogin::has_vip() const {
  return _has_bit(12);
}
inline void RseLogin::clear_vip() {
  vip_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 RseLogin::vip() const {
  return vip_;
}
inline void RseLogin::set_vip(::google::protobuf::int32 value) {
  _set_bit(12);
  vip_ = value;
}


#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_RseLogin_2eproto__INCLUDED
