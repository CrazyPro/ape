// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_RseObtainNeighborsList_2eproto__INCLUDED
#define PROTOBUF_RseObtainNeighborsList_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "MsgPlanet.pb.h"

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RseObtainNeighborsList_2eproto();
void protobuf_AssignDesc_RseObtainNeighborsList_2eproto();
void protobuf_ShutdownFile_RseObtainNeighborsList_2eproto();

class MsgNeighbor;
class RseObtainNeighborsList;

// ===================================================================

class MsgNeighbor : public ::google::protobuf::Message {
 public:
  MsgNeighbor();
  virtual ~MsgNeighbor();
  
  MsgNeighbor(const MsgNeighbor& from);
  
  inline MsgNeighbor& operator=(const MsgNeighbor& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNeighbor& default_instance();
  void Swap(MsgNeighbor* other);
  
  // implements Message ----------------------------------------------
  
  MsgNeighbor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNeighbor& from);
  void MergeFrom(const MsgNeighbor& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string platform = 1;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 1;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  
  // optional int64 accountId = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::int64 accountid() const;
  inline void set_accountid(::google::protobuf::int64 value);
  
  // optional int32 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);
  
  // optional int32 xp = 4;
  inline bool has_xp() const;
  inline void clear_xp();
  static const int kXpFieldNumber = 4;
  inline ::google::protobuf::int32 xp() const;
  inline void set_xp(::google::protobuf::int32 value);
  
  // optional string extId = 5;
  inline bool has_extid() const;
  inline void clear_extid();
  static const int kExtIdFieldNumber = 5;
  inline const ::std::string& extid() const;
  inline void set_extid(const ::std::string& value);
  inline void set_extid(const char* value);
  inline void set_extid(const char* value, size_t size);
  inline ::std::string* mutable_extid();
  
  // optional string url = 6;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 6;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  
  // optional string name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional int32 isNeighbor = 8;
  inline bool has_isneighbor() const;
  inline void clear_isneighbor();
  static const int kIsNeighborFieldNumber = 8;
  inline ::google::protobuf::int32 isneighbor() const;
  inline void set_isneighbor(::google::protobuf::int32 value);
  
  // optional int32 levelBasedOnScore = 9;
  inline bool has_levelbasedonscore() const;
  inline void clear_levelbasedonscore();
  static const int kLevelBasedOnScoreFieldNumber = 9;
  inline ::google::protobuf::int32 levelbasedonscore() const;
  inline void set_levelbasedonscore(::google::protobuf::int32 value);
  
  // optional string wishlist = 10;
  inline bool has_wishlist() const;
  inline void clear_wishlist();
  static const int kWishlistFieldNumber = 10;
  inline const ::std::string& wishlist() const;
  inline void set_wishlist(const ::std::string& value);
  inline void set_wishlist(const char* value);
  inline void set_wishlist(const char* value, size_t size);
  inline ::std::string* mutable_wishlist();
  
  // optional int64 damageProtectionTimeLeft = 11;
  inline bool has_damageprotectiontimeleft() const;
  inline void clear_damageprotectiontimeleft();
  static const int kDamageProtectionTimeLeftFieldNumber = 11;
  inline ::google::protobuf::int64 damageprotectiontimeleft() const;
  inline void set_damageprotectiontimeleft(::google::protobuf::int64 value);
  
  // optional int32 tutorialCompleted = 12;
  inline bool has_tutorialcompleted() const;
  inline void clear_tutorialcompleted();
  static const int kTutorialCompletedFieldNumber = 12;
  inline ::google::protobuf::int32 tutorialcompleted() const;
  inline void set_tutorialcompleted(::google::protobuf::int32 value);
  
  // repeated .MsgPlanet neighbor = 13;
  inline int neighbor_size() const;
  inline void clear_neighbor();
  static const int kNeighborFieldNumber = 13;
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPlanet >& neighbor() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPlanet >* mutable_neighbor();
  inline const ::MsgPlanet& neighbor(int index) const;
  inline ::MsgPlanet* mutable_neighbor(int index);
  inline ::MsgPlanet* add_neighbor();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* platform_;
  static const ::std::string _default_platform_;
  ::google::protobuf::int64 accountid_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 xp_;
  ::std::string* extid_;
  static const ::std::string _default_extid_;
  ::std::string* url_;
  static const ::std::string _default_url_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::int32 isneighbor_;
  ::google::protobuf::int32 levelbasedonscore_;
  ::std::string* wishlist_;
  static const ::std::string _default_wishlist_;
  ::google::protobuf::int64 damageprotectiontimeleft_;
  ::google::protobuf::int32 tutorialcompleted_;
  ::google::protobuf::RepeatedPtrField< ::MsgPlanet > neighbor_;
  friend void  protobuf_AddDesc_RseObtainNeighborsList_2eproto();
  friend void protobuf_AssignDesc_RseObtainNeighborsList_2eproto();
  friend void protobuf_ShutdownFile_RseObtainNeighborsList_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgNeighbor* default_instance_;
};
// -------------------------------------------------------------------

class RseObtainNeighborsList : public ::google::protobuf::Message {
 public:
  RseObtainNeighborsList();
  virtual ~RseObtainNeighborsList();
  
  RseObtainNeighborsList(const RseObtainNeighborsList& from);
  
  inline RseObtainNeighborsList& operator=(const RseObtainNeighborsList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RseObtainNeighborsList& default_instance();
  void Swap(RseObtainNeighborsList* other);
  
  // implements Message ----------------------------------------------
  
  RseObtainNeighborsList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RseObtainNeighborsList& from);
  void MergeFrom(const RseObtainNeighborsList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .MsgNeighbor neighborList = 1;
  inline int neighborlist_size() const;
  inline void clear_neighborlist();
  static const int kNeighborListFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::MsgNeighbor >& neighborlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgNeighbor >* mutable_neighborlist();
  inline const ::MsgNeighbor& neighborlist(int index) const;
  inline ::MsgNeighbor* mutable_neighborlist(int index);
  inline ::MsgNeighbor* add_neighborlist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::MsgNeighbor > neighborlist_;
  friend void  protobuf_AddDesc_RseObtainNeighborsList_2eproto();
  friend void protobuf_AssignDesc_RseObtainNeighborsList_2eproto();
  friend void protobuf_ShutdownFile_RseObtainNeighborsList_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RseObtainNeighborsList* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// MsgNeighbor

// optional string platform = 1;
inline bool MsgNeighbor::has_platform() const {
  return _has_bit(0);
}
inline void MsgNeighbor::clear_platform() {
  if (platform_ != &_default_platform_) {
    platform_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgNeighbor::platform() const {
  return *platform_;
}
inline void MsgNeighbor::set_platform(const ::std::string& value) {
  _set_bit(0);
  if (platform_ == &_default_platform_) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void MsgNeighbor::set_platform(const char* value) {
  _set_bit(0);
  if (platform_ == &_default_platform_) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void MsgNeighbor::set_platform(const char* value, size_t size) {
  _set_bit(0);
  if (platform_ == &_default_platform_) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNeighbor::mutable_platform() {
  _set_bit(0);
  if (platform_ == &_default_platform_) {
    platform_ = new ::std::string;
  }
  return platform_;
}

// optional int64 accountId = 2;
inline bool MsgNeighbor::has_accountid() const {
  return _has_bit(1);
}
inline void MsgNeighbor::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 MsgNeighbor::accountid() const {
  return accountid_;
}
inline void MsgNeighbor::set_accountid(::google::protobuf::int64 value) {
  _set_bit(1);
  accountid_ = value;
}

// optional int32 score = 3;
inline bool MsgNeighbor::has_score() const {
  return _has_bit(2);
}
inline void MsgNeighbor::clear_score() {
  score_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 MsgNeighbor::score() const {
  return score_;
}
inline void MsgNeighbor::set_score(::google::protobuf::int32 value) {
  _set_bit(2);
  score_ = value;
}

// optional int32 xp = 4;
inline bool MsgNeighbor::has_xp() const {
  return _has_bit(3);
}
inline void MsgNeighbor::clear_xp() {
  xp_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 MsgNeighbor::xp() const {
  return xp_;
}
inline void MsgNeighbor::set_xp(::google::protobuf::int32 value) {
  _set_bit(3);
  xp_ = value;
}

// optional string extId = 5;
inline bool MsgNeighbor::has_extid() const {
  return _has_bit(4);
}
inline void MsgNeighbor::clear_extid() {
  if (extid_ != &_default_extid_) {
    extid_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& MsgNeighbor::extid() const {
  return *extid_;
}
inline void MsgNeighbor::set_extid(const ::std::string& value) {
  _set_bit(4);
  if (extid_ == &_default_extid_) {
    extid_ = new ::std::string;
  }
  extid_->assign(value);
}
inline void MsgNeighbor::set_extid(const char* value) {
  _set_bit(4);
  if (extid_ == &_default_extid_) {
    extid_ = new ::std::string;
  }
  extid_->assign(value);
}
inline void MsgNeighbor::set_extid(const char* value, size_t size) {
  _set_bit(4);
  if (extid_ == &_default_extid_) {
    extid_ = new ::std::string;
  }
  extid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNeighbor::mutable_extid() {
  _set_bit(4);
  if (extid_ == &_default_extid_) {
    extid_ = new ::std::string;
  }
  return extid_;
}

// optional string url = 6;
inline bool MsgNeighbor::has_url() const {
  return _has_bit(5);
}
inline void MsgNeighbor::clear_url() {
  if (url_ != &_default_url_) {
    url_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& MsgNeighbor::url() const {
  return *url_;
}
inline void MsgNeighbor::set_url(const ::std::string& value) {
  _set_bit(5);
  if (url_ == &_default_url_) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void MsgNeighbor::set_url(const char* value) {
  _set_bit(5);
  if (url_ == &_default_url_) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void MsgNeighbor::set_url(const char* value, size_t size) {
  _set_bit(5);
  if (url_ == &_default_url_) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNeighbor::mutable_url() {
  _set_bit(5);
  if (url_ == &_default_url_) {
    url_ = new ::std::string;
  }
  return url_;
}

// optional string name = 7;
inline bool MsgNeighbor::has_name() const {
  return _has_bit(6);
}
inline void MsgNeighbor::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& MsgNeighbor::name() const {
  return *name_;
}
inline void MsgNeighbor::set_name(const ::std::string& value) {
  _set_bit(6);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgNeighbor::set_name(const char* value) {
  _set_bit(6);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgNeighbor::set_name(const char* value, size_t size) {
  _set_bit(6);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNeighbor::mutable_name() {
  _set_bit(6);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional int32 isNeighbor = 8;
inline bool MsgNeighbor::has_isneighbor() const {
  return _has_bit(7);
}
inline void MsgNeighbor::clear_isneighbor() {
  isneighbor_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 MsgNeighbor::isneighbor() const {
  return isneighbor_;
}
inline void MsgNeighbor::set_isneighbor(::google::protobuf::int32 value) {
  _set_bit(7);
  isneighbor_ = value;
}

// optional int32 levelBasedOnScore = 9;
inline bool MsgNeighbor::has_levelbasedonscore() const {
  return _has_bit(8);
}
inline void MsgNeighbor::clear_levelbasedonscore() {
  levelbasedonscore_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 MsgNeighbor::levelbasedonscore() const {
  return levelbasedonscore_;
}
inline void MsgNeighbor::set_levelbasedonscore(::google::protobuf::int32 value) {
  _set_bit(8);
  levelbasedonscore_ = value;
}

// optional string wishlist = 10;
inline bool MsgNeighbor::has_wishlist() const {
  return _has_bit(9);
}
inline void MsgNeighbor::clear_wishlist() {
  if (wishlist_ != &_default_wishlist_) {
    wishlist_->clear();
  }
  _clear_bit(9);
}
inline const ::std::string& MsgNeighbor::wishlist() const {
  return *wishlist_;
}
inline void MsgNeighbor::set_wishlist(const ::std::string& value) {
  _set_bit(9);
  if (wishlist_ == &_default_wishlist_) {
    wishlist_ = new ::std::string;
  }
  wishlist_->assign(value);
}
inline void MsgNeighbor::set_wishlist(const char* value) {
  _set_bit(9);
  if (wishlist_ == &_default_wishlist_) {
    wishlist_ = new ::std::string;
  }
  wishlist_->assign(value);
}
inline void MsgNeighbor::set_wishlist(const char* value, size_t size) {
  _set_bit(9);
  if (wishlist_ == &_default_wishlist_) {
    wishlist_ = new ::std::string;
  }
  wishlist_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNeighbor::mutable_wishlist() {
  _set_bit(9);
  if (wishlist_ == &_default_wishlist_) {
    wishlist_ = new ::std::string;
  }
  return wishlist_;
}

// optional int64 damageProtectionTimeLeft = 11;
inline bool MsgNeighbor::has_damageprotectiontimeleft() const {
  return _has_bit(10);
}
inline void MsgNeighbor::clear_damageprotectiontimeleft() {
  damageprotectiontimeleft_ = GOOGLE_LONGLONG(0);
  _clear_bit(10);
}
inline ::google::protobuf::int64 MsgNeighbor::damageprotectiontimeleft() const {
  return damageprotectiontimeleft_;
}
inline void MsgNeighbor::set_damageprotectiontimeleft(::google::protobuf::int64 value) {
  _set_bit(10);
  damageprotectiontimeleft_ = value;
}

// optional int32 tutorialCompleted = 12;
inline bool MsgNeighbor::has_tutorialcompleted() const {
  return _has_bit(11);
}
inline void MsgNeighbor::clear_tutorialcompleted() {
  tutorialcompleted_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 MsgNeighbor::tutorialcompleted() const {
  return tutorialcompleted_;
}
inline void MsgNeighbor::set_tutorialcompleted(::google::protobuf::int32 value) {
  _set_bit(11);
  tutorialcompleted_ = value;
}

// repeated .MsgPlanet neighbor = 13;
inline int MsgNeighbor::neighbor_size() const {
  return neighbor_.size();
}
inline void MsgNeighbor::clear_neighbor() {
  neighbor_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPlanet >&
MsgNeighbor::neighbor() const {
  return neighbor_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPlanet >*
MsgNeighbor::mutable_neighbor() {
  return &neighbor_;
}
inline const ::MsgPlanet& MsgNeighbor::neighbor(int index) const {
  return neighbor_.Get(index);
}
inline ::MsgPlanet* MsgNeighbor::mutable_neighbor(int index) {
  return neighbor_.Mutable(index);
}
inline ::MsgPlanet* MsgNeighbor::add_neighbor() {
  return neighbor_.Add();
}

// -------------------------------------------------------------------

// RseObtainNeighborsList

// repeated .MsgNeighbor neighborList = 1;
inline int RseObtainNeighborsList::neighborlist_size() const {
  return neighborlist_.size();
}
inline void RseObtainNeighborsList::clear_neighborlist() {
  neighborlist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgNeighbor >&
RseObtainNeighborsList::neighborlist() const {
  return neighborlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgNeighbor >*
RseObtainNeighborsList::mutable_neighborlist() {
  return &neighborlist_;
}
inline const ::MsgNeighbor& RseObtainNeighborsList::neighborlist(int index) const {
  return neighborlist_.Get(index);
}
inline ::MsgNeighbor* RseObtainNeighborsList::mutable_neighborlist(int index) {
  return neighborlist_.Mutable(index);
}
inline ::MsgNeighbor* RseObtainNeighborsList::add_neighborlist() {
  return neighborlist_.Add();
}


#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_RseObtainNeighborsList_2eproto__INCLUDED
