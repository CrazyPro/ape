// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RceBattleDamagesPack.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace {

const ::google::protobuf::Descriptor* MsgDeployUnits_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDeployUnits_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUnitDamaged_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUnitDamaged_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemDamaged_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemDamaged_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSpecialAttack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSpecialAttack_reflection_ = NULL;
const ::google::protobuf::Descriptor* RceBattleDamagesPack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RceBattleDamagesPack_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_RceBattleDamagesPack_2eproto() {
  protobuf_AddDesc_RceBattleDamagesPack_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RceBattleDamagesPack.proto");
  GOOGLE_CHECK(file != NULL);
  MsgDeployUnits_descriptor_ = file->message_type(0);
  static const int MsgDeployUnits_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDeployUnits, planetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDeployUnits, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDeployUnits, unitsids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDeployUnits, hangarsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDeployUnits, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDeployUnits, skusd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDeployUnits, skue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDeployUnits, millis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDeployUnits, skuswt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDeployUnits, unitsskus_),
  };
  MsgDeployUnits_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDeployUnits_descriptor_,
      MsgDeployUnits::default_instance_,
      MsgDeployUnits_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDeployUnits, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDeployUnits, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDeployUnits));
  MsgUnitDamaged_descriptor_ = file->message_type(1);
  static const int MsgUnitDamaged_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitDamaged, planetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitDamaged, energybeforeshot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitDamaged, unitid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitDamaged, unitsku_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitDamaged, frombunkersid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitDamaged, damage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitDamaged, destroyed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitDamaged, attackers_),
  };
  MsgUnitDamaged_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUnitDamaged_descriptor_,
      MsgUnitDamaged::default_instance_,
      MsgUnitDamaged_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitDamaged, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUnitDamaged, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUnitDamaged));
  MsgItemDamaged_descriptor_ = file->message_type(2);
  static const int MsgItemDamaged_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDamaged, planetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDamaged, energybeforeshot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDamaged, transaction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDamaged, destroyed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDamaged, damage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDamaged, transactiontarget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDamaged, attackers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDamaged, itemsid_),
  };
  MsgItemDamaged_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemDamaged_descriptor_,
      MsgItemDamaged::default_instance_,
      MsgItemDamaged_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDamaged, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDamaged, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemDamaged));
  MsgSpecialAttack_descriptor_ = file->message_type(3);
  static const int MsgSpecialAttack_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSpecialAttack, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSpecialAttack, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSpecialAttack, millis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSpecialAttack, socialitemsku_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSpecialAttack, transaction_),
  };
  MsgSpecialAttack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSpecialAttack_descriptor_,
      MsgSpecialAttack::default_instance_,
      MsgSpecialAttack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSpecialAttack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSpecialAttack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSpecialAttack));
  RceBattleDamagesPack_descriptor_ = file->message_type(4);
  static const int RceBattleDamagesPack_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceBattleDamagesPack, deployunits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceBattleDamagesPack, unitdamaged_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceBattleDamagesPack, itemdamaged_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceBattleDamagesPack, specialattack_),
  };
  RceBattleDamagesPack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RceBattleDamagesPack_descriptor_,
      RceBattleDamagesPack::default_instance_,
      RceBattleDamagesPack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceBattleDamagesPack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RceBattleDamagesPack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RceBattleDamagesPack));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RceBattleDamagesPack_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDeployUnits_descriptor_, &MsgDeployUnits::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUnitDamaged_descriptor_, &MsgUnitDamaged::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemDamaged_descriptor_, &MsgItemDamaged::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSpecialAttack_descriptor_, &MsgSpecialAttack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RceBattleDamagesPack_descriptor_, &RceBattleDamagesPack::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RceBattleDamagesPack_2eproto() {
  delete MsgDeployUnits::default_instance_;
  delete MsgDeployUnits_reflection_;
  delete MsgUnitDamaged::default_instance_;
  delete MsgUnitDamaged_reflection_;
  delete MsgItemDamaged::default_instance_;
  delete MsgItemDamaged_reflection_;
  delete MsgSpecialAttack::default_instance_;
  delete MsgSpecialAttack_reflection_;
  delete RceBattleDamagesPack::default_instance_;
  delete RceBattleDamagesPack_reflection_;
}

void protobuf_AddDesc_RceBattleDamagesPack_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_MsgTransaction_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032RceBattleDamagesPack.proto\032\024MsgTransac"
    "tion.proto\"\255\001\n\016MsgDeployUnits\022\020\n\010planetI"
    "d\030\001 \001(\005\022\t\n\001x\030\002 \001(\005\022\020\n\010unitsIds\030\003 \003(\005\022\021\n\t"
    "hangarSid\030\004 \001(\005\022\t\n\001y\030\005 \001(\005\022\r\n\005skuSD\030\006 \003("
    "\005\022\014\n\004skuE\030\007 \003(\005\022\016\n\006millis\030\010 \001(\005\022\016\n\006skuSW"
    "T\030\t \003(\005\022\021\n\tunitsSkus\030\n \001(\t\"\252\001\n\016MsgUnitDa"
    "maged\022\020\n\010planetId\030\001 \001(\005\022\030\n\020energyBeforeS"
    "hot\030\002 \001(\005\022\016\n\006unitId\030\003 \001(\005\022\017\n\007unitSku\030\004 \001"
    "(\t\022\025\n\rfromBunkerSid\030\005 \001(\005\022\016\n\006damage\030\006 \001("
    "\005\022\021\n\tdestroyed\030\007 \001(\005\022\021\n\tattackers\030\010 \003(\t\""
    "\325\001\n\016MsgItemDamaged\022\020\n\010planetId\030\001 \001(\005\022\030\n\020"
    "energyBeforeShot\030\002 \001(\005\022$\n\013transaction\030\003 "
    "\001(\0132\017.MsgTransaction\022\021\n\tdestroyed\030\004 \001(\005\022"
    "\016\n\006damage\030\005 \001(\005\022*\n\021transactionTarget\030\006 \001"
    "(\0132\017.MsgTransaction\022\021\n\tattackers\030\007 \003(\t\022\017"
    "\n\007itemSid\030\010 \001(\005\"u\n\020MsgSpecialAttack\022\t\n\001x"
    "\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\016\n\006millis\030\003 \001(\005\022\025\n\rsoc"
    "ialItemSku\030\004 \001(\t\022$\n\013transaction\030\005 \001(\0132\017."
    "MsgTransaction\"\262\001\n\024RceBattleDamagesPack\022"
    "$\n\013deployUnits\030\001 \003(\0132\017.MsgDeployUnits\022$\n"
    "\013unitDamaged\030\002 \003(\0132\017.MsgUnitDamaged\022$\n\013i"
    "temDamaged\030\003 \003(\0132\017.MsgItemDamaged\022(\n\rspe"
    "cialAttack\030\004 \003(\0132\021.MsgSpecialAttack", 915);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RceBattleDamagesPack.proto", &protobuf_RegisterTypes);
  MsgDeployUnits::default_instance_ = new MsgDeployUnits();
  MsgUnitDamaged::default_instance_ = new MsgUnitDamaged();
  MsgItemDamaged::default_instance_ = new MsgItemDamaged();
  MsgSpecialAttack::default_instance_ = new MsgSpecialAttack();
  RceBattleDamagesPack::default_instance_ = new RceBattleDamagesPack();
  MsgDeployUnits::default_instance_->InitAsDefaultInstance();
  MsgUnitDamaged::default_instance_->InitAsDefaultInstance();
  MsgItemDamaged::default_instance_->InitAsDefaultInstance();
  MsgSpecialAttack::default_instance_->InitAsDefaultInstance();
  RceBattleDamagesPack::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RceBattleDamagesPack_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RceBattleDamagesPack_2eproto {
  StaticDescriptorInitializer_RceBattleDamagesPack_2eproto() {
    protobuf_AddDesc_RceBattleDamagesPack_2eproto();
  }
} static_descriptor_initializer_RceBattleDamagesPack_2eproto_;


// ===================================================================

const ::std::string MsgDeployUnits::_default_unitsskus_;
#ifndef _MSC_VER
const int MsgDeployUnits::kPlanetIdFieldNumber;
const int MsgDeployUnits::kXFieldNumber;
const int MsgDeployUnits::kUnitsIdsFieldNumber;
const int MsgDeployUnits::kHangarSidFieldNumber;
const int MsgDeployUnits::kYFieldNumber;
const int MsgDeployUnits::kSkuSDFieldNumber;
const int MsgDeployUnits::kSkuEFieldNumber;
const int MsgDeployUnits::kMillisFieldNumber;
const int MsgDeployUnits::kSkuSWTFieldNumber;
const int MsgDeployUnits::kUnitsSkusFieldNumber;
#endif  // !_MSC_VER

MsgDeployUnits::MsgDeployUnits() {
  SharedCtor();
}

void MsgDeployUnits::InitAsDefaultInstance() {
}

MsgDeployUnits::MsgDeployUnits(const MsgDeployUnits& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgDeployUnits::SharedCtor() {
  _cached_size_ = 0;
  planetid_ = 0;
  x_ = 0;
  hangarsid_ = 0;
  y_ = 0;
  millis_ = 0;
  unitsskus_ = const_cast< ::std::string*>(&_default_unitsskus_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDeployUnits::~MsgDeployUnits() {
  SharedDtor();
}

void MsgDeployUnits::SharedDtor() {
  if (unitsskus_ != &_default_unitsskus_) {
    delete unitsskus_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgDeployUnits::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDeployUnits_descriptor_;
}

const MsgDeployUnits& MsgDeployUnits::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RceBattleDamagesPack_2eproto();  return *default_instance_;
}

MsgDeployUnits* MsgDeployUnits::default_instance_ = NULL;

MsgDeployUnits* MsgDeployUnits::New() const {
  return new MsgDeployUnits;
}

void MsgDeployUnits::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    planetid_ = 0;
    x_ = 0;
    hangarsid_ = 0;
    y_ = 0;
    millis_ = 0;
  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (_has_bit(9)) {
      if (unitsskus_ != &_default_unitsskus_) {
        unitsskus_->clear();
      }
    }
  }
  unitsids_.Clear();
  skusd_.Clear();
  skue_.Clear();
  skuswt_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDeployUnits::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 planetId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &planetid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_x;
        break;
      }
      
      // optional int32 x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_x:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &x_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_unitsIds;
        break;
      }
      
      // repeated int32 unitsIds = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_unitsIds:
        ::google::protobuf::int32 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &value));
        add_unitsids(value);
        if (input->ExpectTag(24)) goto parse_unitsIds;
        if (input->ExpectTag(32)) goto parse_hangarSid;
        break;
      }
      
      // optional int32 hangarSid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_hangarSid:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &hangarsid_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_y;
        break;
      }
      
      // optional int32 y = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_y:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &y_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_skuSD;
        break;
      }
      
      // repeated int32 skuSD = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_skuSD:
        ::google::protobuf::int32 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &value));
        add_skusd(value);
        if (input->ExpectTag(48)) goto parse_skuSD;
        if (input->ExpectTag(56)) goto parse_skuE;
        break;
      }
      
      // repeated int32 skuE = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_skuE:
        ::google::protobuf::int32 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &value));
        add_skue(value);
        if (input->ExpectTag(56)) goto parse_skuE;
        if (input->ExpectTag(64)) goto parse_millis;
        break;
      }
      
      // optional int32 millis = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_millis:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &millis_));
        _set_bit(7);
        if (input->ExpectTag(72)) goto parse_skuSWT;
        break;
      }
      
      // repeated int32 skuSWT = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_skuSWT:
        ::google::protobuf::int32 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &value));
        add_skuswt(value);
        if (input->ExpectTag(72)) goto parse_skuSWT;
        if (input->ExpectTag(82)) goto parse_unitsSkus;
        break;
      }
      
      // optional string unitsSkus = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_unitsSkus:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_unitsskus()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->unitsskus().data(), this->unitsskus().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgDeployUnits::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgDeployUnits::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 planetId = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->planetid(), output);
  }
  
  // optional int32 x = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }
  
  // repeated int32 unitsIds = 3;
  for (int i = 0; i < this->unitsids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->unitsids(i), output);
  }
  
  // optional int32 hangarSid = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->hangarsid(), output);
  }
  
  // optional int32 y = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->y(), output);
  }
  
  // repeated int32 skuSD = 6;
  for (int i = 0; i < this->skusd_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->skusd(i), output);
  }
  
  // repeated int32 skuE = 7;
  for (int i = 0; i < this->skue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->skue(i), output);
  }
  
  // optional int32 millis = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->millis(), output);
  }
  
  // repeated int32 skuSWT = 9;
  for (int i = 0; i < this->skuswt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      9, this->skuswt(i), output);
  }
  
  // optional string unitsSkus = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->unitsskus().data(), this->unitsskus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->unitsskus(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgDeployUnits::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 planetId = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->planetid(), target);
  }
  
  // optional int32 x = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }
  
  // repeated int32 unitsIds = 3;
  for (int i = 0; i < this->unitsids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->unitsids(i), target);
  }
  
  // optional int32 hangarSid = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->hangarsid(), target);
  }
  
  // optional int32 y = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->y(), target);
  }
  
  // repeated int32 skuSD = 6;
  for (int i = 0; i < this->skusd_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->skusd(i), target);
  }
  
  // repeated int32 skuE = 7;
  for (int i = 0; i < this->skue_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->skue(i), target);
  }
  
  // optional int32 millis = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->millis(), target);
  }
  
  // repeated int32 skuSWT = 9;
  for (int i = 0; i < this->skuswt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(9, this->skuswt(i), target);
  }
  
  // optional string unitsSkus = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->unitsskus().data(), this->unitsskus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->unitsskus(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgDeployUnits::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 planetId = 1;
    if (has_planetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->planetid());
    }
    
    // optional int32 x = 2;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }
    
    // optional int32 hangarSid = 4;
    if (has_hangarsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hangarsid());
    }
    
    // optional int32 y = 5;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }
    
    // optional int32 millis = 8;
    if (has_millis()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->millis());
    }
    
  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // optional string unitsSkus = 10;
    if (has_unitsskus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unitsskus());
    }
    
  }
  // repeated int32 unitsIds = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->unitsids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitsids(i));
    }
    total_size += 1 * this->unitsids_size() + data_size;
  }
  
  // repeated int32 skuSD = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->skusd_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->skusd(i));
    }
    total_size += 1 * this->skusd_size() + data_size;
  }
  
  // repeated int32 skuE = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->skue_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->skue(i));
    }
    total_size += 1 * this->skue_size() + data_size;
  }
  
  // repeated int32 skuSWT = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->skuswt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->skuswt(i));
    }
    total_size += 1 * this->skuswt_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgDeployUnits::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDeployUnits* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDeployUnits*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDeployUnits::MergeFrom(const MsgDeployUnits& from) {
  GOOGLE_CHECK_NE(&from, this);
  unitsids_.MergeFrom(from.unitsids_);
  skusd_.MergeFrom(from.skusd_);
  skue_.MergeFrom(from.skue_);
  skuswt_.MergeFrom(from.skuswt_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_planetid(from.planetid());
    }
    if (from._has_bit(1)) {
      set_x(from.x());
    }
    if (from._has_bit(3)) {
      set_hangarsid(from.hangarsid());
    }
    if (from._has_bit(4)) {
      set_y(from.y());
    }
    if (from._has_bit(7)) {
      set_millis(from.millis());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from._has_bit(9)) {
      set_unitsskus(from.unitsskus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDeployUnits::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDeployUnits::CopyFrom(const MsgDeployUnits& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDeployUnits::IsInitialized() const {
  
  return true;
}

void MsgDeployUnits::Swap(MsgDeployUnits* other) {
  if (other != this) {
    std::swap(planetid_, other->planetid_);
    std::swap(x_, other->x_);
    unitsids_.Swap(&other->unitsids_);
    std::swap(hangarsid_, other->hangarsid_);
    std::swap(y_, other->y_);
    skusd_.Swap(&other->skusd_);
    skue_.Swap(&other->skue_);
    std::swap(millis_, other->millis_);
    skuswt_.Swap(&other->skuswt_);
    std::swap(unitsskus_, other->unitsskus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDeployUnits::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDeployUnits_descriptor_;
  metadata.reflection = MsgDeployUnits_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgUnitDamaged::_default_unitsku_;
#ifndef _MSC_VER
const int MsgUnitDamaged::kPlanetIdFieldNumber;
const int MsgUnitDamaged::kEnergyBeforeShotFieldNumber;
const int MsgUnitDamaged::kUnitIdFieldNumber;
const int MsgUnitDamaged::kUnitSkuFieldNumber;
const int MsgUnitDamaged::kFromBunkerSidFieldNumber;
const int MsgUnitDamaged::kDamageFieldNumber;
const int MsgUnitDamaged::kDestroyedFieldNumber;
const int MsgUnitDamaged::kAttackersFieldNumber;
#endif  // !_MSC_VER

MsgUnitDamaged::MsgUnitDamaged() {
  SharedCtor();
}

void MsgUnitDamaged::InitAsDefaultInstance() {
}

MsgUnitDamaged::MsgUnitDamaged(const MsgUnitDamaged& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgUnitDamaged::SharedCtor() {
  _cached_size_ = 0;
  planetid_ = 0;
  energybeforeshot_ = 0;
  unitid_ = 0;
  unitsku_ = const_cast< ::std::string*>(&_default_unitsku_);
  frombunkersid_ = 0;
  damage_ = 0;
  destroyed_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUnitDamaged::~MsgUnitDamaged() {
  SharedDtor();
}

void MsgUnitDamaged::SharedDtor() {
  if (unitsku_ != &_default_unitsku_) {
    delete unitsku_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgUnitDamaged::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUnitDamaged_descriptor_;
}

const MsgUnitDamaged& MsgUnitDamaged::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RceBattleDamagesPack_2eproto();  return *default_instance_;
}

MsgUnitDamaged* MsgUnitDamaged::default_instance_ = NULL;

MsgUnitDamaged* MsgUnitDamaged::New() const {
  return new MsgUnitDamaged;
}

void MsgUnitDamaged::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    planetid_ = 0;
    energybeforeshot_ = 0;
    unitid_ = 0;
    if (_has_bit(3)) {
      if (unitsku_ != &_default_unitsku_) {
        unitsku_->clear();
      }
    }
    frombunkersid_ = 0;
    damage_ = 0;
    destroyed_ = 0;
  }
  attackers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUnitDamaged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 planetId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &planetid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_energyBeforeShot;
        break;
      }
      
      // optional int32 energyBeforeShot = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_energyBeforeShot:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &energybeforeshot_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_unitId;
        break;
      }
      
      // optional int32 unitId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_unitId:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &unitid_));
        _set_bit(2);
        if (input->ExpectTag(34)) goto parse_unitSku;
        break;
      }
      
      // optional string unitSku = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_unitSku:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_unitsku()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->unitsku().data(), this->unitsku().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(40)) goto parse_fromBunkerSid;
        break;
      }
      
      // optional int32 fromBunkerSid = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_fromBunkerSid:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &frombunkersid_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_damage;
        break;
      }
      
      // optional int32 damage = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_damage:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &damage_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_destroyed;
        break;
      }
      
      // optional int32 destroyed = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_destroyed:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &destroyed_));
        _set_bit(6);
        if (input->ExpectTag(66)) goto parse_attackers;
        break;
      }
      
      // repeated string attackers = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_attackers:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_attackers()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->attackers(0).data(), this->attackers(0).length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(66)) goto parse_attackers;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgUnitDamaged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgUnitDamaged::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 planetId = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->planetid(), output);
  }
  
  // optional int32 energyBeforeShot = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->energybeforeshot(), output);
  }
  
  // optional int32 unitId = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->unitid(), output);
  }
  
  // optional string unitSku = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->unitsku().data(), this->unitsku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->unitsku(), output);
  }
  
  // optional int32 fromBunkerSid = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->frombunkersid(), output);
  }
  
  // optional int32 damage = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->damage(), output);
  }
  
  // optional int32 destroyed = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->destroyed(), output);
  }
  
  // repeated string attackers = 8;
  for (int i = 0; i < this->attackers_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->attackers(i).data(), this->attackers(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->attackers(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgUnitDamaged::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 planetId = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->planetid(), target);
  }
  
  // optional int32 energyBeforeShot = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->energybeforeshot(), target);
  }
  
  // optional int32 unitId = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->unitid(), target);
  }
  
  // optional string unitSku = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->unitsku().data(), this->unitsku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->unitsku(), target);
  }
  
  // optional int32 fromBunkerSid = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->frombunkersid(), target);
  }
  
  // optional int32 damage = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->damage(), target);
  }
  
  // optional int32 destroyed = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->destroyed(), target);
  }
  
  // repeated string attackers = 8;
  for (int i = 0; i < this->attackers_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->attackers(i).data(), this->attackers(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->attackers(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgUnitDamaged::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 planetId = 1;
    if (has_planetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->planetid());
    }
    
    // optional int32 energyBeforeShot = 2;
    if (has_energybeforeshot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->energybeforeshot());
    }
    
    // optional int32 unitId = 3;
    if (has_unitid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unitid());
    }
    
    // optional string unitSku = 4;
    if (has_unitsku()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unitsku());
    }
    
    // optional int32 fromBunkerSid = 5;
    if (has_frombunkersid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->frombunkersid());
    }
    
    // optional int32 damage = 6;
    if (has_damage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->damage());
    }
    
    // optional int32 destroyed = 7;
    if (has_destroyed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->destroyed());
    }
    
  }
  // repeated string attackers = 8;
  total_size += 1 * this->attackers_size();
  for (int i = 0; i < this->attackers_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->attackers(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgUnitDamaged::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUnitDamaged* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUnitDamaged*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUnitDamaged::MergeFrom(const MsgUnitDamaged& from) {
  GOOGLE_CHECK_NE(&from, this);
  attackers_.MergeFrom(from.attackers_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_planetid(from.planetid());
    }
    if (from._has_bit(1)) {
      set_energybeforeshot(from.energybeforeshot());
    }
    if (from._has_bit(2)) {
      set_unitid(from.unitid());
    }
    if (from._has_bit(3)) {
      set_unitsku(from.unitsku());
    }
    if (from._has_bit(4)) {
      set_frombunkersid(from.frombunkersid());
    }
    if (from._has_bit(5)) {
      set_damage(from.damage());
    }
    if (from._has_bit(6)) {
      set_destroyed(from.destroyed());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUnitDamaged::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUnitDamaged::CopyFrom(const MsgUnitDamaged& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUnitDamaged::IsInitialized() const {
  
  return true;
}

void MsgUnitDamaged::Swap(MsgUnitDamaged* other) {
  if (other != this) {
    std::swap(planetid_, other->planetid_);
    std::swap(energybeforeshot_, other->energybeforeshot_);
    std::swap(unitid_, other->unitid_);
    std::swap(unitsku_, other->unitsku_);
    std::swap(frombunkersid_, other->frombunkersid_);
    std::swap(damage_, other->damage_);
    std::swap(destroyed_, other->destroyed_);
    attackers_.Swap(&other->attackers_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUnitDamaged::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUnitDamaged_descriptor_;
  metadata.reflection = MsgUnitDamaged_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemDamaged::kPlanetIdFieldNumber;
const int MsgItemDamaged::kEnergyBeforeShotFieldNumber;
const int MsgItemDamaged::kTransactionFieldNumber;
const int MsgItemDamaged::kDestroyedFieldNumber;
const int MsgItemDamaged::kDamageFieldNumber;
const int MsgItemDamaged::kTransactionTargetFieldNumber;
const int MsgItemDamaged::kAttackersFieldNumber;
const int MsgItemDamaged::kItemSidFieldNumber;
#endif  // !_MSC_VER

MsgItemDamaged::MsgItemDamaged() {
  SharedCtor();
}

void MsgItemDamaged::InitAsDefaultInstance() {
  transaction_ = const_cast< ::MsgTransaction*>(&::MsgTransaction::default_instance());
  transactiontarget_ = const_cast< ::MsgTransaction*>(&::MsgTransaction::default_instance());
}

MsgItemDamaged::MsgItemDamaged(const MsgItemDamaged& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgItemDamaged::SharedCtor() {
  _cached_size_ = 0;
  planetid_ = 0;
  energybeforeshot_ = 0;
  transaction_ = NULL;
  destroyed_ = 0;
  damage_ = 0;
  transactiontarget_ = NULL;
  itemsid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemDamaged::~MsgItemDamaged() {
  SharedDtor();
}

void MsgItemDamaged::SharedDtor() {
  if (this != default_instance_) {
    delete transaction_;
    delete transactiontarget_;
  }
}

const ::google::protobuf::Descriptor* MsgItemDamaged::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemDamaged_descriptor_;
}

const MsgItemDamaged& MsgItemDamaged::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RceBattleDamagesPack_2eproto();  return *default_instance_;
}

MsgItemDamaged* MsgItemDamaged::default_instance_ = NULL;

MsgItemDamaged* MsgItemDamaged::New() const {
  return new MsgItemDamaged;
}

void MsgItemDamaged::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    planetid_ = 0;
    energybeforeshot_ = 0;
    if (_has_bit(2)) {
      if (transaction_ != NULL) transaction_->::MsgTransaction::Clear();
    }
    destroyed_ = 0;
    damage_ = 0;
    if (_has_bit(5)) {
      if (transactiontarget_ != NULL) transactiontarget_->::MsgTransaction::Clear();
    }
    itemsid_ = 0;
  }
  attackers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemDamaged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 planetId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &planetid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_energyBeforeShot;
        break;
      }
      
      // optional int32 energyBeforeShot = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_energyBeforeShot:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &energybeforeshot_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_transaction;
        break;
      }
      
      // optional .MsgTransaction transaction = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_transaction:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_transaction()));
        if (input->ExpectTag(32)) goto parse_destroyed;
        break;
      }
      
      // optional int32 destroyed = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_destroyed:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &destroyed_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_damage;
        break;
      }
      
      // optional int32 damage = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_damage:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &damage_));
        _set_bit(4);
        if (input->ExpectTag(50)) goto parse_transactionTarget;
        break;
      }
      
      // optional .MsgTransaction transactionTarget = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_transactionTarget:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_transactiontarget()));
        if (input->ExpectTag(58)) goto parse_attackers;
        break;
      }
      
      // repeated string attackers = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_attackers:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_attackers()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->attackers(0).data(), this->attackers(0).length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(58)) goto parse_attackers;
        if (input->ExpectTag(64)) goto parse_itemSid;
        break;
      }
      
      // optional int32 itemSid = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_itemSid:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &itemsid_));
        _set_bit(7);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgItemDamaged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgItemDamaged::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 planetId = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->planetid(), output);
  }
  
  // optional int32 energyBeforeShot = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->energybeforeshot(), output);
  }
  
  // optional .MsgTransaction transaction = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->transaction(), output);
  }
  
  // optional int32 destroyed = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->destroyed(), output);
  }
  
  // optional int32 damage = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->damage(), output);
  }
  
  // optional .MsgTransaction transactionTarget = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      6, this->transactiontarget(), output);
  }
  
  // repeated string attackers = 7;
  for (int i = 0; i < this->attackers_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->attackers(i).data(), this->attackers(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->attackers(i), output);
  }
  
  // optional int32 itemSid = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->itemsid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgItemDamaged::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 planetId = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->planetid(), target);
  }
  
  // optional int32 energyBeforeShot = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->energybeforeshot(), target);
  }
  
  // optional .MsgTransaction transaction = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->transaction(), target);
  }
  
  // optional int32 destroyed = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->destroyed(), target);
  }
  
  // optional int32 damage = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->damage(), target);
  }
  
  // optional .MsgTransaction transactionTarget = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->transactiontarget(), target);
  }
  
  // repeated string attackers = 7;
  for (int i = 0; i < this->attackers_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->attackers(i).data(), this->attackers(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->attackers(i), target);
  }
  
  // optional int32 itemSid = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->itemsid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgItemDamaged::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 planetId = 1;
    if (has_planetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->planetid());
    }
    
    // optional int32 energyBeforeShot = 2;
    if (has_energybeforeshot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->energybeforeshot());
    }
    
    // optional .MsgTransaction transaction = 3;
    if (has_transaction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transaction());
    }
    
    // optional int32 destroyed = 4;
    if (has_destroyed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->destroyed());
    }
    
    // optional int32 damage = 5;
    if (has_damage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->damage());
    }
    
    // optional .MsgTransaction transactionTarget = 6;
    if (has_transactiontarget()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transactiontarget());
    }
    
    // optional int32 itemSid = 8;
    if (has_itemsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemsid());
    }
    
  }
  // repeated string attackers = 7;
  total_size += 1 * this->attackers_size();
  for (int i = 0; i < this->attackers_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->attackers(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgItemDamaged::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemDamaged* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemDamaged*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemDamaged::MergeFrom(const MsgItemDamaged& from) {
  GOOGLE_CHECK_NE(&from, this);
  attackers_.MergeFrom(from.attackers_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_planetid(from.planetid());
    }
    if (from._has_bit(1)) {
      set_energybeforeshot(from.energybeforeshot());
    }
    if (from._has_bit(2)) {
      mutable_transaction()->::MsgTransaction::MergeFrom(from.transaction());
    }
    if (from._has_bit(3)) {
      set_destroyed(from.destroyed());
    }
    if (from._has_bit(4)) {
      set_damage(from.damage());
    }
    if (from._has_bit(5)) {
      mutable_transactiontarget()->::MsgTransaction::MergeFrom(from.transactiontarget());
    }
    if (from._has_bit(7)) {
      set_itemsid(from.itemsid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemDamaged::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemDamaged::CopyFrom(const MsgItemDamaged& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemDamaged::IsInitialized() const {
  
  return true;
}

void MsgItemDamaged::Swap(MsgItemDamaged* other) {
  if (other != this) {
    std::swap(planetid_, other->planetid_);
    std::swap(energybeforeshot_, other->energybeforeshot_);
    std::swap(transaction_, other->transaction_);
    std::swap(destroyed_, other->destroyed_);
    std::swap(damage_, other->damage_);
    std::swap(transactiontarget_, other->transactiontarget_);
    attackers_.Swap(&other->attackers_);
    std::swap(itemsid_, other->itemsid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemDamaged::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemDamaged_descriptor_;
  metadata.reflection = MsgItemDamaged_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgSpecialAttack::_default_socialitemsku_;
#ifndef _MSC_VER
const int MsgSpecialAttack::kXFieldNumber;
const int MsgSpecialAttack::kYFieldNumber;
const int MsgSpecialAttack::kMillisFieldNumber;
const int MsgSpecialAttack::kSocialItemSkuFieldNumber;
const int MsgSpecialAttack::kTransactionFieldNumber;
#endif  // !_MSC_VER

MsgSpecialAttack::MsgSpecialAttack() {
  SharedCtor();
}

void MsgSpecialAttack::InitAsDefaultInstance() {
  transaction_ = const_cast< ::MsgTransaction*>(&::MsgTransaction::default_instance());
}

MsgSpecialAttack::MsgSpecialAttack(const MsgSpecialAttack& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgSpecialAttack::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  millis_ = 0;
  socialitemsku_ = const_cast< ::std::string*>(&_default_socialitemsku_);
  transaction_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSpecialAttack::~MsgSpecialAttack() {
  SharedDtor();
}

void MsgSpecialAttack::SharedDtor() {
  if (socialitemsku_ != &_default_socialitemsku_) {
    delete socialitemsku_;
  }
  if (this != default_instance_) {
    delete transaction_;
  }
}

const ::google::protobuf::Descriptor* MsgSpecialAttack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSpecialAttack_descriptor_;
}

const MsgSpecialAttack& MsgSpecialAttack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RceBattleDamagesPack_2eproto();  return *default_instance_;
}

MsgSpecialAttack* MsgSpecialAttack::default_instance_ = NULL;

MsgSpecialAttack* MsgSpecialAttack::New() const {
  return new MsgSpecialAttack;
}

void MsgSpecialAttack::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    x_ = 0;
    y_ = 0;
    millis_ = 0;
    if (_has_bit(3)) {
      if (socialitemsku_ != &_default_socialitemsku_) {
        socialitemsku_->clear();
      }
    }
    if (_has_bit(4)) {
      if (transaction_ != NULL) transaction_->::MsgTransaction::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSpecialAttack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &x_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_y;
        break;
      }
      
      // optional int32 y = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_y:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &y_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_millis;
        break;
      }
      
      // optional int32 millis = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_millis:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &millis_));
        _set_bit(2);
        if (input->ExpectTag(34)) goto parse_socialItemSku;
        break;
      }
      
      // optional string socialItemSku = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_socialItemSku:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_socialitemsku()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->socialitemsku().data(), this->socialitemsku().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(42)) goto parse_transaction;
        break;
      }
      
      // optional .MsgTransaction transaction = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_transaction:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_transaction()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgSpecialAttack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgSpecialAttack::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 x = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }
  
  // optional int32 y = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }
  
  // optional int32 millis = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->millis(), output);
  }
  
  // optional string socialItemSku = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->socialitemsku().data(), this->socialitemsku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->socialitemsku(), output);
  }
  
  // optional .MsgTransaction transaction = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->transaction(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgSpecialAttack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 x = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }
  
  // optional int32 y = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }
  
  // optional int32 millis = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->millis(), target);
  }
  
  // optional string socialItemSku = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->socialitemsku().data(), this->socialitemsku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->socialitemsku(), target);
  }
  
  // optional .MsgTransaction transaction = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->transaction(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgSpecialAttack::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }
    
    // optional int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }
    
    // optional int32 millis = 3;
    if (has_millis()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->millis());
    }
    
    // optional string socialItemSku = 4;
    if (has_socialitemsku()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->socialitemsku());
    }
    
    // optional .MsgTransaction transaction = 5;
    if (has_transaction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transaction());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgSpecialAttack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSpecialAttack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSpecialAttack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSpecialAttack::MergeFrom(const MsgSpecialAttack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_x(from.x());
    }
    if (from._has_bit(1)) {
      set_y(from.y());
    }
    if (from._has_bit(2)) {
      set_millis(from.millis());
    }
    if (from._has_bit(3)) {
      set_socialitemsku(from.socialitemsku());
    }
    if (from._has_bit(4)) {
      mutable_transaction()->::MsgTransaction::MergeFrom(from.transaction());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSpecialAttack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSpecialAttack::CopyFrom(const MsgSpecialAttack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSpecialAttack::IsInitialized() const {
  
  return true;
}

void MsgSpecialAttack::Swap(MsgSpecialAttack* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(millis_, other->millis_);
    std::swap(socialitemsku_, other->socialitemsku_);
    std::swap(transaction_, other->transaction_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSpecialAttack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSpecialAttack_descriptor_;
  metadata.reflection = MsgSpecialAttack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RceBattleDamagesPack::kDeployUnitsFieldNumber;
const int RceBattleDamagesPack::kUnitDamagedFieldNumber;
const int RceBattleDamagesPack::kItemDamagedFieldNumber;
const int RceBattleDamagesPack::kSpecialAttackFieldNumber;
#endif  // !_MSC_VER

RceBattleDamagesPack::RceBattleDamagesPack() {
  SharedCtor();
}

void RceBattleDamagesPack::InitAsDefaultInstance() {
}

RceBattleDamagesPack::RceBattleDamagesPack(const RceBattleDamagesPack& from) {
  SharedCtor();
  MergeFrom(from);
}

void RceBattleDamagesPack::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RceBattleDamagesPack::~RceBattleDamagesPack() {
  SharedDtor();
}

void RceBattleDamagesPack::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* RceBattleDamagesPack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RceBattleDamagesPack_descriptor_;
}

const RceBattleDamagesPack& RceBattleDamagesPack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RceBattleDamagesPack_2eproto();  return *default_instance_;
}

RceBattleDamagesPack* RceBattleDamagesPack::default_instance_ = NULL;

RceBattleDamagesPack* RceBattleDamagesPack::New() const {
  return new RceBattleDamagesPack;
}

void RceBattleDamagesPack::Clear() {
  deployunits_.Clear();
  unitdamaged_.Clear();
  itemdamaged_.Clear();
  specialattack_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RceBattleDamagesPack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgDeployUnits deployUnits = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_deployUnits:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_deployunits()));
        if (input->ExpectTag(10)) goto parse_deployUnits;
        if (input->ExpectTag(18)) goto parse_unitDamaged;
        break;
      }
      
      // repeated .MsgUnitDamaged unitDamaged = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_unitDamaged:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_unitdamaged()));
        if (input->ExpectTag(18)) goto parse_unitDamaged;
        if (input->ExpectTag(26)) goto parse_itemDamaged;
        break;
      }
      
      // repeated .MsgItemDamaged itemDamaged = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_itemDamaged:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_itemdamaged()));
        if (input->ExpectTag(26)) goto parse_itemDamaged;
        if (input->ExpectTag(34)) goto parse_specialAttack;
        break;
      }
      
      // repeated .MsgSpecialAttack specialAttack = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_specialAttack:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_specialattack()));
        if (input->ExpectTag(34)) goto parse_specialAttack;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RceBattleDamagesPack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    RceBattleDamagesPack::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .MsgDeployUnits deployUnits = 1;
  for (int i = 0; i < this->deployunits_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->deployunits(i), output);
  }
  
  // repeated .MsgUnitDamaged unitDamaged = 2;
  for (int i = 0; i < this->unitdamaged_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->unitdamaged(i), output);
  }
  
  // repeated .MsgItemDamaged itemDamaged = 3;
  for (int i = 0; i < this->itemdamaged_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->itemdamaged(i), output);
  }
  
  // repeated .MsgSpecialAttack specialAttack = 4;
  for (int i = 0; i < this->specialattack_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->specialattack(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RceBattleDamagesPack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .MsgDeployUnits deployUnits = 1;
  for (int i = 0; i < this->deployunits_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->deployunits(i), target);
  }
  
  // repeated .MsgUnitDamaged unitDamaged = 2;
  for (int i = 0; i < this->unitdamaged_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->unitdamaged(i), target);
  }
  
  // repeated .MsgItemDamaged itemDamaged = 3;
  for (int i = 0; i < this->itemdamaged_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->itemdamaged(i), target);
  }
  
  // repeated .MsgSpecialAttack specialAttack = 4;
  for (int i = 0; i < this->specialattack_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->specialattack(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RceBattleDamagesPack::ByteSize() const {
  int total_size = 0;
  
  // repeated .MsgDeployUnits deployUnits = 1;
  total_size += 1 * this->deployunits_size();
  for (int i = 0; i < this->deployunits_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->deployunits(i));
  }
  
  // repeated .MsgUnitDamaged unitDamaged = 2;
  total_size += 1 * this->unitdamaged_size();
  for (int i = 0; i < this->unitdamaged_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->unitdamaged(i));
  }
  
  // repeated .MsgItemDamaged itemDamaged = 3;
  total_size += 1 * this->itemdamaged_size();
  for (int i = 0; i < this->itemdamaged_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemdamaged(i));
  }
  
  // repeated .MsgSpecialAttack specialAttack = 4;
  total_size += 1 * this->specialattack_size();
  for (int i = 0; i < this->specialattack_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->specialattack(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void RceBattleDamagesPack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RceBattleDamagesPack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RceBattleDamagesPack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RceBattleDamagesPack::MergeFrom(const RceBattleDamagesPack& from) {
  GOOGLE_CHECK_NE(&from, this);
  deployunits_.MergeFrom(from.deployunits_);
  unitdamaged_.MergeFrom(from.unitdamaged_);
  itemdamaged_.MergeFrom(from.itemdamaged_);
  specialattack_.MergeFrom(from.specialattack_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RceBattleDamagesPack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RceBattleDamagesPack::CopyFrom(const RceBattleDamagesPack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RceBattleDamagesPack::IsInitialized() const {
  
  return true;
}

void RceBattleDamagesPack::Swap(RceBattleDamagesPack* other) {
  if (other != this) {
    deployunits_.Swap(&other->deployunits_);
    unitdamaged_.Swap(&other->unitdamaged_);
    itemdamaged_.Swap(&other->itemdamaged_);
    specialattack_.Swap(&other->specialattack_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RceBattleDamagesPack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RceBattleDamagesPack_descriptor_;
  metadata.reflection = RceBattleDamagesPack_reflection_;
  return metadata;
}

