// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RseObtainAskForHelp.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace {

const ::google::protobuf::Descriptor* RseObtainAskForHelp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RseObtainAskForHelp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Items_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Items_reflection_ = NULL;
const ::google::protobuf::Descriptor* Units_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Units_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_RseObtainAskForHelp_2eproto() {
  protobuf_AddDesc_RseObtainAskForHelp_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RseObtainAskForHelp.proto");
  GOOGLE_CHECK(file != NULL);
  RseObtainAskForHelp_descriptor_ = file->message_type(0);
  static const int RseObtainAskForHelp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainAskForHelp, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainAskForHelp, units_),
  };
  RseObtainAskForHelp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RseObtainAskForHelp_descriptor_,
      RseObtainAskForHelp::default_instance_,
      RseObtainAskForHelp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainAskForHelp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainAskForHelp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RseObtainAskForHelp));
  Items_descriptor_ = file->message_type(1);
  static const int Items_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, ret_),
  };
  Items_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Items_descriptor_,
      Items::default_instance_,
      Items_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Items));
  Units_descriptor_ = file->message_type(2);
  static const int Units_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Units, ret_),
  };
  Units_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Units_descriptor_,
      Units::default_instance_,
      Units_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Units, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Units, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Units));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RseObtainAskForHelp_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RseObtainAskForHelp_descriptor_, &RseObtainAskForHelp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Items_descriptor_, &Items::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Units_descriptor_, &Units::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RseObtainAskForHelp_2eproto() {
  delete RseObtainAskForHelp::default_instance_;
  delete RseObtainAskForHelp_reflection_;
  delete Items::default_instance_;
  delete Items_reflection_;
  delete Units::default_instance_;
  delete Units_reflection_;
}

void protobuf_AddDesc_RseObtainAskForHelp_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031RseObtainAskForHelp.proto\"C\n\023RseObtain"
    "AskForHelp\022\025\n\005items\030\001 \003(\0132\006.Items\022\025\n\005uni"
    "ts\030\002 \003(\0132\006.Units\"\024\n\005Items\022\013\n\003ret\030\001 \001(\005\"\024"
    "\n\005Units\022\013\n\003ret\030\001 \001(\005", 140);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RseObtainAskForHelp.proto", &protobuf_RegisterTypes);
  RseObtainAskForHelp::default_instance_ = new RseObtainAskForHelp();
  Items::default_instance_ = new Items();
  Units::default_instance_ = new Units();
  RseObtainAskForHelp::default_instance_->InitAsDefaultInstance();
  Items::default_instance_->InitAsDefaultInstance();
  Units::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RseObtainAskForHelp_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RseObtainAskForHelp_2eproto {
  StaticDescriptorInitializer_RseObtainAskForHelp_2eproto() {
    protobuf_AddDesc_RseObtainAskForHelp_2eproto();
  }
} static_descriptor_initializer_RseObtainAskForHelp_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int RseObtainAskForHelp::kItemsFieldNumber;
const int RseObtainAskForHelp::kUnitsFieldNumber;
#endif  // !_MSC_VER

RseObtainAskForHelp::RseObtainAskForHelp() {
  SharedCtor();
}

void RseObtainAskForHelp::InitAsDefaultInstance() {
}

RseObtainAskForHelp::RseObtainAskForHelp(const RseObtainAskForHelp& from) {
  SharedCtor();
  MergeFrom(from);
}

void RseObtainAskForHelp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RseObtainAskForHelp::~RseObtainAskForHelp() {
  SharedDtor();
}

void RseObtainAskForHelp::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* RseObtainAskForHelp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RseObtainAskForHelp_descriptor_;
}

const RseObtainAskForHelp& RseObtainAskForHelp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainAskForHelp_2eproto();  return *default_instance_;
}

RseObtainAskForHelp* RseObtainAskForHelp::default_instance_ = NULL;

RseObtainAskForHelp* RseObtainAskForHelp::New() const {
  return new RseObtainAskForHelp;
}

void RseObtainAskForHelp::Clear() {
  items_.Clear();
  units_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RseObtainAskForHelp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Items items = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_items:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_items()));
        if (input->ExpectTag(10)) goto parse_items;
        if (input->ExpectTag(18)) goto parse_units;
        break;
      }
      
      // repeated .Units units = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_units:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_units()));
        if (input->ExpectTag(18)) goto parse_units;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RseObtainAskForHelp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    RseObtainAskForHelp::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .Items items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->items(i), output);
  }
  
  // repeated .Units units = 2;
  for (int i = 0; i < this->units_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->units(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RseObtainAskForHelp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Items items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }
  
  // repeated .Units units = 2;
  for (int i = 0; i < this->units_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->units(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RseObtainAskForHelp::ByteSize() const {
  int total_size = 0;
  
  // repeated .Items items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }
  
  // repeated .Units units = 2;
  total_size += 1 * this->units_size();
  for (int i = 0; i < this->units_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->units(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void RseObtainAskForHelp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RseObtainAskForHelp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RseObtainAskForHelp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RseObtainAskForHelp::MergeFrom(const RseObtainAskForHelp& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  units_.MergeFrom(from.units_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RseObtainAskForHelp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RseObtainAskForHelp::CopyFrom(const RseObtainAskForHelp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RseObtainAskForHelp::IsInitialized() const {
  
  return true;
}

void RseObtainAskForHelp::Swap(RseObtainAskForHelp* other) {
  if (other != this) {
    items_.Swap(&other->items_);
    units_.Swap(&other->units_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RseObtainAskForHelp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RseObtainAskForHelp_descriptor_;
  metadata.reflection = RseObtainAskForHelp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Items::kRetFieldNumber;
#endif  // !_MSC_VER

Items::Items() {
  SharedCtor();
}

void Items::InitAsDefaultInstance() {
}

Items::Items(const Items& from) {
  SharedCtor();
  MergeFrom(from);
}

void Items::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Items::~Items() {
  SharedDtor();
}

void Items::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* Items::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Items_descriptor_;
}

const Items& Items::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainAskForHelp_2eproto();  return *default_instance_;
}

Items* Items::default_instance_ = NULL;

Items* Items::New() const {
  return new Items;
}

void Items::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Items::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &ret_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Items::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    Items::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 ret = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Items::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Items::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void Items::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Items* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Items*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Items::MergeFrom(const Items& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Items::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Items::CopyFrom(const Items& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Items::IsInitialized() const {
  
  return true;
}

void Items::Swap(Items* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Items::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Items_descriptor_;
  metadata.reflection = Items_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Units::kRetFieldNumber;
#endif  // !_MSC_VER

Units::Units() {
  SharedCtor();
}

void Units::InitAsDefaultInstance() {
}

Units::Units(const Units& from) {
  SharedCtor();
  MergeFrom(from);
}

void Units::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Units::~Units() {
  SharedDtor();
}

void Units::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* Units::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Units_descriptor_;
}

const Units& Units::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainAskForHelp_2eproto();  return *default_instance_;
}

Units* Units::default_instance_ = NULL;

Units* Units::New() const {
  return new Units;
}

void Units::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Units::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &ret_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Units::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    Units::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 ret = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Units::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Units::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void Units::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Units* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Units*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Units::MergeFrom(const Units& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Units::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Units::CopyFrom(const Units& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Units::IsInitialized() const {
  
  return true;
}

void Units::Swap(Units* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Units::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Units_descriptor_;
  metadata.reflection = Units_reflection_;
  return metadata;
}

