// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgBunker.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace {

const ::google::protobuf::Descriptor* MsgBunkerUnit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBunkerUnit_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBunker_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBunker_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgBunker_2eproto() {
  protobuf_AddDesc_MsgBunker_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgBunker.proto");
  GOOGLE_CHECK(file != NULL);
  MsgBunkerUnit_descriptor_ = file->message_type(0);
  static const int MsgBunkerUnit_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBunkerUnit, sku_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBunkerUnit, unit_),
  };
  MsgBunkerUnit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBunkerUnit_descriptor_,
      MsgBunkerUnit::default_instance_,
      MsgBunkerUnit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBunkerUnit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBunkerUnit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBunkerUnit));
  MsgBunker_descriptor_ = file->message_type(1);
  static const int MsgBunker_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBunker, sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBunker, helpersaccountids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBunker, bunker_),
  };
  MsgBunker_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBunker_descriptor_,
      MsgBunker::default_instance_,
      MsgBunker_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBunker, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBunker, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBunker));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgBunker_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBunkerUnit_descriptor_, &MsgBunkerUnit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBunker_descriptor_, &MsgBunker::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgBunker_2eproto() {
  delete MsgBunkerUnit::default_instance_;
  delete MsgBunkerUnit_reflection_;
  delete MsgBunker::default_instance_;
  delete MsgBunker_reflection_;
}

void protobuf_AddDesc_MsgBunker_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017MsgBunker.proto\"*\n\rMsgBunkerUnit\022\013\n\003sk"
    "u\030\001 \001(\t\022\014\n\004Unit\030\002 \003(\005\"S\n\tMsgBunker\022\013\n\003si"
    "d\030\001 \001(\005\022\031\n\021helpersAccountIds\030\002 \001(\t\022\036\n\006Bu"
    "nker\030\003 \003(\0132\016.MsgBunkerUnit", 146);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgBunker.proto", &protobuf_RegisterTypes);
  MsgBunkerUnit::default_instance_ = new MsgBunkerUnit();
  MsgBunker::default_instance_ = new MsgBunker();
  MsgBunkerUnit::default_instance_->InitAsDefaultInstance();
  MsgBunker::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgBunker_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgBunker_2eproto {
  StaticDescriptorInitializer_MsgBunker_2eproto() {
    protobuf_AddDesc_MsgBunker_2eproto();
  }
} static_descriptor_initializer_MsgBunker_2eproto_;


// ===================================================================

const ::std::string MsgBunkerUnit::_default_sku_;
#ifndef _MSC_VER
const int MsgBunkerUnit::kSkuFieldNumber;
const int MsgBunkerUnit::kUnitFieldNumber;
#endif  // !_MSC_VER

MsgBunkerUnit::MsgBunkerUnit() {
  SharedCtor();
}

void MsgBunkerUnit::InitAsDefaultInstance() {
}

MsgBunkerUnit::MsgBunkerUnit(const MsgBunkerUnit& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgBunkerUnit::SharedCtor() {
  _cached_size_ = 0;
  sku_ = const_cast< ::std::string*>(&_default_sku_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBunkerUnit::~MsgBunkerUnit() {
  SharedDtor();
}

void MsgBunkerUnit::SharedDtor() {
  if (sku_ != &_default_sku_) {
    delete sku_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgBunkerUnit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBunkerUnit_descriptor_;
}

const MsgBunkerUnit& MsgBunkerUnit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBunker_2eproto();  return *default_instance_;
}

MsgBunkerUnit* MsgBunkerUnit::default_instance_ = NULL;

MsgBunkerUnit* MsgBunkerUnit::New() const {
  return new MsgBunkerUnit;
}

void MsgBunkerUnit::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (sku_ != &_default_sku_) {
        sku_->clear();
      }
    }
  }
  unit_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBunkerUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sku = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_sku()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->sku().data(), this->sku().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(16)) goto parse_Unit;
        break;
      }
      
      // repeated int32 Unit = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Unit:
        ::google::protobuf::int32 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &value));
        add_unit(value);
        if (input->ExpectTag(16)) goto parse_Unit;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgBunkerUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgBunkerUnit::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string sku = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sku().data(), this->sku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->sku(), output);
  }
  
  // repeated int32 Unit = 2;
  for (int i = 0; i < this->unit_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->unit(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgBunkerUnit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string sku = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sku().data(), this->sku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sku(), target);
  }
  
  // repeated int32 Unit = 2;
  for (int i = 0; i < this->unit_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->unit(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgBunkerUnit::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string sku = 1;
    if (has_sku()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sku());
    }
    
  }
  // repeated int32 Unit = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->unit_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unit(i));
    }
    total_size += 1 * this->unit_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgBunkerUnit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBunkerUnit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBunkerUnit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBunkerUnit::MergeFrom(const MsgBunkerUnit& from) {
  GOOGLE_CHECK_NE(&from, this);
  unit_.MergeFrom(from.unit_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_sku(from.sku());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBunkerUnit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBunkerUnit::CopyFrom(const MsgBunkerUnit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBunkerUnit::IsInitialized() const {
  
  return true;
}

void MsgBunkerUnit::Swap(MsgBunkerUnit* other) {
  if (other != this) {
    std::swap(sku_, other->sku_);
    unit_.Swap(&other->unit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBunkerUnit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBunkerUnit_descriptor_;
  metadata.reflection = MsgBunkerUnit_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgBunker::_default_helpersaccountids_;
#ifndef _MSC_VER
const int MsgBunker::kSidFieldNumber;
const int MsgBunker::kHelpersAccountIdsFieldNumber;
const int MsgBunker::kBunkerFieldNumber;
#endif  // !_MSC_VER

MsgBunker::MsgBunker() {
  SharedCtor();
}

void MsgBunker::InitAsDefaultInstance() {
}

MsgBunker::MsgBunker(const MsgBunker& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgBunker::SharedCtor() {
  _cached_size_ = 0;
  sid_ = 0;
  helpersaccountids_ = const_cast< ::std::string*>(&_default_helpersaccountids_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBunker::~MsgBunker() {
  SharedDtor();
}

void MsgBunker::SharedDtor() {
  if (helpersaccountids_ != &_default_helpersaccountids_) {
    delete helpersaccountids_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgBunker::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBunker_descriptor_;
}

const MsgBunker& MsgBunker::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBunker_2eproto();  return *default_instance_;
}

MsgBunker* MsgBunker::default_instance_ = NULL;

MsgBunker* MsgBunker::New() const {
  return new MsgBunker;
}

void MsgBunker::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    sid_ = 0;
    if (_has_bit(1)) {
      if (helpersaccountids_ != &_default_helpersaccountids_) {
        helpersaccountids_->clear();
      }
    }
  }
  bunker_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBunker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &sid_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_helpersAccountIds;
        break;
      }
      
      // optional string helpersAccountIds = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_helpersAccountIds:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_helpersaccountids()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->helpersaccountids().data(), this->helpersaccountids().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(26)) goto parse_Bunker;
        break;
      }
      
      // repeated .MsgBunkerUnit Bunker = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Bunker:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_bunker()));
        if (input->ExpectTag(26)) goto parse_Bunker;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgBunker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgBunker::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 sid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sid(), output);
  }
  
  // optional string helpersAccountIds = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->helpersaccountids().data(), this->helpersaccountids().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->helpersaccountids(), output);
  }
  
  // repeated .MsgBunkerUnit Bunker = 3;
  for (int i = 0; i < this->bunker_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      3, this->bunker(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgBunker::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 sid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sid(), target);
  }
  
  // optional string helpersAccountIds = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->helpersaccountids().data(), this->helpersaccountids().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->helpersaccountids(), target);
  }
  
  // repeated .MsgBunkerUnit Bunker = 3;
  for (int i = 0; i < this->bunker_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->bunker(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgBunker::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 sid = 1;
    if (has_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sid());
    }
    
    // optional string helpersAccountIds = 2;
    if (has_helpersaccountids()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->helpersaccountids());
    }
    
  }
  // repeated .MsgBunkerUnit Bunker = 3;
  total_size += 1 * this->bunker_size();
  for (int i = 0; i < this->bunker_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bunker(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgBunker::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBunker* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBunker*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBunker::MergeFrom(const MsgBunker& from) {
  GOOGLE_CHECK_NE(&from, this);
  bunker_.MergeFrom(from.bunker_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_sid(from.sid());
    }
    if (from._has_bit(1)) {
      set_helpersaccountids(from.helpersaccountids());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBunker::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBunker::CopyFrom(const MsgBunker& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBunker::IsInitialized() const {
  
  return true;
}

void MsgBunker::Swap(MsgBunker* other) {
  if (other != this) {
    std::swap(sid_, other->sid_);
    std::swap(helpersaccountids_, other->helpersaccountids_);
    bunker_.Swap(&other->bunker_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBunker::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBunker_descriptor_;
  metadata.reflection = MsgBunker_reflection_;
  return metadata;
}

