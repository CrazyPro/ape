// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RseObtainUniverse.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>

namespace {

const ::google::protobuf::Descriptor* MsgGameUnit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgGameUnit_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBunker_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBunker_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgHangarUnit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgHangarUnit_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgHangars_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgHangars_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSlot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSlot_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgShipyardSlot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgShipyardSlot_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgShipyard_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgShipyard_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildingItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildingItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMissionParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMissionParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMissionState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMissionState_reflection_ = NULL;
const ::google::protobuf::Descriptor* RseObtainUniverse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RseObtainUniverse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_RseObtainUniverse_2eproto() {
  protobuf_AddDesc_RseObtainUniverse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RseObtainUniverse.proto");
  GOOGLE_CHECK(file != NULL);
  MsgGameUnit_descriptor_ = file->message_type(0);
  static const int MsgGameUnit_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGameUnit, updatedat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGameUnit, unlocked_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGameUnit, timeleft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGameUnit, gameunit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGameUnit, sku_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGameUnit, upgradeid_),
  };
  MsgGameUnit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgGameUnit_descriptor_,
      MsgGameUnit::default_instance_,
      MsgGameUnit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGameUnit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGameUnit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgGameUnit));
  MsgBunker_descriptor_ = file->message_type(1);
  static const int MsgBunker_offsets_[1] = {
  };
  MsgBunker_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBunker_descriptor_,
      MsgBunker::default_instance_,
      MsgBunker_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBunker, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBunker, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBunker));
  MsgHangarUnit_descriptor_ = file->message_type(2);
  static const int MsgHangarUnit_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHangarUnit, sku_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHangarUnit, unit_),
  };
  MsgHangarUnit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgHangarUnit_descriptor_,
      MsgHangarUnit::default_instance_,
      MsgHangarUnit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHangarUnit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHangarUnit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgHangarUnit));
  MsgHangars_descriptor_ = file->message_type(3);
  static const int MsgHangars_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHangars, sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHangars, hangar_),
  };
  MsgHangars_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgHangars_descriptor_,
      MsgHangars::default_instance_,
      MsgHangars_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHangars, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHangars, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgHangars));
  MsgSlot_descriptor_ = file->message_type(4);
  static const int MsgSlot_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSlot, ship_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSlot, timeleft_),
  };
  MsgSlot_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSlot_descriptor_,
      MsgSlot::default_instance_,
      MsgSlot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSlot, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSlot, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSlot));
  MsgShipyardSlot_descriptor_ = file->message_type(5);
  static const int MsgShipyardSlot_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShipyardSlot, slots_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShipyardSlot, sku_),
  };
  MsgShipyardSlot_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgShipyardSlot_descriptor_,
      MsgShipyardSlot::default_instance_,
      MsgShipyardSlot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShipyardSlot, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShipyardSlot, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgShipyardSlot));
  MsgShipyard_descriptor_ = file->message_type(6);
  static const int MsgShipyard_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShipyard, updatedat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShipyard, sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShipyard, block_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShipyard, shipyard_),
  };
  MsgShipyard_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgShipyard_descriptor_,
      MsgShipyard::default_instance_,
      MsgShipyard_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShipyard, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgShipyard, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgShipyard));
  MsgBuildingItem_descriptor_ = file->message_type(7);
  static const int MsgBuildingItem_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildingItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildingItem, sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildingItem, energypercent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildingItem, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildingItem, sku_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildingItem, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildingItem, upgradeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildingItem, energy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildingItem, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildingItem, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildingItem, updatedat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildingItem, time_),
  };
  MsgBuildingItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildingItem_descriptor_,
      MsgBuildingItem::default_instance_,
      MsgBuildingItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildingItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildingItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildingItem));
  MsgMissionParam_descriptor_ = file->message_type(8);
  static const int MsgMissionParam_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParam, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParam, endtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParam, sku_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParam, progress_),
  };
  MsgMissionParam_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMissionParam_descriptor_,
      MsgMissionParam::default_instance_,
      MsgMissionParam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParam, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionParam, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMissionParam));
  MsgMissionState_descriptor_ = file->message_type(9);
  static const int MsgMissionState_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionState, readytostart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionState, available_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionState, rewarded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionState, completed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionState, params_),
  };
  MsgMissionState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMissionState_descriptor_,
      MsgMissionState::default_instance_,
      MsgMissionState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMissionState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMissionState));
  RseObtainUniverse_descriptor_ = file->message_type(10);
  static const int RseObtainUniverse_offsets_[30] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, vip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, yearvip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, viplevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, newplayergiftbag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, everydaygiftbag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, spycapsulestimeleft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, dcplayername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, dcworldname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, levelbasedonscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, dcplayerrank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, dccoins_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, dcminerals_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, lastvisittime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, lastlevelnotified_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, dccash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, dcdroids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, dcdroidsinuse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, damageprotectiontimeleft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, damageprotectiontimetotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, tutorialcompleted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, flags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, missions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, planets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, shipyards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, hangars_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, bunkers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, gameunits_),
  };
  RseObtainUniverse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RseObtainUniverse_descriptor_,
      RseObtainUniverse::default_instance_,
      RseObtainUniverse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RseObtainUniverse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RseObtainUniverse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RseObtainUniverse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgGameUnit_descriptor_, &MsgGameUnit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBunker_descriptor_, &MsgBunker::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgHangarUnit_descriptor_, &MsgHangarUnit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgHangars_descriptor_, &MsgHangars::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSlot_descriptor_, &MsgSlot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgShipyardSlot_descriptor_, &MsgShipyardSlot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgShipyard_descriptor_, &MsgShipyard::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildingItem_descriptor_, &MsgBuildingItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMissionParam_descriptor_, &MsgMissionParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMissionState_descriptor_, &MsgMissionState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RseObtainUniverse_descriptor_, &RseObtainUniverse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RseObtainUniverse_2eproto() {
  delete MsgGameUnit::default_instance_;
  delete MsgGameUnit_reflection_;
  delete MsgBunker::default_instance_;
  delete MsgBunker_reflection_;
  delete MsgHangarUnit::default_instance_;
  delete MsgHangarUnit_reflection_;
  delete MsgHangars::default_instance_;
  delete MsgHangars_reflection_;
  delete MsgSlot::default_instance_;
  delete MsgSlot_reflection_;
  delete MsgShipyardSlot::default_instance_;
  delete MsgShipyardSlot_reflection_;
  delete MsgShipyard::default_instance_;
  delete MsgShipyard_reflection_;
  delete MsgBuildingItem::default_instance_;
  delete MsgBuildingItem_reflection_;
  delete MsgMissionParam::default_instance_;
  delete MsgMissionParam_reflection_;
  delete MsgMissionState::default_instance_;
  delete MsgMissionState_reflection_;
  delete RseObtainUniverse::default_instance_;
  delete RseObtainUniverse_reflection_;
}

void protobuf_AddDesc_RseObtainUniverse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_MsgPlanet_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027RseObtainUniverse.proto\032\017MsgPlanet.pro"
    "to\"v\n\013MsgGameUnit\022\021\n\tupdatedAt\030\001 \001(\003\022\020\n\010"
    "unlocked\030\002 \001(\005\022\020\n\010timeLeft\030\003 \001(\003\022\020\n\010Game"
    "Unit\030\004 \003(\005\022\013\n\003sku\030\005 \001(\t\022\021\n\tupgradeId\030\006 \001"
    "(\005\"\013\n\tMsgBunker\"*\n\rMsgHangarUnit\022\013\n\003sku\030"
    "\001 \001(\t\022\014\n\004Unit\030\002 \003(\005\"9\n\nMsgHangars\022\013\n\003sid"
    "\030\001 \001(\005\022\036\n\006Hangar\030\002 \003(\0132\016.MsgHangarUnit\")"
    "\n\007MsgSlot\022\014\n\004Ship\030\001 \003(\005\022\020\n\010timeLeft\030\002 \001("
    "\003\"7\n\017MsgShipyardSlot\022\027\n\005Slots\030\001 \003(\0132\010.Ms"
    "gSlot\022\013\n\003sku\030\002 \001(\t\"`\n\013MsgShipyard\022\021\n\tupd"
    "atedAt\030\001 \001(\003\022\013\n\003sid\030\002 \001(\005\022\r\n\005block\030\003 \001(\005"
    "\022\"\n\010Shipyard\030\004 \003(\0132\020.MsgShipyardSlot\"\305\001\n"
    "\017MsgBuildingItem\022\n\n\002id\030\001 \001(\005\022\013\n\003sid\030\002 \001("
    "\005\022\025\n\renergyPercent\030\003 \001(\005\022\r\n\005state\030\004 \001(\005\022"
    "\013\n\003sku\030\005 \001(\t\022\014\n\004type\030\006 \001(\005\022\021\n\tupgradeId\030"
    "\007 \001(\005\022\016\n\006energy\030\010 \001(\005\022\t\n\001x\030\t \001(\005\022\t\n\001y\030\n "
    "\001(\005\022\021\n\tupdatedAt\030\013 \001(\003\022\014\n\004time\030\r \001(\003\"Q\n\017"
    "MsgMissionParam\022\016\n\006Target\030\001 \003(\t\022\017\n\007endTi"
    "me\030\002 \001(\003\022\013\n\003sku\030\003 \001(\t\022\020\n\010progress\030\004 \001(\t\""
    "\201\001\n\017MsgMissionState\022\024\n\014ReadyToStart\030\001 \003("
    "\t\022\021\n\tAvailable\030\002 \003(\t\022\020\n\010Rewarded\030\003 \003(\t\022\021"
    "\n\tCompleted\030\004 \003(\t\022 \n\006Params\030\005 \003(\0132\020.MsgM"
    "issionParam\"\351\005\n\021RseObtainUniverse\022\013\n\003vip"
    "\030\001 \001(\010\022\017\n\007yearVip\030\002 \001(\010\022\020\n\010vipLevel\030\003 \001("
    "\005\022\030\n\020newPlayerGiftBag\030\004 \001(\010\022\027\n\017everydayG"
    "iftBag\030\005 \001(\010\022\033\n\023spyCapsulesTimeLeft\030\006 \001("
    "\003\022\024\n\014DCPlayerName\030\007 \001(\t\022\023\n\013DCWorldName\030\010"
    " \001(\t\022\031\n\021levelBasedOnScore\030\t \001(\005\022\024\n\014DCPla"
    "yerRank\030\n \001(\005\022\017\n\007DCCoins\030\013 \001(\005\022\022\n\nDCMine"
    "rals\030\014 \001(\005\022\r\n\005score\030\r \001(\005\022\013\n\003exp\030\016 \001(\005\022\025"
    "\n\rlastVisitTime\030\017 \001(\005\022\031\n\021lastLevelNotifi"
    "ed\030\020 \001(\005\022\016\n\006DCCash\030\021 \001(\005\022\020\n\010DCDroids\030\022 \001"
    "(\005\022\025\n\rDCDroidsInUse\030\023 \001(\005\022 \n\030damageProte"
    "ctionTimeLeft\030\024 \001(\003\022!\n\031damageProtectionT"
    "imeTotal\030\025 \001(\003\022\031\n\021tutorialCompleted\030\026 \001("
    "\010\022\r\n\005flags\030\027 \001(\t\022\"\n\010Missions\030\030 \001(\0132\020.Msg"
    "MissionState\022\033\n\007Planets\030\031 \003(\0132\n.MsgPlane"
    "t\022\037\n\005Items\030\032 \003(\0132\020.MsgBuildingItem\022\037\n\tSh"
    "ipyards\030\033 \003(\0132\014.MsgShipyard\022\034\n\007Hangars\030\034"
    " \003(\0132\013.MsgHangars\022\033\n\007Bunkers\030\035 \003(\0132\n.Msg"
    "Bunker\022\037\n\tGameUnits\030\036 \003(\0132\014.MsgGameUnit", 1639);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RseObtainUniverse.proto", &protobuf_RegisterTypes);
  MsgGameUnit::default_instance_ = new MsgGameUnit();
  MsgBunker::default_instance_ = new MsgBunker();
  MsgHangarUnit::default_instance_ = new MsgHangarUnit();
  MsgHangars::default_instance_ = new MsgHangars();
  MsgSlot::default_instance_ = new MsgSlot();
  MsgShipyardSlot::default_instance_ = new MsgShipyardSlot();
  MsgShipyard::default_instance_ = new MsgShipyard();
  MsgBuildingItem::default_instance_ = new MsgBuildingItem();
  MsgMissionParam::default_instance_ = new MsgMissionParam();
  MsgMissionState::default_instance_ = new MsgMissionState();
  RseObtainUniverse::default_instance_ = new RseObtainUniverse();
  MsgGameUnit::default_instance_->InitAsDefaultInstance();
  MsgBunker::default_instance_->InitAsDefaultInstance();
  MsgHangarUnit::default_instance_->InitAsDefaultInstance();
  MsgHangars::default_instance_->InitAsDefaultInstance();
  MsgSlot::default_instance_->InitAsDefaultInstance();
  MsgShipyardSlot::default_instance_->InitAsDefaultInstance();
  MsgShipyard::default_instance_->InitAsDefaultInstance();
  MsgBuildingItem::default_instance_->InitAsDefaultInstance();
  MsgMissionParam::default_instance_->InitAsDefaultInstance();
  MsgMissionState::default_instance_->InitAsDefaultInstance();
  RseObtainUniverse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RseObtainUniverse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RseObtainUniverse_2eproto {
  StaticDescriptorInitializer_RseObtainUniverse_2eproto() {
    protobuf_AddDesc_RseObtainUniverse_2eproto();
  }
} static_descriptor_initializer_RseObtainUniverse_2eproto_;


// ===================================================================

const ::std::string MsgGameUnit::_default_sku_;
#ifndef _MSC_VER
const int MsgGameUnit::kUpdatedAtFieldNumber;
const int MsgGameUnit::kUnlockedFieldNumber;
const int MsgGameUnit::kTimeLeftFieldNumber;
const int MsgGameUnit::kGameUnitFieldNumber;
const int MsgGameUnit::kSkuFieldNumber;
const int MsgGameUnit::kUpgradeIdFieldNumber;
#endif  // !_MSC_VER

MsgGameUnit::MsgGameUnit() {
  SharedCtor();
}

void MsgGameUnit::InitAsDefaultInstance() {
}

MsgGameUnit::MsgGameUnit(const MsgGameUnit& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgGameUnit::SharedCtor() {
  _cached_size_ = 0;
  updatedat_ = GOOGLE_LONGLONG(0);
  unlocked_ = 0;
  timeleft_ = GOOGLE_LONGLONG(0);
  sku_ = const_cast< ::std::string*>(&_default_sku_);
  upgradeid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgGameUnit::~MsgGameUnit() {
  SharedDtor();
}

void MsgGameUnit::SharedDtor() {
  if (sku_ != &_default_sku_) {
    delete sku_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgGameUnit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgGameUnit_descriptor_;
}

const MsgGameUnit& MsgGameUnit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainUniverse_2eproto();  return *default_instance_;
}

MsgGameUnit* MsgGameUnit::default_instance_ = NULL;

MsgGameUnit* MsgGameUnit::New() const {
  return new MsgGameUnit;
}

void MsgGameUnit::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    updatedat_ = GOOGLE_LONGLONG(0);
    unlocked_ = 0;
    timeleft_ = GOOGLE_LONGLONG(0);
    if (_has_bit(4)) {
      if (sku_ != &_default_sku_) {
        sku_->clear();
      }
    }
    upgradeid_ = 0;
  }
  gameunit_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgGameUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 updatedAt = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &updatedat_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_unlocked;
        break;
      }
      
      // optional int32 unlocked = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_unlocked:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &unlocked_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_timeLeft;
        break;
      }
      
      // optional int64 timeLeft = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_timeLeft:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &timeleft_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_GameUnit;
        break;
      }
      
      // repeated int32 GameUnit = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_GameUnit:
        ::google::protobuf::int32 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &value));
        add_gameunit(value);
        if (input->ExpectTag(32)) goto parse_GameUnit;
        if (input->ExpectTag(42)) goto parse_sku;
        break;
      }
      
      // optional string sku = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_sku:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_sku()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->sku().data(), this->sku().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(48)) goto parse_upgradeId;
        break;
      }
      
      // optional int32 upgradeId = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_upgradeId:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &upgradeid_));
        _set_bit(5);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgGameUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgGameUnit::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 updatedAt = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->updatedat(), output);
  }
  
  // optional int32 unlocked = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->unlocked(), output);
  }
  
  // optional int64 timeLeft = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->timeleft(), output);
  }
  
  // repeated int32 GameUnit = 4;
  for (int i = 0; i < this->gameunit_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->gameunit(i), output);
  }
  
  // optional string sku = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sku().data(), this->sku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->sku(), output);
  }
  
  // optional int32 upgradeId = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->upgradeid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgGameUnit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 updatedAt = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->updatedat(), target);
  }
  
  // optional int32 unlocked = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->unlocked(), target);
  }
  
  // optional int64 timeLeft = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->timeleft(), target);
  }
  
  // repeated int32 GameUnit = 4;
  for (int i = 0; i < this->gameunit_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->gameunit(i), target);
  }
  
  // optional string sku = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sku().data(), this->sku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sku(), target);
  }
  
  // optional int32 upgradeId = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->upgradeid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgGameUnit::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 updatedAt = 1;
    if (has_updatedat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->updatedat());
    }
    
    // optional int32 unlocked = 2;
    if (has_unlocked()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unlocked());
    }
    
    // optional int64 timeLeft = 3;
    if (has_timeleft()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timeleft());
    }
    
    // optional string sku = 5;
    if (has_sku()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sku());
    }
    
    // optional int32 upgradeId = 6;
    if (has_upgradeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->upgradeid());
    }
    
  }
  // repeated int32 GameUnit = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->gameunit_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->gameunit(i));
    }
    total_size += 1 * this->gameunit_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgGameUnit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgGameUnit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgGameUnit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgGameUnit::MergeFrom(const MsgGameUnit& from) {
  GOOGLE_CHECK_NE(&from, this);
  gameunit_.MergeFrom(from.gameunit_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_updatedat(from.updatedat());
    }
    if (from._has_bit(1)) {
      set_unlocked(from.unlocked());
    }
    if (from._has_bit(2)) {
      set_timeleft(from.timeleft());
    }
    if (from._has_bit(4)) {
      set_sku(from.sku());
    }
    if (from._has_bit(5)) {
      set_upgradeid(from.upgradeid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgGameUnit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGameUnit::CopyFrom(const MsgGameUnit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGameUnit::IsInitialized() const {
  
  return true;
}

void MsgGameUnit::Swap(MsgGameUnit* other) {
  if (other != this) {
    std::swap(updatedat_, other->updatedat_);
    std::swap(unlocked_, other->unlocked_);
    std::swap(timeleft_, other->timeleft_);
    gameunit_.Swap(&other->gameunit_);
    std::swap(sku_, other->sku_);
    std::swap(upgradeid_, other->upgradeid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgGameUnit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgGameUnit_descriptor_;
  metadata.reflection = MsgGameUnit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgBunker::MsgBunker() {
  SharedCtor();
}

void MsgBunker::InitAsDefaultInstance() {
}

MsgBunker::MsgBunker(const MsgBunker& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgBunker::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBunker::~MsgBunker() {
  SharedDtor();
}

void MsgBunker::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgBunker::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBunker_descriptor_;
}

const MsgBunker& MsgBunker::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainUniverse_2eproto();  return *default_instance_;
}

MsgBunker* MsgBunker::default_instance_ = NULL;

MsgBunker* MsgBunker::New() const {
  return new MsgBunker;
}

void MsgBunker::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBunker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void MsgBunker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgBunker::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgBunker::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgBunker::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgBunker::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBunker* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBunker*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBunker::MergeFrom(const MsgBunker& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBunker::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBunker::CopyFrom(const MsgBunker& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBunker::IsInitialized() const {
  
  return true;
}

void MsgBunker::Swap(MsgBunker* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBunker::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBunker_descriptor_;
  metadata.reflection = MsgBunker_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgHangarUnit::_default_sku_;
#ifndef _MSC_VER
const int MsgHangarUnit::kSkuFieldNumber;
const int MsgHangarUnit::kUnitFieldNumber;
#endif  // !_MSC_VER

MsgHangarUnit::MsgHangarUnit() {
  SharedCtor();
}

void MsgHangarUnit::InitAsDefaultInstance() {
}

MsgHangarUnit::MsgHangarUnit(const MsgHangarUnit& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgHangarUnit::SharedCtor() {
  _cached_size_ = 0;
  sku_ = const_cast< ::std::string*>(&_default_sku_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgHangarUnit::~MsgHangarUnit() {
  SharedDtor();
}

void MsgHangarUnit::SharedDtor() {
  if (sku_ != &_default_sku_) {
    delete sku_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgHangarUnit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHangarUnit_descriptor_;
}

const MsgHangarUnit& MsgHangarUnit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainUniverse_2eproto();  return *default_instance_;
}

MsgHangarUnit* MsgHangarUnit::default_instance_ = NULL;

MsgHangarUnit* MsgHangarUnit::New() const {
  return new MsgHangarUnit;
}

void MsgHangarUnit::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (sku_ != &_default_sku_) {
        sku_->clear();
      }
    }
  }
  unit_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgHangarUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sku = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_sku()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->sku().data(), this->sku().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(16)) goto parse_Unit;
        break;
      }
      
      // repeated int32 Unit = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Unit:
        ::google::protobuf::int32 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &value));
        add_unit(value);
        if (input->ExpectTag(16)) goto parse_Unit;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgHangarUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgHangarUnit::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string sku = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sku().data(), this->sku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->sku(), output);
  }
  
  // repeated int32 Unit = 2;
  for (int i = 0; i < this->unit_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->unit(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgHangarUnit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string sku = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sku().data(), this->sku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sku(), target);
  }
  
  // repeated int32 Unit = 2;
  for (int i = 0; i < this->unit_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->unit(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgHangarUnit::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string sku = 1;
    if (has_sku()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sku());
    }
    
  }
  // repeated int32 Unit = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->unit_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unit(i));
    }
    total_size += 1 * this->unit_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgHangarUnit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgHangarUnit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgHangarUnit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgHangarUnit::MergeFrom(const MsgHangarUnit& from) {
  GOOGLE_CHECK_NE(&from, this);
  unit_.MergeFrom(from.unit_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_sku(from.sku());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgHangarUnit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHangarUnit::CopyFrom(const MsgHangarUnit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHangarUnit::IsInitialized() const {
  
  return true;
}

void MsgHangarUnit::Swap(MsgHangarUnit* other) {
  if (other != this) {
    std::swap(sku_, other->sku_);
    unit_.Swap(&other->unit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgHangarUnit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgHangarUnit_descriptor_;
  metadata.reflection = MsgHangarUnit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgHangars::kSidFieldNumber;
const int MsgHangars::kHangarFieldNumber;
#endif  // !_MSC_VER

MsgHangars::MsgHangars() {
  SharedCtor();
}

void MsgHangars::InitAsDefaultInstance() {
}

MsgHangars::MsgHangars(const MsgHangars& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgHangars::SharedCtor() {
  _cached_size_ = 0;
  sid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgHangars::~MsgHangars() {
  SharedDtor();
}

void MsgHangars::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgHangars::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHangars_descriptor_;
}

const MsgHangars& MsgHangars::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainUniverse_2eproto();  return *default_instance_;
}

MsgHangars* MsgHangars::default_instance_ = NULL;

MsgHangars* MsgHangars::New() const {
  return new MsgHangars;
}

void MsgHangars::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    sid_ = 0;
  }
  hangar_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgHangars::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &sid_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_Hangar;
        break;
      }
      
      // repeated .MsgHangarUnit Hangar = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Hangar:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_hangar()));
        if (input->ExpectTag(18)) goto parse_Hangar;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgHangars::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgHangars::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 sid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sid(), output);
  }
  
  // repeated .MsgHangarUnit Hangar = 2;
  for (int i = 0; i < this->hangar_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      2, this->hangar(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgHangars::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 sid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sid(), target);
  }
  
  // repeated .MsgHangarUnit Hangar = 2;
  for (int i = 0; i < this->hangar_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hangar(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgHangars::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 sid = 1;
    if (has_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sid());
    }
    
  }
  // repeated .MsgHangarUnit Hangar = 2;
  total_size += 1 * this->hangar_size();
  for (int i = 0; i < this->hangar_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hangar(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgHangars::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgHangars* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgHangars*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgHangars::MergeFrom(const MsgHangars& from) {
  GOOGLE_CHECK_NE(&from, this);
  hangar_.MergeFrom(from.hangar_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_sid(from.sid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgHangars::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHangars::CopyFrom(const MsgHangars& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHangars::IsInitialized() const {
  
  return true;
}

void MsgHangars::Swap(MsgHangars* other) {
  if (other != this) {
    std::swap(sid_, other->sid_);
    hangar_.Swap(&other->hangar_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgHangars::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgHangars_descriptor_;
  metadata.reflection = MsgHangars_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSlot::kShipFieldNumber;
const int MsgSlot::kTimeLeftFieldNumber;
#endif  // !_MSC_VER

MsgSlot::MsgSlot() {
  SharedCtor();
}

void MsgSlot::InitAsDefaultInstance() {
}

MsgSlot::MsgSlot(const MsgSlot& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgSlot::SharedCtor() {
  _cached_size_ = 0;
  timeleft_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSlot::~MsgSlot() {
  SharedDtor();
}

void MsgSlot::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgSlot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSlot_descriptor_;
}

const MsgSlot& MsgSlot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainUniverse_2eproto();  return *default_instance_;
}

MsgSlot* MsgSlot::default_instance_ = NULL;

MsgSlot* MsgSlot::New() const {
  return new MsgSlot;
}

void MsgSlot::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    timeleft_ = GOOGLE_LONGLONG(0);
  }
  ship_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSlot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 Ship = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Ship:
        ::google::protobuf::int32 value;
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &value));
        add_ship(value);
        if (input->ExpectTag(8)) goto parse_Ship;
        if (input->ExpectTag(16)) goto parse_timeLeft;
        break;
      }
      
      // optional int64 timeLeft = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_timeLeft:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &timeleft_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgSlot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgSlot::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated int32 Ship = 1;
  for (int i = 0; i < this->ship_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->ship(i), output);
  }
  
  // optional int64 timeLeft = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timeleft(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgSlot::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 Ship = 1;
  for (int i = 0; i < this->ship_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->ship(i), target);
  }
  
  // optional int64 timeLeft = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timeleft(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgSlot::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int64 timeLeft = 2;
    if (has_timeleft()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timeleft());
    }
    
  }
  // repeated int32 Ship = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->ship_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->ship(i));
    }
    total_size += 1 * this->ship_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgSlot::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSlot* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSlot*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSlot::MergeFrom(const MsgSlot& from) {
  GOOGLE_CHECK_NE(&from, this);
  ship_.MergeFrom(from.ship_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from._has_bit(1)) {
      set_timeleft(from.timeleft());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSlot::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSlot::CopyFrom(const MsgSlot& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSlot::IsInitialized() const {
  
  return true;
}

void MsgSlot::Swap(MsgSlot* other) {
  if (other != this) {
    ship_.Swap(&other->ship_);
    std::swap(timeleft_, other->timeleft_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSlot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSlot_descriptor_;
  metadata.reflection = MsgSlot_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgShipyardSlot::_default_sku_;
#ifndef _MSC_VER
const int MsgShipyardSlot::kSlotsFieldNumber;
const int MsgShipyardSlot::kSkuFieldNumber;
#endif  // !_MSC_VER

MsgShipyardSlot::MsgShipyardSlot() {
  SharedCtor();
}

void MsgShipyardSlot::InitAsDefaultInstance() {
}

MsgShipyardSlot::MsgShipyardSlot(const MsgShipyardSlot& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgShipyardSlot::SharedCtor() {
  _cached_size_ = 0;
  sku_ = const_cast< ::std::string*>(&_default_sku_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgShipyardSlot::~MsgShipyardSlot() {
  SharedDtor();
}

void MsgShipyardSlot::SharedDtor() {
  if (sku_ != &_default_sku_) {
    delete sku_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgShipyardSlot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgShipyardSlot_descriptor_;
}

const MsgShipyardSlot& MsgShipyardSlot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainUniverse_2eproto();  return *default_instance_;
}

MsgShipyardSlot* MsgShipyardSlot::default_instance_ = NULL;

MsgShipyardSlot* MsgShipyardSlot::New() const {
  return new MsgShipyardSlot;
}

void MsgShipyardSlot::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (_has_bit(1)) {
      if (sku_ != &_default_sku_) {
        sku_->clear();
      }
    }
  }
  slots_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgShipyardSlot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgSlot Slots = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Slots:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_slots()));
        if (input->ExpectTag(10)) goto parse_Slots;
        if (input->ExpectTag(18)) goto parse_sku;
        break;
      }
      
      // optional string sku = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_sku:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_sku()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->sku().data(), this->sku().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgShipyardSlot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgShipyardSlot::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .MsgSlot Slots = 1;
  for (int i = 0; i < this->slots_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      1, this->slots(i), output);
  }
  
  // optional string sku = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sku().data(), this->sku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->sku(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgShipyardSlot::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .MsgSlot Slots = 1;
  for (int i = 0; i < this->slots_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->slots(i), target);
  }
  
  // optional string sku = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sku().data(), this->sku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sku(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgShipyardSlot::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string sku = 2;
    if (has_sku()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sku());
    }
    
  }
  // repeated .MsgSlot Slots = 1;
  total_size += 1 * this->slots_size();
  for (int i = 0; i < this->slots_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->slots(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgShipyardSlot::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgShipyardSlot* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgShipyardSlot*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgShipyardSlot::MergeFrom(const MsgShipyardSlot& from) {
  GOOGLE_CHECK_NE(&from, this);
  slots_.MergeFrom(from.slots_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from._has_bit(1)) {
      set_sku(from.sku());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgShipyardSlot::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgShipyardSlot::CopyFrom(const MsgShipyardSlot& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgShipyardSlot::IsInitialized() const {
  
  return true;
}

void MsgShipyardSlot::Swap(MsgShipyardSlot* other) {
  if (other != this) {
    slots_.Swap(&other->slots_);
    std::swap(sku_, other->sku_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgShipyardSlot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgShipyardSlot_descriptor_;
  metadata.reflection = MsgShipyardSlot_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgShipyard::kUpdatedAtFieldNumber;
const int MsgShipyard::kSidFieldNumber;
const int MsgShipyard::kBlockFieldNumber;
const int MsgShipyard::kShipyardFieldNumber;
#endif  // !_MSC_VER

MsgShipyard::MsgShipyard() {
  SharedCtor();
}

void MsgShipyard::InitAsDefaultInstance() {
}

MsgShipyard::MsgShipyard(const MsgShipyard& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgShipyard::SharedCtor() {
  _cached_size_ = 0;
  updatedat_ = GOOGLE_LONGLONG(0);
  sid_ = 0;
  block_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgShipyard::~MsgShipyard() {
  SharedDtor();
}

void MsgShipyard::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgShipyard::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgShipyard_descriptor_;
}

const MsgShipyard& MsgShipyard::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainUniverse_2eproto();  return *default_instance_;
}

MsgShipyard* MsgShipyard::default_instance_ = NULL;

MsgShipyard* MsgShipyard::New() const {
  return new MsgShipyard;
}

void MsgShipyard::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    updatedat_ = GOOGLE_LONGLONG(0);
    sid_ = 0;
    block_ = 0;
  }
  shipyard_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgShipyard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 updatedAt = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &updatedat_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_sid;
        break;
      }
      
      // optional int32 sid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_sid:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &sid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_block;
        break;
      }
      
      // optional int32 block = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_block:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &block_));
        _set_bit(2);
        if (input->ExpectTag(34)) goto parse_Shipyard;
        break;
      }
      
      // repeated .MsgShipyardSlot Shipyard = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Shipyard:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_shipyard()));
        if (input->ExpectTag(34)) goto parse_Shipyard;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgShipyard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgShipyard::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 updatedAt = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->updatedat(), output);
  }
  
  // optional int32 sid = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sid(), output);
  }
  
  // optional int32 block = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->block(), output);
  }
  
  // repeated .MsgShipyardSlot Shipyard = 4;
  for (int i = 0; i < this->shipyard_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      4, this->shipyard(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgShipyard::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 updatedAt = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->updatedat(), target);
  }
  
  // optional int32 sid = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sid(), target);
  }
  
  // optional int32 block = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->block(), target);
  }
  
  // repeated .MsgShipyardSlot Shipyard = 4;
  for (int i = 0; i < this->shipyard_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->shipyard(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgShipyard::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 updatedAt = 1;
    if (has_updatedat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->updatedat());
    }
    
    // optional int32 sid = 2;
    if (has_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sid());
    }
    
    // optional int32 block = 3;
    if (has_block()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->block());
    }
    
  }
  // repeated .MsgShipyardSlot Shipyard = 4;
  total_size += 1 * this->shipyard_size();
  for (int i = 0; i < this->shipyard_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shipyard(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgShipyard::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgShipyard* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgShipyard*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgShipyard::MergeFrom(const MsgShipyard& from) {
  GOOGLE_CHECK_NE(&from, this);
  shipyard_.MergeFrom(from.shipyard_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_updatedat(from.updatedat());
    }
    if (from._has_bit(1)) {
      set_sid(from.sid());
    }
    if (from._has_bit(2)) {
      set_block(from.block());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgShipyard::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgShipyard::CopyFrom(const MsgShipyard& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgShipyard::IsInitialized() const {
  
  return true;
}

void MsgShipyard::Swap(MsgShipyard* other) {
  if (other != this) {
    std::swap(updatedat_, other->updatedat_);
    std::swap(sid_, other->sid_);
    std::swap(block_, other->block_);
    shipyard_.Swap(&other->shipyard_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgShipyard::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgShipyard_descriptor_;
  metadata.reflection = MsgShipyard_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgBuildingItem::_default_sku_;
#ifndef _MSC_VER
const int MsgBuildingItem::kIdFieldNumber;
const int MsgBuildingItem::kSidFieldNumber;
const int MsgBuildingItem::kEnergyPercentFieldNumber;
const int MsgBuildingItem::kStateFieldNumber;
const int MsgBuildingItem::kSkuFieldNumber;
const int MsgBuildingItem::kTypeFieldNumber;
const int MsgBuildingItem::kUpgradeIdFieldNumber;
const int MsgBuildingItem::kEnergyFieldNumber;
const int MsgBuildingItem::kXFieldNumber;
const int MsgBuildingItem::kYFieldNumber;
const int MsgBuildingItem::kUpdatedAtFieldNumber;
const int MsgBuildingItem::kTimeFieldNumber;
#endif  // !_MSC_VER

MsgBuildingItem::MsgBuildingItem() {
  SharedCtor();
}

void MsgBuildingItem::InitAsDefaultInstance() {
}

MsgBuildingItem::MsgBuildingItem(const MsgBuildingItem& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgBuildingItem::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  sid_ = 0;
  energypercent_ = 0;
  state_ = 0;
  sku_ = const_cast< ::std::string*>(&_default_sku_);
  type_ = 0;
  upgradeid_ = 0;
  energy_ = 0;
  x_ = 0;
  y_ = 0;
  updatedat_ = GOOGLE_LONGLONG(0);
  time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildingItem::~MsgBuildingItem() {
  SharedDtor();
}

void MsgBuildingItem::SharedDtor() {
  if (sku_ != &_default_sku_) {
    delete sku_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgBuildingItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildingItem_descriptor_;
}

const MsgBuildingItem& MsgBuildingItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainUniverse_2eproto();  return *default_instance_;
}

MsgBuildingItem* MsgBuildingItem::default_instance_ = NULL;

MsgBuildingItem* MsgBuildingItem::New() const {
  return new MsgBuildingItem;
}

void MsgBuildingItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    sid_ = 0;
    energypercent_ = 0;
    state_ = 0;
    if (_has_bit(4)) {
      if (sku_ != &_default_sku_) {
        sku_->clear();
      }
    }
    type_ = 0;
    upgradeid_ = 0;
    energy_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    x_ = 0;
    y_ = 0;
    updatedat_ = GOOGLE_LONGLONG(0);
    time_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildingItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &id_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_sid;
        break;
      }
      
      // optional int32 sid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_sid:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &sid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_energyPercent;
        break;
      }
      
      // optional int32 energyPercent = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_energyPercent:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &energypercent_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_state;
        break;
      }
      
      // optional int32 state = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_state:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &state_));
        _set_bit(3);
        if (input->ExpectTag(42)) goto parse_sku;
        break;
      }
      
      // optional string sku = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_sku:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_sku()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->sku().data(), this->sku().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(48)) goto parse_type;
        break;
      }
      
      // optional int32 type = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_type:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &type_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_upgradeId;
        break;
      }
      
      // optional int32 upgradeId = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_upgradeId:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &upgradeid_));
        _set_bit(6);
        if (input->ExpectTag(64)) goto parse_energy;
        break;
      }
      
      // optional int32 energy = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_energy:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &energy_));
        _set_bit(7);
        if (input->ExpectTag(72)) goto parse_x;
        break;
      }
      
      // optional int32 x = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_x:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &x_));
        _set_bit(8);
        if (input->ExpectTag(80)) goto parse_y;
        break;
      }
      
      // optional int32 y = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_y:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &y_));
        _set_bit(9);
        if (input->ExpectTag(88)) goto parse_updatedAt;
        break;
      }
      
      // optional int64 updatedAt = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_updatedAt:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &updatedat_));
        _set_bit(10);
        if (input->ExpectTag(104)) goto parse_time;
        break;
      }
      
      // optional int64 time = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_time:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &time_));
        _set_bit(11);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgBuildingItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgBuildingItem::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional int32 sid = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sid(), output);
  }
  
  // optional int32 energyPercent = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->energypercent(), output);
  }
  
  // optional int32 state = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }
  
  // optional string sku = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sku().data(), this->sku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->sku(), output);
  }
  
  // optional int32 type = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->type(), output);
  }
  
  // optional int32 upgradeId = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->upgradeid(), output);
  }
  
  // optional int32 energy = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->energy(), output);
  }
  
  // optional int32 x = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->x(), output);
  }
  
  // optional int32 y = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->y(), output);
  }
  
  // optional int64 updatedAt = 11;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->updatedat(), output);
  }
  
  // optional int64 time = 13;
  if (_has_bit(11)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgBuildingItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional int32 sid = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sid(), target);
  }
  
  // optional int32 energyPercent = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->energypercent(), target);
  }
  
  // optional int32 state = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }
  
  // optional string sku = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sku().data(), this->sku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sku(), target);
  }
  
  // optional int32 type = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->type(), target);
  }
  
  // optional int32 upgradeId = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->upgradeid(), target);
  }
  
  // optional int32 energy = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->energy(), target);
  }
  
  // optional int32 x = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->x(), target);
  }
  
  // optional int32 y = 10;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->y(), target);
  }
  
  // optional int64 updatedAt = 11;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->updatedat(), target);
  }
  
  // optional int64 time = 13;
  if (_has_bit(11)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgBuildingItem::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional int32 sid = 2;
    if (has_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sid());
    }
    
    // optional int32 energyPercent = 3;
    if (has_energypercent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->energypercent());
    }
    
    // optional int32 state = 4;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
    // optional string sku = 5;
    if (has_sku()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sku());
    }
    
    // optional int32 type = 6;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 upgradeId = 7;
    if (has_upgradeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->upgradeid());
    }
    
    // optional int32 energy = 8;
    if (has_energy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->energy());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 x = 9;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }
    
    // optional int32 y = 10;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }
    
    // optional int64 updatedAt = 11;
    if (has_updatedat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->updatedat());
    }
    
    // optional int64 time = 13;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgBuildingItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildingItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildingItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildingItem::MergeFrom(const MsgBuildingItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_id(from.id());
    }
    if (from._has_bit(1)) {
      set_sid(from.sid());
    }
    if (from._has_bit(2)) {
      set_energypercent(from.energypercent());
    }
    if (from._has_bit(3)) {
      set_state(from.state());
    }
    if (from._has_bit(4)) {
      set_sku(from.sku());
    }
    if (from._has_bit(5)) {
      set_type(from.type());
    }
    if (from._has_bit(6)) {
      set_upgradeid(from.upgradeid());
    }
    if (from._has_bit(7)) {
      set_energy(from.energy());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      set_x(from.x());
    }
    if (from._has_bit(9)) {
      set_y(from.y());
    }
    if (from._has_bit(10)) {
      set_updatedat(from.updatedat());
    }
    if (from._has_bit(11)) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildingItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildingItem::CopyFrom(const MsgBuildingItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildingItem::IsInitialized() const {
  
  return true;
}

void MsgBuildingItem::Swap(MsgBuildingItem* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(sid_, other->sid_);
    std::swap(energypercent_, other->energypercent_);
    std::swap(state_, other->state_);
    std::swap(sku_, other->sku_);
    std::swap(type_, other->type_);
    std::swap(upgradeid_, other->upgradeid_);
    std::swap(energy_, other->energy_);
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(updatedat_, other->updatedat_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildingItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildingItem_descriptor_;
  metadata.reflection = MsgBuildingItem_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string MsgMissionParam::_default_sku_;
const ::std::string MsgMissionParam::_default_progress_;
#ifndef _MSC_VER
const int MsgMissionParam::kTargetFieldNumber;
const int MsgMissionParam::kEndTimeFieldNumber;
const int MsgMissionParam::kSkuFieldNumber;
const int MsgMissionParam::kProgressFieldNumber;
#endif  // !_MSC_VER

MsgMissionParam::MsgMissionParam() {
  SharedCtor();
}

void MsgMissionParam::InitAsDefaultInstance() {
}

MsgMissionParam::MsgMissionParam(const MsgMissionParam& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMissionParam::SharedCtor() {
  _cached_size_ = 0;
  endtime_ = GOOGLE_LONGLONG(0);
  sku_ = const_cast< ::std::string*>(&_default_sku_);
  progress_ = const_cast< ::std::string*>(&_default_progress_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMissionParam::~MsgMissionParam() {
  SharedDtor();
}

void MsgMissionParam::SharedDtor() {
  if (sku_ != &_default_sku_) {
    delete sku_;
  }
  if (progress_ != &_default_progress_) {
    delete progress_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMissionParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMissionParam_descriptor_;
}

const MsgMissionParam& MsgMissionParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainUniverse_2eproto();  return *default_instance_;
}

MsgMissionParam* MsgMissionParam::default_instance_ = NULL;

MsgMissionParam* MsgMissionParam::New() const {
  return new MsgMissionParam;
}

void MsgMissionParam::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    endtime_ = GOOGLE_LONGLONG(0);
    if (_has_bit(2)) {
      if (sku_ != &_default_sku_) {
        sku_->clear();
      }
    }
    if (_has_bit(3)) {
      if (progress_ != &_default_progress_) {
        progress_->clear();
      }
    }
  }
  target_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMissionParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string Target = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Target:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_target()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->target(0).data(), this->target(0).length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(10)) goto parse_Target;
        if (input->ExpectTag(16)) goto parse_endTime;
        break;
      }
      
      // optional int64 endTime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_endTime:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &endtime_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_sku;
        break;
      }
      
      // optional string sku = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_sku:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_sku()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->sku().data(), this->sku().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(34)) goto parse_progress;
        break;
      }
      
      // optional string progress = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_progress:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_progress()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->progress().data(), this->progress().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMissionParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMissionParam::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated string Target = 1;
  for (int i = 0; i < this->target_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->target(i).data(), this->target(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->target(i), output);
  }
  
  // optional int64 endTime = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->endtime(), output);
  }
  
  // optional string sku = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sku().data(), this->sku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->sku(), output);
  }
  
  // optional string progress = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->progress().data(), this->progress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->progress(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMissionParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string Target = 1;
  for (int i = 0; i < this->target_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->target(i).data(), this->target(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->target(i), target);
  }
  
  // optional int64 endTime = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->endtime(), target);
  }
  
  // optional string sku = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sku().data(), this->sku().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sku(), target);
  }
  
  // optional string progress = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->progress().data(), this->progress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->progress(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMissionParam::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int64 endTime = 2;
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->endtime());
    }
    
    // optional string sku = 3;
    if (has_sku()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sku());
    }
    
    // optional string progress = 4;
    if (has_progress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->progress());
    }
    
  }
  // repeated string Target = 1;
  total_size += 1 * this->target_size();
  for (int i = 0; i < this->target_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->target(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMissionParam::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMissionParam* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMissionParam*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMissionParam::MergeFrom(const MsgMissionParam& from) {
  GOOGLE_CHECK_NE(&from, this);
  target_.MergeFrom(from.target_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from._has_bit(1)) {
      set_endtime(from.endtime());
    }
    if (from._has_bit(2)) {
      set_sku(from.sku());
    }
    if (from._has_bit(3)) {
      set_progress(from.progress());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMissionParam::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMissionParam::CopyFrom(const MsgMissionParam& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMissionParam::IsInitialized() const {
  
  return true;
}

void MsgMissionParam::Swap(MsgMissionParam* other) {
  if (other != this) {
    target_.Swap(&other->target_);
    std::swap(endtime_, other->endtime_);
    std::swap(sku_, other->sku_);
    std::swap(progress_, other->progress_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMissionParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMissionParam_descriptor_;
  metadata.reflection = MsgMissionParam_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMissionState::kReadyToStartFieldNumber;
const int MsgMissionState::kAvailableFieldNumber;
const int MsgMissionState::kRewardedFieldNumber;
const int MsgMissionState::kCompletedFieldNumber;
const int MsgMissionState::kParamsFieldNumber;
#endif  // !_MSC_VER

MsgMissionState::MsgMissionState() {
  SharedCtor();
}

void MsgMissionState::InitAsDefaultInstance() {
}

MsgMissionState::MsgMissionState(const MsgMissionState& from) {
  SharedCtor();
  MergeFrom(from);
}

void MsgMissionState::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMissionState::~MsgMissionState() {
  SharedDtor();
}

void MsgMissionState::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* MsgMissionState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMissionState_descriptor_;
}

const MsgMissionState& MsgMissionState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainUniverse_2eproto();  return *default_instance_;
}

MsgMissionState* MsgMissionState::default_instance_ = NULL;

MsgMissionState* MsgMissionState::New() const {
  return new MsgMissionState;
}

void MsgMissionState::Clear() {
  readytostart_.Clear();
  available_.Clear();
  rewarded_.Clear();
  completed_.Clear();
  params_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMissionState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string ReadyToStart = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ReadyToStart:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_readytostart()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->readytostart(0).data(), this->readytostart(0).length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(10)) goto parse_ReadyToStart;
        if (input->ExpectTag(18)) goto parse_Available;
        break;
      }
      
      // repeated string Available = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Available:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_available()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->available(0).data(), this->available(0).length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(18)) goto parse_Available;
        if (input->ExpectTag(26)) goto parse_Rewarded;
        break;
      }
      
      // repeated string Rewarded = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Rewarded:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_rewarded()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->rewarded(0).data(), this->rewarded(0).length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(26)) goto parse_Rewarded;
        if (input->ExpectTag(34)) goto parse_Completed;
        break;
      }
      
      // repeated string Completed = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Completed:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_completed()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->completed(0).data(), this->completed(0).length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(34)) goto parse_Completed;
        if (input->ExpectTag(42)) goto parse_Params;
        break;
      }
      
      // repeated .MsgMissionParam Params = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Params:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_params()));
        if (input->ExpectTag(42)) goto parse_Params;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgMissionState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    MsgMissionState::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated string ReadyToStart = 1;
  for (int i = 0; i < this->readytostart_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->readytostart(i).data(), this->readytostart(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->readytostart(i), output);
  }
  
  // repeated string Available = 2;
  for (int i = 0; i < this->available_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->available(i).data(), this->available(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->available(i), output);
  }
  
  // repeated string Rewarded = 3;
  for (int i = 0; i < this->rewarded_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->rewarded(i).data(), this->rewarded(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->rewarded(i), output);
  }
  
  // repeated string Completed = 4;
  for (int i = 0; i < this->completed_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->completed(i).data(), this->completed(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->completed(i), output);
  }
  
  // repeated .MsgMissionParam Params = 5;
  for (int i = 0; i < this->params_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      5, this->params(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgMissionState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string ReadyToStart = 1;
  for (int i = 0; i < this->readytostart_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->readytostart(i).data(), this->readytostart(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->readytostart(i), target);
  }
  
  // repeated string Available = 2;
  for (int i = 0; i < this->available_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->available(i).data(), this->available(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->available(i), target);
  }
  
  // repeated string Rewarded = 3;
  for (int i = 0; i < this->rewarded_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rewarded(i).data(), this->rewarded(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->rewarded(i), target);
  }
  
  // repeated string Completed = 4;
  for (int i = 0; i < this->completed_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->completed(i).data(), this->completed(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->completed(i), target);
  }
  
  // repeated .MsgMissionParam Params = 5;
  for (int i = 0; i < this->params_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->params(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgMissionState::ByteSize() const {
  int total_size = 0;
  
  // repeated string ReadyToStart = 1;
  total_size += 1 * this->readytostart_size();
  for (int i = 0; i < this->readytostart_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->readytostart(i));
  }
  
  // repeated string Available = 2;
  total_size += 1 * this->available_size();
  for (int i = 0; i < this->available_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->available(i));
  }
  
  // repeated string Rewarded = 3;
  total_size += 1 * this->rewarded_size();
  for (int i = 0; i < this->rewarded_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->rewarded(i));
  }
  
  // repeated string Completed = 4;
  total_size += 1 * this->completed_size();
  for (int i = 0; i < this->completed_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->completed(i));
  }
  
  // repeated .MsgMissionParam Params = 5;
  total_size += 1 * this->params_size();
  for (int i = 0; i < this->params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->params(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void MsgMissionState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMissionState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMissionState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMissionState::MergeFrom(const MsgMissionState& from) {
  GOOGLE_CHECK_NE(&from, this);
  readytostart_.MergeFrom(from.readytostart_);
  available_.MergeFrom(from.available_);
  rewarded_.MergeFrom(from.rewarded_);
  completed_.MergeFrom(from.completed_);
  params_.MergeFrom(from.params_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMissionState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMissionState::CopyFrom(const MsgMissionState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMissionState::IsInitialized() const {
  
  return true;
}

void MsgMissionState::Swap(MsgMissionState* other) {
  if (other != this) {
    readytostart_.Swap(&other->readytostart_);
    available_.Swap(&other->available_);
    rewarded_.Swap(&other->rewarded_);
    completed_.Swap(&other->completed_);
    params_.Swap(&other->params_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMissionState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMissionState_descriptor_;
  metadata.reflection = MsgMissionState_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string RseObtainUniverse::_default_dcplayername_;
const ::std::string RseObtainUniverse::_default_dcworldname_;
const ::std::string RseObtainUniverse::_default_flags_;
#ifndef _MSC_VER
const int RseObtainUniverse::kVipFieldNumber;
const int RseObtainUniverse::kYearVipFieldNumber;
const int RseObtainUniverse::kVipLevelFieldNumber;
const int RseObtainUniverse::kNewPlayerGiftBagFieldNumber;
const int RseObtainUniverse::kEverydayGiftBagFieldNumber;
const int RseObtainUniverse::kSpyCapsulesTimeLeftFieldNumber;
const int RseObtainUniverse::kDCPlayerNameFieldNumber;
const int RseObtainUniverse::kDCWorldNameFieldNumber;
const int RseObtainUniverse::kLevelBasedOnScoreFieldNumber;
const int RseObtainUniverse::kDCPlayerRankFieldNumber;
const int RseObtainUniverse::kDCCoinsFieldNumber;
const int RseObtainUniverse::kDCMineralsFieldNumber;
const int RseObtainUniverse::kScoreFieldNumber;
const int RseObtainUniverse::kExpFieldNumber;
const int RseObtainUniverse::kLastVisitTimeFieldNumber;
const int RseObtainUniverse::kLastLevelNotifiedFieldNumber;
const int RseObtainUniverse::kDCCashFieldNumber;
const int RseObtainUniverse::kDCDroidsFieldNumber;
const int RseObtainUniverse::kDCDroidsInUseFieldNumber;
const int RseObtainUniverse::kDamageProtectionTimeLeftFieldNumber;
const int RseObtainUniverse::kDamageProtectionTimeTotalFieldNumber;
const int RseObtainUniverse::kTutorialCompletedFieldNumber;
const int RseObtainUniverse::kFlagsFieldNumber;
const int RseObtainUniverse::kMissionsFieldNumber;
const int RseObtainUniverse::kPlanetsFieldNumber;
const int RseObtainUniverse::kItemsFieldNumber;
const int RseObtainUniverse::kShipyardsFieldNumber;
const int RseObtainUniverse::kHangarsFieldNumber;
const int RseObtainUniverse::kBunkersFieldNumber;
const int RseObtainUniverse::kGameUnitsFieldNumber;
#endif  // !_MSC_VER

RseObtainUniverse::RseObtainUniverse() {
  SharedCtor();
}

void RseObtainUniverse::InitAsDefaultInstance() {
  missions_ = const_cast< ::MsgMissionState*>(&::MsgMissionState::default_instance());
}

RseObtainUniverse::RseObtainUniverse(const RseObtainUniverse& from) {
  SharedCtor();
  MergeFrom(from);
}

void RseObtainUniverse::SharedCtor() {
  _cached_size_ = 0;
  vip_ = false;
  yearvip_ = false;
  viplevel_ = 0;
  newplayergiftbag_ = false;
  everydaygiftbag_ = false;
  spycapsulestimeleft_ = GOOGLE_LONGLONG(0);
  dcplayername_ = const_cast< ::std::string*>(&_default_dcplayername_);
  dcworldname_ = const_cast< ::std::string*>(&_default_dcworldname_);
  levelbasedonscore_ = 0;
  dcplayerrank_ = 0;
  dccoins_ = 0;
  dcminerals_ = 0;
  score_ = 0;
  exp_ = 0;
  lastvisittime_ = 0;
  lastlevelnotified_ = 0;
  dccash_ = 0;
  dcdroids_ = 0;
  dcdroidsinuse_ = 0;
  damageprotectiontimeleft_ = GOOGLE_LONGLONG(0);
  damageprotectiontimetotal_ = GOOGLE_LONGLONG(0);
  tutorialcompleted_ = false;
  flags_ = const_cast< ::std::string*>(&_default_flags_);
  missions_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RseObtainUniverse::~RseObtainUniverse() {
  SharedDtor();
}

void RseObtainUniverse::SharedDtor() {
  if (dcplayername_ != &_default_dcplayername_) {
    delete dcplayername_;
  }
  if (dcworldname_ != &_default_dcworldname_) {
    delete dcworldname_;
  }
  if (flags_ != &_default_flags_) {
    delete flags_;
  }
  if (this != default_instance_) {
    delete missions_;
  }
}

const ::google::protobuf::Descriptor* RseObtainUniverse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RseObtainUniverse_descriptor_;
}

const RseObtainUniverse& RseObtainUniverse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RseObtainUniverse_2eproto();  return *default_instance_;
}

RseObtainUniverse* RseObtainUniverse::default_instance_ = NULL;

RseObtainUniverse* RseObtainUniverse::New() const {
  return new RseObtainUniverse;
}

void RseObtainUniverse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    vip_ = false;
    yearvip_ = false;
    viplevel_ = 0;
    newplayergiftbag_ = false;
    everydaygiftbag_ = false;
    spycapsulestimeleft_ = GOOGLE_LONGLONG(0);
    if (_has_bit(6)) {
      if (dcplayername_ != &_default_dcplayername_) {
        dcplayername_->clear();
      }
    }
    if (_has_bit(7)) {
      if (dcworldname_ != &_default_dcworldname_) {
        dcworldname_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    levelbasedonscore_ = 0;
    dcplayerrank_ = 0;
    dccoins_ = 0;
    dcminerals_ = 0;
    score_ = 0;
    exp_ = 0;
    lastvisittime_ = 0;
    lastlevelnotified_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    dccash_ = 0;
    dcdroids_ = 0;
    dcdroidsinuse_ = 0;
    damageprotectiontimeleft_ = GOOGLE_LONGLONG(0);
    damageprotectiontimetotal_ = GOOGLE_LONGLONG(0);
    tutorialcompleted_ = false;
    if (_has_bit(22)) {
      if (flags_ != &_default_flags_) {
        flags_->clear();
      }
    }
    if (_has_bit(23)) {
      if (missions_ != NULL) missions_->::MsgMissionState::Clear();
    }
  }
  planets_.Clear();
  items_.Clear();
  shipyards_.Clear();
  hangars_.Clear();
  bunkers_.Clear();
  gameunits_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RseObtainUniverse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool vip = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &vip_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_yearVip;
        break;
      }
      
      // optional bool yearVip = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_yearVip:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &yearvip_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_vipLevel;
        break;
      }
      
      // optional int32 vipLevel = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_vipLevel:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &viplevel_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_newPlayerGiftBag;
        break;
      }
      
      // optional bool newPlayerGiftBag = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_newPlayerGiftBag:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &newplayergiftbag_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_everydayGiftBag;
        break;
      }
      
      // optional bool everydayGiftBag = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_everydayGiftBag:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &everydaygiftbag_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_spyCapsulesTimeLeft;
        break;
      }
      
      // optional int64 spyCapsulesTimeLeft = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_spyCapsulesTimeLeft:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &spycapsulestimeleft_));
        _set_bit(5);
        if (input->ExpectTag(58)) goto parse_DCPlayerName;
        break;
      }
      
      // optional string DCPlayerName = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_DCPlayerName:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_dcplayername()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->dcplayername().data(), this->dcplayername().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(66)) goto parse_DCWorldName;
        break;
      }
      
      // optional string DCWorldName = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_DCWorldName:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_dcworldname()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->dcworldname().data(), this->dcworldname().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(72)) goto parse_levelBasedOnScore;
        break;
      }
      
      // optional int32 levelBasedOnScore = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_levelBasedOnScore:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &levelbasedonscore_));
        _set_bit(8);
        if (input->ExpectTag(80)) goto parse_DCPlayerRank;
        break;
      }
      
      // optional int32 DCPlayerRank = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_DCPlayerRank:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &dcplayerrank_));
        _set_bit(9);
        if (input->ExpectTag(88)) goto parse_DCCoins;
        break;
      }
      
      // optional int32 DCCoins = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_DCCoins:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &dccoins_));
        _set_bit(10);
        if (input->ExpectTag(96)) goto parse_DCMinerals;
        break;
      }
      
      // optional int32 DCMinerals = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_DCMinerals:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &dcminerals_));
        _set_bit(11);
        if (input->ExpectTag(104)) goto parse_score;
        break;
      }
      
      // optional int32 score = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_score:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &score_));
        _set_bit(12);
        if (input->ExpectTag(112)) goto parse_exp;
        break;
      }
      
      // optional int32 exp = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_exp:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &exp_));
        _set_bit(13);
        if (input->ExpectTag(120)) goto parse_lastVisitTime;
        break;
      }
      
      // optional int32 lastVisitTime = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_lastVisitTime:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &lastvisittime_));
        _set_bit(14);
        if (input->ExpectTag(128)) goto parse_lastLevelNotified;
        break;
      }
      
      // optional int32 lastLevelNotified = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_lastLevelNotified:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &lastlevelnotified_));
        _set_bit(15);
        if (input->ExpectTag(136)) goto parse_DCCash;
        break;
      }
      
      // optional int32 DCCash = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_DCCash:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &dccash_));
        _set_bit(16);
        if (input->ExpectTag(144)) goto parse_DCDroids;
        break;
      }
      
      // optional int32 DCDroids = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_DCDroids:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &dcdroids_));
        _set_bit(17);
        if (input->ExpectTag(152)) goto parse_DCDroidsInUse;
        break;
      }
      
      // optional int32 DCDroidsInUse = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_DCDroidsInUse:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt32(
              input, &dcdroidsinuse_));
        _set_bit(18);
        if (input->ExpectTag(160)) goto parse_damageProtectionTimeLeft;
        break;
      }
      
      // optional int64 damageProtectionTimeLeft = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_damageProtectionTimeLeft:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &damageprotectiontimeleft_));
        _set_bit(19);
        if (input->ExpectTag(168)) goto parse_damageProtectionTimeTotal;
        break;
      }
      
      // optional int64 damageProtectionTimeTotal = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_damageProtectionTimeTotal:
        DO_(::google::protobuf::internal::WireFormatLite::ReadInt64(
              input, &damageprotectiontimetotal_));
        _set_bit(20);
        if (input->ExpectTag(176)) goto parse_tutorialCompleted;
        break;
      }
      
      // optional bool tutorialCompleted = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_tutorialCompleted:
        DO_(::google::protobuf::internal::WireFormatLite::ReadBool(
              input, &tutorialcompleted_));
        _set_bit(21);
        if (input->ExpectTag(186)) goto parse_flags;
        break;
      }
      
      // optional string flags = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_flags:
        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_flags()));
        ::google::protobuf::internal::WireFormat::VerifyUTF8String(
          this->flags().data(), this->flags().length(),
          ::google::protobuf::internal::WireFormat::PARSE);
        if (input->ExpectTag(194)) goto parse_Missions;
        break;
      }
      
      // optional .MsgMissionState Missions = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Missions:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
             input, mutable_missions()));
        if (input->ExpectTag(202)) goto parse_Planets;
        break;
      }
      
      // repeated .MsgPlanet Planets = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Planets:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_planets()));
        if (input->ExpectTag(202)) goto parse_Planets;
        if (input->ExpectTag(210)) goto parse_Items;
        break;
      }
      
      // repeated .MsgBuildingItem Items = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Items:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_items()));
        if (input->ExpectTag(210)) goto parse_Items;
        if (input->ExpectTag(218)) goto parse_Shipyards;
        break;
      }
      
      // repeated .MsgShipyard Shipyards = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Shipyards:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_shipyards()));
        if (input->ExpectTag(218)) goto parse_Shipyards;
        if (input->ExpectTag(226)) goto parse_Hangars;
        break;
      }
      
      // repeated .MsgHangars Hangars = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Hangars:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_hangars()));
        if (input->ExpectTag(226)) goto parse_Hangars;
        if (input->ExpectTag(234)) goto parse_Bunkers;
        break;
      }
      
      // repeated .MsgBunker Bunkers = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Bunkers:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_bunkers()));
        if (input->ExpectTag(234)) goto parse_Bunkers;
        if (input->ExpectTag(242)) goto parse_GameUnits;
        break;
      }
      
      // repeated .MsgGameUnit GameUnits = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_GameUnits:
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, add_gameunits()));
        if (input->ExpectTag(242)) goto parse_GameUnits;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RseObtainUniverse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    RseObtainUniverse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional bool vip = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->vip(), output);
  }
  
  // optional bool yearVip = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->yearvip(), output);
  }
  
  // optional int32 vipLevel = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->viplevel(), output);
  }
  
  // optional bool newPlayerGiftBag = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->newplayergiftbag(), output);
  }
  
  // optional bool everydayGiftBag = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->everydaygiftbag(), output);
  }
  
  // optional int64 spyCapsulesTimeLeft = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->spycapsulestimeleft(), output);
  }
  
  // optional string DCPlayerName = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dcplayername().data(), this->dcplayername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->dcplayername(), output);
  }
  
  // optional string DCWorldName = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dcworldname().data(), this->dcworldname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->dcworldname(), output);
  }
  
  // optional int32 levelBasedOnScore = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->levelbasedonscore(), output);
  }
  
  // optional int32 DCPlayerRank = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->dcplayerrank(), output);
  }
  
  // optional int32 DCCoins = 11;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->dccoins(), output);
  }
  
  // optional int32 DCMinerals = 12;
  if (_has_bit(11)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->dcminerals(), output);
  }
  
  // optional int32 score = 13;
  if (_has_bit(12)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->score(), output);
  }
  
  // optional int32 exp = 14;
  if (_has_bit(13)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->exp(), output);
  }
  
  // optional int32 lastVisitTime = 15;
  if (_has_bit(14)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->lastvisittime(), output);
  }
  
  // optional int32 lastLevelNotified = 16;
  if (_has_bit(15)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->lastlevelnotified(), output);
  }
  
  // optional int32 DCCash = 17;
  if (_has_bit(16)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->dccash(), output);
  }
  
  // optional int32 DCDroids = 18;
  if (_has_bit(17)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->dcdroids(), output);
  }
  
  // optional int32 DCDroidsInUse = 19;
  if (_has_bit(18)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->dcdroidsinuse(), output);
  }
  
  // optional int64 damageProtectionTimeLeft = 20;
  if (_has_bit(19)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->damageprotectiontimeleft(), output);
  }
  
  // optional int64 damageProtectionTimeTotal = 21;
  if (_has_bit(20)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->damageprotectiontimetotal(), output);
  }
  
  // optional bool tutorialCompleted = 22;
  if (_has_bit(21)) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->tutorialcompleted(), output);
  }
  
  // optional string flags = 23;
  if (_has_bit(22)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->flags().data(), this->flags().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->flags(), output);
  }
  
  // optional .MsgMissionState Missions = 24;
  if (_has_bit(23)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      24, this->missions(), output);
  }
  
  // repeated .MsgPlanet Planets = 25;
  for (int i = 0; i < this->planets_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      25, this->planets(i), output);
  }
  
  // repeated .MsgBuildingItem Items = 26;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      26, this->items(i), output);
  }
  
  // repeated .MsgShipyard Shipyards = 27;
  for (int i = 0; i < this->shipyards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      27, this->shipyards(i), output);
  }
  
  // repeated .MsgHangars Hangars = 28;
  for (int i = 0; i < this->hangars_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      28, this->hangars(i), output);
  }
  
  // repeated .MsgBunker Bunkers = 29;
  for (int i = 0; i < this->bunkers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      29, this->bunkers(i), output);
  }
  
  // repeated .MsgGameUnit GameUnits = 30;
  for (int i = 0; i < this->gameunits_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageNoVirtual(
      30, this->gameunits(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RseObtainUniverse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool vip = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->vip(), target);
  }
  
  // optional bool yearVip = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->yearvip(), target);
  }
  
  // optional int32 vipLevel = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->viplevel(), target);
  }
  
  // optional bool newPlayerGiftBag = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->newplayergiftbag(), target);
  }
  
  // optional bool everydayGiftBag = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->everydaygiftbag(), target);
  }
  
  // optional int64 spyCapsulesTimeLeft = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->spycapsulestimeleft(), target);
  }
  
  // optional string DCPlayerName = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dcplayername().data(), this->dcplayername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->dcplayername(), target);
  }
  
  // optional string DCWorldName = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dcworldname().data(), this->dcworldname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->dcworldname(), target);
  }
  
  // optional int32 levelBasedOnScore = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->levelbasedonscore(), target);
  }
  
  // optional int32 DCPlayerRank = 10;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->dcplayerrank(), target);
  }
  
  // optional int32 DCCoins = 11;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->dccoins(), target);
  }
  
  // optional int32 DCMinerals = 12;
  if (_has_bit(11)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->dcminerals(), target);
  }
  
  // optional int32 score = 13;
  if (_has_bit(12)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->score(), target);
  }
  
  // optional int32 exp = 14;
  if (_has_bit(13)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->exp(), target);
  }
  
  // optional int32 lastVisitTime = 15;
  if (_has_bit(14)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->lastvisittime(), target);
  }
  
  // optional int32 lastLevelNotified = 16;
  if (_has_bit(15)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->lastlevelnotified(), target);
  }
  
  // optional int32 DCCash = 17;
  if (_has_bit(16)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->dccash(), target);
  }
  
  // optional int32 DCDroids = 18;
  if (_has_bit(17)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->dcdroids(), target);
  }
  
  // optional int32 DCDroidsInUse = 19;
  if (_has_bit(18)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->dcdroidsinuse(), target);
  }
  
  // optional int64 damageProtectionTimeLeft = 20;
  if (_has_bit(19)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(20, this->damageprotectiontimeleft(), target);
  }
  
  // optional int64 damageProtectionTimeTotal = 21;
  if (_has_bit(20)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(21, this->damageprotectiontimetotal(), target);
  }
  
  // optional bool tutorialCompleted = 22;
  if (_has_bit(21)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->tutorialcompleted(), target);
  }
  
  // optional string flags = 23;
  if (_has_bit(22)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->flags().data(), this->flags().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->flags(), target);
  }
  
  // optional .MsgMissionState Missions = 24;
  if (_has_bit(23)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        24, this->missions(), target);
  }
  
  // repeated .MsgPlanet Planets = 25;
  for (int i = 0; i < this->planets_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        25, this->planets(i), target);
  }
  
  // repeated .MsgBuildingItem Items = 26;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        26, this->items(i), target);
  }
  
  // repeated .MsgShipyard Shipyards = 27;
  for (int i = 0; i < this->shipyards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        27, this->shipyards(i), target);
  }
  
  // repeated .MsgHangars Hangars = 28;
  for (int i = 0; i < this->hangars_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        28, this->hangars(i), target);
  }
  
  // repeated .MsgBunker Bunkers = 29;
  for (int i = 0; i < this->bunkers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        29, this->bunkers(i), target);
  }
  
  // repeated .MsgGameUnit GameUnits = 30;
  for (int i = 0; i < this->gameunits_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        30, this->gameunits(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RseObtainUniverse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool vip = 1;
    if (has_vip()) {
      total_size += 1 + 1;
    }
    
    // optional bool yearVip = 2;
    if (has_yearvip()) {
      total_size += 1 + 1;
    }
    
    // optional int32 vipLevel = 3;
    if (has_viplevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viplevel());
    }
    
    // optional bool newPlayerGiftBag = 4;
    if (has_newplayergiftbag()) {
      total_size += 1 + 1;
    }
    
    // optional bool everydayGiftBag = 5;
    if (has_everydaygiftbag()) {
      total_size += 1 + 1;
    }
    
    // optional int64 spyCapsulesTimeLeft = 6;
    if (has_spycapsulestimeleft()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->spycapsulestimeleft());
    }
    
    // optional string DCPlayerName = 7;
    if (has_dcplayername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dcplayername());
    }
    
    // optional string DCWorldName = 8;
    if (has_dcworldname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dcworldname());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 levelBasedOnScore = 9;
    if (has_levelbasedonscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->levelbasedonscore());
    }
    
    // optional int32 DCPlayerRank = 10;
    if (has_dcplayerrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dcplayerrank());
    }
    
    // optional int32 DCCoins = 11;
    if (has_dccoins()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dccoins());
    }
    
    // optional int32 DCMinerals = 12;
    if (has_dcminerals()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dcminerals());
    }
    
    // optional int32 score = 13;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }
    
    // optional int32 exp = 14;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
    // optional int32 lastVisitTime = 15;
    if (has_lastvisittime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lastvisittime());
    }
    
    // optional int32 lastLevelNotified = 16;
    if (has_lastlevelnotified()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lastlevelnotified());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 DCCash = 17;
    if (has_dccash()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dccash());
    }
    
    // optional int32 DCDroids = 18;
    if (has_dcdroids()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dcdroids());
    }
    
    // optional int32 DCDroidsInUse = 19;
    if (has_dcdroidsinuse()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dcdroidsinuse());
    }
    
    // optional int64 damageProtectionTimeLeft = 20;
    if (has_damageprotectiontimeleft()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->damageprotectiontimeleft());
    }
    
    // optional int64 damageProtectionTimeTotal = 21;
    if (has_damageprotectiontimetotal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->damageprotectiontimetotal());
    }
    
    // optional bool tutorialCompleted = 22;
    if (has_tutorialcompleted()) {
      total_size += 2 + 1;
    }
    
    // optional string flags = 23;
    if (has_flags()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->flags());
    }
    
    // optional .MsgMissionState Missions = 24;
    if (has_missions()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->missions());
    }
    
  }
  // repeated .MsgPlanet Planets = 25;
  total_size += 2 * this->planets_size();
  for (int i = 0; i < this->planets_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->planets(i));
  }
  
  // repeated .MsgBuildingItem Items = 26;
  total_size += 2 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }
  
  // repeated .MsgShipyard Shipyards = 27;
  total_size += 2 * this->shipyards_size();
  for (int i = 0; i < this->shipyards_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shipyards(i));
  }
  
  // repeated .MsgHangars Hangars = 28;
  total_size += 2 * this->hangars_size();
  for (int i = 0; i < this->hangars_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hangars(i));
  }
  
  // repeated .MsgBunker Bunkers = 29;
  total_size += 2 * this->bunkers_size();
  for (int i = 0; i < this->bunkers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bunkers(i));
  }
  
  // repeated .MsgGameUnit GameUnits = 30;
  total_size += 2 * this->gameunits_size();
  for (int i = 0; i < this->gameunits_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gameunits(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void RseObtainUniverse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RseObtainUniverse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RseObtainUniverse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RseObtainUniverse::MergeFrom(const RseObtainUniverse& from) {
  GOOGLE_CHECK_NE(&from, this);
  planets_.MergeFrom(from.planets_);
  items_.MergeFrom(from.items_);
  shipyards_.MergeFrom(from.shipyards_);
  hangars_.MergeFrom(from.hangars_);
  bunkers_.MergeFrom(from.bunkers_);
  gameunits_.MergeFrom(from.gameunits_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_vip(from.vip());
    }
    if (from._has_bit(1)) {
      set_yearvip(from.yearvip());
    }
    if (from._has_bit(2)) {
      set_viplevel(from.viplevel());
    }
    if (from._has_bit(3)) {
      set_newplayergiftbag(from.newplayergiftbag());
    }
    if (from._has_bit(4)) {
      set_everydaygiftbag(from.everydaygiftbag());
    }
    if (from._has_bit(5)) {
      set_spycapsulestimeleft(from.spycapsulestimeleft());
    }
    if (from._has_bit(6)) {
      set_dcplayername(from.dcplayername());
    }
    if (from._has_bit(7)) {
      set_dcworldname(from.dcworldname());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      set_levelbasedonscore(from.levelbasedonscore());
    }
    if (from._has_bit(9)) {
      set_dcplayerrank(from.dcplayerrank());
    }
    if (from._has_bit(10)) {
      set_dccoins(from.dccoins());
    }
    if (from._has_bit(11)) {
      set_dcminerals(from.dcminerals());
    }
    if (from._has_bit(12)) {
      set_score(from.score());
    }
    if (from._has_bit(13)) {
      set_exp(from.exp());
    }
    if (from._has_bit(14)) {
      set_lastvisittime(from.lastvisittime());
    }
    if (from._has_bit(15)) {
      set_lastlevelnotified(from.lastlevelnotified());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from._has_bit(16)) {
      set_dccash(from.dccash());
    }
    if (from._has_bit(17)) {
      set_dcdroids(from.dcdroids());
    }
    if (from._has_bit(18)) {
      set_dcdroidsinuse(from.dcdroidsinuse());
    }
    if (from._has_bit(19)) {
      set_damageprotectiontimeleft(from.damageprotectiontimeleft());
    }
    if (from._has_bit(20)) {
      set_damageprotectiontimetotal(from.damageprotectiontimetotal());
    }
    if (from._has_bit(21)) {
      set_tutorialcompleted(from.tutorialcompleted());
    }
    if (from._has_bit(22)) {
      set_flags(from.flags());
    }
    if (from._has_bit(23)) {
      mutable_missions()->::MsgMissionState::MergeFrom(from.missions());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RseObtainUniverse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RseObtainUniverse::CopyFrom(const RseObtainUniverse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RseObtainUniverse::IsInitialized() const {
  
  return true;
}

void RseObtainUniverse::Swap(RseObtainUniverse* other) {
  if (other != this) {
    std::swap(vip_, other->vip_);
    std::swap(yearvip_, other->yearvip_);
    std::swap(viplevel_, other->viplevel_);
    std::swap(newplayergiftbag_, other->newplayergiftbag_);
    std::swap(everydaygiftbag_, other->everydaygiftbag_);
    std::swap(spycapsulestimeleft_, other->spycapsulestimeleft_);
    std::swap(dcplayername_, other->dcplayername_);
    std::swap(dcworldname_, other->dcworldname_);
    std::swap(levelbasedonscore_, other->levelbasedonscore_);
    std::swap(dcplayerrank_, other->dcplayerrank_);
    std::swap(dccoins_, other->dccoins_);
    std::swap(dcminerals_, other->dcminerals_);
    std::swap(score_, other->score_);
    std::swap(exp_, other->exp_);
    std::swap(lastvisittime_, other->lastvisittime_);
    std::swap(lastlevelnotified_, other->lastlevelnotified_);
    std::swap(dccash_, other->dccash_);
    std::swap(dcdroids_, other->dcdroids_);
    std::swap(dcdroidsinuse_, other->dcdroidsinuse_);
    std::swap(damageprotectiontimeleft_, other->damageprotectiontimeleft_);
    std::swap(damageprotectiontimetotal_, other->damageprotectiontimetotal_);
    std::swap(tutorialcompleted_, other->tutorialcompleted_);
    std::swap(flags_, other->flags_);
    std::swap(missions_, other->missions_);
    planets_.Swap(&other->planets_);
    items_.Swap(&other->items_);
    shipyards_.Swap(&other->shipyards_);
    hangars_.Swap(&other->hangars_);
    bunkers_.Swap(&other->bunkers_);
    gameunits_.Swap(&other->gameunits_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RseObtainUniverse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RseObtainUniverse_descriptor_;
  metadata.reflection = RseObtainUniverse_reflection_;
  return metadata;
}

